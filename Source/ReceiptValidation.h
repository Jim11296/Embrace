//  ____                _                  
// |  _ \ ___  ___  ___(_) __ _  ___ _ ___ 
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_  \ 
// |  _ |  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/ 3.3.0.0
//
// This code was generated by Receigen and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.iccir.Embrace
// CFBundleShortVersionString : 1.0.1
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Set DEBUG to 0 if not defined to avoid semantic warnings
#ifndef DEBUG
    #define DEBUG 0
#endif

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) (X)
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) (X)
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if DEBUG && !RECEIGEN_QUIET_DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(args...)    NSLog(@args)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(args...)    fprintf(stderr, args); fprintf(stderr, "\n")
    #endif
#else
    #define __ReceiptValidation_RECEIPT_LOG(args...)
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 2499,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 3),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 3),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 3),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 3),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 3),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 3),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 3),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 3),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 3),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 3),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 3),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 3),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 3),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 3),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 3)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    CFTypeRef main_bundle;
    CFTypeRef guid_data;
    CFTypeRef dummy0001;
    CFTypeRef dummy0009;
    CFTypeRef dummy0007;
    CFTypeRef dummy0005;
    CFTypeRef dummy0000;
    CFTypeRef dummy0004;
    CFTypeRef dummy0006;
    CFTypeRef dummy0008;
    long argc;
    CFTypeRef dummy0002;
    CFTypeRef receipt_data;
    CFTypeRef receipt_dict;
    const char ** argv;
    CFTypeRef dummy0003;
    CFTypeRef dummy000A;
    CFTypeRef ca_data;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0001;
    CFTypeRef dummy0003;
    CFTypeRef dummy0005;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy0002;
    const unsigned char * ptr;
    CFTypeRef dummy0000;
    const unsigned char * end;
    CFTypeRef dummy0004;
    CFTypeRef dictionary;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[573] = {
    // "IOObjectRelease" / M(Xor4) / S(238) / L(15)
    "\xa9\xaf\xaf\x82\x8a\x85\x83\x94\xb2\x85\x8c\x85\x81\x93\x85\xe0",
    // "sha1" / M(Xor3) / S(187) / L(4)
    "\xb8\xa3\xaa\xfa\xcb\xb5\x72\xd1\xbd\x06\x18\x10\xe0\xe6\xee\x37",
    // "CFStringCreateWithCString" / M(Xor1) / S(25) / L(25)
    "\x5a\x5f\x4a\x6d\x6b\x70\x77\x7e\x5a\x6b\x7c\x78\x6d\x7c\x4e\x70\x6d\x71\x5a\x4a\x6d\x6b\x70\x77\x7e\x19\x06\x88\x36\xce\x09\xbc\xb6\x54",
    // "com.iccir.Embrace" / M(Xor4) / S(31) / L(17)
    "\x4d\x41\x43\x00\x47\x4d\x4d\x47\x5c\x00\x6b\x43\x4c\x5c\x4f\x4d\x4b\x2e",
    // "IORegistryEntryCreateCFProperty" / M(Xor4) / S(219) / L(31)
    "\x29\x2f\x32\x05\x07\x09\x13\x14\x12\x19\x25\x0e\x14\x12\x19\x23\x12\x05\x01\x14\x05\x23\x26\x30\x12\x0f\x10\x05\x12\x14\x19\x60",
    // "SecKeychainSearchCopyNext" / M(Rot) / S(169) / L(25)
    "\xfc\x0e\x0c\xf4\x0e\x22\x0c\x11\x0a\x12\x17\xfc\x0e\x0a\x1b\x0c\x11\xec\x18\x19\x22\xf7\x0e\x21\x1d\xa9\xe1\x96\xe4\x44\xcd\x02\x31\xff",
    // "IOBSDNameMatching" / M(Xor3) / S(126) / L(17)
    "\xd9\xdf\xd2\xc3\xd4\xde\xf1\xfd\xf5\xdd\xf1\xe4\xf3\xf8\xf9\xfe\xf7\x90",
    // "" / M(None) / S(0) / L(0)
    "\x93\xa6\x5a\x22\x1c\xc7\x3f\x94\xcc\x6d\x8c\x2b\x5a\x0f\x0a\x91\x19\x7a\xdc\x33\x4a\xcf\x2a\x07\x9f\x8c\x6c\x66\x60\x95\xf2\x64",
    // "kSecMatchSearchList" / M(Xor1) / S(71) / L(19)
    "\x2c\x14\x22\x24\x0a\x26\x33\x24\x2f\x14\x22\x26\x35\x24\x2f\x0b\x2e\x34\x33\x47",
    // "NSApplicationMain" / M(Rot) / S(46) / L(17)
    "\x7c\x81\x6f\x9e\x9e\x9a\x97\x91\x8f\xa2\x97\x9d\x9c\x7b\x8f\x97\x9c\x2e",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(54) / L(31)
    "\x3d\x15\x10\x02\x2f\x26\x33\x12\x3f\x35\x22\x3f\x39\x38\x37\x24\x2f\x00\x37\x3a\x23\x33\x15\x37\x3a\x3a\x14\x37\x35\x3d\x25\x56",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(165) / L(40)
    "\xdb\xd6\xd6\xea\xda\xe7\xdb\xdb\xd7\xe8\xda\xde\xd8\xe6\xd5\xdd\xeb\xeb\xda\xdd\xe9\xd6\xd9\xe6\xea\xd7\xd7\xd9\xda\xd7\xe9\xd6\xde\xdd\xe9\xeb\xdb\xe8\xdb\xd5\xa5\x86\x1f\xdc\x92\xaf\xa3\x4f\x28",
    // "" / M(None) / S(0) / L(0)
    "\x5d\x25\xea\xd3\x2b\x40\xf8\x25\xbd\x90\x1c\xe6\xbd\x44\x2a\x96\x14\xf4\x86\xa3\x71\xc2\xb5\x2f\x48\x35\x38\x49\x9c\xff\x9b\xa6",
    // "CFDictionaryGetValue" / M(Xor1) / S(242) / L(20)
    "\xb1\xb4\xb6\x9b\x91\x86\x9b\x9d\x9c\x93\x80\x8b\xb5\x97\x86\xa4\x93\x9e\x87\x97\xf2",
    // "" / M(None) / S(0) / L(0)
    "\xaf\xfb\x0f\x74\x52\xc5\x67\x82\x66\xe7\xad\xa7\x5e\x67\x52\x70\x43\x36\x2e\x16\xf9\xf3\xc8\xb7\x75\xee\xc3\xb7\xed\x32\xbe\x3a",
    // "PKCS7_get0_signers" / M(Xor2) / S(154) / L(18)
    "\xd9\xc2\xca\xda\xbe\xd6\xee\xec\xfd\xb9\xd6\xfa\xe0\xee\xe7\xec\xfb\xfa\x89",
    // "CC_SHA1_Final" / M(Rot) / S(71) / L(13)
    "\x8a\x8a\xa6\x9a\x8f\x88\x78\xa6\x8d\xb0\xb5\xa8\xb3\x47\xa9\x05",
    // "PKCS7_get0_signers" / M(Xor1) / S(103) / L(18)
    "\x37\x2c\x24\x34\x50\x38\x00\x02\x13\x57\x38\x14\x0e\x00\x09\x02\x15\x14\x67",
    // "" / M(None) / S(0) / L(0)
    "\x2a\x34\x38\x16\xe6\xc2\x44\xa4\xb0\x4f\x74\x5a\xc8\xc2\x66\x91\xbf\x49\x85\xe4\x11\x69\xe8\x75\xd0\xda\x3b\x3b\xdf\xa4\x3d\xc1",
    // "dlsym" / M(Xor1) / S(16) / L(5)
    "\x74\x7c\x63\x69\x7d\x10\xe1\x9e\xdf\xbc\x62\xca\xdf\xa8\x0d\x74",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor3) / S(149) / L(40)
    "\xf0\xf7\xf7\x83\xf3\x84\xf0\xf0\xf4\x85\xf3\xff\xf5\x87\xf6\xfe\x80\x80\xf3\xfe\x82\xf7\xf2\x87\x83\xf4\xf4\xf2\xf3\xf4\x82\xf7\xff\xfe\x82\x80\xf0\x85\xf0\xf6\xc6\x15\x43\x89\x99\xb0\x98\x7b\x67",
    // "SecItemCopyMatching" / M(Xor4) / S(5) / L(19)
    "\x37\x01\x07\x2d\x10\x01\x09\x27\x0b\x14\x1d\x29\x05\x10\x07\x0c\x0d\x0a\x03\x64",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(30) / L(26)
    "\x5d\x58\x4c\x7b\x7f\x7a\x4d\x6a\x6c\x7b\x7f\x73\x5d\x6c\x7b\x7f\x6a\x7b\x49\x77\x6a\x76\x58\x77\x72\x7b\x1e\xdb\xff\xa8\x02\x96\x8e\x63\xbb",
    // "/usr/lib/libobjc.dylib" / M(Xor3) / S(250) / L(22)
    "\x3e\x64\x62\x63\x3e\x7d\x78\x73\x3e\x7d\x78\x73\x7e\x73\x7b\x72\x3f\x75\x68\x7d\x78\x73\x11",
    // "CFArrayAppendValue" / M(Xor4) / S(131) / L(18)
    "\xfa\xff\xf8\xcb\xcb\xd8\xc0\xf8\xc9\xc9\xdc\xd7\xdd\xef\xd8\xd5\xcc\xdc\xb9",
    // "EVP_DigestFinal" / M(Xor3) / S(172) / L(15)
    "\xf9\xea\xec\xe3\xf8\xd5\xdb\xd9\xcf\xc8\xfa\xd5\xd2\xdd\xd0\xbc",
    // "X509_free" / M(Rot) / S(198) / L(9)
    "\x1e\xfb\xf6\xff\x25\x2c\x38\x2b\x2b\xc6\xd1\x29\xdc\x07\x76\x0e",
    // "" / M(None) / S(0) / L(0)
    "\x36\x5e\x32\x03\x9f\x8f\x0a\xb2\x77\xe4\x90\x14\xe1\x5e\xce\x00\x1e\xe9\x7b\xb1\x52\x19\xfd\x69\xfd\xd9\xe4\xe2\x23\xb5\x9a\xfe",
    // "CFDataAppendBytes" / M(Xor1) / S(185) / L(17)
    "\xfa\xff\xfd\xd8\xcd\xd8\xf8\xc9\xc9\xdc\xd7\xdd\xfb\xc0\xcd\xdc\xca\xb9",
    // "1.0.1" / M(Xor2) / S(36) / L(5)
    "\x05\x1a\x04\x1a\x05\x34\x43\xe1\xc1\xa9\xa8\x4e\x57\x61\x64\x71",
    // "%02x:" / M(Xor3) / S(68) / L(5)
    "\x71\x64\x66\x2c\x6e\x54\x72\x7e\xb3\x81\xa6\xd3\x22\xe6\xdf\x88",
    // "" / M(None) / S(0) / L(0)
    "\xd7\x8f\xca\xb4\xe1\x07\xc2\xbf\x2b\x9c\x69\x5f\x17\xcf\x77\x67\xdd\x62\x57\xfc\x81\x88\x27\x38\x86\xa2\x39\xeb\xad\x02\xf0\xb7",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor2) / S(44) / L(40)
    "\x2b\x2c\x2c\x78\x28\x7f\x2b\x2b\x2f\x7e\x28\x24\x2e\x7c\x2d\x25\x7b\x7b\x28\x25\x79\x2c\x29\x7c\x78\x2f\x2f\x29\x28\x2f\x79\x2c\x24\x25\x79\x7b\x2b\x7e\x2b\x2d\x1d\x16\xa4\x20\x1e\xcb\x7b\xac\xbd",
    // "OBJ_txt2obj" / M(Rot) / S(116) / L(11)
    "\xc3\xb6\xbe\xd3\xe8\xec\xe8\xa6\xe3\xd6\xde\x74\x3c\xdf\xc6\x4d",
    // "X509_STORE_new" / M(Xor3) / S(17) / L(14)
    "\x79\x14\x11\x18\x7e\x72\x75\x6e\x73\x64\x7e\x4f\x44\x56\x21\x8b",
    // "BIO_new" / M(Xor2) / S(118) / L(7)
    "\x24\x2f\x29\x39\x08\x03\x11\x66\x06\x0f\x3a\x87\x8e\x80\xf2\xff",
    // "PKCS7_verify" / M(Xor2) / S(39) / L(12)
    "\x67\x7c\x74\x64\x00\x68\x41\x52\x45\x5e\x51\x4e\x37\xb2\x58\x10",
    // "SHA1" / M(Xor3) / S(11) / L(4)
    "\x48\x53\x5a\x2a\x1b\x8e\x98\xa8\x12\x74\x01\xda\x39\x53\x50\x45",
    // "Contents" / M(Xor2) / S(9) / L(8)
    "\x5a\x76\x77\x6d\x7c\x77\x6d\x6a\x19\x4f\x76\xa7\x99\xd1\xd3\x5d",
    // "X509_STORE_free" / M(Xor1) / S(237) / L(15)
    "\xb5\xd8\xdd\xd4\xb2\xbe\xb9\xa2\xbf\xa8\xb2\x8b\x9f\x88\x88\xed",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(237) / L(24)
    "\x4d\x48\x4a\x6f\x7a\x6b\x48\x61\x7c\x63\x6f\x7a\x7a\x6b\x7c\x5d\x6b\x7a\x48\x61\x7c\x63\x6f\x7a\x0e\xb3\x91\x2e\x7b\x86\xc0\xd5\x70",
    // "sel_registerName" / M(Xor4) / S(218) / L(16)
    "\x09\x1f\x16\x25\x08\x1f\x1d\x13\x09\x0e\x1f\x08\x34\x1b\x17\x1f\x7a",
    // "/usr/lib/libSystem.dylib" / M(Xor3) / S(24) / L(24)
    "\x16\x4c\x4a\x4b\x16\x55\x50\x5b\x16\x55\x50\x5b\x6a\x40\x4a\x4d\x5c\x54\x17\x5d\x40\x55\x50\x5b\x39\xe1\x07\xc2\xbf\x2b\x9c\x69\x5f",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(37) / L(59)
    "\x13\x14\x1f\x14\x60\x1f\x10\x67\x1f\x13\x13\x1f\x17\x66\x1f\x10\x1c\x1f\x16\x64\x1f\x15\x1d\x1f\x63\x63\x1f\x10\x1d\x1f\x61\x14\x1f\x11\x64\x1f\x60\x17\x1f\x17\x11\x1f\x10\x17\x1f\x61\x14\x1f\x1c\x1d\x1f\x61\x63\x1f\x13\x66\x1f\x13\x15\x25\x4b\x53\x24\xf8\xac\x7a\x9b\xd6",
    // "EVP_get_digestbyname" / M(Xor1) / S(11) / L(20)
    "\x4e\x5d\x5b\x54\x6c\x6e\x7f\x54\x6f\x62\x6c\x6e\x78\x7f\x69\x72\x65\x6a\x66\x6e\x0b",
    // "IOBSDNameMatching" / M(Xor1) / S(87) / L(17)
    "\x1e\x18\x15\x04\x13\x19\x36\x3a\x32\x1a\x36\x23\x34\x3f\x3e\x39\x30\x57",
    // "CFDataGetBytePtr" / M(Xor1) / S(5) / L(16)
    "\x46\x43\x41\x64\x71\x64\x42\x60\x71\x47\x7c\x71\x60\x55\x71\x77\x05",
    // "" / M(None) / S(0) / L(0)
    "\xb9\xf3\xab\x81\x47\xff\x88\xb6\x0c\x19\x5a\x55\x98\x74\x41\xc4\x52\x41\xa9\x38\x07\x97\x0d\x1f\xd6\xd6\x09\x5f\xbf\xc2\x36\x74",
    // "" / M(None) / S(0) / L(0)
    "\x90\x50\x05\xc1\x36\x03\x26\x18\x0f\x16\x53\x48\x80\x90\x2b\x66\xcb\x62\xe2\x4d\x42\x2d\x81\x45\x63\x5a\x7b\x86\xc8\x85\x90\xf3",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(197) / L(29)
    "\x8c\x8a\x97\xa0\xa2\xac\xb6\xb1\xb7\xbc\x80\xab\xb1\xb7\xbc\x82\xa0\xb1\x95\xa4\xb7\xa0\xab\xb1\x80\xab\xb1\xb7\xbc\xc5\x18\xe3\x87\x7a\x7f\x55\xaf\xa3",
    // "ASN1_get_object" / M(Rot) / S(240) / L(15)
    "\x31\x43\x3e\x21\x4f\x57\x55\x64\x4f\x5f\x52\x5a\x55\x53\x64\xf0",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(227) / L(22)
    "\x26\x23\x24\x17\x17\x04\x1c\x22\x00\x11\x33\x04\x09\x10\x00\x24\x11\x2c\x0b\x01\x00\x1d\x65",
    // "X509_NAME_get_text_by_NID" / M(Xor3) / S(202) / L(25)
    "\xb4\xd9\xdc\xd5\xb3\xa2\xad\xa1\xa9\xb3\x8b\x89\x98\xb3\x98\x89\x94\x98\xb3\x8e\x95\xb3\xa2\xa5\xa8\xec\x62\xdc\xd4\xbc\x2c\xad\x9a\xb9",
    // "CFArrayAppendValue" / M(Xor3) / S(190) / L(18)
    "\x92\x97\x90\xa3\xa3\xb0\xa8\x90\xa1\xa1\xb4\xbf\xb5\x87\xb0\xbd\xa4\xb4\xd1",
    // "CFDateFormatterCreateDateFromString" / M(Xor2) / S(55) / L(35)
    "\x50\x55\x57\x72\x67\x76\x55\x7c\x61\x7e\x72\x67\x67\x76\x61\x50\x61\x76\x72\x67\x76\x57\x72\x67\x76\x55\x61\x7c\x7e\x40\x67\x61\x7a\x7d\x74\x13",
    // "start" / M(Xor2) / S(12) / L(5)
    "\x6f\x68\x7d\x6e\x68\x1c\x64\x47\x6b\x12\xf2\xea\x96\x67\x0c\x7e",
    // "" / M(None) / S(0) / L(0)
    "\x09\x44\x02\x4f\xf4\xb0\x99\xeb\x75\x46\x56\xba\x54\xdf\x9e\x91\x72\xae\xe4\x39\xf9\xb1\xe3\x9c\x46\xc1\xbf\xe7\x0e\x75\x7f\x23",
    // "" / M(None) / S(0) / L(0)
    "\xa0\x0c\xf2\xc6\x3b\x4b\xc8\x3a\xef\x33\x69\x09\x34\xd0\x61\xc6\x14\xba\xc7\xe1\x76\x1b\x74\xe6\xa3\xf6\x5c\x2d\x75\x4d\x23\x3b",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(162) / L(19)
    "\xee\x83\x86\x8f\xe9\xd1\xd3\xc2\xe9\xd3\xce\xc2\xe9\xd4\xcf\xe9\xf9\xf4\xfc\xb6",
    // "IOMACAddress" / M(Rot) / S(239) / L(12)
    "\x38\x3e\x3c\x30\x32\x30\x53\x53\x61\x54\x62\x62\xef\x93\x07\xf9",
    // "" / M(None) / S(0) / L(0)
    "\x57\x22\x50\x4a\xab\xce\x30\xac\x99\x29\x71\x18\x3a\xc8\x28\x60\x1d\xc9\x8a\xe0\xff\x32\x00\x64\xb5\xcf\x76\xf0\xa0\xfa\x0a\x43",
    // "EVP_MD_CTX_init" / M(Rot) / S(26) / L(15)
    "\x5f\x70\x6a\x79\x67\x5e\x79\x5d\x6e\x72\x79\x83\x88\x83\x8e\x1a",
    // "CFBundleShortVersionString" / M(Rot) / S(10) / L(26)
    "\x4d\x50\x4c\x7f\x78\x6e\x76\x6f\x5d\x72\x79\x7c\x7e\x60\x6f\x7c\x7d\x73\x79\x78\x5d\x7e\x7c\x73\x78\x71\x0a\xf1\xb9\xec\x4e\x36\xc5\x82\xcc",
    // "" / M(None) / S(0) / L(0)
    "\x9a\x3f\x98\x1b\x96\x98\x9d\xb4\x9c\xfe\x57\x95\x1b\x42\xe5\x3f\x40\x8d\xb7\x84\xac\x29\x31\x13\x88\x10\xb2\x8f\x38\x97\x0e\xe5",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(249) / L(66)
    "\xd6\xaa\x80\x8a\x8d\x9c\x94\xd6\xb5\x90\x9b\x8b\x98\x8b\x80\xd6\xbf\x8b\x98\x94\x9c\x8e\x96\x8b\x92\x8a\xd6\xba\x96\x8b\x9c\xbf\x96\x8c\x97\x9d\x98\x8d\x90\x96\x97\xd7\x9f\x8b\x98\x94\x9c\x8e\x96\x8b\x92\xd6\xba\x96\x8b\x9c\xbf\x96\x8c\x97\x9d\x98\x8d\x90\x96\x97\xf9",
    // "SHA1_Final" / M(Xor4) / S(75) / L(10)
    "\xe3\xf8\xf1\x81\xef\xf6\xd9\xde\xd1\xdc\xb0\x7e\xdb\x19\xd0\xaf",
    // "CFDictionaryCreateMutable" / M(Xor3) / S(232) / L(25)
    "\x49\x4c\x4e\x63\x69\x7e\x63\x65\x64\x6b\x78\x73\x49\x78\x6f\x6b\x7e\x6f\x47\x7f\x7e\x6b\x68\x66\x6f\x0a\xdb\xe6\xd5\xf8\x88\xc5\x4f\xf7",
    // "BIO_new" / M(Xor2) / S(6) / L(7)
    "\x54\x5f\x59\x49\x78\x73\x61\x16\x3e\x6c\xa1\x79\xeb\x43\xb8\x88",
    // "IOIteratorNext" / M(Xor3) / S(203) / L(14)
    "\x92\x94\x92\xaf\xbe\xa9\xba\xaf\xb4\xa9\x95\xbe\xa3\xaf\xdb\x50",
    // "IOMasterPort" / M(Xor3) / S(146) / L(12)
    "\xeb\xed\xef\xc3\xd1\xd6\xc7\xd0\xf2\xcd\xd0\xd6\xa2\xdc\xcf\xd5",
    // "Apple Root CA" / M(Xor3) / S(32) / L(13)
    "\x71\x40\x40\x5c\x55\x10\x62\x5f\x5f\x44\x10\x73\x71\x30\x42\x4b",
    // "" / M(None) / S(0) / L(0)
    "\x8d\x73\xc1\xa4\xac\xe6\x7a\xde\x88\xfd\x28\x7b\x85\xd7\x33\xa1\x47\x65\x3e\x10\xc2\x73\x35\xb4\xb2\x24\x5a\xf1\xec\xb7\x39\xbd",
    // "objc_msgSend" / M(Xor1) / S(30) / L(12)
    "\x71\x7c\x74\x7d\x41\x73\x6d\x79\x4d\x7b\x70\x7a\x1e\xf9\xf6\xa0",
    // "CFReadStreamClose" / M(Rot) / S(70) / L(17)
    "\x89\x8c\x98\xab\xa7\xaa\x99\xba\xb8\xab\xa7\xb3\x89\xb2\xb5\xb9\xab\x46",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(80) / L(29)
    "\x1d\x35\x30\x22\x0f\x06\x13\x32\x1f\x15\x02\x1f\x19\x18\x17\x04\x0f\x3d\x13\x0f\x35\x17\x1a\x1a\x34\x17\x15\x1d\x05\x76\x32\x9a\x73\xb7\x72\x98\x40\x0a",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(87) / L(22)
    "\x86\xcc\xca\xc9\x86\xc3\xc0\xb9\x86\xc3\xc0\xb9\xc6\xb9\xc1\xba\x85\xbb\xd0\xc3\xc0\xb9\x57",
    // "kSecReturnRef" / M(Xor4) / S(197) / L(13)
    "\x3b\x03\x35\x33\x02\x35\x24\x25\x22\x3e\x02\x35\x36\x50\x47\x79",
    // "" / M(None) / S(0) / L(0)
    "\x76\x59\x6c\xa0\xbc\x0e\x0b\x9e\x45\x52\x46\x9c\x67\xbd\xde\xd3\x5e\x8e\x34\x46\xaa\x57\xab\xcf\xfd\x67\x37\x0c\x29\x6b\xd2\xe9",
    // "SecKeychainOpen" / M(Xor4) / S(55) / L(15)
    "\x23\x15\x13\x3b\x15\x09\x13\x18\x11\x19\x1e\x3f\x00\x15\x1e\x70",
    // "_MASReceipt" / M(Xor2) / S(170) / L(11)
    "\xe5\xf7\xfb\xe9\xe8\xdf\xd9\xdf\xd3\xca\xce\xba\x79\x95\xe4\xba",
    // "BIO_write" / M(Xor1) / S(174) / L(9)
    "\xec\xe7\xe1\xf1\xd9\xdc\xc7\xda\xcb\xae\x00\x14\xd4\x08\x77\xff",
    // "CFReadStreamClose" / M(Xor3) / S(91) / L(17)
    "\x2e\x2b\x3f\x08\x0c\x09\x3e\x19\x1f\x08\x0c\x00\x2e\x01\x02\x1e\x08\x6d",
    // "" / M(None) / S(0) / L(0)
    "\xb8\xd6\x35\xe9\x6f\x75\xc3\x74\x07\xaf\xdc\x7b\xc8\xdd\x08\xe3\x27\xf3\xba\xe0\x8d\xcd\xeb\x8c\xa1\x96\x6a\xd3\x9f\x95\xdb\xd0",
    // "CFDataCreate" / M(Xor2) / S(237) / L(12)
    "\xbe\xbb\xb9\x9c\x89\x9c\xbe\x8f\x98\x9c\x89\x98\xfd\x9c\xd9\x9b",
    // "" / M(None) / S(0) / L(0)
    "\x4b\x96\xbf\xeb\xf5\x00\xca\x7a\x66\x41\x8c\xca\xc9\xde\xe4\x70\xc5\xa0\xa1\x55\xcc\x3d\x0e\xe7\x8b\x9e\x29\x83\x80\xc3\xaa\x8c",
    // "CFDictionarySetValue" / M(Xor4) / S(157) / L(20)
    "\xa2\xa7\xa5\x88\x82\x95\x88\x8e\x8f\x80\x93\x98\xb2\x84\x95\xb7\x80\x8d\x94\x84\xe1",
    // "glob_b" / M(Xor2) / S(43) / L(6)
    "\x5c\x57\x54\x59\x64\x59\x3b\x64\x17\xdd\x32\x1e\x4e\xae\xde\xee",
    // "" / M(None) / S(0) / L(0)
    "\x49\x9a\xee\xfe\x14\x2a\xff\xb6\x2d\x19\x3e\x37\x00\xae\x7e\xba\x0b\xcb\xaa\x1b\x14\x17\x26\xbe\x4d\x24\xfc\xf6\xec\x9f\x7b\xb0",
    // "%02x" / M(Xor3) / S(124) / L(4)
    "\xa9\xbc\xbe\xf4\x8c\x0b\x45\x27\x36\xc8\xd2\x3b\xd4\xdf\xfe\xe1",
    // "EVP_MD_CTX_init" / M(Xor2) / S(108) / L(15)
    "\x39\x2a\x2c\x23\x31\x38\x23\x3f\x28\x24\x23\x15\x12\x15\x08\x7c",
    // "" / M(None) / S(0) / L(0)
    "\x13\x73\x8c\x91\xdd\x36\xf2\x0b\x95\xd5\xab\xb1\x28\xf6\xc0\xcc\x51\x04\x87\x89\xd6\x0a\x10\x99\x87\x7b\x72\x82\x4d\xc8\xc3\x21",
    // "" / M(None) / S(0) / L(0)
    "\x83\x68\x8c\x4f\x85\x87\xf9\x3e\x79\xa6\x93\x8b\x41\x1c\xad\xb3\x9d\x81\x84\x6a\x51\xb2\xec\xf1\xf0\x23\x05\x8d\xb0\x6b\x12\x57",
    // "CFBundleIdentifier" / M(Xor2) / S(243) / L(18)
    "\xa3\xa6\xa2\x95\x8e\x84\x8c\x85\xa9\x84\x85\x8e\x94\x89\x86\x89\x85\x92\xe0",
    // "strncmp" / M(Xor4) / S(169) / L(7)
    "\xe3\xe4\xe2\xfe\xf3\xfd\xe0\x90\xb5\x89\x9e\xb7\xc6\xcf\xae\xc6",
    // "sk_free" / M(Xor3) / S(19) / L(7)
    "\x50\x48\x7c\x45\x51\x46\x46\x23\x3a\x51\xd7\xc9\x30\x89\xca\x10",
    // "" / M(None) / S(0) / L(0)
    "\x5b\x04\x1d\x9d\xb5\xa4\x1f\x9d\x66\x05\x04\x6c\xb8\x5d\xac\x95\x8b\x4e\x7d\xbf\x18\x58\x0f\x2b\x0d\x88\x31\xe8\xd2\x55\x1e\xdb",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(49) / L(23)
    "\x02\x1a\x03\x34\x32\x34\x38\x21\x25\x03\x34\x37\x23\x34\x22\x39\x03\x34\x20\x24\x34\x22\x25\x51\x4f\xe8\xb2\xb9\x92\x4e\xb5\xda",
    // "CFArrayGetValueAtIndex" / M(Xor1) / S(132) / L(22)
    "\xc7\xc2\xc5\xf6\xf6\xe5\xfd\xc3\xe1\xf0\xd2\xe5\xe8\xf1\xe1\xc5\xf0\xcd\xea\xe0\xe1\xfc\x84",
    // "glob_b" / M(Xor2) / S(73) / L(6)
    "\x3e\x35\x36\x3b\x06\x3b\x59\x45\xc8\xcf\x4d\x0a\x4f\x8a\x9d\xcf",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(252) / L(40)
    "\x0a\x0d\x0d\x59\x09\x5e\x0a\x0a\x0e\x5f\x09\x05\x0f\x5d\x0c\x04\x5a\x5a\x09\x04\x58\x0d\x08\x5d\x59\x0e\x0e\x08\x09\x0e\x58\x0d\x05\x04\x58\x5a\x0a\x5f\x0a\x0c\x3c\xf1\x27\xc4\x0d\x51\xdf\xdd\xd4",
    // "glob" / M(Xor3) / S(125) / L(4)
    "\xea\xe1\xe2\xef\x8d\xb6\xc6\xeb\x48\x44\x7d\xc9\x2b\x46\x2d\xc1",
    // "CFReadStreamCreateWithFile" / M(Rot) / S(206) / L(26)
    "\x11\x14\x20\x33\x2f\x32\x21\x42\x40\x33\x2f\x3b\x11\x40\x33\x2f\x42\x33\x25\x37\x42\x36\x14\x37\x3a\x33\xce\x52\x69\x6a\x67\x0f\x9b\x70\xab",
    // "" / M(None) / S(0) / L(0)
    "\x3f\x8d\x86\xd4\x63\x4f\x07\x08\xf5\x36\xed\x91\x9a\x93\xe2\xc4\x16\x7c\x5c\xc7\x99\xbc\x38\x7f\xc4\x8f\x17\xe0\x40\xcf\x96\x5d",
    // "" / M(None) / S(0) / L(0)
    "\x10\xce\x7f\x26\xc3\x19\xb2\xc7\x38\x00\x63\x50\xbf\x52\xf2\x8d\xc3\xa1\xd1\xf1\x14\x4f\x45\xe1\x7d\xb7\x54\x3c\x8b\xee\x55\x2e",
    // "PKCS7_get0_signers" / M(Xor3) / S(95) / L(18)
    "\x22\x39\x31\x21\x45\x2d\x15\x17\x06\x42\x2d\x01\x1b\x15\x1c\x17\x00\x01\x72",
    // "CC_SHA1" / M(Xor4) / S(96) / L(7)
    "\x43\x43\x5f\x53\x48\x41\x31\x00\x81\x88\x27\x38\x86\xa2\x39\xeb",
    // "" / M(None) / S(0) / L(0)
    "\xfd\xec\x2e\x49\xd4\x8f\xd1\x88\xb9\xba\xf5\xa7\xa8\xe9\x3a\xe2\x12\x5f\x8c\x04\x43\xa8\x08\xe2\xd1\x92\xf8\x7a\x44\x23\xf5\xaf",
    // "SHA1_Init" / M(Rot) / S(135) / L(9)
    "\xda\xcf\xc8\xb8\xe6\xd0\xf5\xf0\xfb\x87\x3f\x22\xe4\x51\x11\x8b",
    // "SHA1_Final" / M(Xor2) / S(108) / L(10)
    "\x2f\x34\x3d\x4d\x23\x3a\x15\x12\x1d\x10\x7c\xb5\x30\xa3\xa9\x75",
    // "" / M(None) / S(0) / L(0)
    "\x46\xa8\x5a\x17\xaa\x09\x52\xe0\x8f\x71\x64\x10\x0b\x9c\xd9\x9b\xe5\xc1\x44\x11\xa9\x32\x38\x4d\xa5\x85\xee\xbc\xe5\xc7\x36\xd8",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(131) / L(28)
    "\xeb\xc7\xc6\xdc\xcd\xc6\xdc\xdb\x87\xf7\xe5\xe9\xfb\xfa\xcd\xcb\xcd\xc1\xd8\xdc\x87\xda\xcd\xcb\xcd\xc1\xd8\xdc\xa8\xe9\x86\xec\x48\x0c\x0b\x7e\x84",
    // "" / M(None) / S(0) / L(0)
    "\x2b\x84\x43\x98\xdd\x9d\x08\x76\x7a\xca\xbf\x32\xff\xd5\xa9\x84\xed\x72\x8b\x87\x3d\x2d\x79\x6e\x7c\xd6\xd4\x11\x2c\xb4\xd7\x18",
    // "sk_free" / M(Xor1) / S(164) / L(7)
    "\xd7\xcf\xfb\xc2\xd6\xc1\xc1\xa4\x59\x48\x65\x06\xb8\x25\x8c\x36",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x9a\x50\xd9\x9d\x04\xf2\x61\xd4\xd1\x85\x21\xf4\x0a\xd3\x37\x09\x17\xe8\xd3\x9b\x81\x00\x13\x8c\xa8\x48\x03\x00\x04\x84\x19",
    // "" / M(None) / S(0) / L(0)
    "\xf5\xee\xac\xdd\xe0\x9e\xb0\xb6\x69\x74\x9f\x69\x92\xf8\x6d\x69\x4a\x2b\xc9\x28\xb4\xd2\x93\xdd\xa4\x62\x2d\xbf\x23\x53\xb0\x1e",
    // "CFStringCreateWithBytes" / M(Xor1) / S(245) / L(23)
    "\xb6\xb3\xa6\x81\x87\x9c\x9b\x92\xb6\x87\x90\x94\x81\x90\xa2\x9c\x81\x9d\xb7\x8c\x81\x90\x86\xf5\xb5\x26\x3a\x88\x69\x6b\xc2\xb0",
    // "BIO_s_mem" / M(Rot) / S(106) / L(9)
    "\xac\xb3\xb9\xc9\xdd\xc9\xd7\xcf\xd7\x6a\x69\xe8\x75\xd0\xda\x3b",
    // "IOServiceGetMatchingServices" / M(Xor4) / S(99) / L(28)
    "\x06\x00\x1c\x2a\x3d\x39\x26\x2c\x2a\x08\x2a\x3b\x02\x2e\x3b\x2c\x27\x26\x21\x28\x1c\x2a\x3d\x39\x26\x2c\x2a\x3c\x4f\x91\xb5\x9b\x9f\xef\x01\x7c\x37",
    // "" / M(None) / S(0) / L(0)
    "\x68\x11\x82\x8b\x78\xdb\xc9\x9f\xcd\xbc\x0a\x73\xcc\x2d\x80\xae\x03\xe6\xd6\x40\xe1\x31\x69\xd7\x85\x9b\x5b\x55\x25\xd5\xec\xc9",
    // "EVP_MD_CTX_init" / M(Rot) / S(158) / L(15)
    "\xe3\xf4\xee\xfd\xeb\xe2\xfd\xe1\xf2\xf6\xfd\x07\x0c\x07\x12\x9e",
    // "CFReadStreamCreateWithFile" / M(Xor3) / S(135) / L(26)
    "\xe9\xec\xf8\xcf\xcb\xce\xf9\xde\xd8\xcf\xcb\xc7\xe9\xd8\xcf\xcb\xde\xcf\xfd\xc3\xde\xc2\xec\xc3\xc6\xcf\xaa\x30\x19\x29\x2f\x45\x01\xb0\x63",
    // "" / M(None) / S(0) / L(0)
    "\xa6\xe3\x5f\x1e\x2b\x3f\xe9\x9b\x27\xe3\x51\x73\xf1\x62\x74\xcd\xdc\x91\x64\xcd\x2d\xda\x32\x9f\x6a\x9e\x2b\x59\xaf\x89\xb6\x32",
    // "ASN1_OBJECT_free" / M(Rot) / S(15) / L(16)
    "\x50\x62\x5d\x40\x6e\x5e\x51\x59\x54\x52\x63\x6e\x75\x81\x74\x74\x0f",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(109) / L(25)
    "\x5c\x43\x5f\x43\x55\x59\x5d\x43\x5c\x5c\x5e\x5b\x5e\x58\x43\x5c\x5d\x5d\x43\x5b\x43\x5c\x5c\x43\x5c\x6d\x3c\x97\x20\x4a\x9e\x92\x97\x44",
    // "IOObjectRelease" / M(Xor3) / S(255) / L(15)
    "\x46\x40\x40\x6d\x65\x6a\x6c\x7b\x5d\x6a\x63\x6a\x6e\x7c\x6a\x0f",
    // "SecItemCopyMatching" / M(Xor4) / S(199) / L(19)
    "\xdf\xe9\xef\xc5\xf8\xe9\xe1\xcf\xe3\xfc\xf5\xc1\xed\xf8\xef\xe4\xe5\xe2\xeb\x8c",
    // "" / M(None) / S(0) / L(0)
    "\x94\x26\x21\x59\x3c\x1d\x3a\x36\x09\x44\xdc\x13\x03\x8e\xa5\xe5\x31\xbc\x2a\xcb\x26\x62\x12\x74\x4e\x39\xfd\xd2\x03\xcb\x60\xf1",
    // "CFArrayGetValueAtIndex" / M(Rot) / S(150) / L(22)
    "\xd9\xdc\xd7\x08\x08\xf7\x0f\xdd\xfb\x0a\xec\xf7\x02\x0b\xfb\xd7\x0a\xdf\x04\xfa\xfb\x0e\x96",
    // "CFReadStreamOpen" / M(Xor2) / S(148) / L(16)
    "\xc6\xc3\xd7\xe0\xe4\xe1\xd6\xf1\xf7\xe0\xe4\xe8\xca\xf5\xe0\xeb\x85",
    // "CFArrayCreateMutable" / M(Rot) / S(210) / L(20)
    "\x15\x18\x13\x44\x44\x33\x4b\x15\x44\x37\x33\x46\x37\x1f\x47\x46\x33\x34\x3e\x37\xd2",
    // "" / M(None) / S(0) / L(0)
    "\xda\x0c\x97\xdd\x5f\xe5\x27\xf6\x60\xa7\xa3\x61\xb4\xcf\x8d\xf5\x50\xf1\x5c\xdd\x86\xeb\xd1\xa3\x4c\x15\xc1\x5e\xbe\x54\x0e\x12",
    // "kSecMatchSubjectContains" / M(Xor3) / S(6) / L(24)
    "\x4c\x74\x42\x44\x6a\x46\x53\x44\x4f\x74\x52\x45\x4d\x42\x44\x53\x64\x48\x49\x53\x46\x4e\x49\x54\x27\x33\xdf\x7d\xbe\xa8\x31\x04\x36",
    // "receipt" / M(Rot) / S(225) / L(7)
    "\x53\x46\x44\x46\x4a\x51\x55\xe1\x56\x3d\x35\x91\x79\xd2\x95\xee",
    // "CFArrayGetCount" / M(Xor1) / S(29) / L(15)
    "\x5e\x5b\x5c\x6f\x6f\x7c\x64\x5a\x78\x69\x5e\x72\x68\x73\x69\x1d",
    // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(142) / L(31)
    "\xe7\xe1\xfc\xcb\xc9\xc7\xdd\xda\xdc\xd7\xeb\xc0\xda\xdc\xd7\xed\xdc\xcb\xcf\xda\xcb\xed\xe8\xfe\xdc\xc1\xde\xcb\xdc\xda\xd7\xae",
    // "SHA1_Init" / M(Rot) / S(15) / L(9)
    "\x62\x57\x50\x40\x6e\x58\x7d\x78\x83\x0f\xa9\x48\x04\xb3\xe6\xab",
    // "CFBundleGetIdentifier" / M(Rot) / S(154) / L(21)
    "\xdd\xe0\xdc\x0f\x08\xfe\x06\xff\xe1\xff\x0e\xe3\xfe\xff\x08\x0e\x03\x00\x03\xff\x0c\x9a",
    // "IOMACAddress" / M(Xor4) / S(18) / L(12)
    "\x69\x6f\x6d\x61\x63\x61\x44\x44\x52\x45\x53\x53\x20\xca\xd6\xf2",
    // "" / M(None) / S(0) / L(0)
    "\xe4\x34\x70\xa1\xda\xd5\x58\x3b\x6c\x38\x6f\x48\xdb\x27\xa3\xab\xed\xe7\x11\xa4\x0d\x0c\xe2\xc7\x28\x63\x6c\xbe\x0b\x52\x9d\x25",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(77) / L(57)
    "\xf5\x89\xa3\xa9\xae\xbf\xb7\xf5\x96\xb3\xb8\xa8\xbb\xa8\xa3\xf5\x91\xbf\xa3\xb9\xb2\xbb\xb3\xb4\xa9\xf5\x89\xa3\xa9\xae\xbf\xb7\x88\xb5\xb5\xae\x99\xbf\xa8\xae\xb3\xbc\xb3\xb9\xbb\xae\xbf\xa9\xf4\xb1\xbf\xa3\xb9\xb2\xbb\xb3\xb4\xda\x53\x76\x6c\xa8\xdf\x79\x3f\xce",
    // "" / M(None) / S(0) / L(0)
    "\x3b\x6a\xf2\x6b\xf3\x66\x52\xa5\x04\x74\xcc\xe2\xde\xc4\xc1\x84\xec\x5d\xf1\x00\x49\xbc\x74\xbf\xf8\x05\xae\x6f\xe1\xf2\xe9\xc7",
    // "" / M(None) / S(0) / L(0)
    "\x33\xfa\x7c\xf9\x48\xde\xea\x68\xfb\xb3\xb2\x0c\xc3\x25\x52\x69\x6a\x67\x0f\x9b\x70\xab\x3b\x74\x37\xf8\xee\xfa\x1d\x73\xba\x9c",
    // "strncmp" / M(Rot) / S(131) / L(7)
    "\xf6\xf7\xf5\xf1\xe6\xf0\xf3\x83\xaa\xc7\xd1\xae\xba\x70\x11\x63",
    // "" / M(None) / S(0) / L(0)
    "\x79\x18\x2f\xd1\x01\x9b\x31\x83\xf3\x8a\xf0\xad\x4c\xc9\x83\x84\xce\xb6\x81\xe7\xd5\x75\x0c\x97\x80\x64\xc9\x77\xdc\x4e\x36\x77",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(157) / L(37)
    "\xce\xf8\xfe\xd6\xf8\xe4\xfe\xf5\xfc\xf4\xf3\xce\xf8\xfc\xef\xfe\xf5\xde\xef\xf8\xfc\xe9\xf8\xdb\xef\xf2\xf0\xdc\xe9\xe9\xef\xf4\xff\xe8\xe9\xf8\xee\x9d",
    // "BIO_s_mem" / M(Xor2) / S(96) / L(9)
    "\x32\x39\x3f\x2f\x03\x2f\x1d\x15\x1d\x70\x54\xef\xdb\x05\x1d\x0a",
    // "" / M(None) / S(0) / L(0)
    "\xc0\x27\x1b\x15\xd9\x89\xe5\xe6\x98\x58\x1a\x89\xd5\xc6\x67\x9f\x77\x8a\x30\xa5\x96\x6c\x65\x02\x58\x08\xb5\xec\xc2\xa8\x9e\x0c",
    // "kCFTypeArrayCallBacks" / M(Xor4) / S(43) / L(21)
    "\xd9\xf1\xf4\xe6\xcb\xc2\xd7\xf3\xc0\xc0\xd3\xcb\xf1\xd3\xde\xde\xf0\xd3\xd1\xd9\xc1\xb2",
    // "CC_SHA1" / M(Xor2) / S(198) / L(7)
    "\x95\x95\x89\x85\x9e\x97\xe7\xd6\x7e\x59\x50\xbe\x67\x43\x5e\x69",
    // "d2i_PKCS7_bio" / M(Xor1) / S(78) / L(13)
    "\x2a\x7c\x27\x11\x1e\x05\x0d\x1d\x79\x11\x2c\x27\x21\x4e\x3b\x33",
    // "CC_SHA1" / M(Rot) / S(254) / L(7)
    "\x41\x41\x5d\x51\x46\x3f\x2f\xfe\xb4\x1f\xe5\x7d\x6c\xe2\x82\x0b",
    // "X509_STORE_new" / M(Xor2) / S(186) / L(14)
    "\xf2\x9f\x9a\x93\xf5\xf9\xfe\xe5\xf8\xef\xf5\xc4\xcf\xdd\xaa\xce",
    // "CFDictionarySetValue" / M(Xor1) / S(205) / L(20)
    "\x8e\x8b\x89\xa4\xae\xb9\xa4\xa2\xa3\xac\xbf\xb4\x9e\xa8\xb9\x9b\xac\xa1\xb8\xa8\xcd",
    // "" / M(None) / S(0) / L(0)
    "\xf2\x98\x93\xc3\xf4\xbd\x1c\x2f\x3f\xf6\xb6\x2f\xde\xa0\x31\x7e\x0b\xc1\xc1\xf0\x8c\x8d\xd9\xb3\x35\x83\x82\x16\x94\x27\xc9\x69",
    // "SKReceiptRefreshRequest" / M(Xor1) / S(216) / L(23)
    "\x8b\x93\x8a\xbd\xbb\xbd\xb1\xa8\xac\x8a\xbd\xbe\xaa\xbd\xab\xb0\x8a\xbd\xa9\xad\xbd\xab\xac\xd8\x0e\x56\x08\x9b\xe7\x06\x1b\x42",
    // "longjmp" / M(Xor4) / S(32) / L(7)
    "\x6c\x6f\x6e\x67\x6a\x6d\x70\x00\x0a\xd4\xfa\xec\x07\x63\x72\x70",
    // "kCFBundleIdentifierKey" / M(Xor2) / S(51) / L(22)
    "\x4f\x67\x62\x66\x51\x4a\x40\x48\x41\x6d\x40\x41\x4a\x50\x4d\x42\x4d\x41\x56\x6f\x41\x5d\x24",
    // "" / M(None) / S(0) / L(0)
    "\x19\x24\xd2\xa5\xe7\xc7\x6e\xf8\x7e\x6f\xe4\xa6\xdf\xd7\x29\xa5\xd2\x31\x69\xac\x13\x76\x43\x89\x7e\x6f\xf0\x4e\xd6\x55\xc1\x46",
    // "IOBSDNameMatching" / M(Xor4) / S(236) / L(17)
    "\xd1\xd7\xda\xcb\xdc\xd6\xf9\xf5\xfd\xd5\xf9\xec\xfb\xf0\xf1\xf6\xff\x98",
    // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(176) / L(31)
    "\x99\x9f\x82\xb5\xb7\xb9\xa3\xa4\xa2\xa9\x95\xbe\xa4\xa2\xa9\x93\xa2\xb5\xb1\xa4\xb5\x93\x96\x80\xa2\xbf\xa0\xb5\xa2\xa4\xa9\xd0",
    // "d2i_X509_bio" / M(Xor3) / S(29) / L(12)
    "\x49\x1f\x44\x72\x75\x18\x1d\x14\x72\x4f\x44\x42\x2d\x29\xf2\xb4",
    // "" / M(None) / S(0) / L(0)
    "\x77\x47\x4b\x38\xc0\x59\x55\x66\xee\x8f\x86\xe0\x7a\x62\x6f\xab\x05\x13\x25\x46\x51\x74\xa8\xd2\xac\x8a\x59\xae\x06\x14\xa3\x18",
    // "" / M(None) / S(0) / L(0)
    "\x80\x54\x1f\xff\x5d\xc6\x35\x27\x2c\x56\x86\xcd\x24\xcf\xe1\xab\xc2\x65\xf4\x27\x4e\xad\xa3\x5f\xc6\xf7\x19\xc1\xfc\x8e\x31\xc7",
    // "CFBundleShortVersionString" / M(Xor1) / S(243) / L(26)
    "\xb0\xb5\xb1\x86\x9d\x97\x9f\x96\xa0\x9b\x9c\x81\x87\xa5\x96\x81\x80\x9a\x9c\x9d\xa0\x87\x81\x9a\x9d\x94\xf3\x5d\x22\xc1\x7b\xa1\xbf\x45\x7e",
    // "ASN1_get_object" / M(Xor4) / S(91) / L(15)
    "\xf1\xe3\xfe\x81\xef\xd7\xd5\xc4\xef\xdf\xd2\xda\xd5\xd3\xc4\xb0",
    // "" / M(None) / S(0) / L(0)
    "\x63\x30\x59\xac\x3e\xa0\xca\x59\x50\xbf\x51\x2a\x25\xfb\x2f\x4d\xc4\x62\x95\x45\x17\x14\xe7\xb9\xf0\xee\xa5\xb1\x88\x94\x5c\xd2",
    // "setDelegate:" / M(Xor2) / S(68) / L(12)
    "\x27\x31\x20\x10\x31\x38\x31\x33\x35\x20\x31\x6e\x54\x3e\x47\xf6",
    // "." / M(Xor4) / S(131) / L(1)
    "\x1e\x30\x14\x47\xa1\x3c\x6d\xa9\x84\xe8\x89\x02\x9b\xcf\x02\x83",
    // "" / M(None) / S(0) / L(0)
    "\x06\xc6\x7c\xf9\xa9\xe6\x7c\x75\xa1\x92\x92\x09\x95\x8f\x77\x0d\x06\x2a\x1b\x4a\x06\x9c\x6b\x90\x29\x92\x30\x44\xf6\xe4\xdd\xda",
    // "com.iccir.Embrace" / M(Xor4) / S(212) / L(17)
    "\x8b\x87\x85\xc6\x81\x8b\x8b\x81\x9a\xc6\xad\x85\x8a\x9a\x89\x8b\x8d\xe8",
    // "" / M(None) / S(0) / L(0)
    "\x1e\xbf\x98\x1c\x65\xa0\xd5\xb6\x5b\x6a\x2a\xcd\x0d\x4a\x4e\x60\xc5\x13\x81\x43\x9d\x77\xf4\x2b\xa8\xbc\x61\x8d\x80\xdb\x9f\xea",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(220) / L(23)
    "\xb3\x8c\x99\x92\xaf\xaf\xb0\xa3\x9d\x98\x98\xa3\x9d\x90\x90\xa3\x98\x95\x9b\x99\x8f\x88\x8f\xfc\x34\x64\x23\x5a\xf2\x92\x0f\x61",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(36) / L(24)
    "\x46\x43\x47\x70\x6b\x61\x69\x60\x50\x6b\x69\x6a\x64\x61\x40\x7d\x60\x66\x70\x71\x64\x67\x69\x60\x05\x04\x95\xd1\x26\x7c\xae\xd5\xd1",
    // "d2i_X509_bio" / M(Xor4) / S(104) / L(12)
    "\xe4\xb2\xe9\xdf\xd8\xb5\xb0\xb9\xdf\xe2\xe9\xef\x80\x5b\xc4\xc6",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(234) / L(50)
    "\x19\x3d\x63\x5d\x5e\x4f\x57\x19\x36\x53\x4c\x5c\x4b\x5c\x63\x19\x30\x5c\x4b\x57\x4f\x61\x59\x5c\x55\x5d\x19\x2b\x5a\x5a\x35\x53\x5e\x18\x50\x5c\x4b\x57\x4f\x61\x59\x5c\x55\x19\x2b\x5a\x5a\x35\x53\x5e\xea",
    // "" / M(None) / S(0) / L(0)
    "\x36\x27\xdf\xc8\x81\x2d\xbf\xa6\x65\x08\xc9\xc3\xff\xf3\x9b\xfe\xe9\x73\xe3\x69\x64\x01\x3b\x33\x89\x71\x3d\x9d\x1e\xa8\xf7\xb5",
    // "kSecMatchLimitAll" / M(Rot) / S(164) / L(17)
    "\x0f\xf7\x09\x07\xf1\x05\x18\x07\x0c\xf0\x0d\x11\x0d\x18\xe5\x10\x10\xa4",
    // "CFDataGetLength" / M(Xor1) / S(6) / L(15)
    "\x45\x40\x42\x67\x72\x67\x41\x63\x72\x4a\x63\x68\x61\x72\x6e\x06",
    // "IOMACAddress" / M(Xor2) / S(111) / L(12)
    "\x36\x30\x32\x3e\x3c\x3e\x1b\x1b\x0d\x1a\x0c\x0c\x7f\x6a\xcd\x1b",
    // "init" / M(Xor2) / S(50) / L(4)
    "\x4b\x4c\x4b\x56\x22\x8b\xdb\xf6\xcf\xa7\x7b\x65\x28\xe1\xd5\xb4",
    // "Contents/_MASReceipt" / M(Rot) / S(166) / L(20)
    "\xe9\x15\x14\x1a\x0b\x14\x1a\x19\xd5\x05\xf3\xe7\xf9\xf8\x0b\x09\x0b\x0f\x16\x1a\xa6",
    // "SHA1_Update" / M(Xor2) / S(86) / L(11)
    "\x15\x0e\x07\x77\x19\x13\x36\x22\x27\x32\x23\x46\x35\x5b\xaf\xc3",
    // "sha1" / M(Rot) / S(178) / L(4)
    "\x25\x1a\x13\xe3\xb2\x46\xb5\x2e\xa2\x69\xd5\x6a\x17\x85\x4a\xb2",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(135) / L(37)
    "\x49\x4c\x5f\x58\x46\x49\x78\x6f\x6b\x7e\x6f\x49\x65\x7a\x73\x4b\x7a\x7a\x6f\x64\x6e\x63\x64\x6d\x5a\x6b\x7e\x62\x49\x65\x67\x7a\x65\x64\x6f\x64\x7e\x0a",
    // "" / M(None) / S(0) / L(0)
    "\x05\x21\x03\x4a\x4b\x5b\xc4\xc6\x29\x0d\x60\x34\x13\xf3\xf0\x75\x33\xf0\x50\xe2\xbd\xf7\xf3\x80\x21\xbd\xc4\x37\xe1\x63\xe1\x9e",
    // "SHA1_Update" / M(Xor4) / S(125) / L(11)
    "\x83\x98\x91\xe1\x8f\x85\xa0\xb4\xb1\xa4\xb5\xd0\xdb\x13\x05\x7d",
    // "CFDataCreateMutable" / M(Xor3) / S(240) / L(19)
    "\x47\x42\x40\x65\x70\x65\x47\x76\x61\x65\x70\x61\x49\x71\x70\x65\x66\x68\x61\x04",
    // "PKCS7_free" / M(Rot) / S(29) / L(10)
    "\x6d\x68\x60\x70\x54\x7c\x83\x8f\x82\x82\x1d\xac\x8b\x9e\x1d\xb8",
    // "X509_STORE_free" / M(Xor3) / S(228) / L(15)
    "\xac\xc1\xc4\xcd\xab\xa7\xa0\xbb\xa6\xb1\xab\x92\x86\x91\x91\xf4",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(31) / L(25)
    "\x77\x54\x4f\x58\x7e\x6d\x60\x6c\x64\x7e\x86\x84\x93\x7e\x93\x84\x97\x93\x7e\x81\x98\x7e\x6d\x68\x63\x1f\xb7\x25\xd0\x7d\xe5\x47\x12\x7f",
    // "" / M(None) / S(0) / L(0)
    "\xdf\xbc\x62\xca\xdf\xa8\x0d\x74\x40\xf2\x19\x81\x43\x43\x40\x08\x4f\x7f\xd8\xe6\xc6\x93\xd4\x66\x42\x47\xe7\x80\x7b\x1c\xb8\xb4",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(182) / L(32)
    "\xcf\xcf\xcf\xcf\x91\x9b\x91\xfb\xfb\x91\x9b\x91\xd2\xd2\x91\xe2\x91\xfe\xfe\x91\x8c\x91\xdb\xdb\x91\x8c\x91\xc5\xc5\x91\xec\x91\xb6",
    // "CFDataAppendBytes" / M(Rot) / S(10) / L(17)
    "\x4d\x50\x4e\x6b\x7e\x6b\x4b\x7a\x7a\x6f\x78\x6e\x4c\x83\x7e\x6f\x7d\x0a",
    // "SecKeychainSearchCopyNext" / M(Xor1) / S(24) / L(25)
    "\x4b\x7d\x7b\x53\x7d\x61\x7b\x70\x79\x71\x76\x4b\x7d\x79\x6a\x7b\x70\x5b\x77\x68\x61\x56\x7d\x60\x6c\x18\x4b\xc7\x93\xbb\x3c\xc8\xc5\x67",
    // "kSecClass" / M(Xor3) / S(221) / L(9)
    "\x86\xbe\x88\x8e\xae\x81\x8c\x9e\x9e\xed\x8d\x22\x3a\x00\xef\xb0",
    // "CFNumberCreate" / M(Xor1) / S(111) / L(14)
    "\x2c\x29\x21\x1a\x02\x0d\x0a\x1d\x2c\x1d\x0a\x0e\x1b\x0a\x6f\x3b",
    // "CFArrayGetCount" / M(Xor1) / S(218) / L(15)
    "\x99\x9c\x9b\xa8\xa8\xbb\xa3\x9d\xbf\xae\x99\xb5\xaf\xb4\xae\xda",
    // "EVP_DigestInit" / M(Xor4) / S(66) / L(14)
    "\x65\x76\x70\x7f\x64\x49\x47\x45\x53\x54\x69\x4e\x49\x54\x20\x2a",
    // "strlen" / M(Xor4) / S(151) / L(6)
    "\x03\x04\x02\x1c\x15\x1e\x70\x35\xad\x74\xec\x7a\x70\xa6\xc9\x27",
    // "objc_getClass" / M(Xor3) / S(37) / L(13)
    "\x5a\x57\x5f\x56\x6a\x52\x50\x41\x76\x59\x54\x46\x46\x35\x4e\x59",
    // "receipt" / M(Xor2) / S(154) / L(7)
    "\xf8\xef\xe9\xef\xe3\xfa\xfe\x8a\x0d\xea\x7d\x62\x20\xe6\x17\x6e",
    // "CFEqual" / M(Xor4) / S(227) / L(7)
    "\x73\x76\x75\x41\x45\x51\x5c\x30\x1c\xf8\x8a\x87\xad\xc2\xbc\x15",
    // "en0" / M(Rot) / S(232) / L(3)
    "\x4d\x56\x18\xe8\x1b\x89\xea\x5b\x8f\xb1\x66\xa4\x0b\x5e\xa9\x69",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x6d\x1b\x92\xaf\xac\x35\x2a\xa1\xd0\x09\xd7\x31\x5f\xab\xba\x7b\x7d\x50\x61\xe8\xc4\xe5\x2a\xee\xf4\xaf\x4c\xf9\x60\x3f\x15",
    // "CFStringCreateWithBytes" / M(Xor3) / S(134) / L(23)
    "\xe5\xe0\xf5\xd2\xd4\xcf\xc8\xc1\xe5\xd4\xc3\xc7\xd2\xc3\xf1\xcf\xd2\xce\xe4\xdf\xd2\xc3\xd5\xa6\x02\x0e\xf1\x38\xa0\x2d\x7e\x62",
    // "" / M(None) / S(0) / L(0)
    "\x51\x48\x77\x6c\x12\xe1\x5d\x94\x04\x5b\x96\x65\xab\x0f\x81\x18\x58\xf2\xd0\x2e\x23\x57\x75\xb7\x1c\xd2\x1a\x42\x9a\x54\xcd\x0c",
    // "CFNumberCreate" / M(Xor3) / S(228) / L(14)
    "\xb7\xb2\xba\x81\x99\x96\x91\x86\xb7\x86\x91\x95\x80\x91\xf4\x8c",
    // "" / M(None) / S(0) / L(0)
    "\xcb\xae\x40\xcb\xb3\x9b\x39\x63\x24\x5d\x90\xb9\xa1\x8d\xb4\x37\xd8\xdd\x32\xb6\xc6\xeb\x48\x44\x7d\xc9\x2b\x46\x2d\xc1\x5a\xa1",
    // "objc_getClass" / M(Xor3) / S(70) / L(13)
    "\x39\x34\x3c\x35\x09\x31\x33\x22\x15\x3a\x37\x25\x25\x56\xde\xe5",
    // "com.iccir.Embrace" / M(Xor2) / S(47) / L(17)
    "\x5e\x52\x50\x13\x54\x5e\x5e\x54\x4f\x13\x78\x50\x5f\x4f\x5c\x5e\x58\x3d",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(250) / L(59)
    "\x88\x8f\x84\x8f\xdb\x84\x8b\xdc\x84\x88\x88\x84\x8c\xdd\x84\x8b\x87\x84\x8d\xdf\x84\x8e\x86\x84\xd8\xd8\x84\x8b\x86\x84\xda\x8f\x84\x8a\xdf\x84\xdb\x8c\x84\x8c\x8a\x84\x8b\x8c\x84\xda\x8f\x84\x87\x86\x84\xda\xd8\x84\x88\xdd\x84\x88\x8e\xbe\x21\xab\x3f\x3d\xc7\xdf\xa4\x70",
    // "SecCertificateCopyData" / M(Xor3) / S(9) / L(22)
    "\x73\x45\x43\x63\x45\x52\x54\x49\x46\x49\x43\x41\x54\x45\x63\x4f\x50\x59\x64\x41\x54\x41\x20",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(26) / L(40)
    "\x50\x4b\x4b\x7f\x4f\x7c\x50\x50\x4c\x7d\x4f\x53\x4d\x7b\x4a\x52\x80\x80\x4f\x52\x7e\x4b\x4e\x7b\x7f\x4c\x4c\x4e\x4f\x4c\x7e\x4b\x53\x52\x7e\x80\x50\x7d\x50\x4a\x1a\x7a\x6e\xab\x95\xc5\xc1\xa7\x22",
    // "CFArrayCreateMutable" / M(Rot) / S(147) / L(20)
    "\xd6\xd9\xd4\x05\x05\xf4\x0c\xd6\x05\xf8\xf4\x07\xf8\xe0\x08\x07\xf4\xf5\xff\xf8\x93",
    // "" / M(None) / S(0) / L(0)
    "\x36\x38\xd4\xf2\x6e\xf3\x63\x20\x19\xf3\xfc\x6d\x91\x8a\x6e\xd7\x54\x51\x16\x53\x26\x0c\xb2\x29\x77\x07\xf7\xc0\x2c\x45\xff\x04",
    // "CC_SHA1_Final" / M(Xor1) / S(50) / L(13)
    "\x71\x71\x6d\x61\x7a\x73\x03\x6d\x74\x5b\x5c\x53\x5e\x32\xf2\x82",
    // "kCFBundleIdentifierKey" / M(Xor4) / S(6) / L(22)
    "\xe1\xc9\xcc\xc8\xff\xe4\xee\xe6\xef\xc3\xee\xef\xe4\xfe\xe3\xec\xe3\xef\xf8\xc1\xef\xf3\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x43\x9d\xbc\x34\xfc\x29\xc9\x01\x88\xe0\x9f\x72\xc4\x3c\x92\x53\x51\x24\x4f\x6c\x94\x15\xa2\x32\xf5\x37\x36\x3a\xf7\x39\x57\x18",
    // "CFStringGetFileSystemRepresentation" / M(Xor3) / S(183) / L(35)
    "\x98\x9d\x88\xaf\xa9\xb2\xb5\xbc\x9c\xbe\xaf\x9d\xb2\xb7\xbe\x88\xa2\xa8\xaf\xbe\xb6\x89\xbe\xab\xa9\xbe\xa8\xbe\xb5\xaf\xba\xaf\xb2\xb4\xb5\xdb",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(164) / L(40)
    "\xda\xd5\xd5\xe9\xd9\xe6\xda\xda\xd6\xe7\xd9\xdd\xd7\xe5\xd4\xdc\xea\xea\xd9\xdc\xe8\xd5\xd8\xe5\xe9\xd6\xd6\xd8\xd9\xd6\xe8\xd5\xdd\xdc\xe8\xea\xda\xe7\xda\xd4\xa4\x90\xfb\x3e\xea\x16\x37\x66\x81",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(165) / L(54)
    "\xbd\xc1\xeb\xe1\xe6\xf7\xff\xbd\xde\xfb\xf0\xe0\xf3\xe0\xeb\xbd\xd4\xe0\xf3\xff\xf7\xe5\xfd\xe0\xf9\xe1\xbd\xc1\xf7\xf1\xe7\xe0\xfb\xe6\xeb\xbc\xf4\xe0\xf3\xff\xf7\xe5\xfd\xe0\xf9\xbd\xc1\xf7\xf1\xe7\xe0\xfb\xe6\xeb\x92",
    // "_MASReceipt/receipt" / M(Xor4) / S(110) / L(19)
    "\xc7\xd5\xd9\xcb\xca\xfd\xfb\xfd\xf1\xe8\xec\xb7\xea\xfd\xfb\xfd\xf1\xe8\xec\x98",
    // "sk_num" / M(Xor3) / S(245) / L(6)
    "\x76\x6e\x5a\x6b\x70\x68\x05\xf0\xb2\x31\x98\x08\x61\x1f\x1a\xe5",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(110) / L(35)
    "\xb1\xb4\xb2\xcf\xe2\xd3\xb4\xdd\xe0\xdb\xcf\xe2\xe2\xd3\xe0\xb1\xe0\xd3\xcf\xe2\xd3\xb2\xcf\xe2\xd3\xb4\xe0\xdd\xdb\xc1\xe2\xe0\xd7\xdc\xd5\x6e",
    // "SecKeychainOpen" / M(Rot) / S(2) / L(15)
    "\x55\x67\x65\x4d\x67\x7b\x65\x6a\x63\x6b\x70\x51\x72\x67\x70\x02",
    // "start" / M(Xor2) / S(127) / L(5)
    "\x1c\x1b\x0e\x1d\x1b\x6f\x8f\x96\x83\x43\x98\x24\x74\x17\x1d\xe6",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(88) / L(24)
    "\x77\x2d\x2b\x2a\x77\x34\x31\x3a\x77\x34\x31\x3a\x0b\x21\x2b\x2c\x3d\x35\x76\x3c\x21\x34\x31\x3a\x58\x97\x0d\x1f\xd6\xd6\x09\x5f\xbf",
    // "/usr/lib/libobjc.dylib" / M(Xor2) / S(222) / L(22)
    "\xe6\xbc\xba\xbb\xe6\xa5\xa0\xab\xe6\xa5\xa0\xab\xa6\xab\xa3\xaa\xe7\xad\xb0\xa5\xa0\xab\xc9",
    // "longjmp" / M(Xor1) / S(228) / L(7)
    "\x88\x8b\x8a\x83\x8e\x89\x94\xe4\x11\xa3\x60\x05\xfa\x94\x48\x83",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(114) / L(24)
    "\x10\x15\x11\x26\x3d\x37\x3f\x36\x06\x3d\x3f\x3c\x32\x37\x16\x2b\x36\x30\x26\x27\x32\x31\x3f\x36\x53\x5a\x23\xc7\x6f\xd8\x67\x47\x76",
    // "EVP_get_digestbyname" / M(Xor1) / S(194) / L(20)
    "\x87\x94\x92\x9d\xa5\xa7\xb6\x9d\xa6\xab\xa5\xa7\xb1\xb6\xa0\xbb\xac\xa3\xaf\xa7\xc2",
    // "" / M(None) / S(0) / L(0)
    "\x6a\x1b\xcd\x1e\xc5\x32\x44\x01\xff\xf2\x04\xb9\x77\x9d\x87\x45\x12\xbf\x8a\xf1\x4d\xc6\xac\x2b\x32\xa0\x66\xdd\x64\x96\xbc\x87",
    // "" / M(None) / S(0) / L(0)
    "\xe1\xad\x6e\x0b\xc4\xf5\xcc\x0c\x11\x8f\xe2\xa2\xc7\xdc\x85\xca\x05\x95\xd3\x1a\xd5\xc0\x5b\xe3\x3a\x1f\xb0\xba\x6d\x4f\x35\xf3",
    // "CFRelease" / M(Rot) / S(185) / L(9)
    "\xfc\xff\x0b\x1e\x25\x1e\x1a\x2c\x1e\xb9\x1b\x15\xd9\x89\xe5\xe6",
    // "_MASReceipt" / M(Rot) / S(100) / L(11)
    "\xc3\xb1\xa5\xb7\xb6\xc9\xc7\xc9\xcd\xd4\xd8\x64\x81\x1d\x72\x72",
    // "" / M(None) / S(0) / L(0)
    "\xe1\x74\xd7\xd5\xd6\xab\xbf\x48\xba\xf5\x1e\x33\xf0\xeb\xcf\x4e\x66\x47\x2d\xa9\x29\x6d\x52\xed\xcc\xf9\x34\xef\x1f\x20\x4c\xc9",
    // "" / M(None) / S(0) / L(0)
    "\xd5\xed\x84\x93\xeb\x9a\xfb\xb6\x2f\x8c\xed\x2b\x97\xee\x90\x4c\x53\xb6\x86\x7e\x30\x14\xa6\x17\x9f\xe9\x51\x42\xc0\x25\x4c\x04",
    // "kCFTypeArrayCallBacks" / M(Xor4) / S(181) / L(21)
    "\xe5\xcd\xc8\xda\xf7\xfe\xeb\xcf\xfc\xfc\xef\xf7\xcd\xef\xe2\xe2\xcc\xef\xed\xe5\xfd\x8e",
    // "" / M(None) / S(0) / L(0)
    "\xc5\x91\x46\xc4\x54\xe0\xbe\x19\xf4\x76\x22\xaa\x3c\x3e\x47\xb4\x5a\x4a\x9d\xdc\x60\x27\x7c\xd1\x27\xf2\x4d\x26\x46\x1a\xf8\x15",
    // "kSecMatchLimitAll" / M(Xor3) / S(232) / L(17)
    "\x91\xa9\x9f\x99\xb7\x9b\x8e\x99\x92\xb6\x93\x97\x93\x8e\xbb\x96\x96\xfa",
    // "" / M(None) / S(0) / L(0)
    "\x98\x76\x09\xec\xb1\x52\x05\x9e\x5b\x3c\xe0\x53\xb3\x7e\x9b\xcd\xc2\x5e\xf5\x99\xdf\x32\x0b\xb0\xf9\xcf\xbb\x67\x2e\x6b\x14\x55",
    // "" / M(None) / S(0) / L(0)
    "\x1a\xe6\xc9\xe9\x8a\xc8\x19\x8d\x87\x3f\xe7\xc7\x48\x4a\xc5\x76\xf9\x7d\x6a\xdf\xec\x8d\x00\x42\x5c\x22\x23\xc8\xc8\x3c\x85\xce",
    // "sk_num" / M(Xor2) / S(138) / L(6)
    "\xe9\xf1\xc5\xf4\xef\xf7\x9a\x58\xe3\x95\xbc\xc2\x36\x06\x36\xa8",
    // "" / M(None) / S(0) / L(0)
    "\xb4\xa1\x6b\xec\x36\x51\x07\x4b\x64\x77\x2e\xff\x45\x7e\xaf\xb6\x72\x98\x43\x66\xa2\xd8\xd0\x4b\x31\x28\x7d\x9d\x92\xc7\x85\x3b",
    // "d2i_PKCS7_bio" / M(Rot) / S(124) / L(13)
    "\xe0\xae\xe5\xdb\xcc\xc7\xbf\xcf\xb3\xdb\xde\xe5\xeb\x7c\x29\xa6",
    // "CFDictionarySetValue" / M(Xor3) / S(188) / L(20)
    "\x92\x97\x95\xb8\xb2\xa5\xb8\xbe\xbf\xb0\xa3\xa8\x82\xb4\xa5\x87\xb0\xbd\xa4\xb4\xd1",
    // "PKCS7_verify" / M(Rot) / S(189) / L(12)
    "\x0d\x08\x00\x10\xf4\x1c\x33\x22\x2f\x26\x23\x36\xbd\x74\x9b\x84",
    // "Contents/_MASReceipt" / M(Xor3) / S(141) / L(20)
    "\xe1\xcd\xcc\xd6\xc7\xcc\xd6\xd1\x8d\xfd\xef\xe3\xf1\xf0\xc7\xc1\xc7\xcb\xd2\xd6\xa2",
    // "setjmp" / M(Xor4) / S(148) / L(6)
    "\x33\x25\x34\x2a\x2d\x30\x40\xd2\xa0\x36\x44\x37\xec\x21\x29\x2c",
    // "IOIteratorNext" / M(Xor1) / S(12) / L(14)
    "\x45\x43\x45\x78\x69\x7e\x6d\x78\x63\x7e\x42\x69\x74\x78\x0c\x33",
    // "sk_value" / M(Xor3) / S(237) / L(8)
    "\x8e\x96\xa2\x8b\x9c\x91\x88\x98\xfd\x01\xdd\x48\x66\x22\x05\xbb",
    // "BIO_s_mem" / M(Xor2) / S(138) / L(9)
    "\xd8\xd3\xd5\xc5\xe9\xc5\xf7\xff\xf7\x9a\xe8\x76\x14\x04\x1b\x4d",
    // "" / M(None) / S(0) / L(0)
    "\xdb\x70\x98\x48\x04\x47\xc7\x43\x0a\xd2\x9b\x86\xea\x28\x72\x10\xf1\xfa\x4a\x2a\xaa\xbd\x49\x79\xc6\xfb\x53\xed\x4c\xc0\x84\x21",
    // "CFBundleIdentifier" / M(Rot) / S(24) / L(18)
    "\x5b\x5e\x5a\x8d\x86\x7c\x84\x7d\x61\x7c\x7d\x86\x8c\x81\x7e\x81\x7d\x8a\x18",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(119) / L(54)
    "\x6f\x13\x39\x33\x34\x25\x2d\x6f\x0c\x29\x22\x32\x21\x32\x39\x6f\x06\x32\x21\x2d\x25\x37\x2f\x32\x2b\x33\x6f\x13\x25\x23\x35\x32\x29\x34\x39\x6e\x26\x32\x21\x2d\x25\x37\x2f\x32\x2b\x6f\x13\x25\x23\x35\x32\x29\x34\x39\x40",
    // "1.0.1" / M(Xor3) / S(95) / L(5)
    "\x5e\x41\x5f\x41\x5e\x6f\x50\x3d\x85\x50\x4a\x00\x2a\x64\x55\x79",
    // "en0" / M(Xor4) / S(156) / L(3)
    "\xa5\xae\xf0\xc0\x14\x2c\x6f\xde\x77\xa7\x02\x83\x34\xe6\x7f\xbc",
    // "CFArrayAppendValue" / M(Xor3) / S(114) / L(18)
    "\xc6\xc3\xc4\xf7\xf7\xe4\xfc\xc4\xf5\xf5\xe0\xeb\xe1\xd3\xe4\xe9\xf0\xe0\x85",
    // "globfree" / M(Xor4) / S(18) / L(8)
    "\x47\x4c\x4f\x42\x46\x52\x45\x45\x20\x29\x77\x07\xf7\xc0\x2c\x45",
    // "PKCS7_free" / M(Xor4) / S(71) / L(10)
    "\x20\x3b\x33\x23\x47\x2f\x16\x02\x15\x15\x70\x4a\x73\xe4\x79\xee",
    // "CFBundleGetMainBundle" / M(Xor4) / S(127) / L(21)
    "\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xad\x8f\x9e\xa7\x8b\x83\x84\xa8\x9f\x84\x8e\x86\x8f\xea",
    // "ASN1_get_object" / M(Xor3) / S(79) / L(15)
    "\x1e\x0c\x11\x6e\x00\x38\x3a\x2b\x00\x30\x3d\x35\x3a\x3c\x2b\x5f",
    // "RTLD_MAIN_ONLY" / M(Xor3) / S(25) / L(14)
    "\x7b\x7d\x65\x6d\x76\x64\x68\x60\x67\x76\x66\x67\x65\x70\x29\xad",
    // "" / M(None) / S(0) / L(0)
    "\x6c\x5c\x64\xbf\x93\x87\x43\x62\xa7\x49\x1b\x77\x2e\x12\x02\xb8\x62\x82\x4a\xa4\x7b\xc4\xb7\xb9\x04\x3c\xe3\x44\xb3\x3f\xff\xa8",
    // "globfree" / M(Xor4) / S(250) / L(8)
    "\xc7\xcc\xcf\xc2\xc6\xd2\xc5\xc5\xa0\xe2\x73\x1c\x8c\x3d\xf3\xdf",
    // "sk_free" / M(Xor2) / S(96) / L(7)
    "\x03\x1b\x2f\x16\x02\x15\x15\x70\xa3\x0f\xbf\x07\x80\x65\x72\x44",
    // "" / M(None) / S(0) / L(0)
    "\x2a\x51\x6a\x72\xfa\x5f\x0e\x39\x98\xc7\xe0\x05\x42\x84\xc1\x0c\xf7\x17\x0a\x07\x0c\x44\x21\xc3\x31\x12\x54\x20\x8c\xe3\x53\x6d",
    // "IOMasterPort" / M(Rot) / S(110) / L(12)
    "\xb7\xbd\xbb\xcf\xe1\xe2\xd3\xe0\xbe\xdd\xe0\xe2\x6e\x97\x03\x41",
    // "" / M(None) / S(0) / L(0)
    "\xb1\x53\x97\x28\xd0\x7d\xf6\x56\x8b\x32\x9a\x73\xb7\x72\x98\x40\x0a\xd0\xf0\x92\xb3\x1b\x55\xbd\xa0\x17\xdb\xd2\x8f\x90\x42\x42",
    // "kSecMatchSubjectContains" / M(Xor4) / S(255) / L(24)
    "\xb4\x8c\xba\xbc\x92\xbe\xab\xbc\xb7\x8c\xaa\xbd\xb5\xba\xbc\xab\x9c\xb0\xb1\xab\xbe\xb6\xb1\xac\xdf\x00\x88\x4f\x90\x45\x51\xfe\x68",
    // "" / M(None) / S(0) / L(0)
    "\x3c\xad\x6b\xcf\xcc\x4e\x73\xb6\x0c\x39\x17\x7a\x91\x05\x6e\x74\x72\x3d\x45\xba\x54\xc3\x2b\x6f\x17\xe9\xbc\x01\xb1\xa7\xe2\xd4",
    // "%02X" / M(Xor1) / S(193) / L(4)
    "\xe4\xf1\xf3\x99\xc1\x18\x79\x96\xe6\xe3\x99\x26\x8f\x57\x20\x2d",
    // "RTLD_MAIN_ONLY" / M(Xor1) / S(167) / L(14)
    "\xf5\xf3\xeb\xe3\xf8\xea\xe6\xee\xe9\xf8\xe8\xe9\xeb\xfe\xa7\x6d",
    // "strlen" / M(Rot) / S(120) / L(6)
    "\xeb\xec\xea\xe4\xdd\xe6\x78\x80\xd7\x97\x67\x51\x69\xdd\x69\x94",
    // "PKCS7_free" / M(Rot) / S(215) / L(10)
    "\x27\x22\x1a\x2a\x0e\x36\x3d\x49\x3c\x3c\xd7\xf8\x8a\xae\xc9\x6a",
    // "CFBundleVersion" / M(Xor3) / S(241) / L(15)
    "\x42\x47\x43\x74\x6f\x65\x6d\x64\x57\x64\x73\x72\x68\x6e\x6f\x01",
    // "sha1" / M(Rot) / S(230) / L(4)
    "\x59\x4e\x47\x17\xe6\x7f\x51\xba\x3f\x5f\x2a\xe5\xfe\x2e\xbf\x4e",
    // "kSecClass" / M(Xor4) / S(143) / L(9)
    "\x9b\xa3\x95\x93\xb3\x9c\x91\x83\x83\xf0\x86\xdc\x8d\x55\xfc\x9c",
    // "glob_b" / M(Xor2) / S(240) / L(6)
    "\x87\x8c\x8f\x82\xbf\x82\xe0\xf3\x63\x20\x19\xf3\xfc\x6d\x91\x8a",
    // "SecKeychainSearchCopyNext" / M(Xor1) / S(83) / L(25)
    "\x00\x36\x30\x18\x36\x2a\x30\x3b\x32\x3a\x3d\x00\x36\x32\x21\x30\x3b\x10\x3c\x23\x2a\x1d\x36\x2b\x27\x53\x7b\xad\xaf\xa7\xc7\x50\x9a\xb5",
    // "kSecClassCertificate" / M(Rot) / S(182) / L(20)
    "\x21\x09\x1b\x19\xf9\x22\x17\x29\x29\xf9\x1b\x28\x2a\x1f\x1c\x1f\x19\x17\x2a\x1b\xb6",
    // "Apple Root CA" / M(Rot) / S(163) / L(13)
    "\xe4\x13\x13\x0f\x08\xc3\xf5\x12\x12\x17\xc3\xe6\xe4\xa3\xa4\x7e",
    // "CFDataGetBytePtr" / M(Xor2) / S(63) / L(16)
    "\x6d\x68\x6a\x4f\x5a\x4f\x69\x4b\x5a\x6c\x57\x5a\x4b\x7e\x5a\x5c\x2e",
    // "CFBundleShortVersionString" / M(Xor4) / S(152) / L(26)
    "\x8b\x8e\x8a\xbd\xa6\xac\xa4\xad\x9b\xa0\xa7\xba\xbc\x9e\xad\xba\xbb\xa1\xa7\xa6\x9b\xbc\xba\xa1\xa6\xaf\xc8\x64\x4f\x41\xd2\xdb\xe8\xdf\xf5",
    // "%02x:" / M(Xor4) / S(211) / L(5)
    "\x15\x00\x02\x48\x0a\x30\xe4\x68\xb6\x51\xdf\x26\xe1\xb5\x42\x25",
    // "ASN1_OBJECT_free" / M(Xor3) / S(20) / L(16)
    "\x64\x76\x6b\x14\x7a\x6a\x67\x6f\x60\x66\x71\x7a\x43\x57\x40\x40\x25",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor3) / S(131) / L(54)
    "\x95\xe9\xc3\xc9\xce\xdf\xd7\x95\xf6\xd3\xd8\xc8\xdb\xc8\xc3\x95\xfc\xc8\xdb\xd7\xdf\xcd\xd5\xc8\xd1\xc9\x95\xe9\xdf\xd9\xcf\xc8\xd3\xce\xc3\x94\xdc\xc8\xdb\xd7\xdf\xcd\xd5\xc8\xd1\x95\xe9\xdf\xd9\xcf\xc8\xd3\xce\xc3\xba",
    // "" / M(None) / S(0) / L(0)
    "\x26\x60\x5b\x3d\xe1\x92\xd1\x96\x5e\xb2\x4d\xf8\xc7\x91\x91\x31\xff\xf2\x15\x8e\xdf\x9a\x5f\x67\x87\x0a\x73\x8e\x6d\xe1\xe5\x75",
    // "X509_STORE_free" / M(Rot) / S(28) / L(15)
    "\x74\x51\x4c\x55\x7b\x6f\x70\x6b\x6e\x61\x7b\x82\x8e\x81\x81\x1c",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(90) / L(37)
    "\x1f\x1a\x09\x0e\x10\x1f\x2e\x39\x3d\x28\x39\x1f\x33\x2c\x25\x1d\x2c\x2c\x39\x32\x38\x35\x32\x3b\x0c\x3d\x28\x34\x1f\x33\x31\x2c\x33\x32\x39\x32\x28\x5c",
    // "SecKeychainSearchCreateFromAttributes" / M(Rot) / S(0) / L(37)
    "\x53\x65\x63\x4b\x65\x79\x63\x68\x61\x69\x6e\x53\x65\x61\x72\x63\x68\x43\x72\x65\x61\x74\x65\x46\x72\x6f\x6d\x41\x74\x74\x72\x69\x62\x75\x74\x65\x73\x00",
    // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(206) / L(25)
    "\xc1\xde\xc2\xde\xc8\xc4\xc0\xde\xc1\xc1\xc3\xc6\xc3\xc5\xde\xc1\xc0\xc0\xde\xc6\xde\xc1\xc1\xde\xc1\xf0\x19\x34\xf6\x9e\x62\x0d\x46\xc4",
    // "objc_msgSend" / M(Xor4) / S(110) / L(12)
    "\x8f\x82\x8a\x83\xbf\x8d\x93\x87\xb3\x85\x8e\x84\xe0\x5f\x15\x29",
    // "kSecClassCertificate" / M(Xor2) / S(179) / L(20)
    "\xcd\xf5\xc3\xc5\xe5\xca\xc7\xd5\xd5\xe5\xc3\xd4\xd2\xcf\xc0\xcf\xc5\xc7\xd2\xc3\xa6",
    // "IORegistryEntryGetParentEntry" / M(Xor3) / S(28) / L(29)
    "\x0b\x0d\x10\x27\x25\x2b\x31\x36\x30\x3b\x07\x2c\x36\x30\x3b\x05\x27\x36\x12\x23\x30\x27\x2c\x36\x07\x2c\x36\x30\x3b\x42\xbe\x18\xb1\xcd\x47\x91\x98\x13",
    // "CFBundleIdentifier" / M(Rot) / S(156) / L(18)
    "\xdf\xe2\xde\x11\x0a\x00\x08\x01\xe5\x00\x01\x0a\x10\x05\x02\x05\x01\x0e\x9c",
    // "kCFBundleIdentifierKey" / M(Xor3) / S(81) / L(22)
    "\x03\x2b\x2e\x2a\x1d\x06\x0c\x04\x0d\x21\x0c\x0d\x06\x1c\x01\x0e\x01\x0d\x1a\x23\x0d\x11\x68",
    // "receipt" / M(Xor3) / S(59) / L(7)
    "\x39\x2e\x28\x2e\x22\x3b\x3f\x4b\xf0\x5a\x94\x53\x66\x20\x42\xa2",
    // "PKCS7_verify" / M(Xor2) / S(142) / L(12)
    "\xce\xd5\xdd\xcd\xa9\xc1\xe8\xfb\xec\xf7\xf8\xe7\x9e\xe2\x67\x8d",
    // "X509_digest" / M(Xor3) / S(115) / L(11)
    "\xdb\xb6\xb3\xba\xdc\xe7\xea\xe4\xe6\xf0\xf7\x83\x7f\xbe\x87\x4d",
    // "CC_SHA1_Update" / M(Xor1) / S(210) / L(14)
    "\x91\x91\x8d\x81\x9a\x93\xe3\x8d\x87\xa2\xb6\xb3\xa6\xb7\xd2\xf1",
    // "X509_free" / M(Xor4) / S(79) / L(9)
    "\xa8\xc5\xc0\xc9\xaf\x96\x82\x95\x95\xf0\x10\x12\xe1\x34\x1a\x45",
    // "" / M(None) / S(0) / L(0)
    "\xda\x65\x2c\x99\x3e\xdc\xe2\x40\x3d\x52\xa4\xc6\xe3\x90\x0f\xaf\x61\xb1\x8d\x22\x3a\x00\xef\xb0\x86\xf6\x10\x48\x54\xf4\xb4\x1d",
    // "glob" / M(Xor4) / S(120) / L(4)
    "\xe7\xec\xef\xe2\x80\xf7\xae\x68\x62\x28\x37\x79\xeb\xed\x10\x2f",
    // "" / M(None) / S(0) / L(0)
    "\x74\xfa\x53\x00\xae\x01\x22\x50\x90\x64\x00\xbc\x5f\x5f\x78\xd7\x84\x7c\x7e\x24\x8c\xf0\xc1\xbc\xf0\x32\x45\x3d\x2e\xe1\x1e\xed",
    // "CFBundleVersion" / M(Xor2) / S(204) / L(15)
    "\x9f\x9a\x9e\xa9\xb2\xb8\xb0\xb9\x8a\xb9\xae\xaf\xb5\xb3\xb2\xdc",
    // "sk_value" / M(Xor3) / S(110) / L(8)
    "\x0d\x15\x21\x08\x1f\x12\x0b\x1b\x7e\x68\x97\x37\xb8\x4b\x43\x31",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(254) / L(39)
    "\xbd\xb8\xab\xac\xb2\xbd\x8c\x9b\x9f\x8a\x9b\xb8\x8c\x91\x93\xb8\x97\x92\x9b\xad\x87\x8d\x8a\x9b\x93\xac\x9b\x8e\x8c\x9b\x8d\x9b\x90\x8a\x9f\x8a\x97\x91\x90\xfe\x36\xb9\x8c\x9a\x48\x57\x31\x7e",
    // "CFDataCreate" / M(Xor3) / S(162) / L(12)
    "\xf1\xf4\xf6\xd3\xc6\xd3\xf1\xc0\xd7\xd3\xc6\xd7\xb2\xe3\x0b\xc8",
    // "kSecMatchSubjectContains" / M(Xor4) / S(70) / L(24)
    "\x6d\x55\x63\x65\x4b\x67\x72\x65\x6e\x55\x73\x64\x6c\x63\x65\x72\x45\x69\x68\x72\x67\x6f\x68\x75\x06\x86\x3d\xa2\xb7\xce\xf8\xf9\xad",
    // "Contents/_MASReceipt" / M(Xor1) / S(104) / L(20)
    "\x2b\x07\x06\x1c\x0d\x06\x1c\x1b\x47\x37\x25\x29\x3b\x3a\x0d\x0b\x0d\x01\x18\x1c\x68",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(237) / L(29)
    "\x45\x6d\x68\x7a\x57\x5e\x4b\x6a\x47\x4d\x5a\x47\x41\x40\x4f\x5c\x57\x65\x4b\x57\x6d\x4f\x42\x42\x6c\x4f\x4d\x45\x5d\x2e\x1b\x94\xae\xb3\xdc\xa2\xb6\xd3",
    // "" / M(None) / S(0) / L(0)
    "\xc2\x40\xc6\x27\x30\xb0\x37\x8a\x2d\x10\xa4\x16\x73\xfe\xee\xc9\x06\xde\x02\x16\xc6\xd3\xff\x87\x38\x13\x3a\x86\xd0\x72\x19\x06",
    // "%02x" / M(Xor3) / S(197) / L(4)
    "\xf0\xe5\xe7\xad\xd5\xf8\x1c\x57\x17\x9d\x98\x74\xc9\xb5\x95\x0c",
    // "CFStringCreateWithCString" / M(Xor1) / S(111) / L(25)
    "\x2c\x29\x3c\x1b\x1d\x06\x01\x08\x2c\x1d\x0a\x0e\x1b\x0a\x38\x06\x1b\x07\x2c\x3c\x1b\x1d\x06\x01\x08\x6f\x58\xd6\x68\x62\xe7\x2b\xf2\x28",
    // "CFDateFormatterCreate" / M(Xor2) / S(33) / L(21)
    "\x74\x71\x73\x56\x43\x52\x71\x58\x45\x5a\x56\x43\x43\x52\x45\x74\x45\x52\x56\x43\x52\x37",
    // "CFBundleGetMainBundle" / M(Xor3) / S(169) / L(21)
    "\xfc\xf9\xfd\xca\xd1\xdb\xd3\xda\xf8\xda\xcb\xf2\xde\xd6\xd1\xfd\xca\xd1\xdb\xd3\xda\xbf",
    // "en0" / M(Xor3) / S(48) / L(3)
    "\x25\x2e\x70\x40\xc4\xb7\xce\x42\x81\xaa\x02\x97\x26\x50\x91\x16",
    // "" / M(None) / S(0) / L(0)
    "\x37\xef\x18\x49\xeb\x79\xe9\xba\x76\x9f\x21\x76\x2a\xee\xbd\x69\xf9\x32\x02\xa7\x10\xac\xd4\xbb\x09\xd7\x0f\xe6\xc5\xbd\xa1\x72",
    // "EVP_DigestFinal" / M(Xor1) / S(43) / L(15)
    "\x6e\x7d\x7b\x74\x6f\x42\x4c\x4e\x58\x5f\x6d\x42\x45\x4a\x47\x2b",
    // "CFEqual" / M(Xor4) / S(154) / L(7)
    "\xe3\xe6\xe5\xd1\xd5\xc1\xcc\xa0\x38\x6f\x48\xdb\x27\xa3\xab\xed",
    // "" / M(None) / S(0) / L(0)
    "\x9a\x05\xf4\xfd\xd4\xff\x0c\x9d\xe4\xd0\x13\x1e\xc2\x53\xb2\x7c\x09\x63\x77\xea\xad\x5b\x65\xc4\x54\x13\x55\xed\xa4\xe9\xae\xd9",
    // "start" / M(Xor3) / S(167) / L(5)
    "\xc4\xc3\xd6\xc5\xc3\xb7\x6d\x23\x61\x0e\xe0\x46\x8b\xa4\x8a\x04",
    // "_MASReceipt" / M(Rot) / S(42) / L(11)
    "\x89\x77\x6b\x7d\x7c\x8f\x8d\x8f\x93\x9a\x9e\x2a\x7b\xec\xf6\x38",
    // "" / M(None) / S(0) / L(0)
    "\xba\x51\x62\x0b\x2b\x6a\xb6\x7c\x28\x9f\x30\x26\xff\x78\x56\x44\x82\xfc\x91\xd7\x18\xb7\xc3\xc0\x4a\xa3\x9b\xc9\xd3\xa2\xe7\x68",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x74\xed\x9c\x53\x3a\x26\xc5\xe1\x7b\x58\xd5\x42\xad\x01\x94\xc8\xb2\x51\xdb\x15\x0c\xf2\x52\xa9\xed\x1d\x8f\x16\x7b\x55\x63",
    // "EVP_DigestUpdate" / M(Xor4) / S(57) / L(16)
    "\x8c\x9f\x99\x96\x8d\xa0\xae\xac\xba\xbd\x9c\xb9\xad\xa8\xbd\xac\xc9",
    // "" / M(None) / S(0) / L(0)
    "\xbe\xb5\xcd\x2a\x35\xa8\x43\xee\x33\xdf\x86\x3d\xa2\xb7\xce\xf8\xf9\xad\xab\x44\x8b\x6b\x12\x44\xb6\x38\xcf\x29\x04\x7e\x82\xf2",
    // "X509_digest" / M(Xor4) / S(21) / L(11)
    "\x08\x65\x60\x69\x0f\x34\x39\x37\x35\x23\x24\x50\xdd\xc0\x07\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x47\x79\x4f\x05\x0b\x49\xc5\xd0\xb8\xa3\x30\xd0\x80\x87\x40\x64\x37\xe4\xbf\xec\x77\xd7\xe0\xcb\x6d\x53\xdb\x30\x9d\xf9\x28\x63",
    // "" / M(None) / S(0) / L(0)
    "\x26\xe2\x0d\xd2\x37\x46\xb8\x95\x76\xc6\x85\x9e\xf3\x3a\x64\xeb\xcb\x7b\x4e\xd4\xe0\x88\xca\xe4\x52\x6c\xf8\x39\x12\x7e\x18\x23",
    // "CC_SHA1_Init" / M(Xor1) / S(120) / L(12)
    "\x3b\x3b\x27\x2b\x30\x39\x49\x27\x31\x16\x11\x0c\x78\xe7\x0e\x75",
    // "CFDataCreateMutable" / M(Xor4) / S(103) / L(19)
    "\x4f\x4a\x48\x6d\x78\x6d\x4f\x7e\x69\x6d\x78\x69\x41\x79\x78\x6d\x6e\x60\x69\x0c",
    // "CFStringCompare" / M(Xor1) / S(86) / L(15)
    "\x15\x10\x05\x22\x24\x3f\x38\x31\x15\x39\x3b\x26\x37\x24\x33\x56",
    // "CFBundleUnloadExecutable" / M(Xor4) / S(52) / L(24)
    "\xf7\xf2\xf6\xc1\xda\xd0\xd8\xd1\xe1\xda\xd8\xdb\xd5\xd0\xf1\xcc\xd1\xd7\xc1\xc0\xd5\xd6\xd8\xd1\xb4\xd1\x88\xb9\xba\xf5\xa7\xa8\xe9",
    // "" / M(None) / S(0) / L(0)
    "\x2c\x69\x4b\xe1\x93\x05\x00\x4b\x19\x44\x9e\xa3\xf6\x58\x00\x89\x00\x6e\x37\x64\xe7\xa9\x4a\x03\xb5\xa3\x86\x55\xb3\xb2\x95\x2a",
    // "dlsym" / M(Rot) / S(59) / L(5)
    "\x9f\xa7\xae\xb4\xa8\x3b\xa4\xe2\xfc\x36\x2d\x0a\xba\x30\x64\x08",
    // "CFDateFormatterSetFormat" / M(Xor4) / S(215) / L(24)
    "\xf4\xf1\xf3\xd6\xc3\xd2\xf1\xd8\xc5\xda\xd6\xc3\xc3\xd2\xc5\xe4\xd2\xc3\xf1\xd8\xc5\xda\xd6\xc3\xb7\x85\x9b\x5b\x55\x25\xd5\xec\xc9",
    // "" / M(None) / S(0) / L(0)
    "\xac\x41\x00\x50\x44\x0b\xea\x42\x7a\xe0\x9c\x7c\xa0\x20\x99\x4f\xb7\x54\xb2\xbc\xcb\x65\x8e\x02\xbc\x09\xe1\x43\xc1\xf4\x61\xd7",
    // "%02x:" / M(Xor1) / S(115) / L(5)
    "\x56\x43\x41\x0b\x49\x73\xe2\xd3\xaf\x47\x51\xd1\x4d\x31\x57\x0b",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(33) / L(29)
    "\x8c\x64\x67\x75\x9a\x91\x86\x65\x8a\x84\x95\x8a\x90\x8f\x82\x93\x9a\x6c\x86\x9a\x64\x82\x8d\x8d\x63\x82\x84\x8c\x94\x21\x55\xf6\xb3\x94\xa7\x27\x78\x4a",
    // "CFBundleGetIdentifier" / M(Xor2) / S(184) / L(21)
    "\xed\xe8\xec\xdb\xc0\xca\xc2\xcb\xe9\xcb\xda\xe7\xca\xcb\xc0\xda\xc7\xc8\xc7\xcb\xdc\xae",
    // "BIO_free" / M(Xor3) / S(149) / L(8)
    "\xe7\xec\xea\xfa\xc3\xd7\xc0\xc0\xa5\xa6\xfd\x73\x98\x03\x70\xe2",
    // "CFDictionaryGetValue" / M(Xor3) / S(254) / L(20)
    "\x50\x55\x57\x7a\x70\x67\x7a\x7c\x7d\x72\x61\x6a\x54\x76\x67\x45\x72\x7f\x66\x76\x13",
    // "CC_SHA1_Update" / M(Xor4) / S(114) / L(14)
    "\x63\x63\x7f\x73\x68\x61\x11\x7f\x75\x50\x44\x41\x54\x45\x20\x2b",
    // "" / M(None) / S(0) / L(0)
    "\xc9\xbe\x06\x79\xb7\xdf\xef\xb1\xb7\xe3\xb2\x2b\xde\xe5\x75\xb3\xe7\x7c\x74\x70\xf1\xa0\xc9\xd5\x77\x42\x4a\xca\x53\x0a\x52\xc8",
    // "CFNumberCreate" / M(Rot) / S(203) / L(14)
    "\x0e\x11\x19\x40\x38\x2d\x30\x3d\x0e\x3d\x30\x2c\x3f\x30\xcb\xcb",
    // "CFStringCreateWithBytes" / M(Xor1) / S(89) / L(23)
    "\x1a\x1f\x0a\x2d\x2b\x30\x37\x3e\x1a\x2b\x3c\x38\x2d\x3c\x0e\x30\x2d\x31\x1b\x20\x2d\x3c\x2a\x59\x0b\xc1\xc1\xf0\x8c\x8d\xd9\xb3",
    // "kSecMatchSearchList" / M(Xor4) / S(120) / L(19)
    "\x0b\x33\x05\x03\x2d\x01\x14\x03\x08\x33\x05\x01\x12\x03\x08\x2c\x09\x13\x14\x60",
    // "NSApplicationMain" / M(Rot) / S(64) / L(17)
    "\x8e\x93\x81\xb0\xb0\xac\xa9\xa3\xa1\xb4\xa9\xaf\xae\x8d\xa1\xa9\xae\x40",
    // "objc_getClass" / M(Rot) / S(9) / L(13)
    "\x78\x6b\x73\x6c\x68\x70\x6e\x7d\x4c\x75\x6a\x7c\x7c\x09\x4a\x83",
    // "Contents" / M(Rot) / S(109) / L(8)
    "\xb0\xdc\xdb\xe1\xd2\xdb\xe1\xe0\x6d\x14\xff\x84\xa4\xa8\x00\x07",
    // "CFBundleCopyBundleURL" / M(Rot) / S(121) / L(21)
    "\xbc\xbf\xbb\xee\xe7\xdd\xe5\xde\xbc\xe8\xe9\xf2\xbb\xee\xe7\xdd\xe5\xde\xce\xcb\xc5\x79",
    // "dlsym" / M(Xor4) / S(227) / L(5)
    "\x54\x5c\x43\x49\x5d\x30\xdf\xad\x8f\xa3\x2e\x1c\x9b\x2b\xa3\x0c",
    // "OBJ_txt2obj" / M(Xor3) / S(81) / L(11)
    "\x2e\x23\x2b\x3e\x15\x19\x15\x53\x0e\x03\x0b\x61\x50\x44\x0b\xea",
    // "X509_STORE_add_cert" / M(Xor4) / S(162) / L(19)
    "\xf0\x9d\x98\x91\xf7\xfb\xfc\xe7\xfa\xed\xf7\xc9\xcc\xcc\xf7\xcb\xcd\xda\xdc\xa8",
    // "CFBundleCopyBundleURL" / M(Xor3) / S(160) / L(21)
    "\xf5\xf0\xf4\xc3\xd8\xd2\xda\xd3\xf5\xd9\xc6\xcf\xf4\xc3\xd8\xd2\xda\xd3\xe3\xe4\xfa\xb6",
    // "CFEqual" / M(Xor3) / S(49) / L(7)
    "\x02\x07\x04\x30\x34\x20\x2d\x41\x93\x45\xee\xd1\xe7\xec\x80\xa5",
    // "CFStringCreateWithCString" / M(Xor3) / S(188) / L(25)
    "\x9d\x98\x8d\xaa\xac\xb7\xb0\xb9\x9d\xac\xbb\xbf\xaa\xbb\x89\xb7\xaa\xb6\x9d\x8d\xaa\xac\xb7\xb0\xb9\xde\x69\xac\x13\x76\x43\x89\x7e\x6f",
    // "SHA1_Update" / M(Xor3) / S(19) / L(11)
    "\x70\x6b\x62\x12\x7c\x76\x53\x47\x42\x57\x46\x23\xbb\xfd\xda\x57",
    // "" / M(None) / S(0) / L(0)
    "\x28\xb9\xca\x75\x42\xb4\xd9\x03\x6d\x35\x48\x5b\x73\xed\x38\xe7\x92\x9f\xf9\xf6\xa0\x56\x85\x00\x95\x4d\xaf\x42\x9d\x3b\xd7\xb3",
    // "EVP_DigestInit" / M(Xor1) / S(11) / L(14)
    "\x4e\x5d\x5b\x54\x4f\x62\x6c\x6e\x78\x7f\x42\x65\x62\x7f\x0b\xb0",
    // "CFReadStreamRead" / M(Xor1) / S(63) / L(16)
    "\x7c\x79\x6d\x5a\x5e\x5b\x6c\x4b\x4d\x5a\x5e\x52\x6d\x5a\x5e\x5b\x3f",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(251) / L(39)
    "\xb8\xbd\xae\xa9\xb7\xb8\x89\x9e\x9a\x8f\x9e\xbd\x89\x94\x96\xbd\x92\x97\x9e\xa8\x82\x88\x8f\x9e\x96\xa9\x9e\x8b\x89\x9e\x88\x9e\x95\x8f\x9a\x8f\x92\x94\x95\xfb\x70\x2a\xc0\x40\xf3\xb4\x28\x2f",
    // "exit" / M(Xor3) / S(201) / L(4)
    "\xbc\xa1\xb0\xad\xd9\xcb\xb3\x9b\x39\x63\x24\x5d\x90\xb9\xa1\x8d",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor3) / S(207) / L(48)
    "\x2f\x53\x79\x73\x74\x65\x6d\x2f\x4c\x69\x62\x72\x61\x72\x79\x2f\x46\x72\x61\x6d\x65\x77\x6f\x72\x6b\x73\x2f\x49\x4f\x4b\x69\x74\x2e\x66\x72\x61\x6d\x65\x77\x6f\x72\x6b\x2f\x49\x4f\x4b\x69\x74\x00",
    // "IOServiceGetMatchingServices" / M(Xor3) / S(88) / L(28)
    "\x34\x32\x2e\x18\x0f\x0b\x14\x1e\x18\x3a\x18\x09\x30\x1c\x09\x1e\x15\x14\x13\x1a\x2e\x18\x0f\x0b\x14\x1e\x18\x0e\x7d\x48\x41\x8b\x4a\x14\x5f\x59\xa8",
    // "kSecMatchLimitAll" / M(Xor3) / S(61) / L(17)
    "\x24\x1c\x2a\x2c\x02\x2e\x3b\x2c\x27\x03\x26\x22\x26\x3b\x0e\x23\x23\x4f",
    // "SHA1" / M(Xor2) / S(41) / L(4)
    "\x6a\x71\x78\x08\x39\x0b\x78\x9b\x84\x32\x08\x76\x85\xc5\x57\x30",
    // "%02X" / M(Xor3) / S(97) / L(4)
    "\x54\x41\x43\x29\x71\x3c\x52\x79\xaf\x3f\xb5\xf7\xbd\x2f\x02\xaa",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(83) / L(59)
    "\x89\x84\x8d\x84\x98\x8d\x88\x95\x8d\x89\x89\x8d\x85\x96\x8d\x88\x8c\x8d\x86\x94\x8d\x83\x8b\x8d\x99\x99\x8d\x88\x8b\x8d\x97\x84\x8d\x87\x94\x8d\x98\x85\x8d\x85\x87\x8d\x88\x85\x8d\x97\x84\x8d\x8c\x8b\x8d\x97\x99\x8d\x89\x96\x8d\x89\x83\x53\x21\xb1\x6e\x3f\x58\x8a\x74\x84",
    // "Contents/_MASReceipt/receipt" / M(Rot) / S(247) / L(28)
    "\x3a\x66\x65\x6b\x5c\x65\x6b\x6a\x26\x56\x44\x38\x4a\x49\x5c\x5a\x5c\x60\x67\x6b\x26\x69\x5c\x5a\x5c\x60\x67\x6b\xf7\x71\xf7\xbd\x68\x3a\xf9\xba\xe0",
    // "" / M(None) / S(0) / L(0)
    "\x75\x7c\xe2\x82\x71\x87\x7b\xff\xea\xd5\x77\xfa\xff\x73\x50\x77\xac\xfc\x1a\x11\x6d\x17\xf0\x75\x43\x4d\x93\xc0\x42\x51\x88\x6d",
    // "kSecClass" / M(Xor2) / S(190) / L(9)
    "\xc5\xfd\xcb\xcd\xed\xc2\xcf\xdd\xdd\xae\x7d\x27\x64\x25\xf8\xf9",
    // "IOObjectRelease" / M(Xor4) / S(165) / L(15)
    "\x19\x1f\x1f\x32\x3a\x35\x33\x24\x02\x35\x3c\x35\x31\x23\x35\x50",
    // "setjmp" / M(Xor3) / S(108) / L(6)
    "\x0f\x19\x08\x16\x11\x0c\x7c\xc9\xec\x8c\x58\x1d\x78\x5f\x3b\x14",
    // "sk_value" / M(Xor1) / S(61) / L(8)
    "\x4e\x56\x62\x4b\x5c\x51\x48\x58\x3d\x46\x42\xcf\xbd\xec\x2f\xbf",
    // "X509_STORE_new" / M(Xor2) / S(3) / L(14)
    "\x4b\x26\x23\x2a\x4c\x40\x47\x5c\x41\x56\x4c\x7d\x76\x64\x13\x31",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(5) / L(19)
    "\x49\x24\x21\x28\x4e\x76\x74\x65\x4e\x74\x69\x65\x4e\x73\x68\x4e\x5e\x53\x5b\x11",
    // "X509_STORE_add_cert" / M(Xor2) / S(174) / L(19)
    "\xe2\x8f\x8a\x83\xe5\xe9\xee\xf5\xe8\xff\xe5\xdb\xde\xde\xe5\xd9\xdf\xc8\xce\xba",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x73\xe4\x79\xee\xc5\x97\x1a\xf2\xfc\xdc\x8f\xe9\x6d\x0f\x1f\x09\x61\xaf\xdd\xf8\x86\x2a\x08\x32\x6e\x9d\xf8\x99\xb5\x68\xd0",
    // "Contents" / M(Xor1) / S(46) / L(8)
    "\x6d\x41\x40\x5a\x4b\x40\x5a\x5d\x2e\xec\x0c\x65\xe4\xf7\xea\xe8",
    // "CFDateFormatterCreateDateFromString" / M(Xor2) / S(52) / L(35)
    "\x53\x56\x54\x71\x64\x75\x56\x7f\x62\x7d\x71\x64\x64\x75\x62\x53\x62\x75\x71\x64\x75\x54\x71\x64\x75\x56\x62\x7f\x7d\x43\x64\x62\x79\x7e\x77\x10",
    // "kSecReturnRef" / M(Xor3) / S(23) / L(13)
    "\x4c\x74\x42\x44\x75\x42\x53\x52\x55\x49\x75\x42\x41\x27\x99\x4b",
    // "setDelegate:" / M(Xor4) / S(88) / L(12)
    "\xf3\xe5\xf4\xc4\xe5\xec\xe5\xe7\xe1\xf4\xe5\xba\x80\xe8\x22\x39",
    // "" / M(None) / S(0) / L(0)
    "\xe2\x7a\x1e\x70\x8a\xe2\x67\x8d\xf2\xb9\x62\x90\x1e\x6a\x4a\x3b\x1a\x24\x22\x4a\xb8\xd2\x05\x7a\x90\x69\x5a\x7d\x3b\xb5\xb2\x64",
    // "CFReadStreamRead" / M(Xor2) / S(169) / L(16)
    "\xfb\xfe\xea\xdd\xd9\xdc\xeb\xcc\xca\xdd\xd9\xd5\xea\xdd\xd9\xdc\xb8",
    // "SecKeychainOpen" / M(Xor4) / S(44) / L(15)
    "\x93\xa5\xa3\x8b\xa5\xb9\xa3\xa8\xa1\xa9\xae\x8f\xb0\xa5\xae\xc0",
    // "CFDictionaryGetValue" / M(Xor3) / S(9) / L(20)
    "\x5d\x58\x5a\x77\x7d\x6a\x77\x71\x70\x7f\x6c\x67\x59\x7b\x6a\x48\x7f\x72\x6b\x7b\x1e",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(146) / L(31)
    "\xd9\xf1\xf4\xe6\xcb\xc2\xd7\xf6\xdb\xd1\xc6\xdb\xdd\xdc\xd3\xc0\xcb\xe4\xd3\xde\xc7\xd7\xf1\xd3\xde\xde\xf0\xd3\xd1\xd9\xc1\xb2",
    // "BIO_write" / M(Xor2) / S(103) / L(9)
    "\x35\x3e\x38\x28\x00\x05\x1e\x03\x12\x77\x8f\x0a\xb2\x77\xe4\x90",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(42) / L(48)
    "\x05\x79\x53\x59\x5e\x4f\x47\x05\x66\x43\x48\x58\x4b\x58\x53\x05\x6c\x58\x4b\x47\x4f\x5d\x45\x58\x41\x59\x05\x63\x65\x61\x43\x5e\x04\x4c\x58\x4b\x47\x4f\x5d\x45\x58\x41\x05\x63\x65\x61\x43\x5e\x2a",
    // "CC_SHA1_Final" / M(Xor1) / S(248) / L(13)
    "\xbb\xbb\xa7\xab\xb0\xb9\xc9\xa7\xbe\x91\x96\x99\x94\xf8\x48\x80",
    // "sel_registerName" / M(Xor3) / S(169) / L(16)
    "\xc9\xdf\xd6\xe5\xc8\xdf\xdd\xd3\xc9\xce\xdf\xc8\xf4\xdb\xd7\xdf\xba",
    // "kCFTypeArrayCallBacks" / M(Rot) / S(57) / L(21)
    "\xa4\x7c\x7f\x8d\xb2\xa9\x9e\x7a\xab\xab\x9a\xb2\x7c\x9a\xa5\xa5\x7b\x9a\x9c\xa4\xac\x39",
    // "globfree" / M(Xor3) / S(127) / L(8)
    "\xe8\xe3\xe0\xed\xe9\xfd\xea\xea\x8f\xa7\x84\xc3\xc8\x07\x87\xd5",
    // "" / M(None) / S(0) / L(0)
    "\x09\x23\x2c\x58\x4f\xa4\xd4\xce\x46\x8a\xbb\xae\xce\x57\x02\xb8\xde\x34\x9e\x1b\x7a\xb3\x1d\x7e\x71\xfb\x43\x31\x92\xc3\xb8\x24",
    // "BIO_free" / M(Xor2) / S(219) / L(8)
    "\x89\x82\x84\x94\xad\xb9\xae\xae\xcb\x2e\x21\x6c\x9c\x92\x5b\x65",
    // "CFDataCreate" / M(Xor2) / S(252) / L(12)
    "\xaf\xaa\xa8\x8d\x98\x8d\xaf\x9e\x89\x8d\x98\x89\xec\x01\xed\x52",
    // "/usr/lib/libSystem.dylib" / M(Xor1) / S(128) / L(24)
    "\xaf\xf5\xf3\xf2\xaf\xec\xe9\xe2\xaf\xec\xe9\xe2\xd3\xf9\xf3\xf4\xe5\xed\xae\xe4\xf9\xec\xe9\xe2\x80\x99\xeb\x75\x46\x56\xba\x54\xdf",
    // "sel_registerName" / M(Xor2) / S(82) / L(16)
    "\x30\x26\x2f\x1c\x31\x26\x24\x2a\x30\x37\x26\x31\x0d\x22\x2e\x26\x43",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(114) / L(29)
    "\x3b\x3d\x20\x17\x15\x1b\x01\x06\x00\x0b\x37\x1c\x06\x00\x0b\x35\x17\x06\x22\x13\x00\x17\x1c\x06\x37\x1c\x06\x00\x0b\x72\x98\x43\x66\xa2\xd8\xd0\x4b\x31",
    // "CFDictionaryCreateMutable" / M(Xor1) / S(228) / L(25)
    "\xa7\xa2\xa0\x8d\x87\x90\x8d\x8b\x8a\x85\x96\x9d\xa7\x96\x81\x85\x90\x81\xa9\x91\x90\x85\x86\x88\x81\xe4\xab\xb1\x98\x1c\xd9\x97\xfc\x06",
    // "" / M(None) / S(0) / L(0)
    "\x72\xd7\xd5\x70\x9c\xf3\x38\x62\x46\xed\xac\x9c\x58\x52\x5d\x12\xf8\x5e\x3a\x09\x22\xef\xac\xe5\xb0\x55\x83\xdf\x07\xe1\x96\xe4",
    // "kSecClassCertificate" / M(Xor1) / S(170) / L(20)
    "\xc1\xf9\xcf\xc9\xe9\xc6\xcb\xd9\xd9\xe9\xcf\xd8\xde\xc3\xcc\xc3\xc9\xcb\xde\xcf\xaa",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(148) / L(36)
    "\x27\x22\x26\x11\x0a\x00\x08\x01\x23\x01\x10\x32\x05\x08\x11\x01\x22\x0b\x16\x2d\x0a\x02\x0b\x20\x0d\x07\x10\x0d\x0b\x0a\x05\x16\x1d\x2f\x01\x1d\x64",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(145) / L(43)
    "\xd4\xd7\xe6\xe3\xdd\xd4\x03\xf6\xf2\x05\xf6\xe8\xfa\x05\xf9\xd7\xfa\xfd\xf6\xe4\x0a\x04\x05\xf6\xfe\xe1\xf2\x05\xf9\xe3\xf6\xfd\xf2\x05\xfa\x07\xf6\xe5\x00\xd3\xf2\x04\xf6\x91\x36\x27\xdf\xc8\x81\x2d\xbf\xa6",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(91) / L(23)
    "\x34\x0b\x1e\x15\x28\x28\x37\x24\x1a\x1f\x1f\x24\x1a\x17\x17\x24\x1f\x12\x1c\x1e\x08\x0f\x08\x7b\x54\x6c\x83\x77\xc1\x1a\x14\x41",
    // "CFStringGetFileSystemRepresentation" / M(Xor2) / S(176) / L(35)
    "\xd7\xd2\xc7\xe0\xe6\xfd\xfa\xf3\xd3\xf1\xe0\xd2\xfd\xf8\xf1\xc7\xed\xe7\xe0\xf1\xf9\xc6\xf1\xe4\xe6\xf1\xe7\xf1\xfa\xe0\xf5\xe0\xfd\xfb\xfa\x94",
    // "CFStringCompare" / M(Xor1) / S(185) / L(15)
    "\xfa\xff\xea\xcd\xcb\xd0\xd7\xde\xfa\xd6\xd4\xc9\xd8\xcb\xdc\xb9",
    // "" / M(None) / S(0) / L(0)
    "\x44\xcd\x02\x31\xff\xb0\x5b\xcb\x3c\x3f\xe1\x70\x90\x2d\xd1\x8c\x4a\xed\xad\xb3\xbb\xd6\x8d\x8e\x92\x08\x6d\x6a\xf3\x88\x07\x7a",
    // "kSecReturnRef" / M(Rot) / S(253) / L(13)
    "\x68\x50\x62\x60\x4f\x62\x71\x72\x6f\x6b\x4f\x62\x63\xfd\xac\x22",
    // "init" / M(Rot) / S(107) / L(4)
    "\xd4\xd9\xd4\xdf\x6b\xf6\x77\x56\xcc\xa1\x3a\x10\x2d\xce\x19\x4a",
    // "CFDataGetLength" / M(Xor3) / S(170) / L(15)
    "\xf9\xfc\xfe\xdb\xce\xdb\xfd\xdf\xce\xf6\xdf\xd4\xdd\xce\xd2\xba",
    // "" / M(None) / S(0) / L(0)
    "\xb1\x6c\xba\xe7\xc1\x2f\x40\x6c\x14\x4c\x5b\x6f\x34\xd5\x57\x22\xc2\x7b\x71\x9c\xee\x0d\xdc\xca\x1b\x95\x77\x18\xee\x2b\x8a\xd0",
    // "setjmp" / M(Xor1) / S(9) / L(6)
    "\x7a\x6c\x7d\x63\x64\x79\x09\x4d\x35\xff\x45\x1c\xd6\xf1\x2f\xee",
    // "kSecMatchSearchList" / M(Xor3) / S(163) / L(19)
    "\xdc\xe4\xd2\xd4\xfa\xd6\xc3\xd4\xdf\xe4\xd2\xd6\xc5\xd4\xdf\xfb\xde\xc4\xc3\xb7",
    // "CFArrayGetCount" / M(Rot) / S(236) / L(15)
    "\x2f\x32\x2d\x5e\x5e\x4d\x65\x33\x51\x60\x2f\x5b\x61\x5a\x60\xec",
    // "" / M(None) / S(0) / L(0)
    "\x2a\x94\x14\x21\xf9\xfb\x34\x27\x2a\x32\x42\x1e\xe8\x80\xb1\xc8\xec\xd8\xf3\xdb\x99\xdb\xef\xe1\x42\x26\xd2\xa0\x36\x44\x37\xec",
    // "CFBundleVersion" / M(Xor3) / S(65) / L(15)
    "\x12\x17\x13\x24\x3f\x35\x3d\x34\x07\x34\x23\x22\x38\x3e\x3f\x51",
    // "alloc" / M(Rot) / S(119) / L(5)
    "\xd8\xe3\xe3\xe6\xda\x77\x01\x0f\xcd\x12\x41\x24\x42\x60\xf1\xa9",
    // "" / M(None) / S(0) / L(0)
    "\x21\x29\x2c\x15\xed\xd7\x71\xfa\x8e\x98\xa8\x12\x74\x01\xda\x39\x53\x50\x45\x4e\xf5\x45\x98\x3d\x72\xeb\xf4\xe3\x0e\x5d\xb5\x30",
    // "BIO_new" / M(Rot) / S(230) / L(7)
    "\x28\x2f\x35\x45\x54\x4b\x5d\xe6\x16\xe6\xc2\x44\xa4\xb0\x4f\x74",
    // "SHA1_Final" / M(Xor2) / S(207) / L(10)
    "\x8c\x97\x9e\xee\x80\x99\xb6\xb1\xbe\xb3\xdf\x59\x00\x85\x26\x02",
    // "" / M(None) / S(0) / L(0)
    "\xa3\xa9\x75\xd5\x0c\xb0\xed\xb2\x85\xa3\x95\x4b\xe6\xa9\x48\x04\xb3\xe6\xab\x52\x36\xd9\x36\xf1\x85\x82\x9f\x17\xcb\xc1\x0d\xdb",
    // "" / M(None) / S(0) / L(0)
    "\x13\x05\x7d\x28\x1b\x31\xf0\x4e\x9c\x5e\xa2\xa3\x0f\xbf\x07\x80\x65\x72\x44\xf6\x92\xf4\x22\xc8\x96\x70\x58\xe3\x95\xbc\xc2\x36",
    // "" / M(None) / S(0) / L(0)
    "\x06\x36\xa8\x43\x99\x89\xfd\x33\x81\x39\x0e\x3f\x46\x42\xcf\xbd\xec\x2f\xbf\xe7\x2c\x51\x19\xdc\xff\x46\x80\xd7\x97\x67\x51\x69",
    // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(62) / L(35)
    "\x7d\x78\x6d\x4a\x4c\x57\x50\x59\x79\x5b\x4a\x78\x57\x52\x5b\x6d\x47\x4d\x4a\x5b\x53\x6c\x5b\x4e\x4c\x5b\x4d\x5b\x50\x4a\x5f\x4a\x57\x51\x50\x3e",
    // "CFDictionaryAddValue" / M(Xor3) / S(179) / L(20)
    "\x8b\x8e\x8c\xa1\xab\xbc\xa1\xa7\xa6\xa9\xba\xb1\x89\xac\xac\x9e\xa9\xa4\xbd\xad\xc8",
    // "alloc" / M(Rot) / S(247) / L(5)
    "\x58\x63\x63\x66\x5a\xf7\x79\x44\x66\x37\x40\x29\xce\xb0\xa3\x24",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(108) / L(28)
    "\xdf\xf3\xf2\xe8\xf9\xf2\xe8\xef\xb3\xc3\xd1\xdd\xcf\xce\xf9\xff\xf9\xf5\xec\xe8\xb3\xee\xf9\xff\xf9\xf5\xec\xe8\x9c\x66\xb6\xc9\xc6\xb1\x48\x3b\xb1",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(224) / L(36)
    "\xa3\xa6\xa2\x95\x8e\x84\x8c\x85\xa7\x85\x94\xb6\x81\x8c\x95\x85\xa6\x8f\x92\xa9\x8e\x86\x8f\xa4\x89\x83\x94\x89\x8f\x8e\x81\x92\x99\xab\x85\x99\xe0",
    // "" / M(None) / S(0) / L(0)
    "\xdd\x69\x94\xd0\x79\xc4\xb1\xa8\x86\x14\x37\xaa\xc7\xd1\xae\xba\x70\x11\x63\xbd\x24\x5a\xe4\x9c\x58\x3e\xae\xc9\x10\x38\x81\xd8",
    // "CFReadStreamOpen" / M(Xor1) / S(83) / L(16)
    "\x10\x15\x01\x36\x32\x37\x00\x27\x21\x36\x32\x3e\x1c\x23\x36\x3d\x53",
    // "" / M(None) / S(0) / L(0)
    "\xb3\xf9\x08\x9b\x7a\xfd\x0f\x31\xbe\xae\x84\x6f\x2c\xbf\xf7\x62\xed\x41\x29\xcd\x57\x19\xe7\x05\xb6\x9b\xc8\xdd\x49\xb3\x99\x54",
    // "X509_get_ext_by_OBJ" / M(Xor4) / S(12) / L(19)
    "\xa8\xc5\xc0\xc9\xaf\x97\x95\x84\xaf\x95\x88\x84\xaf\x92\x89\xaf\xbf\xb2\xba\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x55\x88\x26\x58\xa5\xee\xc2\x0e\x23\x21\x93\x57\x02\xcb\xb4\x53\x88\x13\x01\x32\xee\xce\x3f\x5e\xa3\x7f\x75\x22\x58\x20\x6f\xb0",
    // "objc_msgSend" / M(Rot) / S(236) / L(12)
    "\x5b\x4e\x56\x4f\x4b\x59\x5f\x53\x3f\x51\x5a\x50\xec\xa2\x1a\xaf",
    // "" / M(None) / S(0) / L(0)
    "\x8a\x62\xdc\xd4\xbc\x2c\xad\x9a\xb9\x16\xcc\x24\x2a\x19\xc5\x57\xf7\x48\x67\x26\x5a\x78\xe5\xa5\xfd\xc3\x7c\xd0\x32\x95\x60\x89",
    // "CC_SHA1_Init" / M(Rot) / S(17) / L(12)
    "\x54\x54\x70\x64\x59\x52\x42\x70\x5a\x7f\x7a\x85\x11\x02\x14\xcc",
    // "%02X" / M(Xor1) / S(42) / L(4)
    "\x0f\x1a\x18\x72\x2a\x1a\x46\xd9\x0d\xad\xa5\x8e\x27\x38\x9c\x99",
    // "" / M(None) / S(0) / L(0)
    "\x68\x7c\x8b\xdd\xa1\x9b\x8e\x30\x1b\xb8\xca\xc8\x73\xc7\x79\xfe\x81\xb1\xa6\x88\xee\xd9\x50\x01\xfa\x5f\x49\xdf\x8b\x12\x0b\x88",
    // "kSecMatchLimit" / M(Xor1) / S(232) / L(14)
    "\x83\xbb\x8d\x8b\xa5\x89\x9c\x8b\x80\xa4\x81\x85\x81\x9c\xe8\x71",
    // "CC_SHA1_Update" / M(Xor1) / S(5) / L(14)
    "\x46\x46\x5a\x56\x4d\x44\x34\x5a\x50\x75\x61\x64\x71\x60\x05\xd0",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(78) / L(32)
    "\x77\x77\x77\x77\x29\x23\x29\x43\x43\x29\x23\x29\x6a\x6a\x29\x5a\x29\x46\x46\x29\x34\x29\x63\x63\x29\x34\x29\x7d\x7d\x29\x54\x29\x0e",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(221) / L(59)
    "\x82\x85\x8e\x85\xd1\x8e\x81\xd6\x8e\x82\x82\x8e\x86\xd7\x8e\x81\x8d\x8e\x87\xd5\x8e\x84\x8c\x8e\xd2\xd2\x8e\x81\x8c\x8e\xd0\x85\x8e\x80\xd5\x8e\xd1\x86\x8e\x86\x80\x8e\x81\x86\x8e\xd0\x85\x8e\x8d\x8c\x8e\xd0\xd2\x8e\x82\xd7\x8e\x82\x84\xb4\x38\x9b\xc8\x02\xae\xd8\x0a\x74",
    // "sk_num" / M(Xor2) / S(255) / L(6)
    "\x9c\x84\xb0\x81\x9a\x82\xef\x4c\xdf\x88\xba\x14\xf1\xd5\xb8\x0a",
    // "setDelegate:" / M(Rot) / S(242) / L(12)
    "\x65\x57\x66\x36\x57\x5e\x57\x59\x53\x66\x57\x2c\xf2\x8b\x8e\x42",
    // "" / M(None) / S(0) / L(0)
    "\xfa\x13\x59\x62\xa6\xfe\xde\xf8\xc7\xb6\x80\xd2\x8a\x0b\x54\xfc\xc9\x1c\x86\x52\x0a\x4d\x7e\xe0\x81\x78\x83\x3e\xf4\x90\x52\x22",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(47) / L(59)
    "\x4a\x4d\x46\x4d\x39\x46\x49\x3e\x46\x4a\x4a\x46\x4e\x3f\x46\x49\x45\x46\x4f\x3d\x46\x4c\x44\x46\x3a\x3a\x46\x49\x44\x46\x38\x4d\x46\x48\x3d\x46\x39\x4e\x46\x4e\x48\x46\x49\x4e\x46\x38\x4d\x46\x45\x44\x46\x38\x3a\x46\x4a\x3f\x46\x4a\x4c\x7c\x64\x7d\x1c\xe9\x12\xa7\xa4\x24",
    // "1.2.840.113635.100.6.11.1" / M(Rot) / S(57) / L(25)
    "\x6a\x67\x6b\x67\x71\x6d\x69\x67\x6a\x6a\x6c\x6f\x6c\x6e\x67\x6a\x69\x69\x67\x6f\x67\x6a\x6a\x67\x6a\x39\x64\x07\xd3\x99\x73\x5f\x3b\x38",
    // "IOMasterPort" / M(Xor2) / S(41) / L(12)
    "\x70\x76\x74\x58\x4a\x4d\x5c\x4b\x69\x56\x4b\x4d\x39\x98\x76\x09",
    // "EVP_DigestUpdate" / M(Xor4) / S(139) / L(16)
    "\x7e\x6d\x6b\x64\x7f\x52\x5c\x5e\x48\x4f\x6e\x4b\x5f\x5a\x4f\x5e\x3b",
    // "dlopen" / M(Xor1) / S(72) / L(6)
    "\x2c\x24\x27\x38\x2d\x26\x48\x75\x33\xf0\x50\xe2\xbd\xf7\xf3\x80",
    // "" / M(None) / S(0) / L(0)
    "\xf1\x14\x47\xa1\x3c\x6d\xa9\x84\xe8\x89\x02\x9b\xcf\x02\x83\x1a\xdd\xd1\x5b\x4c\x1e\x7b\x36\xd8\x21\x45\x1a\x04\xc1\x70\x4f\x42",
    // "" / M(None) / S(0) / L(0)
    "\xcd\xf6\xcf\xee\x3c\x52\x79\xaf\x3f\xb5\xf7\xbd\x2f\x02\xaa\xa9\x57\x3e\x24\xef\xce\xe2\xd3\xaf\x47\x51\xd1\x4d\x31\x57\x0b\x39",
    // "BIO_write" / M(Xor3) / S(143) / L(9)
    "\xdd\xd6\xd0\xc0\xe8\xed\xf6\xeb\xfa\x9f\xec\xaa\x63\x2d\x01\x97",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor4) / S(55) / L(50)
    "\xda\xa6\x8c\x86\x81\x90\x98\xda\xb9\x9c\x97\x87\x94\x87\x8c\xda\xb3\x87\x94\x98\x90\x82\x9a\x87\x9e\x86\xda\xb4\x85\x85\xbe\x9c\x81\xdb\x93\x87\x94\x98\x90\x82\x9a\x87\x9e\xda\xb4\x85\x85\xbe\x9c\x81\xf5",
    // "CFStringCompare" / M(Xor2) / S(184) / L(15)
    "\xeb\xee\xfb\xdc\xda\xc1\xc6\xcf\xeb\xc7\xc5\xd8\xc9\xda\xcd\xa8",
    // "OpenSSL_add_all_digests" / M(Rot) / S(33) / L(23)
    "\x70\x91\x86\x8f\x74\x74\x6d\x80\x82\x85\x85\x80\x82\x8d\x8d\x80\x85\x8a\x88\x86\x94\x95\x94\x21\x73\x50\x77\xac\xfc\x1a\x11\x6d",
    // "BIO_free" / M(Xor2) / S(61) / L(8)
    "\x6f\x64\x62\x72\x4b\x5f\x48\x48\x2d\xf9\xf3\xc8\xb7\x75\xee\xc3",
    // "X509_digest" / M(Xor3) / S(170) / L(11)
    "\xe2\x8f\x8a\x83\xe5\xde\xd3\xdd\xdf\xc9\xce\xba\xd8\xb3\xf9\x08",
    // "CFDataCreateMutable" / M(Xor4) / S(21) / L(19)
    "\xe7\xe2\xe0\xc5\xd0\xc5\xe7\xd6\xc1\xc5\xd0\xc1\xe9\xd1\xd0\xc5\xc6\xc8\xc1\xa4",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(24) / L(31)
    "\x53\x7b\x7e\x6c\x41\x48\x5d\x7c\x51\x5b\x4c\x51\x57\x56\x59\x4a\x41\x6e\x59\x54\x4d\x5d\x7b\x59\x54\x54\x7a\x59\x5b\x53\x4b\x38",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x4c\xa4\x11\xd3\x80\x6f\x33\x7a\x1c\x28\x2e\xac\x53\x04\x71\xfd\xc8\x33\x73\x3e\xf8\x37\x94\xab\x83\x4a\x2b\x7e\xf9\x3f\x0b",
    // "SHA1" / M(Xor4) / S(151) / L(4)
    "\x23\x38\x31\x41\x70\xce\xdb\xf5\x1e\x95\x62\x72\x20\xd1\x96\x1f",
    // "" / M(None) / S(0) / L(0)
    "\x3b\xda\x95\x01\x56\x56\xa4\xe5\x41\x5b\xbc\x5b\xa3\xdb\x78\xb3\xa5\x4e\x03\x06\xd8\x11\xf9\x3f\x11\xc9\x7c\xd2\x29\x19\x8e\x94",
    // "SKReceiptRefreshRequest" / M(Rot) / S(244) / L(23)
    "\x47\x3f\x46\x59\x57\x59\x5d\x64\x68\x46\x59\x5a\x66\x59\x67\x5c\x46\x59\x65\x69\x59\x67\x68\xf4\x42\x67\x3a\xa6\x61\x43\x7c\xf5",
    // "." / M(Xor3) / S(206) / L(1)
    "\xf0\xde\xe6\x5d\x75\x6e\xcd\xbc\xbb\x34\xae\x12\x2e\x65\xaf\xb2",
    // "%02X:" / M(Xor4) / S(43) / L(5)
    "\x95\x80\x82\xe8\x8a\xb0\x91\x66\x8c\x28\xa3\x2c\x5d\x7c\x73\xae",
    // "" / M(None) / S(0) / L(0)
    "\xdb\xcc\x71\x51\xaf\x29\xf9\x4a\x22\xe5\x70\x38\x1f\x25\x9a\x6c\x71\x80\xae\xac\xcf\x25\x7c\xa6\xfe\xc8\x8f\x05\xa6\x7b\xec\xf6",
    // "CFReadStreamOpen" / M(Xor4) / S(191) / L(16)
    "\xec\xe9\xfd\xca\xce\xcb\xfc\xdb\xdd\xca\xce\xc2\xe0\xdf\xca\xc1\xaf",
    // "X509_STORE_add_cert" / M(Xor4) / S(136) / L(19)
    "\xf8\x95\x90\x99\xff\xf3\xf4\xef\xf2\xe5\xff\xc1\xc4\xc4\xff\xc3\xc5\xd2\xd4\xa0",
    // "CC_SHA1_Init" / M(Xor4) / S(76) / L(12)
    "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x89\xae\xa9\xb4\xc0\x8e\xac\x18",
    // "IOIteratorNext" / M(Rot) / S(76) / L(14)
    "\x95\x9b\x95\xc0\xb1\xbe\xad\xc0\xbb\xbe\x9a\xb1\xc4\xc0\x4c\xed",
    // "CFBundleCopyBundleURL" / M(Rot) / S(11) / L(21)
    "\x4e\x51\x4d\x80\x79\x6f\x77\x70\x4e\x7a\x7b\x84\x4d\x80\x79\x6f\x77\x70\x60\x5d\x57\x0b",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(89) / L(66)
    "\x35\x49\x63\x69\x6e\x7f\x77\x35\x56\x73\x78\x68\x7b\x68\x63\x35\x5c\x68\x7b\x77\x7f\x6d\x75\x68\x71\x69\x35\x59\x75\x68\x7f\x5c\x75\x6f\x74\x7e\x7b\x6e\x73\x75\x74\x34\x7c\x68\x7b\x77\x7f\x6d\x75\x68\x71\x35\x59\x75\x68\x7f\x5c\x75\x6f\x74\x7e\x7b\x6e\x73\x75\x74\x1a",
    // "dlopen" / M(Xor2) / S(193) / L(6)
    "\xb5\xbd\xbe\xa1\xb4\xbf\xd1\x5f\x15\xa2\x67\x73\xef\x0c\xe2\xda",
    // "IOServiceGetMatchingServices" / M(Xor3) / S(97) / L(28)
    "\xcf\xc9\xd5\xe3\xf4\xf0\xef\xe5\xe3\xc1\xe3\xf2\xcb\xe7\xf2\xe5\xee\xef\xe8\xe1\xd5\xe3\xf4\xf0\xef\xe5\xe3\xf5\x86\x49\x79\xc6\xfb\x53\xed\x4c\xc0",
    // "EVP_DigestFinal" / M(Rot) / S(86) / L(15)
    "\x9b\xac\xa6\xb5\x9a\xbf\xbd\xbb\xc9\xca\x9c\xbf\xc4\xb7\xc2\x56",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(187) / L(57)
    "\x19\x65\x4f\x45\x42\x53\x5b\x19\x7a\x5f\x54\x44\x57\x44\x4f\x19\x7d\x53\x4f\x55\x5e\x57\x5f\x58\x45\x19\x65\x4f\x45\x42\x53\x5b\x64\x59\x59\x42\x75\x53\x44\x42\x5f\x50\x5f\x55\x57\x42\x53\x45\x18\x5d\x53\x4f\x55\x5e\x57\x5f\x58\x36\xe5\x70\x38\x1f\x25\x9a\x6c\x71",
    // "" / M(None) / S(0) / L(0)
    "\x38\xd7\xea\x6b\xbb\x53\x18\x39\xdc\x82\x57\x2c\x41\xd3\xc2\x6b\xcb\xb3\x42\x24\x72\x13\xa8\xe5\x93\x99\x66\x44\x6d\xa5\x31\xe9",
    // "init" / M(Xor4) / S(38) / L(4)
    "\x09\x0e\x09\x14\x60\x9b\xde\x6d\x5f\xa8\x00\xae\x8c\x46\x66\x68",
    // "" / M(None) / S(0) / L(0)
    "\x08\xee\xe0\xf2\xe3\xc6\xa9\x06\xb5\xfb\x6a\xab\xb3\x68\xfd\x19\x34\xf6\x9e\x62\x0d\x46\xc4\x4f\xcf\xfb\x8a\xc9\x6f\x51\x8f\xd6",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x5c\xc2\x95\x20\x59\x6d\xb1\x7e\x4c\x85\x0f\x06\x61\x20\x44\xca\x6b\xb9\xa4\x36\xdf\x5a\x31\x22\x84\x30\x4d\xa6\x50\x99\x04",
    // "SecCertificateCopyData" / M(Xor1) / S(84) / L(22)
    "\x07\x31\x37\x17\x31\x26\x20\x3d\x32\x3d\x37\x35\x20\x31\x17\x3b\x24\x2d\x10\x35\x20\x35\x54",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor4) / S(116) / L(50)
    "\x33\x4f\x65\x6f\x68\x79\x71\x33\x50\x75\x7e\x6e\x7d\x6e\x65\x33\x5a\x6e\x7d\x71\x79\x6b\x73\x6e\x77\x6f\x33\x5d\x6c\x6c\x57\x75\x68\x32\x7a\x6e\x7d\x71\x79\x6b\x73\x6e\x77\x33\x5d\x6c\x6c\x57\x75\x68\x1c",
    // "" / M(None) / S(0) / L(0)
    "\x7c\x1d\x25\xa4\x62\x9c\xf9\xf0\x2b\x33\xa9\x69\x0f\xe5\xf5\x9d\xd9\x06\x98\x21\xab\x3f\x3d\xc7\xdf\xa4\x70\x7c\xf7\xd1\xb7\x8e",
    // "_MASReceipt/receipt" / M(Xor3) / S(246) / L(19)
    "\x55\x47\x4b\x59\x58\x6f\x69\x6f\x63\x7a\x7e\x25\x78\x6f\x69\x6f\x63\x7a\x7e\x0a",
    // "Apple Root CA" / M(Xor2) / S(189) / L(13)
    "\xec\xdd\xdd\xc1\xc8\x8d\xff\xc2\xc2\xd9\x8d\xee\xec\xad\x02\x59",
    // "CFBundleGetIdentifier" / M(Rot) / S(200) / L(21)
    "\x0b\x0e\x0a\x3d\x36\x2c\x34\x2d\x0f\x2d\x3c\x11\x2c\x2d\x36\x3c\x31\x2e\x31\x2d\x3a\xc8",
    // "kSecMatchLimit" / M(Xor4) / S(46) / L(14)
    "\x8b\xb3\x85\x83\xad\x81\x94\x83\x88\xac\x89\x8d\x89\x94\xe0\xd9",
    // "RTLD_MAIN_ONLY" / M(Xor3) / S(49) / L(14)
    "\x13\x15\x0d\x05\x1e\x0c\x00\x08\x0f\x1e\x0e\x0f\x0d\x18\x41\x90",
    // "CFDateFormatterSetFormat" / M(Xor4) / S(230) / L(24)
    "\xe5\xe0\xe2\xc7\xd2\xc3\xe0\xc9\xd4\xcb\xc7\xd2\xd2\xc3\xd4\xf5\xc3\xd2\xe0\xc9\xd4\xcb\xc7\xd2\xa6\x77\x79\x42\x41\xf3\xb6\xdb\x98",
    // "CFDataGetBytePtr" / M(Xor4) / S(18) / L(16)
    "\x71\x74\x76\x53\x46\x53\x75\x57\x46\x70\x4b\x46\x57\x62\x46\x40\x32",
    // "" / M(None) / S(0) / L(0)
    "\x20\x52\x65\x9d\x52\x3b\x4f\x2c\x91\xb2\x0b\x15\x34\x1a\xf4\x5a\xa4\x8b\xdd\x2a\x58\xc8\x4c\xee\xfd\xd3\x3e\xc5\x49\xbe\xa1\xfe",
    // "%02X:" / M(Xor4) / S(184) / L(5)
    "\xa5\xb0\xb2\xd8\xba\x80\x57\x18\xc9\xae\xb3\x5a\x7e\xc0\xb4\xb7",
    // "CFRelease" / M(Xor3) / S(33) / L(9)
    "\x72\x77\x63\x54\x5d\x54\x50\x42\x54\x31\xfb\x67\xab\x33\xaf\x39",
    // "OBJ_txt2obj" / M(Rot) / S(147) / L(11)
    "\xe2\xd5\xdd\xf2\x07\x0b\x07\xc5\x02\xf5\xfd\x93\x1d\x0a\x4a\x32",
    // "" / M(None) / S(0) / L(0)
    "\xa1\xf6\x5d\xfa\xb0\xda\xa8\x7e\x61\x0d\x43\x81\xe6\x75\x7b\xf1\xa7\x9c\x3d\x31\x87\xf9\xed\x21\xb1\x6e\x3f\x58\x8a\x74\x84\x12",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(120) / L(39)
    "\x0b\x0e\x1d\x1a\x04\x0b\x3a\x2d\x29\x3c\x2d\x0e\x3a\x27\x25\x0e\x21\x24\x2d\x1b\x31\x3b\x3c\x2d\x25\x1a\x2d\x38\x3a\x2d\x3b\x2d\x26\x3c\x29\x3c\x21\x27\x26\x48\x95\x8f\x77\x0d\x06\x2a\x1b\x4a",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(159) / L(48)
    "\xb0\xcc\xe6\xec\xeb\xfa\xf2\xb0\xd3\xf6\xfd\xed\xfe\xed\xe6\xb0\xd9\xed\xfe\xf2\xfa\xe8\xf0\xed\xf4\xec\xb0\xd6\xd0\xd4\xf6\xeb\xb1\xf9\xed\xfe\xf2\xfa\xe8\xf0\xed\xf4\xb0\xd6\xd0\xd4\xf6\xeb\x9f",
    // "X509_NAME_get_text_by_NID" / M(Xor1) / S(252) / L(25)
    "\xa4\xc9\xcc\xc5\xa3\xb2\xbd\xb1\xb9\xa3\x9b\x99\x88\xa3\x88\x99\x84\x88\xa3\x9e\x85\xa3\xb2\xb5\xb8\xfc\xcd\x26\x2e\xd7\x52\x2f\x89\x08",
    // "" / M(None) / S(0) / L(0)
    "\x50\xfe\xd2\xb3\x34\x7f\xdf\xb2\xe4\x40\xec\x27\x40\x53\x01\xdb\x22\xcf\x85\xf1\x34\x2c\x7a\x8e\xa6\x5e\x27\xfd\xa6\x29\x9f\xaf",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(151) / L(59)
    "\xa1\xa6\xad\xa6\xf2\xad\xa2\xf5\xad\xa1\xa1\xad\xa5\xf4\xad\xa2\xae\xad\xa4\xf6\xad\xa7\xaf\xad\xf1\xf1\xad\xa2\xaf\xad\xf3\xa6\xad\xa3\xf6\xad\xf2\xa5\xad\xa5\xa3\xad\xa2\xa5\xad\xf3\xa6\xad\xae\xaf\xad\xf3\xf1\xad\xa1\xf4\xad\xa1\xa7\x97\x13\x1b\xff\x8b\x87\x56\x65\x2b",
    // "dlopen" / M(Xor4) / S(85) / L(6)
    "\x34\x3c\x3f\x20\x35\x3e\x50\xda\xde\xef\x15\xea\x58\xcd\x43\xf5",
    // "strncmp" / M(Xor3) / S(248) / L(7)
    "\x7b\x7c\x7a\x66\x6b\x65\x78\x08\x30\x59\xc6\x22\xd1\xc2\x47\x7d",
    // "CFReadStreamRead" / M(Xor4) / S(252) / L(16)
    "\xff\xfa\xee\xd9\xdd\xd8\xef\xc8\xce\xd9\xdd\xd1\xee\xd9\xdd\xd8\xbc",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(203) / L(36)
    "\xb3\xb6\xb2\x85\x9e\x94\x9c\x95\xb7\x95\x84\xa6\x91\x9c\x85\x95\xb6\x9f\x82\xb9\x9e\x96\x9f\xb4\x99\x93\x84\x99\x9f\x9e\x91\x82\x89\xbb\x95\x89\xf0",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(171) / L(66)
    "\xc1\xbd\x97\x9d\x9a\x8b\x83\xc1\xa2\x87\x8c\x9c\x8f\x9c\x97\xc1\xa8\x9c\x8f\x83\x8b\x99\x81\x9c\x85\x9d\xc1\xad\x81\x9c\x8b\xa8\x81\x9b\x80\x8a\x8f\x9a\x87\x81\x80\xc0\x88\x9c\x8f\x83\x8b\x99\x81\x9c\x85\xc1\xad\x81\x9c\x8b\xa8\x81\x9b\x80\x8a\x8f\x9a\x87\x81\x80\xee",
    // "CFDictionaryCreateMutable" / M(Xor3) / S(35) / L(25)
    "\x06\x03\x01\x2c\x26\x31\x2c\x2a\x2b\x24\x37\x3c\x06\x37\x20\x24\x31\x20\x08\x30\x31\x24\x27\x29\x20\x45\xe5\x31\xbc\x2a\xcb\x26\x62\x12",
    // "" / M(None) / S(0) / L(0)
    "\x28\x02\x94\xbf\x34\x27\xf0\xcc\x7a\x6e\xab\x95\xc5\xc1\xa7\x22\xc8\xe1\x30\x8c\xce\x5b\x73\xa1\xd6\xcf\x1e\x75\x4b\xb7\xc2\x18",
    // "%02x" / M(Rot) / S(200) / L(4)
    "\xed\xf8\xfa\x40\xc8\x1e\x7b\x36\xd8\x21\x45\x1a\x04\xc1\x70\x4f",
    // "" / M(None) / S(0) / L(0)
    "\xc6\x7e\x7b\xaa\x8e\x3f\x33\xff\x06\xa4\xc1\xa7\x5d\x1f\x1b\x04\x88\x58\xdf\x30\xde\xe7\xec\x10\x3c\x15\x43\x89\x99\xb0\x98\x7b",
    // "" / M(None) / S(0) / L(0)
    "\x67\x07\xd3\x1d\x64\x88\x06\xc4\x58\xd8\xad\x9e\x7d\x8b\xb5\xc5\x93\x08\x31\xc1\x1e\x11\x80\x4a\x17\x74\xd7\x70\xdb\xab\xf9\x42",
    // "ASN1_OBJECT_free" / M(Xor2) / S(141) / L(16)
    "\xdd\xcf\xd2\xad\xc3\xd3\xde\xd6\xd9\xdf\xc8\xc3\xfa\xee\xf9\xf9\x9c",
    // "CFDictionaryAddValue" / M(Xor3) / S(4) / L(20)
    "\x5a\x5f\x5d\x70\x7a\x6d\x70\x76\x77\x78\x6b\x60\x58\x7d\x7d\x4f\x78\x75\x6c\x7c\x19",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(4) / L(43)
    "\x73\x76\x65\x62\x7c\x73\x42\x55\x51\x44\x55\x67\x59\x44\x58\x76\x59\x5c\x55\x63\x49\x43\x44\x55\x5d\x60\x51\x44\x58\x62\x55\x5c\x51\x44\x59\x46\x55\x64\x5f\x72\x51\x43\x55\x30\x52\xf8\xe0\x67\xb2\xa9\x74\x10",
    // "" / M(None) / S(0) / L(0)
    "\x4b\xe9\xfa\xbf\xa2\x8f\x4e\xc3\xc4\xd6\xff\x1c\xc9\xdb\x90\xf1\xfe\xcf\xb2\x28\xd5\xec\x81\x25\xbb\xea\x22\xa5\xe6\x76\x75\x95",
    // "" / M(None) / S(0) / L(0)
    "\x13\xd6\x9e\x60\xc2\xd9\x35\xa2\x0a\x62\x0e\xf5\x3c\x93\xc9\xf1\xb9\xec\x4e\x36\xc5\x82\xcc\xb6\xd6\x23\x20\x41\xcd\x75\x8e\x22",
    // "d2i_PKCS7_bio" / M(Rot) / S(226) / L(13)
    "\x46\x14\x4b\x41\x32\x2d\x25\x35\x19\x41\x44\x4b\x51\xe2\x03\x53",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x9c\x0d\xd3\x9e\xfc\x28\x0c\x16\xc5\xda\x9e\x26\xff\x59\x04\x14\xff\x84\xa4\xa8\x00\x07\xf1\x0a\x01\x53\xee\x3a\x38\x7a\xfd",
    // "glob" / M(Xor1) / S(190) / L(4)
    "\xd9\xd2\xd1\xdc\xbe\x05\xbd\x53\xad\xf3\x32\xb6\xde\x61\x7c\xa7",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor4) / S(134) / L(37)
    "\xb7\x81\x87\xaf\x81\x9d\x87\x8c\x85\x8d\x8a\xb7\x81\x85\x96\x87\x8c\xa7\x96\x81\x85\x90\x81\xa2\x96\x8b\x89\xa5\x90\x90\x96\x8d\x86\x91\x90\x81\x97\xe4",
    // "CFReadStreamClose" / M(Xor4) / S(154) / L(17)
    "\x97\x92\x86\xb1\xb5\xb0\x87\xa0\xa6\xb1\xb5\xb9\x97\xb8\xbb\xa7\xb1\xd4",
    // "CFDataAppendBytes" / M(Xor4) / S(113) / L(17)
    "\xb1\xb4\xb6\x93\x86\x93\xb3\x82\x82\x97\x9c\x96\xb0\x8b\x86\x97\x81\xf2",
    // "EVP_DigestUpdate" / M(Xor1) / S(254) / L(16)
    "\xbb\xa8\xae\xa1\xba\x97\x99\x9b\x8d\x8a\xab\x8e\x9a\x9f\x8a\x9b\xfe",
    // "exit" / M(Xor4) / S(92) / L(4)
    "\xa5\xb8\xa9\xb4\xc0\x58\xaa\x80\x44\xf4\x5e\xf2\x19\x33\x2e\xf7",
    // "CFDictionaryAddValue" / M(Rot) / S(91) / L(20)
    "\x9e\xa1\x9f\xc4\xbe\xcf\xc4\xca\xc9\xbc\xcd\xd4\x9c\xbf\xbf\xb1\xbc\xc7\xd0\xc0\x5b",
    // "_MASReceipt/receipt" / M(Rot) / S(23) / L(19)
    "\x76\x64\x58\x6a\x69\x7c\x7a\x7c\x80\x87\x8b\x46\x89\x7c\x7a\x7c\x80\x87\x8b\x17",
    // "" / M(None) / S(0) / L(0)
    "\x4c\x49\x1b\x9d\x6c\xca\x98\xb4\xd8\x4f\xb1\x20\xd9\xcb\xae\xe4\x19\x1e\xee\xdf\x3a\x55\xa8\xcf\x50\xc4\xb8\x01\x90\x5e\x74\x61",
    // "SecItemCopyMatching" / M(Xor4) / S(134) / L(19)
    "\x2b\x1d\x1b\x31\x0c\x1d\x15\x3b\x17\x08\x01\x35\x19\x0c\x1b\x10\x11\x16\x1f\x78",
    // "" / M(None) / S(0) / L(0)
    "\xed\x8b\xec\x06\x25\x8d\x55\x2f\xe5\x66\xb6\xc9\xc6\xb1\x48\x3b\xb1\x8e\x36\x39\xa7\x1b\x89\xea\x5b\x8f\xb1\x66\xa4\x0b\x5e\xa9",
    // "" / M(None) / S(0) / L(0)
    "\x69\x4b\x6a\x0f\x05\xfd\x9b\xde\x6d\x5f\xa8\x00\xae\x8c\x46\x66\x68\x28\x4f\x2a\xb9\x68\x03\x44\x21\xa1\x9b\x15\x88\x58\x93\x07",
    // "SecCertificateCopyData" / M(Xor3) / S(85) / L(22)
    "\x3f\x09\x0f\x2f\x09\x1e\x18\x05\x0a\x05\x0f\x0d\x18\x09\x2f\x03\x1c\x15\x28\x0d\x18\x0d\x6c",
    // "CFDateFormatterCreate" / M(Rot) / S(12) / L(21)
    "\x4f\x52\x50\x6d\x80\x71\x52\x7b\x7e\x79\x6d\x80\x80\x71\x7e\x4f\x7e\x71\x6d\x80\x71\x0c",
    // "" / M(None) / S(0) / L(0)
    "\xf9\x56\x21\xc6\x03\xbc\xf5\x4a\x26\x0d\xea\x7d\x62\x20\xe6\x17\x6e\x10\xca\x8e\x83\x05\x15\x61\x52\x13\xee\x3e\xf9\xdf\xe8\x22",
    // "" / M(None) / S(0) / L(0)
    "\x39\x9b\x15\x30\x29\x25\x7f\x51\xba\x3f\x5f\x2a\xe5\xfe\x2e\xbf\x4e\x88\x27\x49\x5f\xb4\x1e\xd6\x1d\x86\xb0\xd2\x92\xcf\xcb\xd5",
    // "CFURLCreateCopyAppendingPathComponent" / M(Rot) / S(28) / L(37)
    "\x5f\x62\x71\x6e\x68\x5f\x8e\x81\x7d\x90\x81\x5f\x8b\x8c\x95\x5d\x8c\x8c\x81\x8a\x80\x85\x8a\x83\x6c\x7d\x90\x84\x5f\x8b\x89\x8c\x8b\x8a\x81\x8a\x90\x1c",
    // "NSApplicationMain" / M(Xor3) / S(77) / L(17)
    "\x11\x0c\x1e\x2f\x2f\x33\x36\x3c\x3e\x2b\x36\x30\x31\x12\x3e\x36\x31\x5f",
    // "d2i_X509_bio" / M(Xor4) / S(227) / L(12)
    "\x54\x02\x59\x6f\x68\x05\x00\x09\x6f\x52\x59\x5f\x30\x61\x31\x76",
    // "." / M(Xor3) / S(68) / L(1)
    "\x7a\x54\x3a\xf1\x8c\x9b\x00\x25\x61\xdd\xd3\x48\x3b\x86\x6d\xf3",
    // "SHA1_Init" / M(Xor1) / S(235) / L(9)
    "\xb8\xa3\xaa\xda\xb4\xa2\x85\x82\x9f\xeb\xa9\xb8\x0a\x8b\x89\x33",
    // "CFDateFormatterCreate" / M(Xor2) / S(51) / L(21)
    "\x66\x63\x61\x44\x51\x40\x63\x4a\x57\x48\x44\x51\x51\x40\x57\x66\x57\x40\x44\x51\x40\x25",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(147) / L(57)
    "\xc9\xb5\x9f\x95\x92\x83\x8b\xc9\xaa\x8f\x84\x94\x87\x94\x9f\xc9\xad\x83\x9f\x85\x8e\x87\x8f\x88\x95\xc9\xb5\x9f\x95\x92\x83\x8b\xb4\x89\x89\x92\xa5\x83\x94\x92\x8f\x80\x8f\x85\x87\x92\x83\x95\xc8\x8d\x83\x9f\x85\x8e\x87\x8f\x88\xe6\x42\x67\xee\x32\x42\x0e\xe3\x69",
    // "" / M(None) / S(0) / L(0)
    "\x53\xaa\x1d\x37\x3b\xe8\xe9\xae\xc1\x42\x67\x3a\xa6\x61\x43\x7c\xf5\x68\x8e\x26\x4c\x19\x57\x64\x47\x6b\x12\xf2\xea\x96\x67\x0c",
    // "1.0.1" / M(Rot) / S(104) / L(5)
    "\x99\x96\x98\x96\x99\x68\x4d\x7e\xe0\x81\x78\x83\x3e\xf4\x90\x52",
    // "" / M(None) / S(0) / L(0)
    "\x7e\x1d\xc2\xaa\x57\xcc\x7c\xd2\x92\xbe\xba\x38\x67\x05\x7e\xb9\x3e\x44\xc0\xa0\xe5\x34\x6d\x47\x2c\x00\x75\x90\x90\x1c\x31\xee",
    // "" / M(None) / S(0) / L(0)
    "\xaf\xa9\x7f\x6d\xfa\x3d\xfd\x3c\x2a\x49\x66\xab\x34\x23\xf6\x00\x3f\x12\x7d\x59\x06\x4b\xda\x8f\x6e\x19\x2a\xe9\xd2\x3f\xd5\x56",
    // "CFRelease" / M(Xor2) / S(254) / L(9)
    "\xad\xa8\xbc\x8b\x82\x8b\x8f\x9d\x8b\xee\x4b\x1a\xca\xf0\x3c\x79",
    // "%02X:" / M(Rot) / S(129) / L(5)
    "\xa6\xb1\xb3\xd9\xbb\x81\x80\x6f\x33\x7a\x1c\x28\x2e\xac\x53\x04",
    // "" / M(None) / S(0) / L(0)
    "\x94\x70\xd1\xbb\xd1\x5b\xc2\x3e\x05\xad\x23\x8b\x2e\x21\x6c\x9c\x92\x5b\x65\xa7\x49\xf2\x19\x59\x14\x0f\x9c\x3e\x6c\xa1\x79\xeb",
    // "CFDataGetLength" / M(Rot) / S(209) / L(15)
    "\x14\x17\x15\x32\x45\x32\x18\x36\x45\x1d\x36\x3f\x38\x45\x39\xd1",
    // "" / M(None) / S(0) / L(0)
    "\x43\xb8\x88\xa8\xf5\xd5\x93\xa2\x80\x21\xf3\x5e\x02\xe8\x76\x14\x04\x1b\x4d\x94\xd2\x33\xdc\xa8\x2c\x19\x33\x28\x65\xec\xaa\x63",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(108) / L(43)
    "\xb3\xb6\xa5\xa2\xbc\xb3\x82\x95\x91\x84\x95\xa7\x99\x84\x98\xb6\x99\x9c\x95\xa3\x89\x83\x84\x95\x9d\xa0\x91\x84\x98\xa2\x95\x9c\x91\x84\x99\x86\x95\xa4\x9f\xb2\x91\x83\x95\xf0\x1c\x5f\x89\xe2\x7b\x7d\x91\x96",
    // "longjmp" / M(Xor1) / S(217) / L(7)
    "\xb5\xb6\xb7\xbe\xb3\xb4\xa9\xd9\x30\xd0\x80\x87\x40\x64\x37\xe4",
    // "strlen" / M(Xor1) / S(193) / L(6)
    "\xb2\xb5\xb3\xad\xa4\xaf\xc1\x18\x78\x3b\x40\x0e\xac\x21\x68\xde",
    // "CFArrayCreateMutable" / M(Xor1) / S(96) / L(20)
    "\x23\x26\x21\x12\x12\x01\x19\x23\x12\x05\x01\x14\x05\x2d\x15\x14\x01\x02\x0c\x05\x60",
    // "kSecMatchLimit" / M(Rot) / S(211) / L(14)
    "\x3e\x26\x38\x36\x20\x34\x47\x36\x3b\x1f\x3c\x40\x3c\x47\xd3\x30",
    // "EVP_get_digestbyname" / M(Rot) / S(244) / L(20)
    "\x39\x4a\x44\x53\x5b\x59\x68\x53\x58\x5d\x5b\x59\x67\x68\x56\x6d\x62\x55\x61\x59\xf4",
    // "alloc" / M(Xor2) / S(196) / L(5)
    "\xb5\xb8\xb8\xbb\xb7\xd4\xc4\x58\xd8\xad\x9e\x7d\x8b\xb5\xc5\x93",
    // "" / M(None) / S(0) / L(0)
    "\x2d\x01\x97\xcf\x1e\x83\x26\x7d\x56\x4a\x59\xb4\x1f\xe5\x7d\x6c\xe2\x82\x0b\x43\x3b\x8d\x41\xe0\x8a\x86\x10\x26\xb6\x10\x7b\x02",
    // "" / M(None) / S(0) / L(0)
    "\xca\xa9\x05\x4d\xc8\x90\x97\x98\x39\xca\x89\x8e\xf7\x4e\x66\x4c\x8e\xac\x18\x3f\x35\x9a\xe8\x2b\x37\xee\xc9\xd0\xbb\x96\xe6\xbe",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(41) / L(32)
    "\x50\x50\x50\x50\x0e\x04\x0e\x64\x64\x0e\x04\x0e\x4d\x4d\x0e\x7d\x0e\x61\x61\x0e\x13\x0e\x44\x44\x0e\x13\x0e\x5a\x5a\x0e\x73\x0e\x29",
    // "" / M(None) / S(0) / L(0)
    "\x10\x8e\x2b\x91\xed\x2e\x05\x95\xf4\x5e\x2b\xfc\x57\xa7\xf7\x5f\x4f\x22\x5d\xe6\x54\xe4\x1c\x0c\x98\x77\x22\x37\xa2\x69\x92\xa3",
    // "" / M(None) / S(0) / L(0)
    "\xd6\x2b\x63\xfb\xf7\xbf\x55\x2f\x5d\xf6\xe2\x4f\x45\x03\x0e\x2b\x55\x52\xae\x83\xf3\x7d\x2c\x6d\xb7\x00\x2e\xf2\x36\x46\x40\xc4",
    // "" / M(None) / S(0) / L(0)
    "\x00\x35\x1a\x07\x62\xf3\x50\x24\xcc\x0b\x37\xd1\xf1\x9f\xe0\x2b\xbf\x21\x09\xb0\x32\x4c\x62\x11\x2a\x2d\xe1\xf0\x5d\x61\xde\x39",
    // "" / M(None) / S(0) / L(0)
    "\x29\xd7\x18\x73\x12\x6f\x4a\x2a\x92\x8c\x7a\x43\x4a\xdf\x0a\xa5\xd6\x00\x11\x46\xe9\xdf\xe6\xc7\x0b\x42\xee\xee\xe1\xe1\xd9\xa1",
    // "" / M(None) / S(0) / L(0)
    "\x78\xaa\x57\xad\x54\x00\x20\x1a\x4b\x08\x9f\xec\x62\x83\x2b\x63\x21\x9e\x01\x6e\x80\xfd\x5f\x87\x5e\x6d\x1c\x64\x1a\x4a\x09\x78",
    // "EVP_DigestInit" / M(Rot) / S(107) / L(14)
    "\xb0\xc1\xbb\xca\xaf\xd4\xd2\xd0\xde\xdf\xb4\xd9\xd4\xdf\x6b\x63",
    // "X509_free" / M(Xor4) / S(186) / L(9)
    "\xf8\x95\x90\x99\xff\xc6\xd2\xc5\xc5\xa0\xbf\xf7\x62\xed\x41\x29",
    // "exit" / M(Rot) / S(145) / L(4)
    "\xf6\x09\xfa\x05\x91\x56\x3b\xd3\x1a\xd1\xcc\x22\x33\xa9\x57\x8e",
    // "CFBundleGetMainBundle" / M(Xor4) / S(131) / L(21)
    "\x01\x04\x00\x37\x2c\x26\x2e\x27\x05\x27\x36\x0f\x23\x2b\x2c\x00\x37\x2c\x26\x2e\x27\x42",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[573] = {
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) X509_STORE_new),
    ((void *) BIO_new),
    ((void *) PKCS7_verify),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) X509_STORE_free),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) strlen),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) OBJ_txt2obj),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) X509_STORE_new),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) BIO_free),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_VKUQGGUEEZTY __unused;
static int ReceiptValidation_JHTWHPZONQGS __unused;
static int ReceiptValidation_QYYQNPQMHGJD __unused;
static int ReceiptValidation_WDSTGBSQCODQ __unused;
static int ReceiptValidation_ETRNIATICNHD __unused;
static int ReceiptValidation_JRLKTRGSFFSQ __unused;
static int ReceiptValidation_LGWZHFZIWLIK __unused;
static int ReceiptValidation_FZBXNRWDYMBQ __unused;


#define ReceiptValidation_ASN1_get_object_01060032 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction004, 50, 240, 16))
#define ReceiptValidation_ASN1_OBJECT_free_01EC0203 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction008, 515, 141, 17))
#define ReceiptValidation_BIO_free_0110018D ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction008, 397, 219, 16))
#define ReceiptValidation_BIO_free_01EC0156 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction00A, 342, 149, 16))
#define ReceiptValidation_BIO_free_01EC01CC ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction008, 460, 61, 16))
#define ReceiptValidation_BIO_new_01060043 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction007, 67, 6, 16))
#define ReceiptValidation_BIO_new_010601A6 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction004, 422, 230, 16))
#define ReceiptValidation_BIO_new_01100043 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction007, 67, 6, 16))
#define ReceiptValidation_BIO_s_mem_01060091 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction008, 145, 96, 16))
#define ReceiptValidation_BIO_s_mem_01100074 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction003, 116, 106, 16))
#define ReceiptValidation_BIO_write_01060050 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction006, 80, 174, 16))
#define ReceiptValidation_CC_SHA1_Final_002A00D7 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction006, 215, 50, 16))
#define ReceiptValidation_CFArrayCreateMutable_004000D5 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction004, 213, 147, 21))
#define ReceiptValidation_CFArrayCreateMutable_0040022D ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction006, 557, 96, 21))
#define ReceiptValidation_CFArrayCreateMutable_01DC0081 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction004, 129, 210, 21))
#define ReceiptValidation_CFArrayCreateMutable_01FD00D5 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction004, 213, 147, 21))
#define ReceiptValidation_CFBundleGetMainBundle_01DC013C ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00A, 316, 169, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_01FD00AC ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction008, 172, 36, 33))
#define ReceiptValidation_CFDataCreate_0040018E ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction008, 398, 252, 16))
#define ReceiptValidation_CFDataCreateMutable_0040014C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00B, 332, 103, 20))
#define ReceiptValidation_CFDataCreateMutable_01DC00BA ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00A, 186, 240, 20))
#define ReceiptValidation_CFDataCreateMutable_01FD00BA ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00A, 186, 240, 20))
#define ReceiptValidation_CFDataCreateMutable_01FD014C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00B, 332, 103, 20))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_01FD0036 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction008, 54, 55, 36))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_01FD017E ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction007, 382, 52, 36))
#define ReceiptValidation_CFDateFormatterSetFormat_00400028 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction009, 40, 237, 33))
#define ReceiptValidation_CFDateFormatterSetFormat_00400151 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, 337, 215, 33))
#define ReceiptValidation_CFDictionaryAddValue_004001AC ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction009, 428, 179, 21))
#define ReceiptValidation_CFDictionaryAddValue_00400204 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction009, 516, 4, 21))
#define ReceiptValidation_CFDictionaryAddValue_01DC0204 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction009, 516, 4, 21))
#define ReceiptValidation_CFDictionaryAddValue_01FD0204 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction009, 516, 4, 21))
#define ReceiptValidation_CFDictionaryGetValue_0040000D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction005, 13, 242, 21))
#define ReceiptValidation_CFDictionaryGetValue_01DC0157 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction009, 343, 254, 21))
#define ReceiptValidation_CFDictionaryGetValue_01FD0184 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00A, 388, 9, 21))
#define ReceiptValidation_CFDictionarySetValue_00400098 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction006, 152, 205, 21))
#define ReceiptValidation_CFDictionarySetValue_01FD0055 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00B, 85, 157, 21))
#define ReceiptValidation_CFReadStreamCreateWithFile_01DC0016 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction006, 22, 30, 35))
#define ReceiptValidation_CFReadStreamCreateWithFile_01DC0065 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction003, 101, 206, 35))
#define ReceiptValidation_CFRelease_004001F1 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00A, 497, 33, 16))
#define ReceiptValidation_CFRelease_00400225 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction007, 549, 254, 16))
#define ReceiptValidation_CFRelease_01DC00E9 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction003, 233, 185, 16))
#define ReceiptValidation_CFRelease_01DC01F1 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00A, 497, 33, 16))
#define ReceiptValidation_CFRelease_01DC0225 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction007, 549, 254, 16))
#define ReceiptValidation_CFRelease_01FD00E9 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction003, 233, 185, 16))
#define ReceiptValidation_CFRelease_01FD0225 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction007, 549, 254, 16))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_01DC00DA ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction009, 218, 183, 36))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_01DC01AB ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction006, 427, 62, 36))
#define ReceiptValidation_d2i_PKCS7_bio_01100095 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction005, 149, 78, 16))
#define ReceiptValidation_d2i_PKCS7_bio_01EC0095 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction005, 149, 78, 16))
#define ReceiptValidation_d2i_PKCS7_bio_01EC0208 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction004, 520, 226, 16))
#define ReceiptValidation_d2i_X509_bio_01EC021C ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction00C, 540, 227, 16))
#define ReceiptValidation_EVP_DigestFinal_0106013F ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction005, 319, 43, 16))
#define ReceiptValidation_EVP_DigestInit_01100169 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction005, 361, 11, 16))
#define ReceiptValidation_EVP_DigestUpdate_01EC0146 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction00C, 326, 57, 17))
#define ReceiptValidation_EVP_get_digestbyname_010600E6 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction006, 230, 194, 21))
#define ReceiptValidation_EVP_MD_CTX_init_01060059 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction007, 89, 108, 16))
#define ReceiptValidation_exit_002A016C ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction00A, 364, 201, 16))
#define ReceiptValidation_exit_002A020F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction00C, 527, 92, 16))
#define ReceiptValidation_exit_00E2016C ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction00A, 364, 201, 16))
#define ReceiptValidation_exit_00E2020F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction00C, 527, 92, 16))
#define ReceiptValidation_exit_00E2023B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction004, 571, 145, 16))
#define ReceiptValidation_exit_018F020F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 399, 128, 33, ReceiptValidation_ObfuscationFunction00C, 527, 92, 16))
#define ReceiptValidation_exit_018F023B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 399, 128, 33, ReceiptValidation_ObfuscationFunction004, 571, 145, 16))
#define ReceiptValidation_VKUQGGUEEZTY_004000CE ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_VKUQGGUEEZTY, 228, 16))
#define ReceiptValidation_VKUQGGUEEZTY_00400184 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_VKUQGGUEEZTY, 9, 21))
#define ReceiptValidation_VKUQGGUEEZTY_0040019D ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_VKUQGGUEEZTY, 170, 16))
#define ReceiptValidation_VKUQGGUEEZTY_0040020D ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_VKUQGGUEEZTY, 113, 18))
#define ReceiptValidation_VKUQGGUEEZTY_011E0122 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 286, 131, 55, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_VKUQGGUEEZTY, 0, 38))
#define ReceiptValidation_VKUQGGUEEZTY_01DC0228 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_VKUQGGUEEZTY, 209, 16))
#define ReceiptValidation_VKUQGGUEEZTY_01FD00B7 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_VKUQGGUEEZTY, 135, 38))
#define ReceiptValidation_JHTWHPZONQGS_0040021F ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_JHTWHPZONQGS, 51, 22))
#define ReceiptValidation_JHTWHPZONQGS_00FE0117 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_JHTWHPZONQGS, 83, 34))
#define ReceiptValidation_JHTWHPZONQGS_01E60009 ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 486, 116, 51, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_JHTWHPZONQGS, 46, 18))
#define ReceiptValidation_JHTWHPZONQGS_01F5016E ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 501, 159, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_JHTWHPZONQGS, 88, 37))
#define ReceiptValidation_JHTWHPZONQGS_01FD00C0 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_JHTWHPZONQGS, 10, 18))
#define ReceiptValidation_JHTWHPZONQGS_01FD01CA ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_JHTWHPZONQGS, 184, 16))
#define ReceiptValidation_JHTWHPZONQGS_01FD0228 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_JHTWHPZONQGS, 209, 16))
#define ReceiptValidation_QYYQNPQMHGJD_002A0094 ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_QYYQNPQMHGJD, 198, 16))
#define ReceiptValidation_QYYQNPQMHGJD_0040014D ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_QYYQNPQMHGJD, 86, 16))
#define ReceiptValidation_QYYQNPQMHGJD_004001B1 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_QYYQNPQMHGJD, 83, 17))
#define ReceiptValidation_QYYQNPQMHGJD_0187010B ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 391, 42, 49, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_QYYQNPQMHGJD, 110, 16))
#define ReceiptValidation_QYYQNPQMHGJD_01FD0018 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_QYYQNPQMHGJD, 131, 19))
#define ReceiptValidation_QYYQNPQMHGJD_01FD0085 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_QYYQNPQMHGJD, 29, 16))
#define ReceiptValidation_WDSTGBSQCODQ_002A01B7 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_WDSTGBSQCODQ, 17, 16))
#define ReceiptValidation_WDSTGBSQCODQ_004001EE ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_WDSTGBSQCODQ, 18, 17))
#define ReceiptValidation_WDSTGBSQCODQ_016D01DA ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 365, 207, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_WDSTGBSQCODQ, 76, 16))
#define ReceiptValidation_WDSTGBSQCODQ_01DC0049 ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_WDSTGBSQCODQ, 70, 18))
#define ReceiptValidation_WDSTGBSQCODQ_01DC01EA ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_WDSTGBSQCODQ, 200, 22))
#define ReceiptValidation_WDSTGBSQCODQ_01DC01FE ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_WDSTGBSQCODQ, 35, 34))
#define ReceiptValidation_WDSTGBSQCODQ_01FD0061 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_WDSTGBSQCODQ, 132, 23))
#define ReceiptValidation_WDSTGBSQCODQ_01FD00C3 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_WDSTGBSQCODQ, 111, 16))
#define ReceiptValidation_ETRNIATICNHD_0040022A ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_ETRNIATICNHD, 108, 52))
#define ReceiptValidation_ETRNIATICNHD_00DC01E5 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ETRNIATICNHD, 84, 23))
#define ReceiptValidation_ETRNIATICNHD_01DC011A ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_ETRNIATICNHD, 63, 17))
#define ReceiptValidation_ETRNIATICNHD_01FD015A ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_ETRNIATICNHD, 203, 16))
#define ReceiptValidation_JRLKTRGSFFSQ_00400018 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_JRLKTRGSFFSQ, 131, 19))
#define ReceiptValidation_JRLKTRGSFFSQ_00400165 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_JRLKTRGSFFSQ, 49, 16))
#define ReceiptValidation_JRLKTRGSFFSQ_01870126 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 391, 42, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_JRLKTRGSFFSQ, 28, 38))
#define ReceiptValidation_JRLKTRGSFFSQ_01DC016A ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_JRLKTRGSFFSQ, 63, 17))
#define ReceiptValidation_JRLKTRGSFFSQ_01FD0134 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_JRLKTRGSFFSQ, 162, 16))
#define ReceiptValidation_LGWZHFZIWLIK_00FE0183 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_LGWZHFZIWLIK, 44, 16))
#define ReceiptValidation_LGWZHFZIWLIK_018F01BB ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 399, 128, 33, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_LGWZHFZIWLIK, 5, 16))
#define ReceiptValidation_LGWZHFZIWLIK_01DC015A ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_LGWZHFZIWLIK, 203, 16))
#define ReceiptValidation_LGWZHFZIWLIK_01F5009E ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 501, 159, 49, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_LGWZHFZIWLIK, 236, 18))
#define ReceiptValidation_LGWZHFZIWLIK_01FD0160 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_LGWZHFZIWLIK, 121, 22))
#define ReceiptValidation_LGWZHFZIWLIK_01FD0199 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_LGWZHFZIWLIK, 185, 16))
#define ReceiptValidation_LGWZHFZIWLIK_01FD01FC ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_LGWZHFZIWLIK, 203, 37))
#define ReceiptValidation_FZBXNRWDYMBQ_00400133 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_FZBXNRWDYMBQ, 254, 48))
#define ReceiptValidation_FZBXNRWDYMBQ_004001EE ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_FZBXNRWDYMBQ, 18, 17))
#define ReceiptValidation_FZBXNRWDYMBQ_0040020D ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_FZBXNRWDYMBQ, 113, 18))
#define ReceiptValidation_FZBXNRWDYMBQ_01DC0195 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_FZBXNRWDYMBQ, 148, 37))
#define ReceiptValidation_FZBXNRWDYMBQ_01DC01CA ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_FZBXNRWDYMBQ, 184, 16))
#define ReceiptValidation_FZBXNRWDYMBQ_01F50086 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 501, 159, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_FZBXNRWDYMBQ, 142, 32))
#define ReceiptValidation_FZBXNRWDYMBQ_01FD000D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_FZBXNRWDYMBQ, 242, 21))
#define ReceiptValidation_FZBXNRWDYMBQ_01FD0192 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_FZBXNRWDYMBQ, 228, 34))
#define ReceiptValidation_IOObjectRelease_01870000 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 391, 42, 49, ReceiptValidation_ObfuscationFunction00B, 0, 238, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_01FD00D8 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00B, 216, 6, 23))
#define ReceiptValidation_kCFTypeArrayCallBacks_01DC0093 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00C, 147, 43, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01DC00ED ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00C, 237, 181, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01FD00ED ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00C, 237, 181, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00400137 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00B, 311, 237, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01DC004A ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction00A, 74, 80, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01FD0154 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction003, 340, 33, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00400185 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction00A, 389, 146, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_004001CF ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 64, 249, 67, ReceiptValidation_ObfuscationFunction008, 463, 24, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_01DC01CF ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 89, 67, ReceiptValidation_ObfuscationFunction008, 463, 24, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_01FD0185 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 509, 171, 67, ReceiptValidation_ObfuscationFunction00A, 389, 146, 32))
#define ReceiptValidation_kSecClass_00DC00C2 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction009, 194, 221, 16))
#define ReceiptValidation_kSecClass_00DC0115 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction00C, 277, 143, 16))
#define ReceiptValidation_kSecClassCertificate_00DC0194 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction006, 404, 170, 21))
#define ReceiptValidation_kSecClassCertificate_00FE0125 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction008, 293, 179, 21))
#define ReceiptValidation_kSecMatchLimit_00DC022E ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction004, 558, 211, 16))
#define ReceiptValidation_kSecMatchLimit_00FE022E ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction004, 558, 211, 16))
#define ReceiptValidation_kSecMatchLimitAll_00DC00B0 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction003, 176, 164, 18))
#define ReceiptValidation_kSecMatchLimitAll_00FE016F ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction00A, 367, 61, 18))
#define ReceiptValidation_kSecMatchSearchList_00FE01A0 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 254, 119, 55, ReceiptValidation_ObfuscationFunction00A, 416, 163, 20))
#define ReceiptValidation_kSecMatchSearchList_011E01A0 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 286, 131, 55, ReceiptValidation_ObfuscationFunction00A, 416, 163, 20))
#define ReceiptValidation_kSecMatchSubjectContains_011E0083 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 286, 131, 55, ReceiptValidation_ObfuscationFunction009, 131, 6, 33))
#define ReceiptValidation_kSecMatchSubjectContains_011E0135 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 286, 131, 55, ReceiptValidation_ObfuscationFunction00C, 309, 70, 33))
#define ReceiptValidation_kSecReturnRef_00DC017F ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction009, 383, 23, 16))
#define ReceiptValidation_kSecReturnRef_00DC019B ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction003, 411, 253, 16))
#define ReceiptValidation_longjmp_002A009B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction00B, 155, 32, 16))
#define ReceiptValidation_longjmp_002A022B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction005, 555, 217, 16))
#define ReceiptValidation_longjmp_00E2009B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction00B, 155, 32, 16))
#define ReceiptValidation_longjmp_00E200E4 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction006, 228, 228, 16))
#define ReceiptValidation_longjmp_00E2022B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 226, 88, 33, ReceiptValidation_ObfuscationFunction005, 555, 217, 16))
#define ReceiptValidation_longjmp_018F009B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 399, 128, 33, ReceiptValidation_ObfuscationFunction00B, 155, 32, 16))
#define ReceiptValidation_longjmp_018F022B ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 399, 128, 33, ReceiptValidation_ObfuscationFunction005, 555, 217, 16))
#define ReceiptValidation_OBJ_txt2obj_010601F2 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction004, 498, 147, 16))
#define ReceiptValidation_objc_getClass_001700D0 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction009, 208, 70, 16))
#define ReceiptValidation_objc_getClass_0017015E ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction003, 350, 9, 16))
#define ReceiptValidation_objc_getClass_004B00C7 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction009, 199, 37, 16))
#define ReceiptValidation_objc_getClass_004B00D0 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction009, 208, 70, 16))
#define ReceiptValidation_objc_getClass_00E300C7 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction009, 199, 37, 16))
#define ReceiptValidation_objc_getClass_00E300D0 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction009, 208, 70, 16))
#define ReceiptValidation_objc_getClass_00E3015E ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction003, 350, 9, 16))
#define ReceiptValidation_objc_msgSend_00170048 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction006, 72, 30, 16))
#define ReceiptValidation_objc_msgSend_00170124 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction00B, 292, 110, 16))
#define ReceiptValidation_objc_msgSend_004B0124 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction00B, 292, 110, 16))
#define ReceiptValidation_objc_msgSend_004B01B5 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction004, 437, 236, 16))
#define ReceiptValidation_objc_msgSend_00E30048 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction006, 72, 30, 16))
#define ReceiptValidation_objc_msgSend_00E301B5 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction004, 437, 236, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_010600AB ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction007, 171, 220, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_011001CB ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction004, 459, 33, 32))
#define ReceiptValidation_PKCS7_free_01060103 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction00C, 259, 71, 16))
#define ReceiptValidation_PKCS7_free_01EC00BB ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction004, 187, 29, 16))
#define ReceiptValidation_PKCS7_free_01EC0103 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction00C, 259, 71, 16))
#define ReceiptValidation_PKCS7_get0_signers_01060068 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction00A, 104, 95, 19))
#define ReceiptValidation_PKCS7_verify_01EC00F6 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction004, 246, 189, 16))
#define ReceiptValidation_SecItemCopyMatching_00DC0015 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction00C, 21, 5, 20))
#define ReceiptValidation_SecItemCopyMatching_00DC0213 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 220, 165, 55, ReceiptValidation_ObfuscationFunction00C, 531, 134, 20))
#define ReceiptValidation_sel_registerName_00170029 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction00B, 41, 218, 17))
#define ReceiptValidation_sel_registerName_00170189 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction00A, 393, 169, 17))
#define ReceiptValidation_sel_registerName_00170190 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 23, 250, 23, ReceiptValidation_ObfuscationFunction007, 400, 82, 17))
#define ReceiptValidation_sel_registerName_004B0029 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction00B, 41, 218, 17))
#define ReceiptValidation_sel_registerName_004B0190 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 75, 87, 23, ReceiptValidation_ObfuscationFunction007, 400, 82, 17))
#define ReceiptValidation_sel_registerName_00E30029 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction00B, 41, 218, 17))
#define ReceiptValidation_sel_registerName_00E30190 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 227, 222, 23, ReceiptValidation_ObfuscationFunction007, 400, 82, 17))
#define ReceiptValidation_setjmp_002A0177 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 42, 24, 33, ReceiptValidation_ObfuscationFunction00A, 375, 108, 16))
#define ReceiptValidation_SHA1_01100170 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction007, 368, 41, 16))
#define ReceiptValidation_SHA1_Final_01EC006C ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction007, 108, 108, 16))
#define ReceiptValidation_SHA1_Init_01EC021E ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction005, 542, 235, 16))
#define ReceiptValidation_SHA1_Update_010600B9 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction00B, 185, 125, 16))
#define ReceiptValidation_sk_free_01EC005E ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction009, 94, 19, 16))
#define ReceiptValidation_sk_num_01EC00F2 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction007, 242, 138, 16))
#define ReceiptValidation_sk_value_011000FA ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction00A, 250, 237, 16))
#define ReceiptValidation_X509_digest_0110012B ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction00A, 299, 115, 16))
#define ReceiptValidation_X509_free_0110001A ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction004, 26, 198, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_011001B3 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction00B, 435, 12, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_01060034 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 262, 25, 16, ReceiptValidation_ObfuscationFunction00A, 52, 202, 34))
#define ReceiptValidation_X509_STORE_add_cert_01100163 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 272, 167, 16, ReceiptValidation_ObfuscationFunction00C, 355, 162, 20))
#define ReceiptValidation_X509_STORE_free_01EC0120 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction003, 288, 28, 16))
#define ReceiptValidation_X509_STORE_new_01EC0179 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 492, 49, 16, ReceiptValidation_ObfuscationFunction008, 377, 3, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[358])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[115])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[2])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[347])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[358])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[358])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[314])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[573], ReceiptValidation_tmp2[573];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[453])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[336])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#if DEBUG
inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_01DC013C();
    if (!ReceiptValidation_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_01FD00AC((CFBundleRef) ReceiptValidation_bundle);
    }
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
    // Global variables computation
    // Set to 183
    ReceiptValidation_VKUQGGUEEZTY = 183;
    // Set to 192
    ReceiptValidation_JHTWHPZONQGS = 192;
    // Set to 433
    ReceiptValidation_QYYQNPQMHGJD = 433;
    // Set to 73
    ReceiptValidation_WDSTGBSQCODQ = 73;
    // Set to 554
    ReceiptValidation_ETRNIATICNHD = 554;
    // Set to 362
    ReceiptValidation_JRLKTRGSFFSQ = 362;
    // Set to 352
    ReceiptValidation_LGWZHFZIWLIK = 352;
    // Set to 307
    ReceiptValidation_FZBXNRWDYMBQ = 307;
}
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_01DC013C(); \
    if (!ReceiptValidation_bundle) { \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_01FD00AC((CFBundleRef) ReceiptValidation_bundle); \
    } \
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
    ReceiptValidation_VKUQGGUEEZTY = 183; \
    ReceiptValidation_JHTWHPZONQGS = 192; \
    ReceiptValidation_QYYQNPQMHGJD = 433; \
    ReceiptValidation_WDSTGBSQCODQ = 73; \
    ReceiptValidation_ETRNIATICNHD = 554; \
    ReceiptValidation_JRLKTRGSFFSQ = 362; \
    ReceiptValidation_LGWZHFZIWLIK = 352; \
    ReceiptValidation_FZBXNRWDYMBQ = 307; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt030(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    volatile int ReceiptValidation_code = 160; ReceiptValidation_code -= 103; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_LGWZHFZIWLIK_01FD0160((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[310]), 104, 21);
    ReceiptValidation_url2 = ReceiptValidation_VKUQGGUEEZTY_01FD00B7(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url1);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[297]), 59, 16);
    ReceiptValidation_url1 = ReceiptValidation_VKUQGGUEEZTY_01FD00B7(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url2);
    ReceiptValidation_url2 = ReceiptValidation_url1;
    ReceiptValidation_url1 = NULL;
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_01DC0065(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_QYYQNPQMHGJD_004001B1(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_0040014C(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_JRLKTRGSFFSQ_01DC016A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_JHTWHPZONQGS_01FD00C0(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_WDSTGBSQCODQ_01DC0049(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 192 to 366
    ReceiptValidation_JHTWHPZONQGS -= 70; ReceiptValidation_JHTWHPZONQGS *= 3; 
    // Set to 267
    ReceiptValidation_QYYQNPQMHGJD = 267;
    // From 73 to 474
    ReceiptValidation_WDSTGBSQCODQ -= 14; ReceiptValidation_WDSTGBSQCODQ *= 8; ReceiptValidation_WDSTGBSQCODQ += 2; 
    // From 362 to 294
    ReceiptValidation_JRLKTRGSFFSQ += 226; ReceiptValidation_JRLKTRGSFFSQ /= 2; 
    // From 352 to 158
    ReceiptValidation_LGWZHFZIWLIK += 280; ReceiptValidation_LGWZHFZIWLIK /= 4; 
    // From 307 to 134
    ReceiptValidation_FZBXNRWDYMBQ += 229; ReceiptValidation_FZBXNRWDYMBQ /= 4; 
ReceiptValidation_LoadReceipt030_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt030(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    volatile int ReceiptValidation_code = 160; ReceiptValidation_code -= 103; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_LGWZHFZIWLIK_01FD0160((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[310]), 104, 21); \
    ReceiptValidation_url2 = ReceiptValidation_VKUQGGUEEZTY_01FD00B7(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url1); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[297]), 59, 16); \
    ReceiptValidation_url1 = ReceiptValidation_VKUQGGUEEZTY_01FD00B7(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url2); \
    ReceiptValidation_url2 = ReceiptValidation_url1; \
    ReceiptValidation_url1 = NULL; \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_01DC0065(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_QYYQNPQMHGJD_004001B1(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_0040014C(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_JRLKTRGSFFSQ_01DC016A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_JHTWHPZONQGS_01FD00C0(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_WDSTGBSQCODQ_01DC0049(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_JHTWHPZONQGS -= 70; ReceiptValidation_JHTWHPZONQGS *= 3;  \
    ReceiptValidation_QYYQNPQMHGJD = 267; \
    ReceiptValidation_WDSTGBSQCODQ -= 14; ReceiptValidation_WDSTGBSQCODQ *= 8; ReceiptValidation_WDSTGBSQCODQ += 2;  \
    ReceiptValidation_JRLKTRGSFFSQ += 226; ReceiptValidation_JRLKTRGSFFSQ /= 2;  \
    ReceiptValidation_LGWZHFZIWLIK += 280; ReceiptValidation_LGWZHFZIWLIK /= 4;  \
    ReceiptValidation_FZBXNRWDYMBQ += 229; ReceiptValidation_FZBXNRWDYMBQ /= 4;  \
ReceiptValidation_LoadReceipt030_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt030(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 164; ReceiptValidation_code -= 107; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[167]), 131, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_01DC00DA(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[303])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[264])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_FZBXNRWDYMBQ_00400133(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[198])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[264])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_01DC0016(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_QYYQNPQMHGJD_004001B1(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_01FD014C(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_JRLKTRGSFFSQ_01DC016A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_JHTWHPZONQGS_01FD00C0(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_WDSTGBSQCODQ_01DC0049(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 192 to 366
    ReceiptValidation_JHTWHPZONQGS -= 70; ReceiptValidation_JHTWHPZONQGS *= 3; 
    // Set to 267
    ReceiptValidation_QYYQNPQMHGJD = 267;
    // From 73 to 474
    ReceiptValidation_WDSTGBSQCODQ -= 14; ReceiptValidation_WDSTGBSQCODQ *= 8; ReceiptValidation_WDSTGBSQCODQ += 2; 
    // From 362 to 294
    ReceiptValidation_JRLKTRGSFFSQ += 226; ReceiptValidation_JRLKTRGSFFSQ /= 2; 
    // From 352 to 158
    ReceiptValidation_LGWZHFZIWLIK += 280; ReceiptValidation_LGWZHFZIWLIK /= 4; 
    // From 307 to 134
    ReceiptValidation_FZBXNRWDYMBQ += 229; ReceiptValidation_FZBXNRWDYMBQ /= 4; 
ReceiptValidation_LoadReceipt030_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt030(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 164; ReceiptValidation_code -= 107; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[167]), 131, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_01DC00DA(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code); \
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[303])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[264])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_FZBXNRWDYMBQ_00400133(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[198])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[264])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_01DC0016(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_QYYQNPQMHGJD_004001B1(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_00E2023B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt030_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_01FD014C(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_JRLKTRGSFFSQ_01DC016A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_JHTWHPZONQGS_01FD00C0(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_WDSTGBSQCODQ_01DC0049(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_JHTWHPZONQGS -= 70; ReceiptValidation_JHTWHPZONQGS *= 3;  \
    ReceiptValidation_QYYQNPQMHGJD = 267; \
    ReceiptValidation_WDSTGBSQCODQ -= 14; ReceiptValidation_WDSTGBSQCODQ *= 8; ReceiptValidation_WDSTGBSQCODQ += 2;  \
    ReceiptValidation_JRLKTRGSFFSQ += 226; ReceiptValidation_JRLKTRGSFFSQ /= 2;  \
    ReceiptValidation_LGWZHFZIWLIK += 280; ReceiptValidation_LGWZHFZIWLIK /= 4;  \
    ReceiptValidation_FZBXNRWDYMBQ += 229; ReceiptValidation_FZBXNRWDYMBQ /= 4;  \
ReceiptValidation_LoadReceipt030_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#if DEBUG
inline static void ReceiptValidation_GetGUID04C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[178]), 111, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_QYYQNPQMHGJD_0187010B(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[202]), ReceiptValidation_str1_, 232, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_LGWZHFZIWLIK_01F5009E(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_JHTWHPZONQGS_01F5016E(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_WDSTGBSQCODQ_016D01DA(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_JRLKTRGSFFSQ_01870126(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_FZBXNRWDYMBQ_01F50086(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_service);
    }
    // Global variables computation
    // From 183 to 290
    ReceiptValidation_VKUQGGUEEZTY -= 87; ReceiptValidation_VKUQGGUEEZTY *= 3; ReceiptValidation_VKUQGGUEEZTY += 2; 
    // From 366 to 279
    ReceiptValidation_JHTWHPZONQGS += 192; ReceiptValidation_JHTWHPZONQGS /= 2; 
    // From 267 to 133
    ReceiptValidation_QYYQNPQMHGJD += 265; ReceiptValidation_QYYQNPQMHGJD /= 4; 
    // From 474 to 97
    ReceiptValidation_WDSTGBSQCODQ += 108; ReceiptValidation_WDSTGBSQCODQ /= 6; 
    // From 554 to 485
    ReceiptValidation_ETRNIATICNHD += 416; ReceiptValidation_ETRNIATICNHD /= 2; 
    // From 294 to 24
    ReceiptValidation_JRLKTRGSFFSQ += 42; ReceiptValidation_JRLKTRGSFFSQ /= 14; 
    // From 158 to 387
    ReceiptValidation_LGWZHFZIWLIK -= 62; ReceiptValidation_LGWZHFZIWLIK *= 4; ReceiptValidation_LGWZHFZIWLIK += 3; 
    // From 134 to 402
    ReceiptValidation_FZBXNRWDYMBQ -= 54; ReceiptValidation_FZBXNRWDYMBQ *= 5; ReceiptValidation_FZBXNRWDYMBQ += 2; 
ReceiptValidation_GetGUID04C_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID04C(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[178]), 111, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_QYYQNPQMHGJD_0187010B(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[202]), ReceiptValidation_str1_, 232, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_LGWZHFZIWLIK_01F5009E(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_JHTWHPZONQGS_01F5016E(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_WDSTGBSQCODQ_016D01DA(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_JRLKTRGSFFSQ_01870126(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_FZBXNRWDYMBQ_01F50086(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_01870000(ReceiptValidation_service); \
    } \
    ReceiptValidation_VKUQGGUEEZTY -= 87; ReceiptValidation_VKUQGGUEEZTY *= 3; ReceiptValidation_VKUQGGUEEZTY += 2;  \
    ReceiptValidation_JHTWHPZONQGS += 192; ReceiptValidation_JHTWHPZONQGS /= 2;  \
    ReceiptValidation_QYYQNPQMHGJD += 265; ReceiptValidation_QYYQNPQMHGJD /= 4;  \
    ReceiptValidation_WDSTGBSQCODQ += 108; ReceiptValidation_WDSTGBSQCODQ /= 6;  \
    ReceiptValidation_ETRNIATICNHD += 416; ReceiptValidation_ETRNIATICNHD /= 2;  \
    ReceiptValidation_JRLKTRGSFFSQ += 42; ReceiptValidation_JRLKTRGSFFSQ /= 14;  \
    ReceiptValidation_LGWZHFZIWLIK -= 62; ReceiptValidation_LGWZHFZIWLIK *= 4; ReceiptValidation_LGWZHFZIWLIK += 3;  \
    ReceiptValidation_FZBXNRWDYMBQ -= 54; ReceiptValidation_FZBXNRWDYMBQ *= 5; ReceiptValidation_FZBXNRWDYMBQ += 2;  \
ReceiptValidation_GetGUID04C_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 78; ReceiptValidation_code -= 35; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[544]), ReceiptValidation_str1_, 147, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_LGWZHFZIWLIK_00FE0183(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_002A016C(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01FD00ED);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[489]), 189, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00DC00C2;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00FE0125;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_011E01A0;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_011E0135;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00FE022E;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00FE016F;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00DC019B;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_00DC0015(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_002A016C(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_QYYQNPQMHGJD_01FD0085((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_WDSTGBSQCODQ_01FD0061((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_ETRNIATICNHD_00DC01E5(ReceiptValidation_certificate);
    }
    // Global variables computation
    // From 133 to 333
    ReceiptValidation_QYYQNPQMHGJD -= 50; ReceiptValidation_QYYQNPQMHGJD *= 4; ReceiptValidation_QYYQNPQMHGJD += 1; 
    // From 97 to 490
    ReceiptValidation_WDSTGBSQCODQ -= 27; ReceiptValidation_WDSTGBSQCODQ *= 7; 
    // From 387 to 508
    ReceiptValidation_LGWZHFZIWLIK -= 218; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 78; ReceiptValidation_code -= 35; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[544]), ReceiptValidation_str1_, 147, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_LGWZHFZIWLIK_00FE0183(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_002A016C(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01FD00ED); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[489]), 189, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00DC00C2; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00FE0125; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_011E01A0; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_011E0135; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00FE022E; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00FE016F; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00DC019B; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_00DC0015(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_002A016C(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_QYYQNPQMHGJD_01FD0085((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_WDSTGBSQCODQ_01FD0061((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_ETRNIATICNHD_00DC01E5(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_QYYQNPQMHGJD -= 50; ReceiptValidation_QYYQNPQMHGJD *= 4; ReceiptValidation_QYYQNPQMHGJD += 1;  \
    ReceiptValidation_WDSTGBSQCODQ -= 27; ReceiptValidation_WDSTGBSQCODQ *= 7;  \
    ReceiptValidation_LGWZHFZIWLIK -= 218; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_004001F1(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1; 
    volatile CFIndex ReceiptValidation_count3 = 5; ReceiptValidation_count3 -= 2; ReceiptValidation_count3 *= 4; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 133; ReceiptValidation_code -= 76; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[139]), ReceiptValidation_str1_, 77, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_LGWZHFZIWLIK_00FE0183(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_00E2016C(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01DC00ED);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[573];
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[281]), ReceiptValidation_str2_, 163, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_VKUQGGUEEZTY_011E0122(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_00E2016C(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_JHTWHPZONQGS_00FE0117(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_ETRNIATICNHD_00DC01E5((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // From 133 to 333
    ReceiptValidation_QYYQNPQMHGJD -= 50; ReceiptValidation_QYYQNPQMHGJD *= 4; ReceiptValidation_QYYQNPQMHGJD += 1; 
    // From 97 to 490
    ReceiptValidation_WDSTGBSQCODQ -= 27; ReceiptValidation_WDSTGBSQCODQ *= 7; 
    // From 387 to 508
    ReceiptValidation_LGWZHFZIWLIK -= 218; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1;  \
    volatile CFIndex ReceiptValidation_count3 = 5; ReceiptValidation_count3 -= 2; ReceiptValidation_count3 *= 4; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 133; ReceiptValidation_code -= 76; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[139]), ReceiptValidation_str1_, 77, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_LGWZHFZIWLIK_00FE0183(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_00E2016C(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01DC00ED); \
    char ReceiptValidation_str2_[573]; \
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[281]), ReceiptValidation_str2_, 163, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_VKUQGGUEEZTY_011E0122(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_00E2016C(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_JHTWHPZONQGS_00FE0117(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_ETRNIATICNHD_00DC01E5((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_QYYQNPQMHGJD -= 50; ReceiptValidation_QYYQNPQMHGJD *= 4; ReceiptValidation_QYYQNPQMHGJD += 1;  \
    ReceiptValidation_WDSTGBSQCODQ -= 27; ReceiptValidation_WDSTGBSQCODQ *= 7;  \
    ReceiptValidation_LGWZHFZIWLIK -= 218; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[169]), 212, 18);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    volatile int ReceiptValidation_code = 144; ReceiptValidation_code -= 87; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_WDSTGBSQCODQ_01DC01EA((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    if (ReceiptValidation_QYYQNPQMHGJD_0040014D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_002A020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str2);
    }
    // Global variables computation
    // From 279 to 458
    ReceiptValidation_JHTWHPZONQGS -= 127; ReceiptValidation_JHTWHPZONQGS *= 3; ReceiptValidation_JHTWHPZONQGS += 2; 
    // From 402 to 405
    ReceiptValidation_FZBXNRWDYMBQ -= 267; ReceiptValidation_FZBXNRWDYMBQ *= 3; 
    ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[169]), 212, 18); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    volatile int ReceiptValidation_code = 144; ReceiptValidation_code -= 87; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_WDSTGBSQCODQ_01DC01EA((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    if (ReceiptValidation_QYYQNPQMHGJD_0040014D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_002A020F(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str2); \
    } \
    ReceiptValidation_JHTWHPZONQGS -= 127; ReceiptValidation_JHTWHPZONQGS *= 3; ReceiptValidation_JHTWHPZONQGS += 2;  \
    ReceiptValidation_FZBXNRWDYMBQ -= 267; ReceiptValidation_FZBXNRWDYMBQ *= 3;  \
    ReceiptValidation_CFRelease_01DC0225(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#if DEBUG
inline static void ReceiptValidation_CheckBundleVersion05E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[29]), 36, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[62]), 10, 35);
    volatile int ReceiptValidation_code = 37; ReceiptValidation_code -= 9; ReceiptValidation_code *= 6; ReceiptValidation_code += 5; 
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01DC0195((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_JHTWHPZONQGS_01FD01CA(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 290 to 552
    ReceiptValidation_VKUQGGUEEZTY -= 106; ReceiptValidation_VKUQGGUEEZTY *= 3; 
    // Set to 543
    ReceiptValidation_JHTWHPZONQGS = 543;
    // From 333 to 24
    ReceiptValidation_QYYQNPQMHGJD += 27; ReceiptValidation_QYYQNPQMHGJD /= 15; 
    // From 490 to 510
    ReceiptValidation_WDSTGBSQCODQ -= 320; ReceiptValidation_WDSTGBSQCODQ *= 3; 
    // From 485 to 282
    ReceiptValidation_ETRNIATICNHD += 361; ReceiptValidation_ETRNIATICNHD /= 3; 
    // From 24 to 308
    ReceiptValidation_JRLKTRGSFFSQ -= 2; ReceiptValidation_JRLKTRGSFFSQ *= 14; 
    // From 508 to 346
    ReceiptValidation_LGWZHFZIWLIK += 184; ReceiptValidation_LGWZHFZIWLIK /= 2; 
    // From 405 to 525
    ReceiptValidation_FZBXNRWDYMBQ -= 230; ReceiptValidation_FZBXNRWDYMBQ *= 3; 
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion05E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[29]), 36, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[62]), 10, 35); \
    volatile int ReceiptValidation_code = 37; ReceiptValidation_code -= 9; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;  \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01DC0195((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_JHTWHPZONQGS_01FD01CA(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1); \
    } \
    ReceiptValidation_VKUQGGUEEZTY -= 106; ReceiptValidation_VKUQGGUEEZTY *= 3;  \
    ReceiptValidation_JHTWHPZONQGS = 543; \
    ReceiptValidation_QYYQNPQMHGJD += 27; ReceiptValidation_QYYQNPQMHGJD /= 15;  \
    ReceiptValidation_WDSTGBSQCODQ -= 320; ReceiptValidation_WDSTGBSQCODQ *= 3;  \
    ReceiptValidation_ETRNIATICNHD += 361; ReceiptValidation_ETRNIATICNHD /= 3;  \
    ReceiptValidation_JRLKTRGSFFSQ -= 2; ReceiptValidation_JRLKTRGSFFSQ *= 14;  \
    ReceiptValidation_LGWZHFZIWLIK += 184; ReceiptValidation_LGWZHFZIWLIK /= 2;  \
    ReceiptValidation_FZBXNRWDYMBQ -= 230; ReceiptValidation_FZBXNRWDYMBQ *= 3;  \
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_01FD0225(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation065X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) {
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data;
    long ReceiptValidation_size = ReceiptValidation_length;
    *ReceiptValidation_payload = 0;
    do {
        *ReceiptValidation_payload <<= 8;
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++;
    } while(--ReceiptValidation_size > 0);
}
#else
inline static void ReceiptValidation_GetReceiptInformation065X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) { \
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data; \
    long ReceiptValidation_size = ReceiptValidation_length; \
    *ReceiptValidation_payload = 0; \
    do { \
        *ReceiptValidation_payload <<= 8; \
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++; \
    } while(--ReceiptValidation_size > 0); \
}
#endif

#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation065(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    const unsigned char *ReceiptValidation_seq_end;
    int ReceiptValidation_attr_type;
    int ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 146; ReceiptValidation_code -= 89; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    int ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010601A6(ReceiptValidation_BIO_s_mem_01100074());
    ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_p7, (void *) ReceiptValidation_ETRNIATICNHD_01DC011A((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_VKUQGGUEEZTY_01DC0228((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01EC0208(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_JHTWHPZONQGS_0040021F(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[563]), 41, 33); 
    ReceiptValidation_CFDateFormatterSetFormat_00400151(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_WDSTGBSQCODQ_01DC01FE(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00400137, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01FD0185);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_JRLKTRGSFFSQ_01FD0134(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_01FD0036(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number));
                    ReceiptValidation_value1 = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_JRLKTRGSFFSQ_01FD0134(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_VKUQGGUEEZTY_01DC0228((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_CFDictionaryAddValue_01DC0204((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_CFDictionaryAddValue_01DC0204((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01FD0184((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01DC0081(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_01DC0093);
                ReceiptValidation_CFDictionarySetValue_00400098((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1);
            }
            ReceiptValidation_QYYQNPQMHGJD_01FD0018((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00400225(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00400225(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00400225(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // Set to 413
    ReceiptValidation_VKUQGGUEEZTY = 413;
    // From 510 to 494
    ReceiptValidation_WDSTGBSQCODQ += 478; ReceiptValidation_WDSTGBSQCODQ /= 2; 
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01EC0103(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0110018D(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00400225(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation065(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    const unsigned char *ReceiptValidation_seq_end; \
    int ReceiptValidation_attr_type; \
    int ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 146; ReceiptValidation_code -= 89; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    int ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010601A6(ReceiptValidation_BIO_s_mem_01100074()); \
    ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_p7, (void *) ReceiptValidation_ETRNIATICNHD_01DC011A((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_VKUQGGUEEZTY_01DC0228((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01EC0208(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_JHTWHPZONQGS_0040021F(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[563]), 41, 33);  \
    ReceiptValidation_CFDateFormatterSetFormat_00400151(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_WDSTGBSQCODQ_01DC01FE(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00400137, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01FD0185); \
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_JRLKTRGSFFSQ_01FD0134(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[204])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_01FD0036(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01060032(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        ReceiptValidation_exit_00E2020F(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number)); \
                    ReceiptValidation_value1 = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_JRLKTRGSFFSQ_01FD0134(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_VKUQGGUEEZTY_01DC0228((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_CFDictionaryAddValue_01DC0204((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_CFDictionaryAddValue_01DC0204((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_LGWZHFZIWLIK_01DC015A(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01FD0184((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01DC0081(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_01DC0093); \
                ReceiptValidation_CFDictionarySetValue_00400098((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00400225(ReceiptValidation_value1); \
            } \
            ReceiptValidation_QYYQNPQMHGJD_01FD0018((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00400225(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00400225(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00400225(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_VKUQGGUEEZTY = 413; \
    ReceiptValidation_WDSTGBSQCODQ += 478; ReceiptValidation_WDSTGBSQCODQ /= 2;  \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01EC0103(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0110018D(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00400225(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#if DEBUG
inline static void ReceiptValidation_CheckReceiptSignature06F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str2;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 135; ReceiptValidation_code -= 78; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01100043(ReceiptValidation_BIO_s_mem_01060091());
    ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WDSTGBSQCODQ_004001EE((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_VKUQGGUEEZTY_0040019D((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01100095(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_011001CB();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_01100043(ReceiptValidation_BIO_s_mem_01060091());
        ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_apple, (void *) ReceiptValidation_WDSTGBSQCODQ_004001EE((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_VKUQGGUEEZTY_0040019D((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01EC021C(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01EC0179();
        ReceiptValidation_X509_STORE_add_cert_01100163(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01EC00F6(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2499;
        if (ReceiptValidation_verify == 2499) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01EC00F6(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2499;
        if (ReceiptValidation_verify != 2499) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_01EC00F2((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_011000FA((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[573];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01060034(NULL, NID_commonName, NULL, 0);
        if (ReceiptValidation_status > 0) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01060034(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573);
        if (ReceiptValidation_status <= 0) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 13; ReceiptValidation_digest_length -= 7; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2; 
        char ReceiptValidation_str2_[573];
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[276]), ReceiptValidation_str2_, 230, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_010600E6(ReceiptValidation_str2);
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_0110012B(NULL, NULL, NULL, &ReceiptValidation_len) * 2499;
        if (ReceiptValidation_status == 2499 || ReceiptValidation_len > 0) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_0110012B(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2499;
        if (ReceiptValidation_status != 2499 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            ReceiptValidation_exit_018F023B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[573];
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[573];
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[449]), ReceiptValidation_str3_, 47, 68);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[573];
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[281]), ReceiptValidation_str1_, 163, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 8; ReceiptValidation_num -= 4; ReceiptValidation_num *= 3; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[93])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[93])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 2499;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2499) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[573];
    ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[450]), ReceiptValidation_str4_, 57, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_010601F2(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_011001B3(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_01EC0203(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[573];
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[291]), ReceiptValidation_str5_, 206, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01060068(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_01EC00F2((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_011000FA((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_010601F2(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_011001B3(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_01EC0203(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 413 to 388
    ReceiptValidation_VKUQGGUEEZTY += 363; ReceiptValidation_VKUQGGUEEZTY /= 2; 
    // From 494 to 195
    ReceiptValidation_WDSTGBSQCODQ += 286; ReceiptValidation_WDSTGBSQCODQ /= 4; 
    // From 525 to 458
    ReceiptValidation_FZBXNRWDYMBQ += 391; ReceiptValidation_FZBXNRWDYMBQ /= 2; 
ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01EC0156(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01060103(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_0110001A(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01EC0156(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01EC0120(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature06F(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str2; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 135; ReceiptValidation_code -= 78; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01100043(ReceiptValidation_BIO_s_mem_01060091()); \
    ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WDSTGBSQCODQ_004001EE((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_VKUQGGUEEZTY_0040019D((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01100095(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_011001CB(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_01100043(ReceiptValidation_BIO_s_mem_01060091()); \
        ReceiptValidation_BIO_write_01060050(ReceiptValidation_bio_apple, (void *) ReceiptValidation_WDSTGBSQCODQ_004001EE((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_VKUQGGUEEZTY_0040019D((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01EC021C(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01EC0179(); \
        ReceiptValidation_X509_STORE_add_cert_01100163(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01EC00F6(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2499; \
        if (ReceiptValidation_verify == 2499) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01EC00F6(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2499; \
        if (ReceiptValidation_verify != 2499) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_01EC00F2((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_011000FA((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[573]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01060034(NULL, NID_commonName, NULL, 0); \
        if (ReceiptValidation_status > 0) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01060034(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573); \
        if (ReceiptValidation_status <= 0) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 13; ReceiptValidation_digest_length -= 7; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
        char ReceiptValidation_str2_[573]; \
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[276]), ReceiptValidation_str2_, 230, 16); \
        ReceiptValidation_str2 = ReceiptValidation_str2_; \
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_010600E6(ReceiptValidation_str2); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_0110012B(NULL, NULL, NULL, &ReceiptValidation_len) * 2499; \
        if (ReceiptValidation_status == 2499 || ReceiptValidation_len > 0) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_0110012B(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2499; \
        if (ReceiptValidation_status != 2499 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[573]; \
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[573]; \
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[449]), ReceiptValidation_str3_, 47, 68); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[573]; \
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[281]), ReceiptValidation_str1_, 163, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 8; ReceiptValidation_num -= 4; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[93])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[93])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 2499; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2499) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[573]; \
    ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[450]), ReceiptValidation_str4_, 57, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_010601F2(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_011001B3(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_01EC0203(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[573]; \
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[291]), ReceiptValidation_str5_, 206, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01060068(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_01EC00F2((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_011000FA((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_010601F2(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_011001B3(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_01EC0203(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_VKUQGGUEEZTY += 363; ReceiptValidation_VKUQGGUEEZTY /= 2;  \
    ReceiptValidation_WDSTGBSQCODQ += 286; ReceiptValidation_WDSTGBSQCODQ /= 4;  \
    ReceiptValidation_FZBXNRWDYMBQ += 391; ReceiptValidation_FZBXNRWDYMBQ /= 2;  \
ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01EC0156(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01060103(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_0110001A(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01EC0156(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01EC0120(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    volatile int ReceiptValidation_code = 30; ReceiptValidation_code -= 6; ReceiptValidation_code *= 7; ReceiptValidation_code += 5; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[169]), 212, 18);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_WDSTGBSQCODQ_01FD00C3(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VKUQGGUEEZTY_00400184((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key);
    if (ReceiptValidation_FZBXNRWDYMBQ_01DC01CA(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_018F023B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 388 to 206
    ReceiptValidation_VKUQGGUEEZTY += 230; ReceiptValidation_VKUQGGUEEZTY /= 3; 
    // From 346 to 409
    ReceiptValidation_LGWZHFZIWLIK -= 210; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1; 
    // From 458 to 13
    ReceiptValidation_FZBXNRWDYMBQ += 23; ReceiptValidation_FZBXNRWDYMBQ /= 37; 
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    volatile int ReceiptValidation_code = 30; ReceiptValidation_code -= 6; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[169]), 212, 18); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_WDSTGBSQCODQ_01FD00C3(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VKUQGGUEEZTY_00400184((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key); \
    if (ReceiptValidation_FZBXNRWDYMBQ_01DC01CA(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_018F023B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
    } \
    ReceiptValidation_VKUQGGUEEZTY += 230; ReceiptValidation_VKUQGGUEEZTY /= 3;  \
    ReceiptValidation_LGWZHFZIWLIK -= 210; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 1;  \
    ReceiptValidation_FZBXNRWDYMBQ += 23; ReceiptValidation_FZBXNRWDYMBQ /= 37;  \
    ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    volatile int ReceiptValidation_code = 120; ReceiptValidation_code -= 63; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[29]), 36, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_VKUQGGUEEZTY_004000CE(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01FD000D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key);
    if (ReceiptValidation_LGWZHFZIWLIK_01FD0199(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_002A016C(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1);
    }
    // Global variables computation
    // Set to 525
    ReceiptValidation_VKUQGGUEEZTY = 525;
    // From 543 to 552
    ReceiptValidation_JHTWHPZONQGS -= 359; ReceiptValidation_JHTWHPZONQGS *= 3; 
    // Set to 148
    ReceiptValidation_QYYQNPQMHGJD = 148;
    // From 195 to 439
    ReceiptValidation_WDSTGBSQCODQ -= 86; ReceiptValidation_WDSTGBSQCODQ *= 4; ReceiptValidation_WDSTGBSQCODQ += 3; 
    // Set to 346
    ReceiptValidation_ETRNIATICNHD = 346;
    // From 308 to 357
    ReceiptValidation_JRLKTRGSFFSQ -= 189; ReceiptValidation_JRLKTRGSFFSQ *= 3; 
    // From 409 to 443
    ReceiptValidation_LGWZHFZIWLIK -= 262; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 2; 
    // From 13 to 494
    ReceiptValidation_FZBXNRWDYMBQ -= 1; ReceiptValidation_FZBXNRWDYMBQ *= 40; ReceiptValidation_FZBXNRWDYMBQ += 14; 
    ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    volatile int ReceiptValidation_code = 120; ReceiptValidation_code -= 63; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[29]), 36, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_VKUQGGUEEZTY_004000CE(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01FD000D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key); \
    if (ReceiptValidation_LGWZHFZIWLIK_01FD0199(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_002A016C(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1); \
    } \
    ReceiptValidation_VKUQGGUEEZTY = 525; \
    ReceiptValidation_JHTWHPZONQGS -= 359; ReceiptValidation_JHTWHPZONQGS *= 3;  \
    ReceiptValidation_QYYQNPQMHGJD = 148; \
    ReceiptValidation_WDSTGBSQCODQ -= 86; ReceiptValidation_WDSTGBSQCODQ *= 4; ReceiptValidation_WDSTGBSQCODQ += 3;  \
    ReceiptValidation_ETRNIATICNHD = 346; \
    ReceiptValidation_JRLKTRGSFFSQ -= 189; ReceiptValidation_JRLKTRGSFFSQ *= 3;  \
    ReceiptValidation_LGWZHFZIWLIK -= 262; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 2;  \
    ReceiptValidation_FZBXNRWDYMBQ -= 1; ReceiptValidation_FZBXNRWDYMBQ *= 40; ReceiptValidation_FZBXNRWDYMBQ += 14;  \
    ReceiptValidation_CFRelease_01DC01F1(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[255]), 95, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_VKUQGGUEEZTY_004000CE(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01FD000D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key);
    if (ReceiptValidation_LGWZHFZIWLIK_01FD0199(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // Set to 525
    ReceiptValidation_VKUQGGUEEZTY = 525;
    // From 543 to 552
    ReceiptValidation_JHTWHPZONQGS -= 359; ReceiptValidation_JHTWHPZONQGS *= 3; 
    // Set to 148
    ReceiptValidation_QYYQNPQMHGJD = 148;
    // From 195 to 439
    ReceiptValidation_WDSTGBSQCODQ -= 86; ReceiptValidation_WDSTGBSQCODQ *= 4; ReceiptValidation_WDSTGBSQCODQ += 3; 
    // Set to 346
    ReceiptValidation_ETRNIATICNHD = 346;
    // From 308 to 357
    ReceiptValidation_JRLKTRGSFFSQ -= 189; ReceiptValidation_JRLKTRGSFFSQ *= 3; 
    // From 409 to 443
    ReceiptValidation_LGWZHFZIWLIK -= 262; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 2; 
    // From 13 to 494
    ReceiptValidation_FZBXNRWDYMBQ -= 1; ReceiptValidation_FZBXNRWDYMBQ *= 40; ReceiptValidation_FZBXNRWDYMBQ += 14; 
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[255]), 95, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_VKUQGGUEEZTY_004000CE(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FZBXNRWDYMBQ_01FD000D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key); \
    if (ReceiptValidation_LGWZHFZIWLIK_01FD0199(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_VKUQGGUEEZTY = 525; \
    ReceiptValidation_JHTWHPZONQGS -= 359; ReceiptValidation_JHTWHPZONQGS *= 3;  \
    ReceiptValidation_QYYQNPQMHGJD = 148; \
    ReceiptValidation_WDSTGBSQCODQ -= 86; ReceiptValidation_WDSTGBSQCODQ *= 4; ReceiptValidation_WDSTGBSQCODQ += 3;  \
    ReceiptValidation_ETRNIATICNHD = 346; \
    ReceiptValidation_JRLKTRGSFFSQ -= 189; ReceiptValidation_JRLKTRGSFFSQ *= 3;  \
    ReceiptValidation_LGWZHFZIWLIK -= 262; ReceiptValidation_LGWZHFZIWLIK *= 3; ReceiptValidation_LGWZHFZIWLIK += 2;  \
    ReceiptValidation_FZBXNRWDYMBQ -= 1; ReceiptValidation_FZBXNRWDYMBQ *= 40; ReceiptValidation_FZBXNRWDYMBQ += 14;  \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#if DEBUG
inline static void ReceiptValidation_CheckReceiptHash0A3(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[573];
    volatile int ReceiptValidation_counter = 13; ReceiptValidation_counter -= 7; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_0040014C(NULL, ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1) + ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2));
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data1), ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1));
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data2), ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2));
    ReceiptValidation_SHA1_01100170(ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data4), ReceiptValidation_digest);
    ReceiptValidation_OpenSSL_add_all_digests_010600AB();
    EVP_MD_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_EVP_MD_CTX_init_01060059(&ReceiptValidation_hashctx2);
    const EVP_MD *ReceiptValidation_digester = EVP_sha1();
    ReceiptValidation_EVP_DigestInit_01100169(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data1), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1));
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data2), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2));
    ReceiptValidation_EVP_DigestFinal_0106013F(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_0040018E(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
    if (!ReceiptValidation_JRLKTRGSFFSQ_00400165(ReceiptValidation_data3, ReceiptValidation_data5)) {
        volatile int ReceiptValidation_code = 170; ReceiptValidation_code -= 113; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5);
        ReceiptValidation_exit_018F020F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data1);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data2);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data4);
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5);
        goto ReceiptValidation_CheckReceiptHash0A3_ReceiptValidation_bail;
    }
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5);
    // Global variables computation
    // From 552 to 9
    ReceiptValidation_JHTWHPZONQGS += 15; ReceiptValidation_JHTWHPZONQGS /= 63; 
ReceiptValidation_CheckReceiptHash0A3_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash0A3(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[573]; \
    volatile int ReceiptValidation_counter = 13; ReceiptValidation_counter -= 7; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_ETRNIATICNHD_01FD015A(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_01DC0157((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_0040014C(NULL, ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1) + ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2)); \
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data1), ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1)); \
    ReceiptValidation_VKUQGGUEEZTY_0040020D(ReceiptValidation_data4, ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data2), ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2)); \
    ReceiptValidation_SHA1_01100170(ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data4), ReceiptValidation_digest); \
    ReceiptValidation_OpenSSL_add_all_digests_010600AB(); \
    EVP_MD_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_EVP_MD_CTX_init_01060059(&ReceiptValidation_hashctx2); \
    const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
    ReceiptValidation_EVP_DigestInit_01100169(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data1), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data1)); \
    ReceiptValidation_EVP_DigestUpdate_01EC0146(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_FZBXNRWDYMBQ_004001EE(ReceiptValidation_data2), (size_t) ReceiptValidation_JHTWHPZONQGS_01FD0228(ReceiptValidation_data2)); \
    ReceiptValidation_EVP_DigestFinal_0106013F(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_0040018E(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
    if (!ReceiptValidation_JRLKTRGSFFSQ_00400165(ReceiptValidation_data3, ReceiptValidation_data5)) { \
        volatile int ReceiptValidation_code = 170; ReceiptValidation_code -= 113; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5); \
        ReceiptValidation_exit_018F020F(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data1); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data2); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data4); \
        ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5); \
        goto ReceiptValidation_CheckReceiptHash0A3_ReceiptValidation_bail; \
    } \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data5); \
    ReceiptValidation_JHTWHPZONQGS += 15; ReceiptValidation_JHTWHPZONQGS /= 63;  \
ReceiptValidation_CheckReceiptHash0A3_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_01DC00E9(ReceiptValidation_data4); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 9);
#endif

inline static void ReceiptValidation_AppRunner0A6(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_JHTWHPZONQGS))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_JHTWHPZONQGS_01E60009((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#if DEBUG
inline static void ReceiptValidation_CleanUp0AA(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
    if (ReceiptValidation_references[0]) {
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[0]);
        ReceiptValidation_references[0] = NULL;
    }
    if (ReceiptValidation_references[1]) {
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[1]);
        ReceiptValidation_references[1] = NULL;
    }
    if (ReceiptValidation_references[2]) {
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[2]);
        ReceiptValidation_references[2] = NULL;
    }
    if (ReceiptValidation_references[3]) {
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[3]);
        ReceiptValidation_references[3] = NULL;
    }
}
#else
#define ReceiptValidation_CleanUp0AA(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
    if (ReceiptValidation_references[0]) { \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[0]); \
        ReceiptValidation_references[0] = NULL; \
    } \
    if (ReceiptValidation_references[1]) { \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[1]); \
        ReceiptValidation_references[1] = NULL; \
    } \
    if (ReceiptValidation_references[2]) { \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[2]); \
        ReceiptValidation_references[2] = NULL; \
    } \
    if (ReceiptValidation_references[3]) { \
        ReceiptValidation_CFRelease_01FD00E9(ReceiptValidation_references[3]); \
        ReceiptValidation_references[3] = NULL; \
    } \
}
#endif




// CodeBlock EntryPoint
#if DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = (_argc);
    ReceiptValidation_ctx1.argv = (const char **) (_argv);
    // Initial value
    int ReceiptValidation_index = 373;
    // While loop
    while(ReceiptValidation_index != 3724) {
        switch(ReceiptValidation_index) {
        case 257:
            ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 52; ReceiptValidation_index *= 8; ReceiptValidation_index += 3; 
            break;
        case 3242:
            ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2172; ReceiptValidation_index /= 2; 
            break;
        case 3565:
            ReceiptValidation_CheckBundleVersion05E((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 1599; ReceiptValidation_index /= 4; 
            break;
        case 2990:
            ReceiptValidation_CheckReceiptSignature06F((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 351; ReceiptValidation_index /= 13; 
            break;
        case 373:
            ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 69; ReceiptValidation_index *= 10; ReceiptValidation_index += 9; 
            break;
        case 1850:
            ReceiptValidation_GetGUID04C((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 770; ReceiptValidation_index *= 3; ReceiptValidation_index += 2; 
            break;
        case 1643:
            ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 688; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 1291:
            ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 544; ReceiptValidation_index *= 4; ReceiptValidation_index += 2; 
            break;
        case 2707:
            ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 1519; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 2541:
            ReceiptValidation_CleanUp0AA((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 1300; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 2780:
            ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2302; ReceiptValidation_index /= 2; 
            break;
        case 2866:
            ReceiptValidation_CheckReceiptHash0A3((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2694; ReceiptValidation_index /= 2; 
            break;
        case 3049:
            ReceiptValidation_LoadReceipt030((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2501; ReceiptValidation_index /= 3; 
            break;
        }
    }
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
    ReceiptValidation_ctx1.argc = (_argc); \
    ReceiptValidation_ctx1.argv = (const char **) (_argv); \
    int ReceiptValidation_index = 373; \
    while(ReceiptValidation_index != 3724) { \
        switch(ReceiptValidation_index) { \
        case 257: \
            ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 52; ReceiptValidation_index *= 8; ReceiptValidation_index += 3;  \
            break; \
        case 3242: \
            ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2172; ReceiptValidation_index /= 2;  \
            break; \
        case 3565: \
            ReceiptValidation_CheckBundleVersion05E((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 1599; ReceiptValidation_index /= 4;  \
            break; \
        case 2990: \
            ReceiptValidation_CheckReceiptSignature06F((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 351; ReceiptValidation_index /= 13;  \
            break; \
        case 373: \
            ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 69; ReceiptValidation_index *= 10; ReceiptValidation_index += 9;  \
            break; \
        case 1850: \
            ReceiptValidation_GetGUID04C((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 770; ReceiptValidation_index *= 3; ReceiptValidation_index += 2;  \
            break; \
        case 1643: \
            ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 688; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 1291: \
            ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 544; ReceiptValidation_index *= 4; ReceiptValidation_index += 2;  \
            break; \
        case 2707: \
            ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 1519; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 2541: \
            ReceiptValidation_CleanUp0AA((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 1300; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 2780: \
            ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2302; ReceiptValidation_index /= 2;  \
            break; \
        case 2866: \
            ReceiptValidation_CheckReceiptHash0A3((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2694; ReceiptValidation_index /= 2;  \
            break; \
        case 3049: \
            ReceiptValidation_LoadReceipt030((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2501; ReceiptValidation_index /= 3;  \
            break; \
        } \
    } \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

