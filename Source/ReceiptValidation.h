//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.iccir.Embrace
// CFBundleShortVersionString : 2.0
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
        #define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
    #endif
#else
        #define __ReceiptValidation_RECEIPT_LOG(...)
#endif

// Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
    #define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 535,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 1),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 1),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 1),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 1),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 1),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 1),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 1),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 1),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 1),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 1),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 1),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 1),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 1),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 1)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    long argc;
    CFTypeRef main_bundle;
    CFTypeRef dummy0003;
    CFTypeRef ca_data;
    const char ** argv;
    CFTypeRef dummy0005;
    CFTypeRef dummy0000;
    CFTypeRef receipt_data;
    CFTypeRef receipt_dict;
    CFTypeRef dummy0001;
    CFTypeRef guid_data;
    CFTypeRef dummy0002;
    CFTypeRef dummy0004;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0000;
    const unsigned char * ptr;
    CFTypeRef dummy0004;
    CFTypeRef dictionary;
    CFTypeRef dummy0002;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy0005;
    CFTypeRef dummy0003;
    CFTypeRef dummy0001;
    const unsigned char * end;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_INTEGER_free
typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
// Symbol ASN1_INTEGER_get
typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol c2i_ASN1_INTEGER
typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFAbsoluteTimeGetCurrent
typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateCompare
typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFDateCreate
typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDateFormatterSetProperty
typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFDateFormatterTimeZone
typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[608] = {
    // "glob_b" / M(Xor2) / S(5) / L(6)
    "\x72\x79\x7a\x77\x4a\x77\x15\x00\x67\x86\xa7\x57\x81\xa0\x60\x80",
    // "" / M(None) / S(0) / L(0)
    "\x6e\x10\x93\x82\x72\xb0\xf5\xb3\x73\x69\xa2\x31\x9c\xd6\x2b\x9f\xad\x98\x06\xa1\xa0\x48\xb4\xfe\x45\x90\x62\x32\x2f\x79\x38\x7e",
    // "setjmp" / M(Xor2) / S(224) / L(6)
    "\x83\x95\x84\x9a\x9d\x80\xf0\x3d\xa6\x2c\x97\xf8\x30\x41\x11\xc4",
    // "X509_STORE_new" / M(Xor1) / S(116) / L(14)
    "\x2c\x41\x44\x4d\x2b\x27\x20\x3b\x26\x31\x2b\x1a\x11\x03\x74\xcf",
    // "CFDataAppendBytes" / M(Rot) / S(109) / L(17)
    "\xb0\xb3\xb1\xce\xe1\xce\xae\xdd\xdd\xd2\xdb\xd1\xaf\xe6\xe1\xd2\xe0\x6d",
    // "kSecMatchSearchList" / M(Rot) / S(3) / L(19)
    "\x6e\x56\x68\x66\x50\x64\x77\x66\x6b\x56\x68\x64\x75\x66\x6b\x4f\x6c\x76\x77\x03",
    // "CFRelease" / M(Xor2) / S(227) / L(9)
    "\xb0\xb5\xa1\x96\x9f\x96\x92\x80\x96\xf3\x92\x16\x41\x9c\x1a\x45",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(212) / L(66)
    "\xb8\xc4\xee\xe4\xe3\xf2\xfa\xb8\xdb\xfe\xf5\xe5\xf6\xe5\xee\xb8\xd1\xe5\xf6\xfa\xf2\xe0\xf8\xe5\xfc\xe4\xb8\xd4\xf8\xe5\xf2\xd1\xf8\xe2\xf9\xf3\xf6\xe3\xfe\xf8\xf9\xb9\xf1\xe5\xf6\xfa\xf2\xe0\xf8\xe5\xfc\xb8\xd4\xf8\xe5\xf2\xd1\xf8\xe2\xf9\xf3\xf6\xe3\xfe\xf8\xf9\x97",
    // "objc_msgSend" / M(Xor1) / S(65) / L(12)
    "\x2e\x23\x2b\x22\x1e\x2c\x32\x26\x12\x24\x2f\x25\x41\xcc\x1c\xb3",
    // "c2i_ASN1_INTEGER" / M(Xor3) / S(89) / L(16)
    "\x09\x58\x03\x35\x2b\x39\x24\x5b\x35\x23\x24\x3e\x2f\x2d\x2f\x38\x6a",
    // "RTLD_MAIN_ONLY" / M(Rot) / S(122) / L(14)
    "\xcc\xce\xc6\xbe\xd9\xc7\xbb\xc3\xc8\xd9\xc9\xc8\xc6\xd3\x7a\xca",
    // "exit" / M(Xor2) / S(190) / L(4)
    "\xcb\xd6\xc7\xda\xae\x57\xe3\x77\x1a\x87\xae\xac\xc7\xe3\xda\xe2",
    // "Contents/_MASReceipt" / M(Xor4) / S(220) / L(20)
    "\x4f\x63\x62\x78\x69\x62\x78\x7f\x23\x53\x41\x4d\x5f\x5e\x69\x6f\x69\x65\x7c\x78\x0c",
    // "CC_SHA1_Init" / M(Rot) / S(159) / L(12)
    "\xe2\xe2\xfe\xf2\xe7\xe0\xd0\xfe\xe8\x0d\x08\x13\x9f\xc3\xb7\xc0",
    // "CFArrayGetValueAtIndex" / M(Rot) / S(255) / L(22)
    "\x42\x45\x40\x71\x71\x60\x78\x46\x64\x73\x55\x60\x6b\x74\x64\x40\x73\x48\x6d\x63\x64\x77\xff",
    // "IOMasterPort" / M(Xor4) / S(194) / L(12)
    "\x69\x6f\x6d\x41\x53\x54\x45\x52\x70\x4f\x52\x54\x20\x80\x7a\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x12\xd7\xad\xcd\x89\xfc\x98\x26\xab\xc4\x33\x8a\x86\xf6\x40\x46\x77\x0d\x9c\x71\x7f\x27\xc1\x41\x26\x58\x2e\x77\x32\x45\x8e\x4b",
    // "" / M(None) / S(0) / L(0)
    "\x6f\x84\x15\x78\x75\x96\xe9\x9d\x35\xf1\xc0\x11\xcc\xa3\x7c\x88\xcb\x02\x7e\x9c\xd2\x39\x60\xc4\x2e\x71\x15\x10\x50\x1a\xc6\xf8",
    // "CFBundleUnloadExecutable" / M(Xor4) / S(234) / L(24)
    "\x69\x6c\x68\x5f\x44\x4e\x46\x4f\x7f\x44\x46\x45\x4b\x4e\x6f\x52\x4f\x49\x5f\x5e\x4b\x48\x46\x4f\x2a\x3a\x95\x0c\x38\x0c\xad\x1b\x68",
    // "CFDataCreate" / M(Xor1) / S(61) / L(12)
    "\x7e\x7b\x79\x5c\x49\x5c\x7e\x4f\x58\x5c\x49\x58\x3d\xe4\xbf\xbf",
    // "CFDateFormatterSetFormat" / M(Xor2) / S(8) / L(24)
    "\x6a\x6f\x6d\x48\x5d\x4c\x6f\x46\x5b\x44\x48\x5d\x5d\x4c\x5b\x7a\x4c\x5d\x6f\x46\x5b\x44\x48\x5d\x29\xc3\x18\x26\x1f\xf6\x5e\xee\x39",
    // "" / M(None) / S(0) / L(0)
    "\x80\xfa\x54\xe2\x97\xd7\xc6\x8e\xd1\x73\xbd\xc7\x67\xd3\x8d\x18\xc1\x94\x56\x84\x84\xe5\x9a\x44\xb6\xf3\x55\x8d\xf2\xd2\x55\xd3",
    // "2.0" / M(Xor2) / S(134) / L(3)
    "\xa4\xb8\xa6\x96\x74\xfb\x02\xc9\x4f\x91\x3e\xeb\x0f\x79\x8a\xc1",
    // "CFReadStreamOpen" / M(Xor1) / S(102) / L(16)
    "\x25\x20\x34\x03\x07\x02\x35\x12\x14\x03\x07\x0b\x29\x16\x03\x08\x66",
    // "CFDictionarySetValue" / M(Xor4) / S(216) / L(20)
    "\xfb\xfe\xfc\xd1\xdb\xcc\xd1\xd7\xd6\xd9\xca\xc1\xeb\xdd\xcc\xee\xd9\xd4\xcd\xdd\xb8",
    // "CFDictionaryAddValue" / M(Xor1) / S(79) / L(20)
    "\x0c\x09\x0b\x26\x2c\x3b\x26\x20\x21\x2e\x3d\x36\x0e\x2b\x2b\x19\x2e\x23\x3a\x2a\x4f",
    // "CFBundleCopyBundleURL" / M(Xor3) / S(78) / L(21)
    "\x27\x22\x26\x11\x0a\x00\x08\x01\x27\x0b\x14\x1d\x26\x11\x0a\x00\x08\x01\x31\x36\x28\x64",
    // "globfree" / M(Xor3) / S(230) / L(8)
    "\x91\x9a\x99\x94\x90\x84\x93\x93\xf6\xc9\x3c\x11\x36\x68\x46\xfa",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x80\xf8\x64\x2a\x1b\x14\x9e\x44\xc5\x82\xf9\x2f\x2d\x1c\x0a\xfe\x34\x43\x18\xff\x2d\x26\x5a\xdd\xab\x53\xeb\xf6\x4b\xf2\x44",
    // "sha1" / M(Xor1) / S(77) / L(4)
    "\x3e\x25\x2c\x7c\x4d\xf5\x8d\xa8\xa2\x48\xad\x0e\x1d\x12\x62\x62",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(160) / L(50)
    "\x8f\xf3\xd9\xd3\xd4\xc5\xcd\x8f\xec\xc9\xc2\xd2\xc1\xd2\xd9\x8f\xe6\xd2\xc1\xcd\xc5\xd7\xcf\xd2\xcb\xd3\x8f\xe1\xd0\xd0\xeb\xc9\xd4\x8e\xc6\xd2\xc1\xcd\xc5\xd7\xcf\xd2\xcb\x8f\xe1\xd0\xd0\xeb\xc9\xd4\xa0",
    // "" / M(None) / S(0) / L(0)
    "\x81\xfb\xb4\x9a\x6d\x8d\xc4\x98\x8c\xcc\x01\x08\xc3\x6f\x93\x68\xeb\x2a\x26\xfe\x76\x64\xe9\xa6\xee\x94\x10\x2d\x21\xe4\x7a\x5b",
    // "%02x" / M(Rot) / S(180) / L(4)
    "\xd9\xe4\xe6\x2c\xb4\xed\x61\x8b\x24\xd3\x54\x7a\xee\x40\xa9\x96",
    // "strncmp" / M(Xor1) / S(161) / L(7)
    "\xd2\xd5\xd3\xcf\xc2\xcc\xd1\xa1\x68\xba\xc1\xee\xe1\xc7\xc6\xe0",
    // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(188) / L(35)
    "\x33\x36\x34\x11\x04\x15\x36\x1f\x02\x1d\x11\x04\x04\x15\x02\x33\x02\x15\x11\x04\x15\x34\x11\x04\x15\x36\x02\x1f\x1d\x23\x04\x02\x19\x1e\x17\x70",
    // "" / M(None) / S(0) / L(0)
    "\x06\xd4\x3e\x19\x9e\xcb\x45\xbc\x32\x52\xd5\xd7\x2b\x8e\x06\xa5\x0f\xab\xba\xb7\x9b\x13\x9f\x4a\x6a\xd5\x7b\x8f\x88\x97\x5c\x49",
    // "CFArrayGetValueAtIndex" / M(Xor2) / S(181) / L(22)
    "\xe1\xe4\xe3\xd0\xd0\xc3\xdb\xe5\xc7\xd6\xf4\xc3\xce\xd7\xc7\xe3\xd6\xeb\xcc\xc6\xc7\xda\xa2",
    // "objc_getClass" / M(Xor3) / S(103) / L(13)
    "\x18\x15\x1d\x14\x28\x10\x12\x03\x34\x1b\x16\x04\x04\x77\x56\x37",
    // "CFReadStreamCreateWithFile" / M(Xor4) / S(194) / L(26)
    "\xc5\xc0\xd4\xe3\xe7\xe2\xd5\xf2\xf4\xe3\xe7\xeb\xc5\xf4\xe3\xe7\xf2\xe3\xd1\xef\xf2\xee\xc0\xef\xea\xe3\x86\x76\x80\xcb\xeb\xaf\x3d\xdd\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x79\x91\xeb\x98\x98\xd2\x90\xb6\x34\x98\x10\x0a\x08\xdc\x62\xea\xd4\xcd\x0a\x1c\x80\xcf\x22\xf5\xd0\x15\x72\x39\x31\xe3\xcc\x29",
    // "%02X:" / M(Xor4) / S(62) / L(5)
    "\xc5\xd0\xd2\xb8\xda\xe0\xbf\x85\x15\x75\x6f\x88\x09\xc2\xbb\x3c",
    // "c2i_ASN1_INTEGER" / M(Xor1) / S(109) / L(16)
    "\x0e\x5f\x04\x32\x2c\x3e\x23\x5c\x32\x24\x23\x39\x28\x2a\x28\x3f\x6d",
    // "" / M(None) / S(0) / L(0)
    "\x7d\x00\x01\xef\x2d\xf2\x6f\x8d\x7f\x1f\xed\x9b\x76\xd8\x0b\x19\x1b\xfa\xee\x6c\x58\x70\x23\x36\x07\x87\xb9\x69\x65\xd3\x01\x7a",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x7c\xf5\xa3\x96\xeb\x2a\x14\x8b\x98\x66\x09\x3a\xde\x98\x9f\xa0\x6d\x14\x94\xca\x51\xa3\x4e\x7a\x6b\x93\x5b\xda\x2d\x7c\x68",
    // "" / M(None) / S(0) / L(0)
    "\xe2\xd0\xbd\xc2\x9f\xad\x27\xd4\x97\x6a\x57\x00\x67\x04\x16\x60\x07\x6d\xd4\xf3\xd5\xc1\xa4\x93\x1d\x8a\xb5\x1d\xbb\x8d\xd4\xae",
    // "ASN1_get_object" / M(Xor2) / S(157) / L(15)
    "\xcc\xde\xc3\xbc\xd2\xea\xe8\xf9\xd2\xe2\xef\xe7\xe8\xee\xf9\x8d",
    // "kCFBundleIdentifierKey" / M(Rot) / S(232) / L(22)
    "\x53\x2b\x2e\x2a\x5d\x56\x4c\x54\x4d\x31\x4c\x4d\x56\x5c\x51\x4e\x51\x4d\x5a\x33\x4d\x61\xe8",
    // "" / M(None) / S(0) / L(0)
    "\x12\x1a\x7e\x5c\x37\x95\xb1\x64\x33\x3c\xb7\x29\x01\x69\x08\xea\xf5\x2b\xf0\xfe\x3f\x8a\xf1\x95\x2d\xe8\x4b\x18\x59\x18\xc3\x6c",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(187) / L(19)
    "\xf7\x9a\x9f\x96\xf0\xc8\xca\xdb\xf0\xca\xd7\xdb\xf0\xcd\xd6\xf0\xe0\xed\xe5\xaf",
    // "" / M(None) / S(0) / L(0)
    "\x04\x1c\xd5\x41\x31\x6c\xac\xd4\xa3\x29\x86\xb6\xe8\xe8\xa3\x9b\xcd\xcc\xa0\xa0\x89\x4b\xbb\x91\xc4\xa6\x85\xab\x26\xff\x45\x3e",
    // "CFDictionaryCreateMutable" / M(Rot) / S(131) / L(25)
    "\xc6\xc9\xc7\xec\xe6\xf7\xec\xf2\xf1\xe4\xf5\xfc\xc6\xf5\xe8\xe4\xf7\xe8\xd0\xf8\xf7\xe4\xe5\xef\xe8\x83\x8a\x6d\x14\x18\x7a\xb6\x2b\xe6",
    // "kSecMatchLimit" / M(Xor1) / S(78) / L(14)
    "\x25\x1d\x2b\x2d\x03\x2f\x3a\x2d\x26\x02\x27\x23\x27\x3a\x4e\xb8",
    // "CFDateFormatterSetProperty" / M(Rot) / S(240) / L(26)
    "\x33\x36\x34\x51\x64\x55\x36\x5f\x62\x5d\x51\x64\x64\x55\x62\x43\x55\x64\x40\x62\x5f\x60\x55\x62\x64\x69\xf0\x9d\x91\x8c\x3a\x46\xbc\x6d\x8e",
    // "OBJ_txt2obj" / M(Xor4) / S(116) / L(11)
    "\x0f\x02\x0a\x1f\x34\x38\x34\x72\x2f\x22\x2a\x40\x2f\xca\x24\x51",
    // "CFDictionarySetValue" / M(Xor4) / S(242) / L(20)
    "\x99\x9c\x9e\xb3\xb9\xae\xb3\xb5\xb4\xbb\xa8\xa3\x89\xbf\xae\x8c\xbb\xb6\xaf\xbf\xda",
    // "CFDateFormatterCreate" / M(Xor4) / S(207) / L(21)
    "\x89\x8c\x8e\xab\xbe\xaf\x8c\xa5\xb8\xa7\xab\xbe\xbe\xaf\xb8\x89\xb8\xaf\xab\xbe\xaf\xca",
    // "glob" / M(Xor1) / S(122) / L(4)
    "\x1d\x16\x15\x18\x7a\xc1\x72\x5b\x57\x28\x81\x41\xae\x5a\x0e\x65",
    // "" / M(None) / S(0) / L(0)
    "\x47\x05\x4e\x14\x87\x8a\xd7\x27\x82\xc2\xea\xac\xc8\x80\xcb\x2e\x5c\x33\x85\x5a\x27\xa7\x94\x98\x28\x9e\xcd\x7a\x0f\x06\xa1\xf5",
    // "OBJ_txt2obj" / M(Xor2) / S(42) / L(11)
    "\x75\x78\x70\x65\x4e\x42\x4e\x08\x55\x58\x50\x3a\xca\x65\x95\x14",
    // "IOIteratorNext" / M(Xor2) / S(0) / L(14)
    "\x59\x5f\x59\x64\x75\x62\x71\x64\x7f\x62\x5e\x75\x68\x64\x10\x81",
    // "CC_SHA1_Final" / M(Rot) / S(206) / L(13)
    "\x11\x11\x2d\x21\x16\x0f\xff\x2d\x14\x37\x3c\x2f\x3a\xce\x3a\xb5",
    // "IOBSDNameMatching" / M(Xor1) / S(243) / L(17)
    "\xba\xbc\xb1\xa0\xb7\xbd\x92\x9e\x96\xbe\x92\x87\x90\x9b\x9a\x9d\x94\xf3",
    // "PKCS7_free" / M(Xor2) / S(133) / L(10)
    "\xc5\xde\xd6\xc6\xa2\xca\xf3\xe7\xf0\xf0\x95\x2a\x0b\x5c\xb7\x4c",
    // "CFStringCreateWithCString" / M(Xor2) / S(161) / L(25)
    "\xc0\xc5\xd0\xf7\xf1\xea\xed\xe4\xc0\xf1\xe6\xe2\xf7\xe6\xd4\xea\xf7\xeb\xc0\xd0\xf7\xf1\xea\xed\xe4\x83\x85\x7f\x52\x69\xe2\xf9\xec\x89",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(100) / L(31)
    "\xef\xc7\xc2\xd0\xfd\xf4\xe1\xc0\xed\xe7\xf0\xed\xeb\xea\xe5\xf6\xfd\xd2\xe5\xe8\xf1\xe1\xc7\xe5\xe8\xe8\xc6\xe5\xe7\xef\xf7\x84",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(110) / L(24)
    "\x0c\x09\x0d\x3a\x21\x2b\x23\x2a\x1a\x21\x23\x20\x2e\x2b\x0a\x37\x2a\x2c\x3a\x3b\x2e\x2d\x23\x2a\x4f\x6d\x7a\x63\x7f\xfc\x2a\x0c\x54",
    // "kSecMatchSubjectContains" / M(Xor2) / S(142) / L(24)
    "\xc4\xfc\xca\xcc\xe2\xce\xdb\xcc\xc7\xfc\xda\xcd\xc5\xca\xcc\xdb\xec\xc0\xc1\xdb\xce\xc6\xc1\xdc\xaf\x73\x5d\x35\xe0\xc4\x65\xf9\xef",
    // "" / M(None) / S(0) / L(0)
    "\x73\xc7\x84\x68\xd6\x00\xf9\x4a\x2a\x6e\xea\xef\x58\xf9\xa9\x04\x0f\xb1\x25\x69\x9f\x7d\x62\x14\x84\x9d\xbc\x59\x08\xee\x23\xf1",
    // "PKCS7_verify" / M(Xor1) / S(208) / L(12)
    "\x80\x9b\x93\x83\xe7\x8f\xa6\xb5\xa2\xb9\xb6\xa9\xd0\x84\x15\x78",
    // "CFBundleVersion" / M(Xor2) / S(117) / L(15)
    "\x26\x23\x27\x10\x0b\x01\x09\x00\x33\x00\x17\x16\x0c\x0a\x0b\x65",
    // "EVP_DigestUpdate" / M(Xor1) / S(154) / L(16)
    "\xdf\xcc\xca\xc5\xde\xf3\xfd\xff\xe9\xee\xcf\xea\xfe\xfb\xee\xff\x9a",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(235) / L(29)
    "\xa2\xa4\xb9\x8e\x8c\x82\x98\x9f\x99\x92\xae\x85\x9f\x99\x92\xac\x8e\x9f\xbb\x8a\x99\x8e\x85\x9f\xae\x85\x9f\x99\x92\xeb\xf7\x85\xa8\x7c\xe1\x28\x55\xf5",
    // "" / M(None) / S(0) / L(0)
    "\x49\x98\x0e\x39\xd0\x5e\x8b\x06\x7b\x97\x15\x0a\xc9\x79\x2e\x3b\xac\x7b\xe4\x5e\x28\x97\x7f\xc0\xcd\x35\x21\x8a\xf0\x74\x27\xdb",
    // "sk_free" / M(Xor3) / S(134) / L(7)
    "\xe5\xfd\xc9\xf0\xe4\xf3\xf3\x96\xd6\x2b\xfd\xef\x39\x7d\xfb\x24",
    // "ASN1_INTEGER_get" / M(Rot) / S(26) / L(16)
    "\x5b\x6d\x68\x4b\x79\x63\x68\x6e\x5f\x61\x5f\x6c\x79\x81\x7f\x8e\x1a",
    // "SecCertificateCopyData" / M(Xor3) / S(123) / L(22)
    "\xc1\xf7\xf1\xd1\xf7\xe0\xe6\xfb\xf4\xfb\xf1\xf3\xe6\xf7\xd1\xfd\xe2\xeb\xd6\xf3\xe6\xf3\x92",
    // "OpenSSL_add_all_digests" / M(Xor1) / S(108) / L(23)
    "\x23\x1c\x09\x02\x3f\x3f\x20\x33\x0d\x08\x08\x33\x0d\x00\x00\x33\x08\x05\x0b\x09\x1f\x18\x1f\x6c\xef\x5a\x1b\xb0\x19\xe7\xa5\x56",
    // "" / M(None) / S(0) / L(0)
    "\x69\x96\xac\x53\x54\xdb\xd1\x88\x8b\x93\xf1\x5f\x8f\xad\x6f\x6c\xd1\xca\x05\x36\xb9\x11\x36\x44\x9d\x73\xd8\x75\x5f\x76\x0a\x79",
    // "" / M(None) / S(0) / L(0)
    "\x3f\x03\x71\x79\xdb\xe2\xef\xed\x36\x00\x10\xd3\x96\x8d\x61\xce\xc3\x10\x0a\x27\xcf\xa7\x30\x0b\xd6\x18\x07\x75\x80\xfd\x2a\x3e",
    // "IOServiceGetMatchingServices" / M(Xor3) / S(142) / L(28)
    "\xfa\xfc\xe0\xd6\xc1\xc5\xda\xd0\xd6\xf4\xd6\xc7\xfe\xd2\xc7\xd0\xdb\xda\xdd\xd4\xe0\xd6\xc1\xc5\xda\xd0\xd6\xc0\xb3\xfa\x7c\x18\x78\x0e\xe2\x7c\xc7",
    // "sk_free" / M(Xor2) / S(242) / L(7)
    "\x91\x89\xbd\x84\x90\x87\x87\xe2\xc5\x01\x75\x63\x70\x81\x7d\xd5",
    // "PKCS7_get0_signers" / M(Xor3) / S(226) / L(18)
    "\xa5\xbe\xb6\xa6\xc2\xaa\x92\x90\x81\xc5\xaa\x86\x9c\x92\x9b\x90\x87\x86\xf5",
    // "d2i_PKCS7_bio" / M(Xor3) / S(96) / L(13)
    "\x14\x42\x19\x2f\x20\x3b\x33\x23\x47\x2f\x12\x19\x1f\x70\x42\xe8",
    // "CFReadStreamClose" / M(Rot) / S(78) / L(17)
    "\x91\x94\xa0\xb3\xaf\xb2\xa1\xc2\xc0\xb3\xaf\xbb\x91\xba\xbd\xc1\xb3\x4e",
    // "ASN1_OBJECT_free" / M(Xor3) / S(39) / L(16)
    "\x79\x6b\x76\x09\x67\x77\x7a\x72\x7d\x7b\x6c\x67\x5e\x4a\x5d\x5d\x38",
    // "" / M(None) / S(0) / L(0)
    "\xcb\x71\xa3\xb3\xa0\x9f\xf3\x0c\xa8\xd6\xc0\xab\xaf\xbe\x21\xcc\x67\x0c\xc1\xb6\xf1\x53\x91\x35\xf4\x7f\x06\x7b\x5b\xe3\xc6\xb4",
    // "SHA1_Final" / M(Xor4) / S(81) / L(10)
    "\x43\x58\x51\x21\x4f\x56\x79\x7e\x71\x7c\x10\xa3\x96\xeb\x2a\x14",
    // "BIO_s_mem" / M(Xor3) / S(125) / L(9)
    "\xcf\xc4\xc2\xd2\xfe\xd2\xe0\xe8\xe0\x8d\x6e\xac\x6a\x2a\xf8\xe2",
    // "" / M(None) / S(0) / L(0)
    "\x1c\x5a\x72\x16\xe3\x36\x23\x8b\x1d\xce\xe3\x60\xa6\xc4\x72\x69\x2a\xa3\x32\xa1\x13\xeb\x36\xe8\xf8\x70\x43\xc5\x4a\x17\x02\x20",
    // "CC_SHA1_Final" / M(Xor3) / S(21) / L(13)
    "\x66\x66\x7a\x76\x6d\x64\x14\x7a\x63\x4c\x4b\x44\x49\x25\xfd\xe8",
    // "X509_free" / M(Rot) / S(117) / L(9)
    "\xcd\xaa\xa5\xae\xd4\xdb\xe7\xda\xda\x75\x85\x5a\x27\xa7\x94\x98",
    // "kSecClassCertificate" / M(Xor4) / S(163) / L(20)
    "\x34\x0c\x3a\x3c\x1c\x33\x3e\x2c\x2c\x1c\x3a\x2d\x2b\x36\x39\x36\x3c\x3e\x2b\x3a\x5f",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(204) / L(40)
    "\xfa\xfd\xfd\xa9\xf9\xae\xfa\xfa\xfe\xaf\xf9\xf5\xff\xad\xfc\xf4\xaa\xaa\xf9\xf4\xa8\xfd\xf8\xad\xa9\xfe\xfe\xf8\xf9\xfe\xa8\xfd\xf5\xf4\xa8\xaa\xfa\xaf\xfa\xfc\xcc\x96\x83\x1c\x27\x7a\x5f\xde\x4e",
    // "EVP_get_digestbyname" / M(Rot) / S(14) / L(20)
    "\x53\x64\x5e\x6d\x75\x73\x82\x6d\x72\x77\x75\x73\x81\x82\x70\x87\x7c\x6f\x7b\x73\x0e",
    // "Contents/_MASReceipt" / M(Xor4) / S(235) / L(20)
    "\x04\x28\x29\x33\x22\x29\x33\x34\x68\x18\x0a\x06\x14\x15\x22\x24\x22\x2e\x37\x33\x47",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(239) / L(23)
    "\x9c\x84\x9d\xaa\xac\xaa\xa6\xbf\xbb\x9d\xaa\xa9\xbd\xaa\xbc\xa7\x9d\xaa\xbe\xba\xaa\xbc\xbb\xcf\xb2\x6e\xc9\x90\xfc\x6a\x29\xc0",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(41) / L(35)
    "\x6c\x6f\x6d\x8a\x9d\x8e\x6f\x98\x9b\x96\x8a\x9d\x9d\x8e\x9b\x6c\x9b\x8e\x8a\x9d\x8e\x6d\x8a\x9d\x8e\x6f\x9b\x98\x96\x7c\x9d\x9b\x92\x97\x90\x29",
    // "NSApplicationMain" / M(Xor4) / S(253) / L(17)
    "\x84\x99\x8b\xba\xba\xa6\xa3\xa9\xab\xbe\xa3\xa5\xa4\x87\xab\xa3\xa4\xca",
    // "" / M(None) / S(0) / L(0)
    "\xc7\xf0\xb8\x5d\x21\x1b\xbf\x12\xeb\x7f\xc0\x66\x6a\xff\xca\x9d\x59\xec\xa6\xec\x07\x23\x54\xe7\xec\x8e\x82\x24\x51\x76\xda\x0b",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x7d\xb9\x0b\x84\xde\xe5\x1d\x66\xed\xf2\x1a\x9e\x40\x66\x3f\xd4\xab\x3f\xba\x87\x85\xf9\x23\x61\x05\x07\xfc\x13\x9e\x0a\x2a",
    // "IORegistryEntryCreateCFProperty" / M(Xor1) / S(12) / L(31)
    "\x45\x43\x5e\x69\x6b\x65\x7f\x78\x7e\x75\x49\x62\x78\x7e\x75\x4f\x7e\x69\x6d\x78\x69\x4f\x4a\x5c\x7e\x63\x7c\x69\x7e\x78\x75\x0c",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(163) / L(50)
    "\xf9\x85\xaf\xa5\xa2\xb3\xbb\xf9\x9a\xbf\xb4\xa4\xb7\xa4\xaf\xf9\x90\xa4\xb7\xbb\xb3\xa1\xb9\xa4\xbd\xa5\xf9\x97\xa6\xa6\x9d\xbf\xa2\xf8\xb0\xa4\xb7\xbb\xb3\xa1\xb9\xa4\xbd\xf9\x97\xa6\xa6\x9d\xbf\xa2\xd6",
    // "%02X" / M(Xor1) / S(83) / L(4)
    "\x76\x63\x61\x0b\x53\xd7\x01\x72\x1f\x55\xca\x85\xc3\x15\x93\x68",
    // "SHA1" / M(Rot) / S(233) / L(4)
    "\x3c\x31\x2a\x1a\xe9\x3c\xbb\xd2\x60\x17\xe2\x36\x5c\x90\x76\x61",
    // "" / M(None) / S(0) / L(0)
    "\x49\xb8\x4b\x84\x61\xe8\x2f\x2d\xea\x96\x9c\x33\x53\xb7\x0e\x63\xeb\x0d\xa7\x1a\x6e\x7f\x15\xa4\x40\xb6\x14\x9c\x2e\x0c\x98\x47",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(183) / L(22)
    "\xe6\x2c\x2a\x29\xe6\x23\x20\x19\xe6\x23\x20\x19\x26\x19\x21\x1a\xe5\x1b\x30\x23\x20\x19\xb7",
    // "receipt" / M(Xor2) / S(208) / L(7)
    "\xb2\xa5\xa3\xa5\xa9\xb0\xb4\xc0\x9b\x3b\x81\x2d\x0c\x1b\xca\x61",
    // "kSecClass" / M(Xor1) / S(174) / L(9)
    "\xc5\xfd\xcb\xcd\xed\xc2\xcf\xdd\xdd\xae\xd8\x62\x1a\xe7\x84\x16",
    // "CFDataCreate" / M(Rot) / S(110) / L(12)
    "\xb1\xb4\xb2\xcf\xe2\xcf\xb1\xe0\xd3\xcf\xe2\xd3\x6e\x34\xca\x49",
    // "CFBundleGetIdentifier" / M(Xor1) / S(52) / L(21)
    "\x77\x72\x76\x41\x5a\x50\x58\x51\x73\x51\x40\x7d\x50\x51\x5a\x40\x5d\x52\x5d\x51\x46\x34",
    // "BIO_s_mem" / M(Rot) / S(159) / L(9)
    "\xe1\xe8\xee\xfe\x12\xfe\x0c\x04\x0c\x9f\x32\xc0\x9c\xba\x55\x4e",
    // "" / M(None) / S(0) / L(0)
    "\xb5\xac\xf2\xcf\x16\x50\x0c\xd1\x2e\x8e\x64\xa6\x9a\x68\x33\x03\x5d\xc7\xbd\x64\xf8\xed\x89\x34\x67\x61\x6b\x83\x3a\xcb\xea\xf7",
    // "CFDateFormatterSetProperty" / M(Xor4) / S(203) / L(26)
    "\x82\x87\x85\xa0\xb5\xa4\x87\xae\xb3\xac\xa0\xb5\xb5\xa4\xb3\x92\xa4\xb5\x91\xb3\xae\xb1\xa4\xb3\xb5\xb8\xc1\xb6\x54\xe1\x48\xf1\xc5\x55\x82",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(161) / L(59)
    "\xd3\xd4\xdf\xd4\xa0\xdf\xd0\xa7\xdf\xd3\xd3\xdf\xd7\xa6\xdf\xd0\xdc\xdf\xd6\xa4\xdf\xd5\xdd\xdf\xa3\xa3\xdf\xd0\xdd\xdf\xa1\xd4\xdf\xd1\xa4\xdf\xa0\xd7\xdf\xd7\xd1\xdf\xd0\xd7\xdf\xa1\xd4\xdf\xdc\xdd\xdf\xa1\xa3\xdf\xd3\xa6\xdf\xd3\xd5\xe5\x29\xf6\xdb\x5d\xf0\x52\xaf\xa3",
    // "CFDictionaryAddValue" / M(Xor1) / S(188) / L(20)
    "\xff\xfa\xf8\xd5\xdf\xc8\xd5\xd3\xd2\xdd\xce\xc5\xfd\xd8\xd8\xea\xdd\xd0\xc9\xd9\xbc",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(56) / L(28)
    "\x54\x52\x4e\x78\x6f\x6b\x74\x7e\x78\x5a\x78\x69\x50\x7c\x69\x7e\x75\x74\x73\x7a\x4e\x78\x6f\x6b\x74\x7e\x78\x6e\x1d\xe5\xc7\xcc\x85\x86\x99\x2e\x8b",
    // "CFDateCreate" / M(Xor2) / S(183) / L(12)
    "\xe4\xe1\xe3\xc6\xd3\xc2\xe4\xd5\xc2\xc6\xd3\xc2\xa7\x34\x64\xc8",
    // "SecItemCopyMatching" / M(Xor2) / S(68) / L(19)
    "\x03\x35\x33\x19\x24\x35\x3d\x13\x3f\x20\x29\x1d\x31\x24\x33\x38\x39\x3e\x37\x50",
    // "NSApplicationMain" / M(Xor4) / S(140) / L(17)
    "\x96\x8b\x99\xa8\xa8\xb4\xb1\xbb\xb9\xac\xb1\xb7\xb6\x95\xb9\xb1\xb6\xd8",
    // "" / M(None) / S(0) / L(0)
    "\x64\xc4\xc4\xc3\x12\xd9\x73\x41\x22\x55\x1c\x2a\x8b\xcd\xd0\x70\xea\x83\x45\x25\x85\xf9\x20\x24\xd1\x0a\xbb\x48\x46\xf9\x12\x4a",
    // "CFDictionaryGetValue" / M(Xor3) / S(172) / L(20)
    "\x82\x87\x85\xa8\xa2\xb5\xa8\xae\xaf\xa0\xb3\xb8\x86\xa4\xb5\x97\xa0\xad\xb4\xa4\xc1",
    // "sha1" / M(Xor1) / S(175) / L(4)
    "\xdc\xc7\xce\x9e\xaf\x06\x9f\x5e\xde\xd7\xb3\xc3\x88\xc6\x4e\xeb",
    // "" / M(None) / S(0) / L(0)
    "\x81\x0a\xac\xdf\xd6\xf3\x28\xac\xae\xf6\xa4\x84\xf3\x87\x6f\x9b\xb5\x5e\x83\x0e\xd9\x57\x7e\x23\x44\xce\xb8\xe4\x2e\x93\xfb\x36",
    // "setjmp" / M(Xor4) / S(79) / L(6)
    "\x83\x95\x84\x9a\x9d\x80\xf0\xa5\x53\xac\x74\x80\xbc\xc3\x89\xb0",
    // "SecItemCopyMatching" / M(Xor3) / S(55) / L(19)
    "\x18\x2e\x28\x02\x3f\x2e\x26\x08\x24\x3b\x32\x06\x2a\x3f\x28\x23\x22\x25\x2c\x4b",
    // "" / M(None) / S(0) / L(0)
    "\xdb\xe7\x2d\x4c\xb8\xae\x56\x90\x64\x5c\x67\x67\x8e\xbc\x07\x5e\x17\x1f\x50\xe4\xa2\x3f\x8c\xf1\xd7\x52\x1b\xfe\x54\x2f\x7b\x71",
    // "CFBundleGetMainBundle" / M(Xor4) / S(133) / L(21)
    "\x2d\x28\x2c\x1b\x00\x0a\x02\x0b\x29\x0b\x1a\x23\x0f\x07\x00\x2c\x1b\x00\x0a\x02\x0b\x6e",
    // "" / M(None) / S(0) / L(0)
    "\x2a\xea\x2a\xc1\xad\xcd\xd2\xe2\x1c\x5d\x11\xe4\xbe\xa4\x82\xe8\xc1\xac\x35\x2a\xc9\xca\x58\xd4\x8c\xa5\xb6\x54\x8f\xd3\x24\xc8",
    // "" / M(None) / S(0) / L(0)
    "\x3b\x74\x9e\x3f\x63\x0b\x4c\x1e\x40\x74\xb1\xfb\x3b\x1d\x80\x85\x53\xfc\x43\x0b\xa4\x08\xdf\xc2\xb6\xa7\xc9\xb4\x2c\x67\xf5\x8b",
    // "" / M(None) / S(0) / L(0)
    "\x68\xe3\x26\x5a\x5a\x3e\x2c\x31\x50\x5f\x58\x45\x49\x47\x25\x5c\x3c\x92\x08\xe4\xf6\xe4\xd8\x0a\xc7\x09\x7d\x42\xac\x88\x41\xf6",
    // "CFNumberCreate" / M(Xor1) / S(82) / L(14)
    "\x11\x14\x1c\x27\x3f\x30\x37\x20\x11\x20\x37\x33\x26\x37\x52\xad",
    // "CFDateCreate" / M(Xor3) / S(104) / L(12)
    "\x3b\x3e\x3c\x19\x0c\x1d\x3b\x0a\x1d\x19\x0c\x1d\x78\x02\xfd\x23",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(21) / L(23)
    "\x66\x7e\x67\x50\x56\x50\x5c\x45\x41\x67\x50\x53\x47\x50\x46\x5d\x67\x50\x44\x40\x50\x46\x41\x35\xa0\xcb\x6f\x76\xcb\x81\xc0\x2d",
    // "CFReadStreamOpen" / M(Xor2) / S(34) / L(16)
    "\x70\x75\x61\x56\x52\x57\x60\x47\x41\x56\x52\x5e\x7c\x43\x56\x5d\x33",
    // "" / M(None) / S(0) / L(0)
    "\x78\xfb\x53\xda\x36\xca\x6f\x6d\x83\xfd\xb2\x36\xec\x00\x51\x9e\xb1\xb3\xfc\xa3\xef\x3f\xf3\x64\x76\x8b\xab\x24\xac\xbf\x78\x56",
    // "" / M(None) / S(0) / L(0)
    "\x69\x2d\xb1\x91\x25\xa0\x24\x42\xb6\x33\xc3\xcd\x9a\x78\xd9\xd8\xdc\x1d\x6b\x07\x4a\x8c\xaa\x7a\x09\x80\x1f\x35\x64\x80\x07\x92",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(176) / L(66)
    "\x3f\x43\x69\x63\x64\x75\x7d\x3f\x5c\x79\x72\x62\x71\x62\x69\x3f\x56\x62\x71\x7d\x75\x67\x7f\x62\x7b\x63\x3f\x53\x7f\x62\x75\x56\x7f\x65\x7e\x74\x71\x64\x79\x7f\x7e\x3e\x76\x62\x71\x7d\x75\x67\x7f\x62\x7b\x3f\x53\x7f\x62\x75\x56\x7f\x65\x7e\x74\x71\x64\x79\x7f\x7e\x10",
    // "" / M(None) / S(0) / L(0)
    "\x67\x5f\xc8\x4d\xa1\xdd\xee\x5f\x21\xef\x48\xf2\xce\x36\x6a\x49\xf4\x1b\xdb\xc5\xc3\x72\x49\x0a\xfe\x31\x51\x1f\x35\x3c\x92\xe1",
    // "CFArrayGetCount" / M(Xor1) / S(207) / L(15)
    "\x8c\x89\x8e\xbd\xbd\xae\xb6\x88\xaa\xbb\x8c\xa0\xba\xa1\xbb\xcf",
    // "" / M(None) / S(0) / L(0)
    "\x04\x38\x1c\xd0\x46\x7a\x83\x20\x0d\x3d\x4e\x7a\xb4\x1c\xa9\x23\x68\x8e\x28\x5f\x4a\x2e\x35\x82\x81\x5e\xdf\x99\x78\x89\x4a\x5b",
    // "strlen" / M(Rot) / S(68) / L(6)
    "\xb7\xb8\xb6\xb0\xa9\xb2\x44\xb1\xe3\x57\x64\x4c\x82\x04\x2b\x15",
    // "CFStringCompare" / M(Xor4) / S(142) / L(15)
    "\xa3\xa6\xb3\x94\x92\x89\x8e\x87\xa3\x8f\x8d\x90\x81\x92\x85\xe0",
    // "CFRelease" / M(Xor2) / S(81) / L(9)
    "\x02\x07\x13\x24\x2d\x24\x20\x32\x24\x41\x63\x41\x77\xb4\x91\xff",
    // "" / M(None) / S(0) / L(0)
    "\x39\x50\x5b\x8c\xba\xa3\x94\x3b\x88\x2a\x5f\xc1\xbc\xc5\x57\xab\x2c\xa7\xa0\x46\x01\x76\x5a\x91\x89\x44\xd4\xd7\xee\xd6\x31\x3b",
    // "" / M(None) / S(0) / L(0)
    "\x49\xf9\xec\x39\x50\x5c\x3d\xbc\x6e\x58\x12\x44\xf7\xc1\xda\x87\x0e\xa2\x60\x18\x71\x40\x7e\x99\x98\xbe\x8f\xff\x25\x92\xec\xd0",
    // "" / M(None) / S(0) / L(0)
    "\x4b\x40\xc9\x33\xd9\x32\xae\xb7\xfe\x18\x88\x88\x72\xa3\xf6\xef\xf8\xe7\xbe\x50\x1f\x01\x24\x7f\x93\x6d\x28\x07\x31\x04\x14\xc2",
    // "Contents/_MASReceipt/receipt" / M(Rot) / S(234) / L(28)
    "\x2d\x59\x58\x5e\x4f\x58\x5e\x5d\x19\x49\x37\x2b\x3d\x3c\x4f\x4d\x4f\x53\x5a\x5e\x19\x5c\x4f\x4d\x4f\x53\x5a\x5e\xea\xb9\x24\x9c\x0b\xf8\xf8\x6f\xd3",
    // "CFBundleVersion" / M(Rot) / S(194) / L(15)
    "\x05\x08\x04\x37\x30\x26\x2e\x27\x18\x27\x34\x35\x2b\x31\x30\xc2",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor3) / S(237) / L(54)
    "\x0b\x77\x5d\x57\x50\x41\x49\x0b\x68\x4d\x46\x56\x45\x56\x5d\x0b\x62\x56\x45\x49\x41\x53\x4b\x56\x4f\x57\x0b\x77\x41\x47\x51\x56\x4d\x50\x5d\x0a\x42\x56\x45\x49\x41\x53\x4b\x56\x4f\x0b\x77\x41\x47\x51\x56\x4d\x50\x5d\x24",
    // "kSecReturnRef" / M(Xor4) / S(233) / L(13)
    "\xfb\xc3\xf5\xf3\xc2\xf5\xe4\xe5\xe2\xfe\xc2\xf5\xf6\x90\x3f\x28",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(21) / L(37)
    "\x46\x70\x76\x5e\x70\x6c\x76\x7d\x74\x7c\x7b\x46\x70\x74\x67\x76\x7d\x56\x67\x70\x74\x61\x70\x53\x67\x7a\x78\x54\x61\x61\x67\x7c\x77\x60\x61\x70\x66\x15",
    // "" / M(None) / S(0) / L(0)
    "\xcf\x3f\xa6\xfb\x24\x2a\xfd\x6f\xfa\xe4\x5e\x5b\x12\x34\xb2\x65\x92\x03\x17\x72\xae\x7a\x6c\x10\xb6\x0f\x8b\xc0\xda\x10\xe8\x17",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(139) / L(37)
    "\xf2\xf7\xe4\xe3\xfd\xf2\xc3\xd4\xd0\xc5\xd4\xf2\xde\xc1\xc8\xf0\xc1\xc1\xd4\xdf\xd5\xd8\xdf\xd6\xe1\xd0\xc5\xd9\xf2\xde\xdc\xc1\xde\xdf\xd4\xdf\xc5\xb1",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(25) / L(50)
    "\x36\x4a\x60\x6a\x6d\x7c\x74\x36\x55\x70\x7b\x6b\x78\x6b\x60\x36\x5f\x6b\x78\x74\x7c\x6e\x76\x6b\x72\x6a\x36\x58\x69\x69\x52\x70\x6d\x37\x7f\x6b\x78\x74\x7c\x6e\x76\x6b\x72\x36\x58\x69\x69\x52\x70\x6d\x19",
    // "" / M(None) / S(0) / L(0)
    "\x30\xb9\x24\x9c\x0b\xf8\xf8\x6f\xef\x2a\x34\xd3\xf5\x3f\x6c\xc5\x7b\xa9\x75\x9a\x9b\xa9\x8c\xe2\xc6\xe2\x3a\xa2\xbc\x66\x8b\xd9",
    // "" / M(None) / S(0) / L(0)
    "\x9a\x25\x64\x94\x1e\x4c\x35\x99\xef\x4e\x68\xec\x56\x24\x31\x5b\x09\xc9\x68\x6f\x3c\x20\xc7\x1c\x72\xbb\x66\xa1\xa7\x0d\x74\xbf",
    // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(168) / L(24)
    "\xca\xcf\xc8\xeb\xfa\xe6\xe5\xfc\xfd\xec\xdd\xe0\xe4\xec\xce\xec\xfd\xca\xfc\xfb\xfb\xec\xe7\xfd\x89\x10\x9e\x27\xc2\x39\xf4\x44\x7b",
    // "%02x:" / M(Rot) / S(127) / L(5)
    "\xa4\xaf\xb1\xf7\xb9\x7f\x4b\xc4\xd3\x1b\xd5\x7f\x80\xf4\x35\x24",
    // "CFArrayGetCount" / M(Xor4) / S(74) / L(15)
    "\xe3\xe6\xe1\xd2\xd2\xc1\xd9\xe7\xc5\xd4\xe3\xcf\xd5\xce\xd4\xa0",
    // "" / M(None) / S(0) / L(0)
    "\x41\xce\x52\xf8\x9b\x3b\x81\x2d\x0c\x1b\xca\x61\x08\x9c\x74\x53\x46\x02\x75\x02\xf3\xa8\xa8\x3e\x8f\x35\xe6\xe1\x6d\x3a\x58\x0c",
    // "X509_STORE_add_cert" / M(Xor3) / S(232) / L(19)
    "\xa4\xc9\xcc\xc5\xa3\xaf\xa8\xb3\xae\xb9\xa3\x9d\x98\x98\xa3\x9f\x99\x8e\x88\xfc",
    // "CFNumberCreate" / M(Xor3) / S(189) / L(14)
    "\x8e\x8b\x83\xb8\xa0\xaf\xa8\xbf\x8e\xbf\xa8\xac\xb9\xa8\xcd\xf9",
    // "sha1" / M(Xor4) / S(186) / L(4)
    "\xd3\xc8\xc1\x91\xa0\x53\x15\xff\xc9\xd7\xbe\xe7\x37\x8f\x7b\xd1",
    // "" / M(None) / S(0) / L(0)
    "\xf8\x53\x15\xff\xc9\xd7\xbe\xe7\x37\x8f\x7b\xd1\xec\x73\x56\x84\xa7\xf3\xe8\x86\x39\x3b\x18\x79\xe6\x63\x92\xcb\x9a\x23\x5e\xa4",
    // "CFArrayAppendValue" / M(Rot) / S(130) / L(18)
    "\xc5\xc8\xc3\xf4\xf4\xe3\xfb\xc3\xf2\xf2\xe7\xf0\xe6\xd8\xe3\xee\xf7\xe7\x82",
    // "kCFDateFormatterTimeZone" / M(Xor2) / S(194) / L(24)
    "\x88\xa0\xa5\xa7\x82\x97\x86\xa5\x8c\x91\x8e\x82\x97\x97\x86\x91\xb7\x8a\x8e\x86\xb9\x8c\x8d\x86\xe3\x80\x2f\x38\x44\xe6\x0f\x97\xbd",
    // "CFReadStreamClose" / M(Xor4) / S(162) / L(17)
    "\x27\x22\x36\x01\x05\x00\x37\x10\x16\x01\x05\x09\x27\x08\x0b\x17\x01\x64",
    // "" / M(None) / S(0) / L(0)
    "\xca\xf8\x6f\x97\xe3\x1f\xec\x24\x3d\xc7\x02\x08\x7d\x6e\xc3\xa8\xae\xad\x18\x3d\x5b\xf2\xd9\x2f\x8c\xeb\x37\x25\x53\x56\x85\x05",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(207) / L(48)
    "\xe0\x9c\xb6\xbc\xbb\xaa\xa2\xe0\x83\xa6\xad\xbd\xae\xbd\xb6\xe0\x89\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xbc\xe0\x86\x80\x84\xa6\xbb\xe1\xa9\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xe0\x86\x80\x84\xa6\xbb\xcf",
    // "%02X" / M(Xor2) / S(163) / L(4)
    "\x96\x83\x81\xeb\xb3\xc4\x72\x69\x2a\xa3\x32\xa1\x13\xeb\x36\xe8",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(31) / L(32)
    "\x98\x98\x98\x98\x46\x4c\x46\x6c\x6c\x46\x4c\x46\x83\x83\x46\x73\x46\x67\x67\x46\x59\x46\x8c\x8c\x46\x59\x46\x92\x92\x46\x79\x46\x1f",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(251) / L(57)
    "\x99\xe5\xcf\xc5\xc2\xd3\xdb\x99\xfa\xdf\xd4\xc4\xd7\xc4\xcf\x99\xfd\xd3\xcf\xd5\xde\xd7\xdf\xd8\xc5\x99\xe5\xcf\xc5\xc2\xd3\xdb\xe4\xd9\xd9\xc2\xf5\xd3\xc4\xc2\xdf\xd0\xdf\xd5\xd7\xc2\xd3\xc5\x98\xdd\xd3\xcf\xd5\xde\xd7\xdf\xd8\xb6\x09\x49\x17\x5b\x40\xc6\xdf\x23",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x45\xad\x24\xf8\xe2\x03\x6a\x9b\x23\x25\xb4\x8f\x98\xfc\xdb\x72\xec\x46\xf0\x12\xf7\xe8\x47\x15\xe6\xb2\x57\xba\xb9\x21\x59",
    // "%02x" / M(Xor4) / S(1) / L(4)
    "\x35\x20\x22\x68\x10\xe3\xc6\xb4\x1c\x5a\x72\x16\xe3\x36\x23\x8b",
    // "globfree" / M(Rot) / S(153) / L(8)
    "\x00\x05\x08\xfb\xff\x0b\xfe\xfe\x99\x34\x28\x41\xe1\xf4\x60\x69",
    // "en0" / M(Xor1) / S(46) / L(3)
    "\x4b\x40\x1e\x2e\xf1\x24\x54\x72\xcb\xd9\xff\x96\xb2\x9b\x04\xcd",
    // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(6) / L(25)
    "\xfd\xe2\xfe\xe2\xf4\xf8\xfc\xe2\xfd\xfd\xff\xfa\xff\xf9\xe2\xfd\xfc\xfc\xe2\xfa\xe2\xfd\xfd\xe2\xfd\xcc\xbb\x48\x46\xf9\x12\x4a\xdf\xac",
    // "kSecClass" / M(Xor3) / S(134) / L(9)
    "\xfd\xc5\xf3\xf5\xd5\xfa\xf7\xe5\xe5\x96\x92\xd3\xa5\x32\x8f\xfd",
    // "glob" / M(Xor2) / S(195) / L(4)
    "\xb4\xbf\xbc\xb1\xd3\x52\xa5\xac\x6e\xd1\x4d\xd1\x86\x4b\xd4\x16",
    // "" / M(None) / S(0) / L(0)
    "\xd2\x01\x87\xcb\x89\x97\x04\xe6\xa8\x0e\xd5\xa9\x02\x6d\xf7\x49\xd4\x11\xd3\x29\x3b\x88\x68\xfe\xc8\x8a\x63\x8b\xdd\x99\x31\x3c",
    // "SHA1_Update" / M(Xor4) / S(153) / L(11)
    "\xc3\xd8\xd1\xa1\xcf\xc5\xe0\xf4\xf1\xe4\xf5\x90\x9f\xad\x27\xd4",
    // "SecKeychainSearchCopyNext" / M(Xor1) / S(240) / L(25)
    "\xa3\x95\x93\xbb\x95\x89\x93\x98\x91\x99\x9e\xa3\x95\x91\x82\x93\x98\xb3\x9f\x80\x89\xbe\x95\x88\x84\xf0\x5b\x1f\x0d\x74\xfa\xbd\x4a\x49",
    // "_MASReceipt/receipt" / M(Xor2) / S(143) / L(19)
    "\xc4\xd6\xda\xc8\xc9\xfe\xf8\xfe\xf2\xeb\xef\xb4\xe9\xfe\xf8\xfe\xf2\xeb\xef\x9b",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(137) / L(25)
    "\xe1\xbe\xb9\xc2\xe8\xd7\xca\xd6\xce\xe8\xf0\xee\xfd\xe8\xfd\xee\x01\xfd\xe8\xeb\x02\xe8\xd7\xd2\xcd\x89\xb5\x4c\x90\x8a\xda\x4b\xa6\x28",
    // "CC_SHA1" / M(Rot) / S(111) / L(7)
    "\xb2\xb2\xce\xc2\xb7\xb0\xa0\x6f\xe3\x07\x02\x31\xcf\xd3\x5c\x93",
    // "glob" / M(Xor1) / S(40) / L(4)
    "\x4f\x44\x47\x4a\x28\xfa\x40\x97\x8e\x5b\x3e\xd2\x8b\xcf\xbf\x15",
    // "SHA1_Init" / M(Xor2) / S(0) / L(9)
    "\x43\x58\x51\x21\x4f\x59\x7e\x79\x64\x10\x14\x94\xca\x51\xa3\x4e",
    // "objc_getClass" / M(Xor2) / S(147) / L(13)
    "\xec\xe1\xe9\xe0\xdc\xe4\xe6\xf7\xc0\xef\xe2\xf0\xf0\x83\xe2\x99",
    // "X509_digest" / M(Xor3) / S(19) / L(11)
    "\x7b\x16\x13\x1a\x7c\x47\x4a\x44\x46\x50\x57\x23\x0d\x4c\x08\x0a",
    // "CFStringCreateWithCString" / M(Xor4) / S(134) / L(25)
    "\x8f\x8a\x9f\xb8\xbe\xa5\xa2\xab\x8f\xbe\xa9\xad\xb8\xa9\x9b\xa5\xb8\xa4\x8f\x9f\xb8\xbe\xa5\xa2\xab\xcc\x16\xf8\x88\x26\x0d\x44\xae\xb0",
    // "/usr/lib/libSystem.dylib" / M(Xor2) / S(200) / L(24)
    "\xc6\x9c\x9a\x9b\xc6\x85\x80\x8b\xc6\x85\x80\x8b\xba\x90\x9a\x9d\x8c\x84\xc7\x8d\x90\x85\x80\x8b\xe9\xa5\x58\x53\xec\xd9\xa4\x7c\x5a",
    // "objc_msgSend" / M(Xor1) / S(129) / L(12)
    "\xee\xe3\xeb\xe2\xde\xec\xf2\xe6\xd2\xe4\xef\xe5\x81\xd6\x02\x88",
    // "OpenSSL_add_all_digests" / M(Xor3) / S(200) / L(23)
    "\xa7\x98\x8d\x86\xbb\xbb\xa4\xb7\x89\x8c\x8c\xb7\x89\x84\x84\xb7\x8c\x81\x8f\x8d\x9b\x9c\x9b\xe8\x73\x69\xa2\x31\x9c\xd6\x2b\x9f",
    // "" / M(None) / S(0) / L(0)
    "\xaa\xb6\xee\xaf\x80\x45\x3f\x7b\x93\x3b\x41\xd3\x3a\xd3\x9d\x4c\xaa\x32\xb2\xf4\x31\x73\x51\xcc\x2e\xaa\x37\xa9\x5a\x28\x04\xb4",
    // "IOMasterPort" / M(Xor3) / S(231) / L(12)
    "\xbe\xb8\xba\x96\x84\x83\x92\x85\xa7\x98\x85\x83\xf7\xcd\xc5\x51",
    // "CFBundleGetIdentifier" / M(Xor3) / S(31) / L(21)
    "\x76\x73\x77\x40\x5b\x51\x59\x50\x72\x50\x41\x7c\x51\x50\x5b\x41\x5c\x53\x5c\x50\x47\x35",
    // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(130) / L(31)
    "\xed\xc5\xc8\xd6\xfb\xf2\xe7\xc6\xeb\xe5\xf6\xeb\xf1\xf0\xe3\xf4\xfb\xd8\xe3\xee\xf7\xe7\xc5\xe3\xee\xee\xc4\xe3\xe5\xed\xf5\x82",
    // "" / M(None) / S(0) / L(0)
    "\x5d\x1d\x2e\x15\x63\x55\x91\xb4\x37\x1f\xa1\x5a\xdc\xcf\xd3\x98\x57\x29\x7a\x27\x11\xed\x6c\x33\xad\xb0\xaf\x45\xb4\x89\x11\x5c",
    // "" / M(None) / S(0) / L(0)
    "\x31\x25\x57\x1a\xfa\xdb\xae\x6c\xfa\x37\x5b\xa4\x1c\xba\xee\x97\x2f\x23\x69\xdb\x51\x5a\x6e\xac\x6a\x2a\xf8\xe2\x86\x01\x92\xf4",
    // "alloc" / M(Xor3) / S(115) / L(5)
    "\xe2\xef\xef\xec\xe0\x83\x51\x1f\x35\x3c\x92\xe1\x04\x38\x1c\xd0",
    // "IORegistryEntryGetParentEntry" / M(Xor4) / S(74) / L(29)
    "\xb5\xb3\xae\x99\x9b\x95\x8f\x88\x8e\x85\xb9\x92\x88\x8e\x85\xbb\x99\x88\xac\x9d\x8e\x99\x92\x88\xb9\x92\x88\x8e\x85\xfc\x07\xb4\xda\xe0\xe2\xcb\xef\xac",
    // "_MASReceipt" / M(Xor2) / S(40) / L(11)
    "\x67\x75\x79\x6b\x6a\x5d\x5b\x5d\x51\x48\x4c\x38\x2e\x8e\x64\xa6",
    // "" / M(None) / S(0) / L(0)
    "\x82\xdd\xe1\x9a\x2c\xa6\x71\xc2\x37\x78\x88\x13\xe8\x46\x52\x2f\x26\x87\xce\x08\x6b\xa2\xc6\xa9\x98\xb3\x14\x23\xd3\x19\x4c\xd7",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(181) / L(36)
    "\xd3\xd6\xd2\xe5\xfe\xf4\xfc\xf5\xd7\xf5\xe4\xc6\xf1\xfc\xe5\xf5\xd6\xff\xe2\xd9\xfe\xf6\xff\xd4\xf9\xf3\xe4\xf9\xff\xfe\xf1\xe2\xe9\xdb\xf5\xe9\x90",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(32) / L(43)
    "\x63\x66\x75\x72\x6c\x63\x92\x85\x81\x94\x85\x77\x89\x94\x88\x66\x89\x8c\x85\x73\x99\x93\x94\x85\x8d\x70\x81\x94\x88\x72\x85\x8c\x81\x94\x89\x96\x85\x74\x8f\x62\x81\x93\x85\x20\xbe\xf0\x08\xb2\x34\x2d\xef\xd6",
    // "BIO_s_mem" / M(Rot) / S(125) / L(9)
    "\xbf\xc6\xcc\xdc\xf0\xdc\xea\xe2\xea\x7d\x2a\xf6\x90\xb7\xf6\xdf",
    // "X509_free" / M(Xor4) / S(125) / L(9)
    "\x88\xe5\xe0\xe9\x8f\xb6\xa2\xb5\xb5\xd0\x2c\xbc\x44\x96\xd0\xb6",
    // "%02x:" / M(Xor1) / S(105) / L(5)
    "\x4c\x59\x5b\x11\x53\x69\x02\x20\xc7\xf0\xb8\x5d\x21\x1b\xbf\x12",
    // "setDelegate:" / M(Xor1) / S(64) / L(12)
    "\x33\x25\x34\x04\x25\x2c\x25\x27\x21\x34\x25\x7a\x40\x83\x01\x11",
    // "CC_SHA1_Update" / M(Xor4) / S(223) / L(14)
    "\xb3\xb3\xaf\xa3\xb8\xb1\xc1\xaf\xa5\x80\x94\x91\x84\x95\xf0\xf4",
    // "" / M(None) / S(0) / L(0)
    "\x7d\x71\xcf\x56\x66\x4f\xf6\x63\xef\x6f\xc3\x3b\x73\xed\x73\xb2\xb8\x9f\x63\x2c\x43\xa1\x3d\xfc\xfd\x70\x00\x91\xad\x9d\xfe\x50",
    // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(91) / L(24)
    "\x39\x3c\x3b\x18\x09\x15\x16\x0f\x0e\x1f\x2e\x13\x17\x1f\x3d\x1f\x0e\x39\x0f\x08\x08\x1f\x14\x0e\x7a\xc8\x1e\x41\x19\xe5\x06\xdd\xf9",
    // "" / M(None) / S(0) / L(0)
    "\x9b\x25\xc8\x7a\xfb\xf4\x4d\xd1\x14\xd1\xdb\xad\x80\xc3\xb7\xc0\x3d\x38\xe8\x19\x54\x64\x34\x10\xd1\xb3\x62\xb0\x17\x91\x1a\xf4",
    // "CFDataGetLength" / M(Rot) / S(212) / L(15)
    "\x17\x1a\x18\x35\x48\x35\x1b\x39\x48\x20\x39\x42\x3b\x48\x3c\xd4",
    // "CFDataAppendBytes" / M(Xor2) / S(190) / L(17)
    "\xef\xea\xe8\xcd\xd8\xcd\xed\xdc\xdc\xc9\xc2\xc8\xee\xd5\xd8\xc9\xdf\xac",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(135) / L(14)
    "\x22\x24\x3c\x34\x2f\x3d\x31\x39\x3e\x2f\x3f\x3e\x3c\x29\x70\xb7",
    // "CC_SHA1_Init" / M(Xor4) / S(50) / L(12)
    "\x63\x63\x7f\x73\x68\x61\x11\x7f\x69\x4e\x49\x54\x20\xb8\x44\xe5",
    // "" / M(None) / S(0) / L(0)
    "\x47\x97\x59\xc4\xee\x3b\x6b\xd7\x06\x9e\x00\x2a\x2c\x79\xf8\x45\x95\x35\xb3\x25\xef\xfc\xd1\xb4\xc8\xc8\x1e\x41\x19\xe5\x06\xdd",
    // "kCFBundleIdentifierKey" / M(Rot) / S(83) / L(22)
    "\xbe\x96\x99\x95\xc8\xc1\xb7\xbf\xb8\x9c\xb7\xb8\xc1\xc7\xbc\xb9\xbc\xb8\xc5\x9e\xb8\xcc\x53",
    // "" / M(None) / S(0) / L(0)
    "\x28\xf9\xa9\xf9\xed\x19\x96\xc8\xe4\xe5\x6b\xaa\xff\xd7\x18\x48\x1b\x15\xff\x51\x97\x12\xa8\x93\x16\x26\x27\x76\x79\xd1\xee\x98",
    // "SHA1_Init" / M(Xor2) / S(164) / L(9)
    "\xe7\xfc\xf5\x85\xeb\xfd\xda\xdd\xc0\xb4\xa9\x70\x72\x56\x26\x28",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(92) / L(29)
    "\x11\x39\x3c\x2e\x03\x0a\x1f\x3e\x13\x19\x0e\x13\x15\x14\x1b\x08\x03\x31\x1f\x03\x39\x1b\x16\x16\x38\x1b\x19\x11\x09\x7a\xed\xea\x4d\xc7\x50\x5c\x6f\x26",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(25) / L(32)
    "\x41\x41\x41\x41\x1f\x15\x1f\x75\x75\x1f\x15\x1f\x5c\x5c\x1f\x6c\x1f\x70\x70\x1f\x02\x1f\x55\x55\x1f\x02\x1f\x4b\x4b\x1f\x62\x1f\x38",
    // "SHA1" / M(Xor2) / S(238) / L(4)
    "\xad\xb6\xbf\xcf\xfe\xd8\x0b\x19\x1b\xfa\xee\x6c\x58\x70\x23\x36",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(63) / L(54)
    "\x10\x6c\x46\x4c\x4b\x5a\x52\x10\x73\x56\x5d\x4d\x5e\x4d\x46\x10\x79\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x4c\x10\x6c\x5a\x5c\x4a\x4d\x56\x4b\x46\x11\x59\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x10\x6c\x5a\x5c\x4a\x4d\x56\x4b\x46\x3f",
    // "" / M(None) / S(0) / L(0)
    "\xc0\x8b\x64\x7d\x1f\x91\xc8\x39\xc3\xfa\x6c\x0f\xb8\x73\xef\xd4\xbc\x3d\xbe\xdf\x22\x13\x6e\x4f\x70\x53\x06\x89\x77\x4b\x20\x15",
    // "alloc" / M(Rot) / S(146) / L(5)
    "\xf3\xfe\xfe\x01\xf5\x92\x2d\x0a\x90\x1b\xdb\x9d\xb9\x69\x35\x7f",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor4) / S(44) / L(37)
    "\xdb\xed\xeb\xc3\xed\xf1\xeb\xe0\xe9\xe1\xe6\xdb\xed\xe9\xfa\xeb\xe0\xcb\xfa\xed\xe9\xfc\xed\xce\xfa\xe7\xe5\xc9\xfc\xfc\xfa\xe1\xea\xfd\xfc\xed\xfb\x88",
    // "PKCS7_get0_signers" / M(Xor1) / S(92) / L(18)
    "\x0c\x17\x1f\x0f\x6b\x03\x3b\x39\x28\x6c\x03\x2f\x35\x3b\x32\x39\x2e\x2f\x5c",
    // "CFReadStreamClose" / M(Rot) / S(238) / L(17)
    "\x31\x34\x40\x53\x4f\x52\x41\x62\x60\x53\x4f\x5b\x31\x5a\x5d\x61\x53\xee",
    // "" / M(None) / S(0) / L(0)
    "\x77\xbf\xa7\x5a\x0c\x48\xe6\x33\x84\x55\x90\x70\xca\x40\x28\x72\xc2\xef\xa0\x90\x16\xdb\xcc\xaa\xf2\x55\xe3\x95\xb9\x1b\x50\xbe",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(81) / L(31)
    "\x3a\x12\x17\x05\x28\x21\x34\x15\x38\x32\x25\x38\x3e\x3f\x30\x23\x28\x07\x30\x3d\x24\x34\x12\x30\x3d\x3d\x13\x30\x32\x3a\x22\x51",
    // "EVP_MD_CTX_init" / M(Rot) / S(227) / L(15)
    "\x28\x39\x33\x42\x30\x27\x42\x26\x37\x3b\x42\x4c\x51\x4c\x57\xe3",
    // "SHA1_Final" / M(Xor2) / S(226) / L(10)
    "\xa1\xba\xb3\xc3\xad\xb4\x9b\x9c\x93\x9e\xf2\x4c\x2f\x67\xb7\xec",
    // "kCFDateFormatterTimeZone" / M(Xor1) / S(14) / L(24)
    "\x65\x4d\x48\x4a\x6f\x7a\x6b\x48\x61\x7c\x63\x6f\x7a\x7a\x6b\x7c\x5a\x67\x63\x6b\x54\x61\x60\x6b\x0e\x68\x7a\xfd\x35\x99\x56\x0f\xe1",
    // "CFReadStreamOpen" / M(Xor4) / S(69) / L(16)
    "\xd6\xd3\xc7\xf0\xf4\xf1\xc6\xe1\xe7\xf0\xf4\xf8\xda\xe5\xf0\xfb\x95",
    // "SHA1" / M(Xor2) / S(137) / L(4)
    "\xca\xd1\xd8\xa8\x99\xf1\x84\x8d\x58\x0f\xe5\xbf\xa7\x4c\xf7\x9e",
    // "strlen" / M(Xor2) / S(88) / L(6)
    "\x3b\x3c\x3a\x24\x2d\x26\x48\x6c\x04\x1c\xd5\x41\x31\x6c\xac\xd4",
    // "EVP_MD_CTX_init" / M(Xor2) / S(231) / L(15)
    "\xb2\xa1\xa7\xa8\xba\xb3\xa8\xb4\xa3\xaf\xa8\x9e\x99\x9e\x83\xf7",
    // "%02X:" / M(Xor2) / S(41) / L(5)
    "\x1c\x09\x0b\x61\x03\x39\xca\x9d\x59\xec\xa6\xec\x07\x23\x54\xe7",
    // "CFDateCompare" / M(Xor4) / S(3) / L(13)
    "\x73\x76\x74\x51\x44\x55\x73\x5f\x5d\x40\x51\x42\x55\x30\x86\x7c",
    // "" / M(None) / S(0) / L(0)
    "\x4f\xb3\x75\x9a\x7d\xf8\x5c\x35\xc9\xc7\xe8\x9c\xc8\x91\xfc\x83\x9c\xae\xd8\xa2\x76\xb1\x27\x02\xa9\x8c\xa4\xdf\xd7\xff\xed\x6c",
    // "" / M(None) / S(0) / L(0)
    "\xfb\x78\xe6\x4e\x36\x27\xae\x36\xe6\x9d\x4e\x09\x62\x10\x35\x8d\x76\x7e\xdb\x81\x45\xab\xc7\x5e\x45\x1f\x0c\x2b\xe3\x67\x01\xd3",
    // "EVP_DigestFinal" / M(Xor1) / S(111) / L(15)
    "\x2a\x39\x3f\x30\x2b\x06\x08\x0a\x1c\x1b\x29\x06\x01\x0e\x03\x6f",
    // "sel_registerName" / M(Rot) / S(191) / L(16)
    "\x32\x24\x2b\x1e\x31\x24\x26\x28\x32\x33\x24\x31\x0d\x20\x2c\x24\xbf",
    // "kSecMatchSubjectContains" / M(Xor1) / S(94) / L(24)
    "\x35\x0d\x3b\x3d\x13\x3f\x2a\x3d\x36\x0d\x2b\x3c\x34\x3b\x3d\x2a\x1d\x31\x30\x2a\x3f\x37\x30\x2d\x5e\x52\x0c\x22\xc9\x6a\x35\x85\x62",
    // "" / M(None) / S(0) / L(0)
    "\x1e\xb9\xdd\x7f\x54\x4d\x9e\xa4\xf0\x22\xfb\x74\x31\xae\x5e\xb4\x84\x10\x90\x38\xe3\x95\x33\x15\x75\x41\x0e\xff\x51\xff\x20\x6d",
    // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(123) / L(25)
    "\x68\x77\x6b\x77\x61\x6d\x69\x77\x68\x68\x6a\x6f\x6a\x6c\x77\x68\x69\x69\x77\x6f\x77\x68\x68\x77\x68\x59\xac\x60\x14\x4e\x88\x4f\x58\x7f",
    // "" / M(None) / S(0) / L(0)
    "\x64\xd1\xd8\x96\x12\xa4\xd6\xd8\x94\x7b\x44\x94\x8b\xc7\x6b\x8a\xbb\x39\x0f\x92\x69\xf3\x33\x8a\x1a\x93\xa5\xb5\x41\xaa\x6b\x04",
    // "sel_registerName" / M(Rot) / S(211) / L(16)
    "\x46\x38\x3f\x32\x45\x38\x3a\x3c\x46\x47\x38\x45\x21\x34\x40\x38\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x85\x81\xc4\x83\xe8\x58\x9b\xa9\xba\xba\x90\xe8\x4a\xec\x2d\x72\xc6\x8f\x0c\x4a\x2f\x1f\x65\x63\x4c\x1c\x18\x9b\x66\x4f\x25\x89",
    // "sk_value" / M(Xor1) / S(83) / L(8)
    "\x20\x38\x0c\x25\x32\x3f\x26\x36\x53\x2b\xf0\xfe\x3f\x8a\xf1\x95",
    // "d2i_PKCS7_bio" / M(Xor4) / S(68) / L(13)
    "\x24\x72\x29\x1f\x10\x0b\x03\x13\x77\x1f\x22\x29\x2f\x40\xaf\x99",
    // "kSecMatchLimitAll" / M(Xor1) / S(235) / L(17)
    "\x80\xb8\x8e\x88\xa6\x8a\x9f\x88\x83\xa7\x82\x86\x82\x9f\xaa\x87\x87\xeb",
    // "receipt" / M(Xor2) / S(78) / L(7)
    "\x2c\x3b\x3d\x3b\x37\x2e\x2a\x5e\xeb\x23\x23\xd7\x1c\xad\xc1\x34",
    // "" / M(None) / S(0) / L(0)
    "\x69\xa4\xfe\x82\x4d\x75\xff\xbd\x9a\xeb\x03\xaf\x61\xf9\x8b\xed\xf9\xe9\x7b\x64\x30\x46\xc0\x0e\x4f\x06\xe3\x6b\x75\x9e\xe8\x54",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(240) / L(40)
    "\x26\x21\x21\x35\x25\x32\x26\x26\x22\x33\x25\x29\x23\x31\x20\x28\x36\x36\x25\x28\x34\x21\x24\x31\x35\x22\x22\x24\x25\x22\x34\x21\x29\x28\x34\x36\x26\x33\x26\x20\xf0\x5c\x93\xc1\xeb\x52\x5d\xef\x76",
    // "BIO_free" / M(Xor2) / S(73) / L(8)
    "\x1b\x10\x16\x06\x3f\x2b\x3c\x3c\x59\x6f\x44\x2c\x61\xf5\x75\x03",
    // "init" / M(Rot) / S(178) / L(4)
    "\x1b\x20\x1b\x26\xb2\xcc\xea\x1f\x3d\x4d\x79\x58\x41\x48\xeb\xb7",
    // "PKCS7_verify" / M(Xor2) / S(244) / L(12)
    "\xb4\xaf\xa7\xb7\xd3\xbb\x92\x81\x96\x8d\x82\x9d\xe4\x16\x1d\x0e",
    // "CFNumberCreate" / M(Xor1) / S(55) / L(14)
    "\x74\x71\x79\x42\x5a\x55\x52\x45\x74\x45\x52\x56\x43\x52\x37\x72",
    // "" / M(None) / S(0) / L(0)
    "\x57\x4e\x23\xe8\x56\x1a\xe9\x65\x2f\x66\x59\xa0\xff\x40\x0e\x35\x78\x17\x5a\x79\xe8\xc7\xd1\x2c\x53\xed\x20\x36\x93\x78\x08\xac",
    // "CFArrayCreateMutable" / M(Xor4) / S(222) / L(20)
    "\x75\x70\x77\x44\x44\x57\x4f\x75\x44\x53\x57\x42\x53\x7b\x43\x42\x57\x54\x5a\x53\x36",
    // "OpenSSL_add_all_digests" / M(Xor1) / S(144) / L(23)
    "\xdf\xe0\xf5\xfe\xc3\xc3\xdc\xcf\xf1\xf4\xf4\xcf\xf1\xfc\xfc\xcf\xf4\xf9\xf7\xf5\xe3\xe4\xe3\x90\xc7\xd6\x72\x7a\xb4\x5d\xbc\xef",
    // "CFArrayAppendValue" / M(Xor1) / S(184) / L(18)
    "\xfb\xfe\xf9\xca\xca\xd9\xc1\xf9\xc8\xc8\xdd\xd6\xdc\xee\xd9\xd4\xcd\xdd\xb8",
    // "" / M(None) / S(0) / L(0)
    "\x70\xc0\x71\x36\x7f\xc2\x9d\xc8\x5e\xd3\x1f\xad\xb4\xdd\xbd\x43\xae\x48\x3c\xb8\xae\xf8\x69\xe1\x9c\x4a\xa7\xb1\x3d\xd2\x19\xa0",
    // "" / M(None) / S(0) / L(0)
    "\x4d\x9e\xa7\xb6\xf4\x34\x64\xc8\x11\x9e\xdd\x00\x24\xdb\xc0\x50\x11\x1d\x29\x04\x78\x22\x05\x45\x4f\xdb\x7c\x01\x1a\x1e\xea\x47",
    // "d2i_X509_bio" / M(Xor1) / S(239) / L(12)
    "\x8b\xdd\x86\xb0\xb7\xda\xdf\xd6\xb0\x8d\x86\x80\xef\xbc\x68\xf7",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(189) / L(39)
    "\xfe\xfb\xe8\xef\xf1\xfe\xcf\xd8\xdc\xc9\xd8\xfb\xcf\xd2\xd0\xfb\xd4\xd1\xd8\xee\xc4\xce\xc9\xd8\xd0\xef\xd8\xcd\xcf\xd8\xce\xd8\xd3\xc9\xdc\xc9\xd4\xd2\xd3\xbd\x55\x9b\x11\x83\x9a\x6a\x38\x67",
    // "dlsym" / M(Xor3) / S(238) / L(5)
    "\x9a\x92\x8d\x87\x93\xfe\x3f\x7c\xbf\x4b\x5d\x43\x3a\xf5\x27\x69",
    // "" / M(None) / S(0) / L(0)
    "\x2d\xdf\x17\xd5\x14\x44\x13\xdb\xfa\x68\x8e\xb7\xea\x4e\x33\xa2\x33\x29\x66\x67\xe3\x4c\x98\xf2\xd6\x6b\x56\x9a\x63\xfb\xd4\x00",
    // "" / M(None) / S(0) / L(0)
    "\xa0\xb8\x0d\xf1\xb4\xd5\x33\x64\x21\xda\xaa\xfc\x79\x14\x6e\x0d\x68\x90\x68\xf7\x4f\xc8\xf7\x7f\x2c\x02\x16\xaa\xf4\x41\x1f\xcb",
    // "com.iccir.Embrace" / M(Xor3) / S(160) / L(17)
    "\xd1\xdd\xdf\x9c\xdb\xd1\xd1\xdb\xc0\x9c\xf7\xdf\xd0\xc0\xd3\xd1\xd7\xb2",
    // "CFEqual" / M(Xor2) / S(97) / L(7)
    "\x32\x37\x34\x00\x04\x10\x1d\x71\xbd\x56\x63\xc5\x32\x5a\x6c\xfa",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(166) / L(66)
    "\x5d\x21\x0b\x01\x06\x17\x1f\x5d\x3e\x1b\x10\x00\x13\x00\x0b\x5d\x34\x00\x13\x1f\x17\x05\x1d\x00\x19\x01\x5d\x31\x1d\x00\x17\x34\x1d\x07\x1c\x16\x13\x06\x1b\x1d\x1c\x5c\x14\x00\x13\x1f\x17\x05\x1d\x00\x19\x5d\x31\x1d\x00\x17\x34\x1d\x07\x1c\x16\x13\x06\x1b\x1d\x1c\x72",
    // "CFDataCreateMutable" / M(Rot) / S(81) / L(19)
    "\x94\x97\x95\xb2\xc5\xb2\x94\xc3\xb6\xb2\xc5\xb6\x9e\xc6\xc5\xb2\xb3\xbd\xb6\x51",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(31) / L(59)
    "\x29\x2e\x25\x2e\x5a\x25\x2a\x5d\x25\x29\x29\x25\x2d\x5c\x25\x2a\x26\x25\x2c\x5e\x25\x2f\x27\x25\x59\x59\x25\x2a\x27\x25\x5b\x2e\x25\x2b\x5e\x25\x5a\x2d\x25\x2d\x2b\x25\x2a\x2d\x25\x5b\x2e\x25\x26\x27\x25\x5b\x59\x25\x29\x5c\x25\x29\x2f\x1f\xa2\x10\x61\xef\xd0\xa5\x2a\x1f",
    // "" / M(None) / S(0) / L(0)
    "\xc2\xb1\x2f\xd5\x90\x80\x1f\x92\xea\x80\xe4\xb5\x52\x4d\xcd\x64\xbb\xf8\x01\x01\x08\xaa\x71\x1b\x30\x5a\x46\x9e\xbb\x5f\x96\xb6",
    // "kSecClassCertificate" / M(Xor3) / S(75) / L(20)
    "\x0b\x33\x05\x03\x23\x0c\x01\x13\x13\x23\x05\x12\x14\x09\x06\x09\x03\x01\x14\x05\x60",
    // "sk_num" / M(Xor4) / S(147) / L(6)
    "\x43\x5b\x6f\x5e\x45\x5d\x30\xae\x12\x1a\x7e\x5c\x37\x95\xb1\x64",
    // "" / M(None) / S(0) / L(0)
    "\x25\x39\xf8\x9d\x91\x8c\x3a\x46\x8d\x8e\x6d\xbc\x2f\x7e\xcc\x83\x7c\x03\x2d\x9f\x1b\x56\x56\x9f\xbb\xc9\x06\xd9\x21\xe9\xa3\x4f",
    // "" / M(None) / S(0) / L(0)
    "\xdb\xad\x03\x67\x19\x30\x7d\xa0\xea\x7f\xb7\x52\xb6\x02\x2d\x43\xe4\x24\x9d\x4c\xf1\x05\x06\xb3\xbb\x27\x5a\xc6\x38\x21\x8a\x39",
    // "c2i_ASN1_INTEGER" / M(Rot) / S(253) / L(16)
    "\x60\x2f\x66\x5c\x3e\x50\x4b\x2e\x5c\x46\x4b\x51\x42\x44\x42\x4f\xfd",
    // "" / M(None) / S(0) / L(0)
    "\xdc\x5a\x03\x51\x9d\x9c\xf1\x7d\xdf\x7e\x4b\xc7\x88\x90\x0f\x93\x2e\x89\x79\xf7\x95\x23\x01\x47\x8e\x0c\xe2\x28\x61\xeb\x92\xb7",
    // "ASN1_OBJECT_free" / M(Xor4) / S(87) / L(16)
    "\x86\x94\x89\xf6\x98\x88\x85\x8d\x82\x84\x93\x98\xa1\xb5\xa2\xa2\xc7",
    // "objc_getClass" / M(Rot) / S(222) / L(13)
    "\x4d\x40\x48\x41\x3d\x45\x43\x52\x21\x4a\x3f\x51\x51\xde\xbb\xfc",
    // "/usr/lib/libSystem.dylib" / M(Xor2) / S(140) / L(24)
    "\x82\xd8\xde\xdf\x82\xc1\xc4\xcf\x82\xc1\xc4\xcf\xfe\xd4\xde\xd9\xc8\xc0\x83\xc9\xd4\xc1\xc4\xcf\xad\xca\xe5\x1c\x89\xbe\xeb\xef\xbf",
    // "_MASReceipt" / M(Xor2) / S(179) / L(11)
    "\xfc\xee\xe2\xf0\xf1\xc6\xc0\xc6\xca\xd3\xd7\xa3\x3b\x94\x39\xf2",
    // "CFBundleIdentifier" / M(Rot) / S(240) / L(18)
    "\x33\x36\x32\x65\x5e\x54\x5c\x55\x39\x54\x55\x5e\x64\x59\x56\x59\x55\x62\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x74\x5d\x9b\xf9\x81\xeb\xdf\x95\xb6\xc6\x6f\xec\x9e\xef\xf9\x2b\xcb\x86\x0a\x06\x86\x1a\xe9\x5d\x4d\x15\x71\x7e\x7e\x42\x80\xdf",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(210) / L(39)
    "\xa1\xa4\xb7\xb0\xae\xa1\x90\x87\x83\x96\x87\xa4\x90\x8d\x8f\xa4\x8b\x8e\x87\xb1\x9b\x91\x96\x87\x8f\xb0\x87\x92\x90\x87\x91\x87\x8c\x96\x83\x96\x8b\x8d\x8c\xe2\x5f\xa7\xa6\xac\x7b\x1d\xef\x17",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(16) / L(22)
    "\x3f\x85\x83\x82\x3f\x7c\x79\x72\x3f\x7c\x79\x72\x7f\x72\x7a\x73\x3e\x74\x89\x7c\x79\x72\x10",
    // "CFStringCompare" / M(Xor4) / S(78) / L(15)
    "\xa3\xa6\xb3\x94\x92\x89\x8e\x87\xa3\x8f\x8d\x90\x81\x92\x85\xe0",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(154) / L(40)
    "\xd0\xcb\xcb\xdf\xcf\xdc\xd0\xd0\xcc\xdd\xcf\xd3\xcd\xdb\xca\xd2\xe0\xe0\xcf\xd2\xde\xcb\xce\xdb\xdf\xcc\xcc\xce\xcf\xcc\xde\xcb\xd3\xd2\xde\xe0\xd0\xdd\xd0\xca\x9a\x7a\xea\xf3\x3d\x62\x63\x76\xa7",
    // "" / M(None) / S(0) / L(0)
    "\xbd\x56\x63\xc5\x32\x5a\x6c\xfa\xb0\xa7\x42\xfa\x08\xc5\x33\x9c\x4d\xea\xd6\x0b\x6e\xa2\x5d\x72\x3e\xb6\xce\x14\xab\xe8\xeb\x01",
    // "Contents/_MASReceipt" / M(Xor3) / S(161) / L(20)
    "\xf5\xd9\xd8\xc2\xd3\xd8\xc2\xc5\x99\xe9\xfb\xf7\xe5\xe4\xd3\xd5\xd3\xdf\xc6\xc2\xb6",
    // "CFArrayCreateMutable" / M(Xor3) / S(17) / L(20)
    "\x65\x60\x67\x54\x54\x47\x5f\x65\x54\x43\x47\x52\x43\x6b\x53\x52\x47\x44\x4a\x43\x26",
    // "" / M(None) / S(0) / L(0)
    "\x1b\x02\x97\x15\x98\x4b\xcd\xb8\xf5\x84\xc9\x58\x9a\x6f\x2d\xa1\x4f\x60\x68\x3d\xbe\x9d\x54\xd7\x2e\xaf\x38\x75\x91\x1c\x18\x34",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(26) / L(25)
    "\x2b\x34\x28\x34\x22\x2e\x2a\x34\x2b\x2b\x29\x2c\x29\x2f\x34\x2b\x2a\x2a\x34\x2c\x34\x2b\x2b\x34\x2b\x1a\x12\xf5\x45\x88\xe2\xed\x5e\x80",
    // "CC_SHA1_Init" / M(Xor1) / S(142) / L(12)
    "\xcd\xcd\xd1\xdd\xc6\xcf\xbf\xd1\xc7\xe0\xe7\xfa\x8e\x95\x37\x77",
    // "EVP_DigestFinal" / M(Xor3) / S(86) / L(15)
    "\x23\x30\x36\x39\x22\x0f\x01\x03\x15\x12\x20\x0f\x08\x07\x0a\x66",
    // "CFDictionarySetValue" / M(Xor1) / S(129) / L(20)
    "\xc2\xc7\xc5\xe8\xe2\xf5\xe8\xee\xef\xe0\xf3\xf8\xd2\xe4\xf5\xd7\xe0\xed\xf4\xe4\x81",
    // "CFDataCreateMutable" / M(Xor3) / S(158) / L(19)
    "\xf1\xf4\xf6\xd3\xc6\xd3\xf1\xc0\xd7\xd3\xc6\xd7\xff\xc7\xc6\xd3\xd0\xde\xd7\xb2",
    // "exit" / M(Xor2) / S(204) / L(4)
    "\xb9\xa4\xb5\xa8\xdc\x43\xbf\x1e\xb1\xf2\xbe\xa2\xc2\x21\x54\x0a",
    // "OBJ_txt2obj" / M(Xor3) / S(192) / L(11)
    "\x9f\x92\x9a\x8f\xa4\xa8\xa4\xe2\xbf\xb2\xba\xd0\xe2\x4d\x19\x1e",
    // "%02x" / M(Xor2) / S(1) / L(4)
    "\x34\x21\x23\x69\x11\x29\x62\xa0\x49\xfa\xc3\x82\x21\x27\x5b\x93",
    // "CFDateCompare" / M(Xor2) / S(210) / L(13)
    "\x81\x84\x86\xa3\xb6\xa7\x81\xad\xaf\xb2\xa3\xb0\xa7\xc2\x06\xf9",
    // "CFDateCreate" / M(Xor3) / S(149) / L(12)
    "\xe6\xe3\xe1\xc4\xd1\xc0\xe6\xd7\xc0\xc4\xd1\xc0\xa5\xfb\x61\xf6",
    // "" / M(None) / S(0) / L(0)
    "\x04\xda\xa4\x39\xce\x7b\x44\x76\x80\xcb\xeb\xaf\x93\x8a\xdd\x3d\x71\x52\xfa\xcf\x34\x84\x34\xfc\x7f\xb6\x8a\x79\xe0\x47\xf0\x0b",
    // "" / M(None) / S(0) / L(0)
    "\x8b\x75\xd4\x66\xe4\x12\x1e\x6e\xc3\x4f\xed\x2f\x9b\xe3\xfc\xdf\x6b\x50\x3c\x0f\x8f\x12\xf0\x36\x47\x29\x1c\x83\xa4\x32\x62\xcb",
    // "IOObjectRelease" / M(Rot) / S(124) / L(15)
    "\xc5\xcb\xcb\xde\xe6\xe1\xdf\xf0\xce\xe1\xe8\xe1\xdd\xef\xe1\x7c",
    // "kCFTypeArrayCallBacks" / M(Xor3) / S(201) / L(21)
    "\xb4\x9c\x99\x8b\xa6\xaf\xba\x9e\xad\xad\xbe\xa6\x9c\xbe\xb3\xb3\x9d\xbe\xbc\xb4\xac\xdf",
    // "SecCertificateCopyData" / M(Xor2) / S(231) / L(22)
    "\xa3\x95\x93\xb3\x95\x82\x84\x99\x96\x99\x93\x91\x84\x95\xb3\x9f\x80\x89\xb4\x91\x84\x91\xf0",
    // "kSecClass" / M(Xor4) / S(129) / L(9)
    "\x7b\x43\x75\x73\x53\x7c\x71\x63\x63\x10\x55\x2b\xe6\x1d\x84\x6a",
    // "com.iccir.Embrace" / M(Xor1) / S(202) / L(17)
    "\xa9\xa5\xa7\xe4\xa3\xa9\xa9\xa3\xb8\xe4\x8f\xa7\xa8\xb8\xab\xa9\xaf\xca",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x08\xff\x08\xc3\xe1\x98\xb4\xd3\x4f\x48\x5c\xd3\x23\x7f\xd8\x00\xc7\xdd\x4e\x62\x05\x53\xae\x33\xa2\x37\x26\x60\xf2\x43\x33",
    // "" / M(None) / S(0) / L(0)
    "\x34\x93\x14\xe7\xf7\x55\x71\x94\x00\x77\x11\x5d\xe0\xe6\x8d\xaf\x35\xd9\xff\xf0\x50\x8a\xee\xa9\xa4\x1b\xa0\xe8\x5b\x05\xcb\x69",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor3) / S(110) / L(48)
    "\xb0\xcc\xe6\xec\xeb\xfa\xf2\xb0\xd3\xf6\xfd\xed\xfe\xed\xe6\xb0\xd9\xed\xfe\xf2\xfa\xe8\xf0\xed\xf4\xec\xb0\xd6\xd0\xd4\xf6\xeb\xb1\xf9\xed\xfe\xf2\xfa\xe8\xf0\xed\xf4\xb0\xd6\xd0\xd4\xf6\xeb\x9f",
    // "SecKeychainSearchCopyNext" / M(Xor2) / S(191) / L(25)
    "\xce\xf8\xfe\xd6\xf8\xe4\xfe\xf5\xfc\xf4\xf3\xce\xf8\xfc\xef\xfe\xf5\xde\xf2\xed\xe4\xd3\xf8\xe5\xe9\x9d\xf4\x7f\x86\x44\x97\xef\x80\xaa",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x3f\x94\xf7\x8a\x2a\xca\x23\x0d\x47\xdf\x51\x89\x56\x98\x0a\xbb\x12\x85\x7f\x52\x69\xe2\xf9\xe7\xfb\x89\xec\xcc\x50\xaa\xc5",
    // "CC_SHA1_Update" / M(Xor2) / S(155) / L(14)
    "\xc8\xc8\xd4\xd8\xc3\xca\xba\xd4\xde\xfb\xef\xea\xff\xee\x8b\xb4",
    // "_MASReceipt" / M(Rot) / S(145) / L(11)
    "\xf0\xde\xd2\xe4\xe3\xf6\xf4\xf6\xfa\x01\x05\x91\x9c\x0c\x5d\xfe",
    // "SHA1_Update" / M(Xor4) / S(7) / L(11)
    "\x23\x38\x31\x41\x2f\x25\x00\x14\x11\x04\x15\x70\x62\x28\xca\xe2",
    // "CFDictionaryCreateMutable" / M(Xor3) / S(199) / L(25)
    "\xaa\xaf\xad\x80\x8a\x9d\x80\x86\x87\x88\x9b\x90\xaa\x9b\x8c\x88\x9d\x8c\xa4\x9c\x9d\x88\x8b\x85\x8c\xe9\x8a\x39\xdc\x5a\x03\x51\x7d\xf1",
    // "CFStringCreateWithBytes" / M(Xor4) / S(245) / L(23)
    "\xe3\xe6\xf3\xd4\xd2\xc9\xce\xc7\xe3\xd2\xc5\xc1\xd4\xc5\xf7\xc9\xd4\xc8\xe2\xd9\xd4\xc5\xd3\xa0\x7a\x3e\xe3\xf6\xe6\x94\x05\x51",
    // "CFStringCreateWithBytes" / M(Xor2) / S(217) / L(23)
    "\xba\xbf\xaa\x8d\x8b\x90\x97\x9e\xba\x8b\x9c\x98\x8d\x9c\xae\x90\x8d\x91\xbb\x80\x8d\x9c\x8a\xf9\x99\x82\x8b\x48\x8c\x9f\xc1\xaa",
    // "/usr/lib/libSystem.dylib" / M(Xor1) / S(150) / L(24)
    "\xb9\xe3\xe5\xe4\xb9\xfa\xff\xf4\xb9\xfa\xff\xf4\xc5\xef\xe5\xe2\xf3\xfb\xb8\xf2\xef\xfa\xff\xf4\x96\x0c\x6f\xff\x4d\x0f\x50\x72\xb9",
    // "Apple Root CA" / M(Xor3) / S(146) / L(13)
    "\xe3\xd2\xd2\xce\xc7\x82\xf0\xcd\xcd\xd6\x82\xe1\xe3\xa2\xf9\x54",
    // "X509_digest" / M(Xor3) / S(191) / L(11)
    "\x97\xfa\xff\xf6\x90\xab\xa6\xa8\xaa\xbc\xbb\xcf\xf9\x6f\xe9\xc0",
    // "%02X:" / M(Xor4) / S(25) / L(5)
    "\xb5\xa0\xa2\xc8\xaa\x90\x1a\xfe\x6a\xdf\x91\x30\x15\x54\x6e\x7d",
    // "IOIteratorNext" / M(Xor2) / S(158) / L(14)
    "\xc7\xc1\xc7\xfa\xeb\xfc\xef\xfa\xe1\xfc\xc0\xeb\xf6\xfa\x8e\xf8",
    // "kSecMatchSubjectContains" / M(Rot) / S(44) / L(24)
    "\x97\x7f\x91\x8f\x79\x8d\xa0\x8f\x94\x7f\xa1\x8e\x96\x91\x8f\xa0\x6f\x9b\x9a\xa0\x8d\x95\x9a\x9f\x2c\x5a\xca\xe4\x73\x09\x99\x2f\x4a",
    // "" / M(None) / S(0) / L(0)
    "\x2c\x8a\x1e\x86\xa8\xa8\x25\x49\x6d\xb0\x20\xf4\x81\x5a\x4f\xee\xe0\x8f\xd3\xdf\xb2\x43\x6f\x91\xcc\xe1\x67\x3f\xf0\xd6\x4b\xe7",
    // "X509_STORE_new" / M(Rot) / S(126) / L(14)
    "\xd6\xb3\xae\xb7\xdd\xd1\xd2\xcd\xd0\xc3\xdd\xec\xe3\xf5\x7e\x51",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(61) / L(36)
    "\x80\x83\x7f\xb2\xab\xa1\xa9\xa2\x84\xa2\xb1\x93\x9e\xa9\xb2\xa2\x83\xac\xaf\x86\xab\xa3\xac\x81\xa6\xa0\xb1\xa6\xac\xab\x9e\xaf\xb6\x88\xa2\xb6\x3d",
    // "" / M(None) / S(0) / L(0)
    "\xba\x5a\x83\xde\xde\xeb\x78\x32\x8a\x58\x74\xd9\x46\xce\x80\x87\x54\x6c\x5a\xab\x0f\xc7\x0e\xe3\xa6\x7c\xe6\xc7\x9c\x71\xa6\x94",
    // "ASN1_INTEGER_free" / M(Xor1) / S(224) / L(17)
    "\xa1\xb3\xae\xd1\xbf\xa9\xae\xb4\xa5\xa7\xa5\xb2\xbf\x86\x92\x85\x85\xe0",
    // "CFBundleCopyBundleURL" / M(Xor3) / S(3) / L(21)
    "\x5a\x5f\x5b\x6c\x77\x7d\x75\x7c\x5a\x76\x69\x60\x5b\x6c\x77\x7d\x75\x7c\x4c\x4b\x55\x19",
    // "BIO_write" / M(Xor2) / S(162) / L(9)
    "\xf0\xfb\xfd\xed\xc5\xc0\xdb\xc6\xd7\xb2\x8b\xf6\x5d\x71\x17\x53",
    // "sk_num" / M(Xor3) / S(221) / L(6)
    "\x9e\x86\xb2\x83\x98\x80\xed\x87\xee\xfd\x5e\xaa\x6e\x68\x1c\x4f",
    // "IOObjectRelease" / M(Rot) / S(91) / L(15)
    "\xa4\xaa\xaa\xbd\xc5\xc0\xbe\xcf\xad\xc0\xc7\xc0\xbc\xce\xc0\x5b",
    // "CFBundleUnloadExecutable" / M(Rot) / S(197) / L(24)
    "\x08\x0b\x07\x3a\x33\x29\x31\x2a\x1a\x33\x31\x34\x26\x29\x0a\x3d\x2a\x28\x3a\x39\x26\x27\x31\x2a\xc5\x81\xc4\x83\xe8\x58\x9b\xa9\xe8",
    // "sk_num" / M(Rot) / S(26) / L(6)
    "\x8d\x85\x79\x88\x8f\x87\x1a\x9b\x42\x4f\xed\x4c\x3c\x2c\x38\x17",
    // "%02x:" / M(Xor4) / S(39) / L(5)
    "\x55\x40\x42\x08\x4a\x70\xd3\x8a\x3c\x65\x3a\x77\xc8\x92\xe1\xe2",
    // "BIO_free" / M(Xor1) / S(46) / L(8)
    "\x6c\x67\x61\x71\x48\x5c\x4b\x4b\x2e\xed\x6c\x33\xad\xb0\xaf\x45",
    // "CFStringCreateWithCString" / M(Xor4) / S(7) / L(25)
    "\xad\xa8\xbd\x9a\x9c\x87\x80\x89\xad\x9c\x8b\x8f\x9a\x8b\xb9\x87\x9a\x86\xad\xbd\x9a\x9c\x87\x80\x89\xee\x2d\xbf\xb5\x8e\x04\xb9\x2c\xdd",
    // "kSecMatchLimitAll" / M(Xor4) / S(25) / L(17)
    "\xa9\x91\xa7\xa1\x8f\xa3\xb6\xa1\xaa\x8e\xab\xaf\xab\xb6\x83\xae\xae\xc2",
    // "SecKeychainOpen" / M(Xor3) / S(134) / L(15)
    "\xc5\xf3\xf5\xdd\xf3\xef\xf5\xfe\xf7\xff\xf8\xd9\xe6\xf3\xf8\x96",
    // "" / M(None) / S(0) / L(0)
    "\x17\xb9\x1a\xc5\xd1\xfd\x4e\xa6\x06\xfd\x66\xb3\x61\x9e\x79\x8e\x9a\x38\x66\xfe\xd1\xce\xd3\xbe\xa5\x54\x7b\x82\x9b\x82\x11\x09",
    // "" / M(None) / S(0) / L(0)
    "\x40\xbd\xe3\x20\xfc\x2c\xd5\x67\xcc\x56\x7f\x43\xae\x63\x12\x13\xd0\x33\x82\x90\xdd\x23\xc8\x52\xe4\x2f\x9b\x06\x7b\x0f\xc8\x01",
    // "" / M(None) / S(0) / L(0)
    "\x78\xec\x10\x91\x78\xa2\xe4\x34\x1a\xb9\x41\x08\x6d\x16\x67\x3e\x49\xc9\x1c\xd8\x22\xd0\x09\xec\xc0\xa0\x56\xa8\x39\x58\x55\xdf",
    // "EVP_DigestInit" / M(Rot) / S(51) / L(14)
    "\x78\x89\x83\x92\x77\x9c\x9a\x98\xa6\xa7\x7c\xa1\x9c\xa7\x33\x72",
    // "X509_free" / M(Xor4) / S(91) / L(9)
    "\xe8\x85\x80\x89\xef\xd6\xc2\xd5\xd5\xb0\xab\xdf\xa8\x60\x96\x52",
    // "EVP_DigestUpdate" / M(Rot) / S(32) / L(16)
    "\x65\x76\x70\x7f\x64\x89\x87\x85\x93\x94\x75\x90\x84\x81\x94\x85\x20",
    // "X509_get_ext_by_OBJ" / M(Xor4) / S(47) / L(19)
    "\xf4\x99\x9c\x95\xf3\xcb\xc9\xd8\xf3\xc9\xd4\xd8\xf3\xce\xd5\xf3\xe3\xee\xe6\xac",
    // "PKCS7_verify" / M(Rot) / S(101) / L(12)
    "\xb5\xb0\xa8\xb8\x9c\xc4\xdb\xca\xd7\xce\xcb\xde\x65\x0d\x89\x53",
    // "SecCertificateCopyData" / M(Xor2) / S(218) / L(22)
    "\x9e\xa8\xae\x8e\xa8\xbf\xb9\xa4\xab\xa4\xae\xac\xb9\xa8\x8e\xa2\xbd\xb4\x89\xac\xb9\xac\xcd",
    // "" / M(None) / S(0) / L(0)
    "\x5f\xa7\xa6\xac\x7b\x1d\xef\x17\xeb\x33\xa5\xf4\x15\x45\x2a\x15\xb1\x7e\x44\xf5\xfe\x5e\x5d\x55\x39\x4e\xda\xf9\xe6\x1c\x41\xac",
    // "BIO_free" / M(Xor2) / S(86) / L(8)
    "\x04\x0f\x09\x19\x20\x34\x23\x23\x46\x84\xe8\x91\xec\x73\xe7\xe2",
    // "CFDataCreate" / M(Xor3) / S(144) / L(12)
    "\xe3\xe6\xe4\xc1\xd4\xc1\xe3\xd2\xc5\xc1\xd4\xc5\xa0\xf9\x8b\xed",
    // "CFBundleVersion" / M(Xor1) / S(61) / L(15)
    "\x7e\x7b\x7f\x48\x53\x59\x51\x58\x6b\x58\x4f\x4e\x54\x52\x53\x3d",
    // "" / M(None) / S(0) / L(0)
    "\x38\xf9\x13\xe4\xd0\xdb\xef\x84\x17\xca\x6b\xb0\xdc\xad\x0e\x7c\x5b\x1d\x09\xe6\x00\x7a\x28\xb5\x9d\x74\xd9\x08\x6a\x01\x8b\x4a",
    // "X509_STORE_free" / M(Rot) / S(8) / L(15)
    "\x60\x3d\x38\x41\x67\x5b\x5c\x57\x5a\x4d\x67\x6e\x7a\x6d\x6d\x08",
    // "CFDictionaryGetValue" / M(Xor3) / S(181) / L(20)
    "\x89\x8c\x8e\xa3\xa9\xbe\xa3\xa5\xa4\xab\xb8\xb3\x8d\xaf\xbe\x9c\xab\xa6\xbf\xaf\xca",
    // "ASN1_get_object" / M(Xor4) / S(26) / L(15)
    "\xe1\xf3\xee\x91\xff\xc7\xc5\xd4\xff\xcf\xc2\xca\xc5\xc3\xd4\xa0",
    // "longjmp" / M(Xor2) / S(150) / L(7)
    "\xea\xe9\xe8\xe1\xec\xeb\xf6\x86\xa3\x04\x68\xde\x7b\xdc\x24\x9a",
    // "start" / M(Xor4) / S(186) / L(5)
    "\xd3\xd4\xc1\xd2\xd4\xa0\x18\x3d\x5b\xf2\xd9\x2f\x8c\xeb\x37\x25",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(202) / L(59)
    "\x00\xfb\x04\xfb\x2f\x04\xff\x2c\x04\x00\x00\x04\xfc\x2d\x04\xff\x03\x04\xfd\x2b\x04\xfa\x02\x04\x30\x30\x04\xff\x02\x04\x2e\xfb\x04\xfe\x2b\x04\x2f\xfc\x04\xfc\xfe\x04\xff\xfc\x04\x2e\xfb\x04\x03\x02\x04\x2e\x30\x04\x00\x2d\x04\x00\xfa\xca\x2a\xea\x2a\xc1\xad\xcd\xd2\xe2",
    // "BIO_new" / M(Rot) / S(39) / L(7)
    "\x69\x70\x76\x86\x95\x8c\x9e\x27\xfa\xdb\xae\x6c\xfa\x37\x5b\xa4",
    // "" / M(None) / S(0) / L(0)
    "\x23\xd0\xfd\xf4\xbe\xc6\x39\x95\xcc\xae\xcb\x6e\x40\x1b\x80\xf3\x25\x5e\x3d\x51\x95\x38\x55\xda\xcc\x7c\xb7\x8d\x79\x46\x50\xc1",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor4) / S(149) / L(39)
    "\xb3\xb6\xa5\xa2\xbc\xb3\x82\x95\x91\x84\x95\xb6\x82\x9f\x9d\xb6\x99\x9c\x95\xa3\x89\x83\x84\x95\x9d\xa2\x95\x80\x82\x95\x83\x95\x9e\x84\x91\x84\x99\x9f\x9e\xf0\xb8\xdd\xf4\x44\x2f\x39\x3e\xb5",
    // "IOMACAddress" / M(Rot) / S(184) / L(12)
    "\x01\x07\x05\xf9\xfb\xf9\x1c\x1c\x2a\x1d\x2b\x2b\xb8\xec\xba\x1e",
    // "" / M(None) / S(0) / L(0)
    "\x73\xba\xc7\xfd\x27\x04\x4c\x45\xc1\xb4\xcb\xde\x47\x0e\xf5\xba\xd5\xa8\xc4\x37\x20\x11\x5c\xab\x98\x2a\x19\xec\x9a\x85\xd4\xc8",
    // "kSecMatchLimit" / M(Xor4) / S(143) / L(14)
    "\x9b\xa3\x95\x93\xbd\x91\x84\x93\x98\xbc\x99\x9d\x99\x84\xf0\x37",
    // "CFReadStreamRead" / M(Xor2) / S(29) / L(16)
    "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x5e\x69\x6d\x68\x0c",
    // "receipt" / M(Xor1) / S(7) / L(7)
    "\x75\x62\x64\x62\x6e\x77\x73\x07\xe0\x44\x1d\x46\x9f\x02\x84\xba",
    // "IORegistryEntryCreateCFProperty" / M(Rot) / S(172) / L(31)
    "\xf5\xfb\xfe\x11\x13\x15\x1f\x20\x1e\x25\xf1\x1a\x20\x1e\x25\xef\x1e\x11\x0d\x20\x11\xef\xf2\xfc\x1e\x1b\x1c\x11\x1e\x20\x25\xac",
    // "CFStringCompare" / M(Rot) / S(195) / L(15)
    "\x06\x09\x16\x37\x35\x2c\x31\x2a\x06\x32\x30\x33\x24\x35\x28\xc3",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(58) / L(25)
    "\x92\x6f\x6a\x73\x99\x88\x7b\x87\x7f\x99\xa1\x9f\xae\x99\xae\x9f\xb2\xae\x99\x9c\xb3\x99\x88\x83\x7e\x3a\xcb\xb5\x3f\xdb\xd1\xf3\x8f\x1f",
    // "alloc" / M(Xor4) / S(63) / L(5)
    "\x91\x9c\x9c\x9f\x93\xf0\xed\xe3\x13\x78\x7c\x94\xd6\xc0\xbf\x47",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(134) / L(23)
    "\xf5\xed\xf4\xc3\xc5\xc3\xcf\xd6\xd2\xf4\xc3\xc0\xd4\xc3\xd5\xce\xf4\xc3\xd7\xd3\xc3\xd5\xd2\xa6\xe3\x1f\xec\x24\x3d\xc7\x02\x08",
    // "SecKeychainSearchCopyNext" / M(Xor2) / S(221) / L(25)
    "\xac\x9a\x9c\xb4\x9a\x86\x9c\x97\x9e\x96\x91\xac\x9a\x9e\x8d\x9c\x97\xbc\x90\x8f\x86\xb1\x9a\x87\x8b\xff\x53\xeb\xf6\x4b\xf2\x44\x9a\xb4",
    // "CFDictionaryCreateMutable" / M(Xor2) / S(205) / L(25)
    "\xac\xa9\xab\x86\x8c\x9b\x86\x80\x81\x8e\x9d\x96\xac\x9d\x8a\x8e\x9b\x8a\xa2\x9a\x9b\x8e\x8d\x83\x8a\xef\x85\x13\x48\xc2\xf4\x87\x66\xd3",
    // "CFEqual" / M(Xor2) / S(73) / L(7)
    "\x1a\x1f\x1c\x28\x2c\x38\x35\x59\x9b\x8c\x61\xa5\x1f\x0e\x85\x08",
    // "SecKeychainOpen" / M(Xor3) / S(10) / L(15)
    "\x49\x7f\x79\x51\x7f\x63\x79\x72\x7b\x73\x74\x55\x6a\x7f\x74\x1a",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(129) / L(48)
    "\x9f\xe3\xc9\xc3\xc4\xd5\xdd\x9f\xfc\xd9\xd2\xc2\xd1\xc2\xc9\x9f\xf6\xc2\xd1\xdd\xd5\xc7\xdf\xc2\xdb\xc3\x9f\xf9\xff\xfb\xd9\xc4\x9e\xd6\xc2\xd1\xdd\xd5\xc7\xdf\xc2\xdb\x9f\xf9\xff\xfb\xd9\xc4\xb0",
    // "" / M(None) / S(0) / L(0)
    "\xea\xb2\xa6\xfd\xda\x89\x84\x7b\xf3\x01\xe8\xca\xd6\x4b\x9d\x46\xc6\x5f\x16\x73\xbc\x38\x51\x0b\x16\x28\xd7\xfe\xb3\xbf\x42\xdc",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor1) / S(73) / L(43)
    "\x0a\x0f\x1c\x1b\x05\x0a\x3b\x2c\x28\x3d\x2c\x1e\x20\x3d\x21\x0f\x20\x25\x2c\x1a\x30\x3a\x3d\x2c\x24\x19\x28\x3d\x21\x1b\x2c\x25\x28\x3d\x20\x3f\x2c\x1d\x26\x0b\x28\x3a\x2c\x49\x8b\x71\xfb\xa8\x2b\x70\x83\x20",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(42) / L(40)
    "\x3c\x3b\x3b\x4f\x3f\x48\x3c\x3c\x38\x49\x3f\x33\x39\x4b\x3a\x32\x4c\x4c\x3f\x32\x4e\x3b\x3e\x4b\x4f\x38\x38\x3e\x3f\x38\x4e\x3b\x33\x32\x4e\x4c\x3c\x49\x3c\x3a\x0a\xef\x48\xf2\xce\x36\x6a\x49\xc5",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(126) / L(39)
    "\xed\xe8\xfa\xc7\xc3\xcb\xf4\xc1\xc0\xcb\xed\xdc\xcb\xcf\xda\xcb\xf9\xc7\xda\xc6\xfa\xc7\xc3\xcb\xe7\xc0\xda\xcb\xdc\xd8\xcf\xc2\xe8\xdc\xc1\xc3\xe9\xe3\xfa\xae\xbd\x4f\x20\xb9\xf8\x61\x79\xec",
    // "IOBSDNameMatching" / M(Xor1) / S(223) / L(17)
    "\x96\x90\x9d\x8c\x9b\x91\xbe\xb2\xba\x92\xbe\xab\xbc\xb7\xb6\xb1\xb8\xdf",
    // "" / M(None) / S(0) / L(0)
    "\x88\xfe\xf0\xb7\x41\xb9\x23\xd4\x2f\x0c\xc8\xd0\x64\x2d\x2c\x4a\x5b\x8e\x8b\xed\x7c\xed\x22\x6d\xb2\x4f\x42\x75\xfb\xfe\x16\xfc",
    // "" / M(None) / S(0) / L(0)
    "\xce\x4a\x6b\x09\xef\x41\x3f\xc3\x72\x91\xc7\x65\xd5\xf2\x94\x54\xf8\x4f\x8b\x9b\xee\xd6\xd8\x6a\xbf\xe8\xc2\x64\x9b\x43\xbf\x1e",
    // "" / M(None) / S(0) / L(0)
    "\xb1\xf2\xbe\xa2\xc2\x21\x54\x0a\x7c\x4a\x3e\x63\xcb\xfa\x40\x97\x8e\x5b\x3e\xd2\x8b\xcf\xbf\x15\x46\x28\x75\xa4\x88\x6f\x4f\x00",
    // "" / M(None) / S(0) / L(0)
    "\x67\x86\xa7\x57\x81\xa0\x60\x80\x6c\x11\xbb\x73\x4f\x5e\x80\x9f\xd2\xaf\x7e\x1d\xb2\x72\x85\x42\x8a\x39\x04\x72\x04\x13\xd2\xcb",
    // "PKCS7_free" / M(Xor1) / S(210) / L(10)
    "\x82\x99\x91\x81\xe5\x8d\xb4\xa0\xb7\xb7\xd2\x70\x98\xbe\xe0\x64",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(4) / L(59)
    "\x7e\x79\x72\x79\x0d\x72\x7d\x0a\x72\x7e\x7e\x72\x7a\x0b\x72\x7d\x71\x72\x7b\x09\x72\x78\x70\x72\x0e\x0e\x72\x7d\x70\x72\x0c\x79\x72\x7c\x09\x72\x0d\x7a\x72\x7a\x7c\x72\x7d\x7a\x72\x0c\x79\x72\x71\x70\x72\x0c\x0e\x72\x7e\x0b\x72\x7e\x78\x48\x5a\x3e\x2c\x31\x50\x5f\x58\x45",
    // "." / M(Xor3) / S(221) / L(1)
    "\xc3\xed\xff\xd3\x97\x60\x20\xca\x04\x48\xa7\xb9\x2e\x04\x74\xd1",
    // "CFRelease" / M(Rot) / S(27) / L(9)
    "\x5e\x61\x6d\x80\x87\x80\x7c\x8e\x80\x1b\xff\x08\xc3\xe1\x98\xb4",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(140) / L(37)
    "\xe9\xec\xff\xf8\xe6\xe9\xd8\xcf\xcb\xde\xcf\xe9\xc5\xda\xd3\xeb\xda\xda\xcf\xc4\xce\xc3\xc4\xcd\xfa\xcb\xde\xc2\xe9\xc5\xc7\xda\xc5\xc4\xcf\xc4\xde\xaa",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(46) / L(29)
    "\x3f\x17\x12\x00\x2d\x24\x31\x10\x3d\x37\x20\x3d\x3b\x3a\x35\x26\x2d\x1f\x31\x2d\x17\x35\x38\x38\x16\x35\x37\x3f\x27\x54\x73\xf7\x10\x0a\x99\xee\x4b\xff",
    // "Contents" / M(Xor4) / S(69) / L(8)
    "\x13\x3f\x3e\x24\x35\x3e\x24\x23\x50\x32\xae\xb7\xfe\x18\x88\x88",
    // "" / M(None) / S(0) / L(0)
    "\xc0\x80\x6f\x07\x12\xc0\x77\xff\x24\x22\xb1\x09\x73\xc6\xe3\xd8\xc0\x2a\x7b\xdd\xe1\x37\x7a\x0c\x7c\xf2\x85\x81\xc6\x20\x7f\x86",
    // "" / M(None) / S(0) / L(0)
    "\x7e\xa4\x94\x4f\xae\x54\x27\x5a\xd2\xcd\xc5\x51\x74\x97\x1b\xc7\x98\xbb\x07\x42\xa2\xe3\x84\xad\xad\x45\x14\x50\x6a\xb0\x14\xee",
    // "" / M(None) / S(0) / L(0)
    "\x63\xbb\x36\x32\x39\xdf\x8f\xbc\x70\xe7\x21\x84\x48\x69\xd8\x65\xbd\xcc\x60\x8f\xdd\x6d\xd8\xbf\x8e\xae\xda\x4a\xc1\xc9\xe7\x1a",
    // "strncmp" / M(Xor4) / S(208) / L(7)
    "\x73\x74\x72\x6e\x63\x6d\x70\x00\xcd\xcc\xa0\xa0\x89\x4b\xbb\x91",
    // "ASN1_INTEGER_get" / M(Xor3) / S(199) / L(16)
    "\x99\x8b\x96\xe9\x87\x91\x96\x8c\x9d\x9f\x9d\x8a\x87\xbf\xbd\xac\xd8",
    // "en0" / M(Xor4) / S(135) / L(3)
    "\x15\x1e\x40\x70\x42\x54\xd4\xf1\x60\x6b\xb4\xd3\x55\x84\x80\xd9",
    // "" / M(None) / S(0) / L(0)
    "\xe3\x4c\xf4\xe4\xd4\x38\x77\x0b\x0b\xab\xbe\xbc\x85\x9b\xa2\x8b\x54\x63\x68\x51\x8a\x80\x34\x4e\xdb\x3e\x07\xb4\xda\xe0\xe2\xcb",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(172) / L(24)
    "\x8e\x8b\x89\xac\xb9\xa8\x8b\xa2\xbf\xa0\xac\xb9\xb9\xa8\xbf\x9e\xa8\xb9\x8b\xa2\xbf\xa0\xac\xb9\xcd\x41\x1f\xcb\xc2\xb1\x2f\xd5\x92",
    // "Contents" / M(Xor3) / S(170) / L(8)
    "\xf9\xd5\xd4\xce\xdf\xd4\xce\xc9\xba\x29\x24\x1e\xeb\x58\x1e\xc1",
    // "dlsym" / M(Xor1) / S(198) / L(5)
    "\xa2\xaa\xb5\xbf\xab\xc6\xc4\x37\x20\x11\x5c\xab\x98\x2a\x19\xec",
    // "" / M(None) / S(0) / L(0)
    "\xfe\xfd\xac\xef\xbb\x6d\x13\x66\x6a\x03\x35\x42\xb1\x24\xab\x81\x88\x73\xf2\x3f\x4d\xc4\x41\xb5\x7f\x6c\x53\xf4\xfe\x65\x37\x1e",
    // "IOServiceGetMatchingServices" / M(Rot) / S(111) / L(28)
    "\xb8\xbe\xc2\xd4\xe1\xe5\xd8\xd2\xd4\xb6\xd4\xe3\xbc\xd0\xe3\xd2\xd7\xd8\xdd\xd6\xc2\xd4\xe1\xe5\xd8\xd2\xd4\xe2\x6f\x5e\x7b\x2f\xc4\x43\xeb\x22\x93",
    // "IOMACAddress" / M(Xor4) / S(242) / L(12)
    "\x69\x6f\x6d\x61\x63\x61\x44\x44\x52\x45\x53\x53\x20\xbb\x66\xa1",
    // "CFDataGetBytePtr" / M(Xor2) / S(26) / L(16)
    "\x48\x4d\x4f\x6a\x7f\x6a\x4c\x6e\x7f\x49\x72\x7f\x6e\x5b\x7f\x79\x0b",
    // "CFBundleIdentifier" / M(Xor2) / S(196) / L(18)
    "\x94\x91\x95\xa2\xb9\xb3\xbb\xb2\x9e\xb3\xb2\xb9\xa3\xbe\xb1\xbe\xb2\xa5\xd7",
    // "_MASReceipt/receipt" / M(Rot) / S(71) / L(19)
    "\xa6\x94\x88\x9a\x99\xac\xaa\xac\xb0\xb7\xbb\x76\xb9\xac\xaa\xac\xb0\xb7\xbb\x47",
    // "X509_STORE_add_cert" / M(Xor1) / S(102) / L(19)
    "\x3e\x53\x56\x5f\x39\x35\x32\x29\x34\x23\x39\x07\x02\x02\x39\x05\x03\x14\x12\x66",
    // "CFStringCreateWithBytes" / M(Xor2) / S(250) / L(23)
    "\x99\x9c\x89\xae\xa8\xb3\xb4\xbd\x99\xa8\xbf\xbb\xae\xbf\x8d\xb3\xae\xb2\x98\xa3\xae\xbf\xa9\xda\x35\xd9\xff\xf0\x50\x8a\xee\xa9",
    // "CFDataGetBytePtr" / M(Xor2) / S(31) / L(16)
    "\x4d\x48\x4a\x6f\x7a\x6f\x49\x6b\x7a\x4c\x77\x7a\x6b\x5e\x7a\x7c\x0e",
    // "ASN1_INTEGER_get" / M(Xor1) / S(198) / L(16)
    "\x87\x95\x88\xf7\x99\x8f\x88\x92\x83\x81\x83\x94\x99\xa1\xa3\xb2\xc6",
    // "" / M(None) / S(0) / L(0)
    "\xca\xfa\x7c\x18\x78\x0e\xe2\x7c\xc5\xa6\xcd\xc7\x20\xc3\xe1\x90\xef\x8a\x2c\xba\x4e\xf7\x3a\x9b\x23\xdf\xb6\x90\xd4\xcd\x2a\xeb",
    // "Contents" / M(Xor2) / S(196) / L(8)
    "\x97\xbb\xba\xa0\xb1\xba\xa0\xa7\xd4\xc4\x23\x6e\x6e\x2f\xd7\x0f",
    // "X509_get_ext_by_OBJ" / M(Xor4) / S(161) / L(19)
    "\xcc\xa1\xa4\xad\xcb\xf3\xf1\xe0\xcb\xf1\xec\xe0\xcb\xf6\xed\xcb\xdb\xd6\xde\x94",
    // "" / M(None) / S(0) / L(0)
    "\x07\xd9\xcf\x8a\xe8\x34\x4e\x6c\x2b\xc0\x68\x8f\x5c\x1b\xb2\x27\x55\x8d\x7c\xa8\x39\x03\x86\x32\x5e\x82\x21\x22\x8b\x80\x2f\x38",
    // "X509_STORE_new" / M(Xor4) / S(133) / L(14)
    "\x08\x65\x60\x69\x0f\x03\x04\x1f\x02\x15\x0f\x3e\x35\x27\x50\x79",
    // "CFBundleIdentifier" / M(Xor3) / S(156) / L(18)
    "\xec\xe9\xed\xda\xc1\xcb\xc3\xca\xe6\xcb\xca\xc1\xdb\xc6\xc9\xc6\xca\xdd\xaf",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(221) / L(57)
    "\x30\x4c\x66\x6c\x6b\x7a\x72\x30\x53\x76\x7d\x6d\x7e\x6d\x66\x30\x54\x7a\x66\x7c\x77\x7e\x76\x71\x6c\x30\x4c\x66\x6c\x6b\x7a\x72\x4d\x70\x70\x6b\x5c\x7a\x6d\x6b\x76\x79\x76\x7c\x7e\x6b\x7a\x6c\x31\x74\x7a\x66\x7c\x77\x7e\x76\x71\x1f\x8a\x00\x7a\x39\x87\x9c\xac\xee",
    // "kSecMatchLimitAll" / M(Xor3) / S(131) / L(17)
    "\xfe\xc6\xf0\xf6\xd8\xf4\xe1\xf6\xfd\xd9\xfc\xf8\xfc\xe1\xd4\xf9\xf9\x95",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(157) / L(29)
    "\x08\xe0\xe3\xf1\x16\x0d\x02\xe1\x06\x00\x11\x06\x0c\x0b\xfe\x0f\x16\xe8\x02\x16\xe0\xfe\x09\x09\xdf\xfe\x00\x08\x10\x9d\x94\x6f\xab\x01\x25\x3f\x3b\x12",
    // "kSecMatchSearchList" / M(Xor2) / S(152) / L(19)
    "\xe7\xdf\xe9\xef\xc1\xed\xf8\xef\xe4\xdf\xe9\xed\xfe\xef\xe4\xc0\xe5\xff\xf8\x8c",
    // "CFDataGetLength" / M(Xor3) / S(252) / L(15)
    "\x4f\x4a\x48\x6d\x78\x6d\x4b\x69\x78\x40\x69\x62\x6b\x78\x64\x0c",
    // "strlen" / M(Rot) / S(185) / L(6)
    "\x2c\x2d\x2b\x25\x1e\x27\xb9\x28\x00\x95\x38\x1b\xd0\x7e\x24\x07",
    // "CFDictionaryGetValue" / M(Xor1) / S(141) / L(20)
    "\xce\xcb\xc9\xe4\xee\xf9\xe4\xe2\xe3\xec\xff\xf4\xca\xe8\xf9\xdb\xec\xe1\xf8\xe8\x8d",
    // "/usr/lib/libobjc.dylib" / M(Xor4) / S(229) / L(22)
    "\xbc\xe6\xe0\xe1\xbc\xff\xfa\xf1\xbc\xff\xfa\xf1\xfc\xf1\xf9\xf0\xbd\xf7\xea\xff\xfa\xf1\x93",
    // "kCFTypeArrayCallBacks" / M(Xor1) / S(218) / L(21)
    "\xb1\x99\x9c\x8e\xa3\xaa\xbf\x9b\xa8\xa8\xbb\xa3\x99\xbb\xb6\xb6\x98\xbb\xb9\xb1\xa9\xda",
    // "SHA1_Update" / M(Xor4) / S(176) / L(11)
    "\x53\x48\x41\x31\x5f\x55\x70\x64\x61\x74\x65\x00\xbd\xbd\xe7\xfd",
    // "SHA1_Init" / M(Xor2) / S(204) / L(9)
    "\x8f\x94\x9d\xed\x83\x95\xb2\xb5\xa8\xdc\x24\x8c\xd6\xe5\xd9\xa2",
    // "IOMACAddress" / M(Xor1) / S(231) / L(12)
    "\xae\xa8\xaa\xa6\xa4\xa6\x83\x83\x95\x82\x94\x94\xe7\xf6\x6a\x4d",
    // "CFReadStreamRead" / M(Xor1) / S(15) / L(16)
    "\x4c\x49\x5d\x6a\x6e\x6b\x5c\x7b\x7d\x6a\x6e\x62\x5d\x6a\x6e\x6b\x0f",
    // "CFDataGetLength" / M(Xor4) / S(244) / L(15)
    "\x03\x06\x04\x21\x34\x21\x07\x25\x34\x0c\x25\x2e\x27\x34\x28\x40",
    // "CFBundleShortVersionString" / M(Xor3) / S(10) / L(26)
    "\x6e\x6b\x6f\x58\x43\x49\x41\x48\x7e\x45\x42\x5f\x59\x7b\x48\x5f\x5e\x44\x42\x43\x7e\x59\x5f\x44\x43\x4a\x2d\xc0\x47\x94\x12\x17\xb4\x39\x6a",
    // "CFBundleGetIdentifier" / M(Rot) / S(157) / L(21)
    "\xe0\xe3\xdf\x12\x0b\x01\x09\x02\xe4\x02\x11\xe6\x01\x02\x0b\x11\x06\x03\x06\x02\x0f\x9d",
    // "EVP_MD_CTX_init" / M(Xor3) / S(94) / L(15)
    "\x2b\x38\x3e\x31\x23\x2a\x31\x2d\x3a\x36\x31\x07\x00\x07\x1a\x6e",
    // "" / M(None) / S(0) / L(0)
    "\x44\xe6\x0f\x97\xaf\xdf\xf9\xbd\x6c\x13\xfb\x2e\xc5\xff\x8c\x02\xf5\xd8\x29\xe1\xd1\x94\x4e\x74\x27\x07\xde\x71\xf1\xa0\xd6\xb3",
    // "d2i_PKCS7_bio" / M(Xor2) / S(238) / L(13)
    "\x9a\xcc\x97\xa1\xae\xb5\xbd\xad\xc9\xa1\x9c\x97\x91\xfe\xcb\x6e",
    // "CFArrayCreateMutable" / M(Xor3) / S(151) / L(20)
    "\xef\xea\xed\xde\xde\xcd\xd5\xef\xde\xc9\xcd\xd8\xc9\xe1\xd9\xd8\xcd\xce\xc0\xc9\xac",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(13) / L(36)
    "\x71\x74\x70\x47\x5c\x56\x5e\x57\x75\x57\x46\x64\x53\x5e\x47\x57\x74\x5d\x40\x7b\x5c\x54\x5d\x76\x5b\x51\x46\x5b\x5d\x5c\x53\x40\x4b\x79\x57\x4b\x32",
    // "X509_STORE_add_cert" / M(Xor4) / S(80) / L(19)
    "\x18\x75\x70\x79\x1f\x13\x14\x0f\x12\x05\x1f\x21\x24\x24\x1f\x23\x25\x32\x34\x40",
    // "CFDateFormatterSetProperty" / M(Xor4) / S(179) / L(26)
    "\x3a\x3f\x3d\x18\x0d\x1c\x3f\x16\x0b\x14\x18\x0d\x0d\x1c\x0b\x2a\x1c\x0d\x29\x0b\x16\x09\x1c\x0b\x0d\x00\x79\x85\x67\x64\x38\x4f\x5b\x08\xfd",
    // "IOMasterPort" / M(Xor4) / S(229) / L(12)
    "\x19\x1f\x1d\x31\x23\x24\x35\x22\x00\x3f\x22\x24\x50\x80\x63\x3f",
    // "Contents/_MASReceipt/receipt" / M(Rot) / S(99) / L(28)
    "\xa6\xd2\xd1\xd7\xc8\xd1\xd7\xd6\x92\xc2\xb0\xa4\xb6\xb5\xc8\xc6\xc8\xcc\xd3\xd7\x92\xd5\xc8\xc6\xc8\xcc\xd3\xd7\x63\x5f\xec\x8e\x1a\x0b\x2a\x21\x22",
    // "" / M(None) / S(0) / L(0)
    "\x3c\x4c\xcf\x07\x00\x55\x71\x23\xe3\xf7\xbd\x2b\x18\x70\x96\x3c\x34\x6a\xb8\x6d\xed\x54\x94\xd4\xf5\x54\xb6\xe7\x07\x43\x94\x6f",
    // "CFArrayGetValueAtIndex" / M(Xor1) / S(128) / L(22)
    "\xc3\xc6\xc1\xf2\xf2\xe1\xf9\xc7\xe5\xf4\xd6\xe1\xec\xf5\xe5\xc1\xf4\xc9\xee\xe4\xe5\xf8\x80",
    // "X509_STORE_free" / M(Xor4) / S(151) / L(15)
    "\x28\x45\x40\x49\x2f\x23\x24\x3f\x22\x35\x2f\x16\x02\x15\x15\x70",
    // "glob_b" / M(Xor3) / S(107) / L(6)
    "\x1c\x17\x14\x19\x24\x19\x7b\xb2\x36\x13\x01\xe7\xa7\xff\x50\x02",
    // "CFReadStreamCreateWithFile" / M(Rot) / S(136) / L(26)
    "\xcb\xce\xda\xed\xe9\xec\xdb\xfc\xfa\xed\xe9\xf5\xcb\xfa\xed\xe9\xfc\xed\xdf\xf1\xfc\xf0\xce\xf1\xf4\xed\x88\x54\x8b\x30\xf5\x39\xec\x79\x44",
    // "en0" / M(Xor3) / S(184) / L(3)
    "\xad\xa6\xf8\xc8\x7b\xa9\x75\x9a\x9b\xa9\x8c\xe2\xc6\xe2\x3a\xa2",
    // "init" / M(Xor3) / S(222) / L(4)
    "\x87\x80\x87\x9a\xee\x25\x64\x94\x1e\x4c\x35\x99\xef\x4e\x68\xec",
    // "" / M(None) / S(0) / L(0)
    "\xab\x01\x25\x3f\xde\xdf\x12\x3b\xe6\xa4\xe4\x7c\xc2\x03\xcf\x42\x78\xc0\x2b\xc3\xec\x27\x88\x1a\xd7\x1c\xc7\xa9\x51\x28\x22\xdf",
    // "IORegistryEntryCreateCFProperty" / M(Xor1) / S(65) / L(31)
    "\x08\x0e\x13\x24\x26\x28\x32\x35\x33\x38\x04\x2f\x35\x33\x38\x02\x33\x24\x20\x35\x24\x02\x07\x11\x33\x2e\x31\x24\x33\x35\x38\x41",
    // "X509_NAME_get_text_by_NID" / M(Xor2) / S(116) / L(25)
    "\x0e\x63\x66\x6f\x09\x18\x17\x1b\x13\x09\x31\x33\x22\x09\x22\x33\x2e\x22\x09\x34\x2f\x09\x18\x1f\x12\x56\x8b\x06\x7b\x97\x15\x0a\x3b\x2e",
    // "CFDataCreateMutable" / M(Xor2) / S(178) / L(19)
    "\xe5\xe0\xe2\xc7\xd2\xc7\xe5\xd4\xc3\xc7\xd2\xc3\xeb\xd3\xd2\xc7\xc4\xca\xc3\xa6",
    // "" / M(None) / S(0) / L(0)
    "\xea\x6a\x79\x5d\x31\x33\xf9\x54\x81\x6d\x3d\xc6\xe3\x70\x6f\xfe\xea\xc4\x55\x2b\xe6\x1d\x84\x6a\x92\x92\x45\x70\x10\x17\x9b\x18",
    // "2.0" / M(Xor3) / S(118) / L(3)
    "\xb4\xa8\xb6\x86\x71\xa6\x91\xd3\xe3\x69\x90\x46\xc6\x04\xc8\xdb",
    // "longjmp" / M(Rot) / S(100) / L(7)
    "\xd0\xd3\xd2\xcb\xce\xd1\xd4\x64\x77\xda\x94\xa5\x45\x32\xbe\xad",
    // "SecItemCopyMatching" / M(Xor3) / S(204) / L(19)
    "\xb3\x85\x83\xa9\x94\x85\x8d\xa3\x8f\x90\x99\xad\x81\x94\x83\x88\x89\x8e\x87\xe0",
    // "dlopen" / M(Xor2) / S(148) / L(6)
    "\xe0\xe8\xeb\xf4\xe1\xea\x84\xfd\x27\x04\x4c\x45\xc1\xb4\xcb\xde",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor2) / S(99) / L(37)
    "\x16\x20\x26\x0e\x20\x3c\x26\x2d\x24\x2c\x2b\x16\x20\x24\x37\x26\x2d\x06\x37\x20\x24\x31\x20\x03\x37\x2a\x28\x04\x31\x31\x37\x2c\x27\x30\x31\x20\x36\x45",
    // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(24) / L(24)
    "\x7a\x7f\x78\x5b\x4a\x56\x55\x4c\x4d\x5c\x6d\x50\x54\x5c\x7e\x5c\x4d\x7a\x4c\x4b\x4b\x5c\x57\x4d\x39\x06\x1e\xaf\xf3\x6a\x3e\x42\x8c",
    // "" / M(None) / S(0) / L(0)
    "\x31\xdb\x8f\xca\xee\xec\xdb\xe9\x7d\x01\xe0\x4e\x0f\x85\xb1\x59\xad\x41\xac\x79\x7f\xd6\x57\x7d\x15\x42\xd6\x9b\x6a\x6c\x0e\xb8",
    // "kSecReturnRef" / M(Xor3) / S(196) / L(13)
    "\xbf\x87\xb1\xb7\x86\xb1\xa0\xa1\xa6\xba\x86\xb1\xb2\xd4\xa8\x2a",
    // "setjmp" / M(Xor4) / S(98) / L(6)
    "\x53\x45\x54\x4a\x4d\x50\x20\x29\x7d\x00\x01\xef\x2d\xf2\x6f\x8d",
    // "ASN1_INTEGER_free" / M(Xor4) / S(29) / L(17)
    "\x4b\x59\x44\x3b\x55\x43\x44\x5e\x4f\x4d\x4f\x58\x55\x6c\x78\x6f\x6f\x0a",
    // "" / M(None) / S(0) / L(0)
    "\x89\x9b\x45\xff\x16\xd3\x82\xa5\xcd\x80\xe2\xcd\xf4\x09\xa9\xc8\xa8\x1e\x15\xd5\x4e\xa6\xff\xaa\x62\x23\xce\x3f\xc0\xf2\xb2\x62",
    // "" / M(None) / S(0) / L(0)
    "\x51\x76\xf9\x0a\xcf\x2a\x68\x4e\xfd\x76\x80\x3f\xcb\x6a\xb6\xc7\xbd\x72\xe9\x0b\xbd\xa4\xce\x4d\x3d\x29\x97\xda\xf1\xc1\x60\x9a",
    // "CFEqual" / M(Rot) / S(159) / L(7)
    "\xe2\xe5\xe4\x10\x14\x00\x0b\x9f\x9a\xc5\x0b\xd8\x30\x48\xd1\xb0",
    // "EVP_get_digestbyname" / M(Xor4) / S(127) / L(20)
    "\x2e\x3d\x3b\x34\x0c\x0e\x1f\x34\x0f\x02\x0c\x0e\x18\x1f\x09\x12\x05\x0a\x06\x0e\x6b",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x73\x5d\x35\xe0\xc4\x65\xf9\x24\x3a\xbc\xef\xb7\xf4\x18\xf8\xb9\xfd\x54\x04\x3c\x2e\xd6\xf4\xa3\x51\x3f\x28\xfd\xf3\x9c\x83",
    // "2.0" / M(Xor4) / S(173) / L(3)
    "\xe2\xfe\xe0\xd0\x80\xfd\x2a\x3e\xcb\x71\xa3\xb3\xa0\x9f\xf3\x0c",
    // "" / M(None) / S(0) / L(0)
    "\xa9\x56\x7d\x16\xa3\x04\x68\xde\x7b\xdc\x24\x9a\x0f\x4f\xdb\xef\xd2\xf5\xd1\xec\xd6\x3a\x6c\xfa\x17\x04\xce\x2b\xf9\x9f\x6b\xeb",
    // "init" / M(Rot) / S(177) / L(4)
    "\x1a\x1f\x1a\x25\xb1\x12\x3c\x6e\xfc\x03\x04\x56\xd7\xe9\x9f\xab",
    // "kSecReturnRef" / M(Xor1) / S(235) / L(13)
    "\x80\xb8\x8e\x88\xb9\x8e\x9f\x9e\x99\x85\xb9\x8e\x8d\xeb\xf0\x66",
    // "" / M(None) / S(0) / L(0)
    "\x6b\x55\xe7\xa7\x05\xd9\x62\x50\x2f\x35\x9d\x42\x98\x9e\xdf\xf5\x7f\x8a\xf2\x38\x2c\x79\xae\xbd\xdd\x5d\x90\xdc\xd2\x88\x3e\x62",
    // "CFBundleShortVersionString" / M(Xor2) / S(75) / L(26)
    "\x2b\x2e\x2a\x1d\x06\x0c\x04\x0d\x3b\x00\x07\x1a\x1c\x3e\x0d\x1a\x1b\x01\x07\x06\x3b\x1c\x1a\x01\x06\x0f\x68\x39\x50\x5c\x3d\xbc\x44\x12\x58",
    // "PKCS7_free" / M(Xor3) / S(158) / L(10)
    "\xfe\xe5\xed\xfd\x99\xf1\xc8\xdc\xcb\xcb\xae\x32\x2f\x79\x38\x7e",
    // "" / M(None) / S(0) / L(0)
    "\x1c\x8d\xa5\x49\x11\x23\x8c\x2a\xdf\x35\x5c\x07\x93\x9d\xc2\xed\xe3\x2c\x84\x3e\xe0\x10\xe2\xc4\xe9\x2d\x3f\x5c\x3a\x8b\xd4\x7b",
    // "CFDateFormatterCreate" / M(Xor1) / S(116) / L(21)
    "\x37\x32\x30\x15\x00\x11\x32\x1b\x06\x19\x15\x00\x00\x11\x06\x37\x06\x11\x15\x00\x11\x74",
    // "NSApplicationMain" / M(Xor4) / S(192) / L(17)
    "\xce\xd3\xc1\xf0\xf0\xec\xe9\xe3\xe1\xf4\xe9\xef\xee\xcd\xe1\xe9\xee\x80",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(114) / L(39)
    "\x23\x26\x34\x09\x0d\x05\x3a\x0f\x0e\x05\x23\x12\x05\x01\x14\x05\x37\x09\x14\x08\x34\x09\x0d\x05\x29\x0e\x14\x05\x12\x16\x01\x0c\x26\x12\x0f\x0d\x27\x2d\x34\x60\x06\xfd\x66\xb3\x61\x9e\x79\x8e",
    // "BIO_write" / M(Xor1) / S(227) / L(9)
    "\xa1\xaa\xac\xbc\x94\x91\x8a\x97\x86\xe3\x71\xc2\x37\x78\x88\x13",
    // "IOIteratorNext" / M(Xor1) / S(179) / L(14)
    "\xfa\xfc\xfa\xc7\xd6\xc1\xd2\xc7\xdc\xc1\xfd\xd6\xcb\xc7\xb3\x84",
    // "kCFBundleIdentifierKey" / M(Xor2) / S(143) / L(22)
    "\xf3\xdb\xde\xda\xed\xf6\xfc\xf4\xfd\xd1\xfc\xfd\xf6\xec\xf1\xfe\xf1\xfd\xea\xd3\xfd\xe1\x98",
    // "PKCS7_get0_signers" / M(Rot) / S(102) / L(18)
    "\xb6\xb1\xa9\xb9\x9d\xc5\xcd\xcb\xda\x96\xc5\xd9\xcf\xcd\xd4\xcb\xd8\xd9\x66",
    // "" / M(None) / S(0) / L(0)
    "\xca\x65\x95\x14\x6a\xbf\xb2\x7e\xe5\xb8\xd5\x21\x96\x91\xb3\xdd\xa8\x23\xe2\x99\xce\xf8\x55\xdd\x79\x70\x7b\x47\x6b\xce\x15\x90",
    // "" / M(None) / S(0) / L(0)
    "\x11\xd6\x02\x88\x2e\x0e\xff\x49\x10\x54\xa7\xeb\x04\xa7\x52\x1c\x3d\xb5\x97\xc7\x71\x0a\xae\xd6\xe3\x27\x17\xa9\xc7\xd6\x72\x7a",
    // "setDelegate:" / M(Rot) / S(217) / L(12)
    "\x4c\x3e\x4d\x1d\x3e\x45\x3e\x40\x3a\x4d\x3e\x13\xd9\x35\xe6\xe1",
    // "CC_SHA1_Final" / M(Xor4) / S(34) / L(13)
    "\x63\x63\x7f\x73\x68\x61\x11\x7f\x66\x49\x4e\x41\x4c\x20\xfe\x50",
    // "Apple Root CA" / M(Xor2) / S(99) / L(13)
    "\x32\x03\x03\x1f\x16\x53\x21\x1c\x1c\x07\x53\x30\x32\x73\x63\xdb",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(102) / L(40)
    "\x9c\x97\x97\xcb\x9b\xc8\x9c\x9c\x98\xc9\x9b\x9f\x99\xc7\x96\x9e\xcc\xcc\x9b\x9e\xca\x97\x9a\xc7\xcb\x98\x98\x9a\x9b\x98\xca\x97\x9f\x9e\xca\xcc\x9c\xc9\x9c\x96\x66\x54\xdc\x9f\x6e\x7e\x6c\x69\x74",
    // "CFBundleCopyBundleURL" / M(Xor2) / S(122) / L(21)
    "\x2f\x2a\x2e\x19\x02\x08\x00\x09\x2f\x03\x1c\x15\x2e\x19\x02\x08\x00\x09\x39\x3e\x20\x6c",
    // "" / M(None) / S(0) / L(0)
    "\xb4\x5d\xbc\xef\x03\x4f\x85\xc7\x82\x30\xb5\x39\xfd\x7b\x70\x2a\x0b\x5c\xb7\x4c\x9b\x75\x95\x63\x8c\x53\x98\xba\x6f\x43\xfa\xc4",
    // "%02X" / M(Xor1) / S(167) / L(4)
    "\x82\x97\x95\xff\xa7\x7a\x14\xba\x2f\x05\x58\x65\x04\x16\xfd\xda",
    // "sel_registerName" / M(Xor2) / S(95) / L(16)
    "\x3d\x2b\x22\x11\x3c\x2b\x29\x27\x3d\x3a\x2b\x3c\x00\x2f\x23\x2b\x4e",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x05\xc9\x69\xb8\x58\xdb\x8a\x39\xa4\x9c\x71\x25\x0b\xce\x32\x6e\x70\x1d\x8c\x9a\x16\x1d\x0e\xad\x4b\x55\x21\xfe\x76\x98\x6c",
    // "sk_free" / M(Xor1) / S(149) / L(7)
    "\xe6\xfe\xca\xf3\xe7\xf0\xf0\x95\x07\x6d\xd4\xf3\xd5\xc1\xa4\x93",
    // "start" / M(Xor1) / S(248) / L(5)
    "\x8b\x8c\x99\x8a\x8c\xf8\xa8\x23\xcf\xd3\x46\x01\x26\xa6\x9d\x8e",
    // "CFDateFormatterSetFormat" / M(Xor2) / S(160) / L(24)
    "\xc2\xc7\xc5\xe0\xf5\xe4\xc7\xee\xf3\xec\xe0\xf5\xf5\xe4\xf3\xd2\xe4\xf5\xc7\xee\xf3\xec\xe0\xf5\x81\x1c\x76\xe2\xa6\xd3\x5d\x77\xb4",
    // "dlopen" / M(Xor2) / S(151) / L(6)
    "\xe3\xeb\xe8\xf7\xe2\xe9\x87\xb6\xdc\x21\x7a\x63\x31\xd7\x82\x69",
    // "EVP_DigestInit" / M(Xor1) / S(58) / L(14)
    "\x7f\x6c\x6a\x65\x7e\x53\x5d\x5f\x49\x4e\x73\x54\x53\x4e\x3a\xfe",
    // "CC_SHA1" / M(Xor4) / S(25) / L(7)
    "\xd3\xd3\xcf\xc3\xd8\xd1\xa1\x90\xef\x6f\xc3\x3b\x73\xed\x73\xb2",
    // "" / M(None) / S(0) / L(0)
    "\x50\xf8\xd5\x01\xdf\x6d\x8e\xe7\x84\xd9\x6b\xbc\xa3\x95\xb1\x6a\xf8\xe3\x07\x8e\xc0\x8a\xd0\xf8\xed\xf8\x12\x36\x6d\x0c\xa0\xcf",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(32) / L(26)
    "\x63\x66\x72\x45\x41\x44\x73\x54\x52\x45\x41\x4d\x63\x52\x45\x41\x54\x45\x77\x49\x54\x48\x66\x49\x4c\x45\x20\x41\x90\xf6\x9a\x69\x97\x63\xa3",
    // "sk_value" / M(Xor2) / S(9) / L(8)
    "\x6a\x72\x46\x6f\x78\x75\x6c\x7c\x19\x31\x92\x53\xb4\xe6\xb4\x86",
    // "" / M(None) / S(0) / L(0)
    "\xaf\xba\x35\x7b\xb1\xbf\x0d\x57\x94\x7c\x3a\x7b\xa5\x22\xe8\x2d\x68\xb2\x94\x59\x88\xdc\xa9\x67\x17\xeb\x07\xc8\xce\x0d\x35\x54",
    // "CFBundleGetMainBundle" / M(Xor1) / S(93) / L(21)
    "\x1e\x1b\x1f\x28\x33\x39\x31\x38\x1a\x38\x29\x10\x3c\x34\x33\x1f\x28\x33\x39\x31\x38\x5d",
    // "" / M(None) / S(0) / L(0)
    "\xd7\x58\x6d\x7b\x20\xfb\x66\x0f\x63\x1b\x95\xb7\xc6\x81\xf4\x7f\x86\x44\x97\xef\x8a\x04\xaa\x80\x44\xd2\xc9\x40\x9c\x67\x02\xd8",
    // "CFBundleShortVersionString" / M(Rot) / S(14) / L(26)
    "\x51\x54\x50\x83\x7c\x72\x7a\x73\x61\x76\x7d\x80\x82\x64\x73\x80\x81\x77\x7d\x7c\x61\x82\x80\x77\x7c\x75\x0e\x78\x70\x28\x86\x41\xb4\x44\x8e",
    // "." / M(Xor3) / S(38) / L(1)
    "\x18\x36\xc0\xab\xaf\xbe\x21\xcc\x67\x0c\xc1\xb6\xf1\x53\x91\x35",
    // "" / M(None) / S(0) / L(0)
    "\xd6\x64\xc6\xfb\x3d\x8c\xe9\x03\xf6\xbe\x0c\xca\x19\xfb\x1c\x36\x3e\xd9\x4b\x1a\x15\x54\x87\x5e\xf7\x3f\x10\x7d\xd9\xf3\xbb\xb1",
    // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(102) / L(35)
    "\x1b\x1e\x0b\x2c\x2a\x31\x36\x3f\x1f\x3d\x2c\x1e\x31\x34\x3d\x0b\x21\x2b\x2c\x3d\x35\x0a\x3d\x28\x2a\x3d\x2b\x3d\x36\x2c\x39\x2c\x31\x37\x36\x58",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(218) / L(28)
    "\xbc\x90\x91\x8b\x9a\x91\x8b\x8c\xd0\xa0\xb2\xbe\xac\xad\x9a\x9c\x9a\x96\x8f\x8b\xd0\x8d\x9a\x9c\x9a\x96\x8f\x8b\xff\xde\x60\x75\x4f\xb0\x81\xd0\x1d",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor1) / S(47) / L(57)
    "\x00\x7c\x56\x5c\x5b\x4a\x42\x00\x63\x46\x4d\x5d\x4e\x5d\x56\x00\x64\x4a\x56\x4c\x47\x4e\x46\x41\x5c\x00\x7c\x56\x5c\x5b\x4a\x42\x7d\x40\x40\x5b\x6c\x4a\x5d\x5b\x46\x49\x46\x4c\x4e\x5b\x4a\x5c\x01\x44\x4a\x56\x4c\x47\x4e\x46\x41\x2f\xa7\x1a\x6e\x7f\x15\xa4\x9c\x14",
    // "glob_b" / M(Xor4) / S(182) / L(6)
    "\x07\x0c\x0f\x02\x3f\x02\x60\x04\x8b\x31\xc5\xa4\x09\xbb\x0d\xcb",
    // "" / M(None) / S(0) / L(0)
    "\x3e\xe0\xcd\xb7\x0a\x55\x4f\xb3\x10\x51\x6d\x37\x78\x3f\x9f\xa2\x23\x4e\x21\x12\xbf\x2b\x24\x32\x69\x79\x56\xa5\x53\xac\x74\x80",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(62) / L(32)
    "\x66\x66\x66\x66\x38\x32\x38\x52\x52\x38\x32\x38\x7b\x7b\x38\x4b\x38\x57\x57\x38\x25\x38\x72\x72\x38\x25\x38\x6c\x6c\x38\x45\x38\x1f",
    // "ASN1_get_object" / M(Xor1) / S(96) / L(15)
    "\x21\x33\x2e\x51\x3f\x07\x05\x14\x3f\x0f\x02\x0a\x05\x03\x14\x60",
    // "" / M(None) / S(0) / L(0)
    "\xbc\xc3\x89\xb0\x4f\xe5\x31\xf5\xbc\xf1\x84\x8d\x58\x0f\xe5\xbf\xa7\x4c\xf7\x9e\xa8\x82\x62\xdc\x31\x86\x57\x00\x91\xaa\x8e\x4c",
    // "X509_digest" / M(Xor2) / S(22) / L(11)
    "\x5e\x33\x36\x3f\x59\x62\x6f\x61\x63\x75\x72\x06\x87\x8a\xd7\x27",
    // "d2i_X509_bio" / M(Xor3) / S(223) / L(12)
    "\x8b\xdd\x86\xb0\xb7\xda\xdf\xd6\xb0\x8d\x86\x80\xef\x7c\xb7\x8d",
    // "CFArrayGetCount" / M(Xor4) / S(24) / L(15)
    "\xc3\xc6\xc1\xf2\xf2\xe1\xf9\xc7\xe5\xf4\xc3\xef\xf5\xee\xf4\x80",
    // "CFStringGetFileSystemRepresentation" / M(Xor2) / S(200) / L(35)
    "\xaf\xaa\xbf\x98\x9e\x85\x82\x8b\xab\x89\x98\xaa\x85\x80\x89\xbf\x95\x9f\x98\x89\x81\xbe\x89\x9c\x9e\x89\x9f\x89\x82\x98\x8d\x98\x85\x83\x82\xec",
    // "sk_value" / M(Xor2) / S(115) / L(8)
    "\x10\x08\x3c\x15\x02\x0f\x16\x06\x63\xc5\x5f\x06\x68\xb1\x8b\x8d",
    // "ASN1_INTEGER_free" / M(Xor3) / S(80) / L(17)
    "\x23\x31\x2c\x53\x3d\x2b\x2c\x36\x27\x25\x27\x30\x3d\x04\x10\x07\x07\x62",
    // "EVP_get_digestbyname" / M(Rot) / S(198) / L(20)
    "\x0b\x1c\x16\x25\x2d\x2b\x3a\x25\x2a\x2f\x2d\x2b\x39\x3a\x28\x3f\x34\x27\x33\x2b\xc6",
    // "CFDataGetBytePtr" / M(Xor4) / S(134) / L(16)
    "\xa5\xa0\xa2\x87\x92\x87\xa1\x83\x92\xa4\x9f\x92\x83\xb6\x92\x94\xe6",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(201) / L(59)
    "\xbb\xbc\xb7\xbc\xe8\xb7\xb8\xef\xb7\xbb\xbb\xb7\xbf\xee\xb7\xb8\xb4\xb7\xbe\xec\xb7\xbd\xb5\xb7\xeb\xeb\xb7\xb8\xb5\xb7\xe9\xbc\xb7\xb9\xec\xb7\xe8\xbf\xb7\xbf\xb9\xb7\xb8\xbf\xb7\xe9\xbc\xb7\xb4\xb5\xb7\xe9\xeb\xb7\xbb\xee\xb7\xbb\xbd\x8d\x5a\xd3\x47\x39\x90\x2d\xd4\xed",
    // "kCFTypeArrayCallBacks" / M(Xor1) / S(243) / L(21)
    "\x98\xb0\xb5\xa7\x8a\x83\x96\xb2\x81\x81\x92\x8a\xb0\x92\x9f\x9f\xb1\x92\x90\x98\x80\xf3",
    // "CFArrayAppendValue" / M(Xor2) / S(153) / L(18)
    "\xc9\xcc\xcb\xf8\xf8\xeb\xf3\xcb\xfa\xfa\xef\xe4\xee\xdc\xeb\xe6\xff\xef\x8a",
    // "kSecMatchLimit" / M(Rot) / S(124) / L(14)
    "\xe7\xcf\xe1\xdf\xc9\xdd\xf0\xdf\xe4\xc8\xe5\xe9\xe5\xf0\x7c\x2b",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(64) / L(35)
    "\x83\x86\x84\xa1\xb4\xa5\x86\xaf\xb2\xad\xa1\xb4\xb4\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\x84\xa1\xb4\xa5\x86\xb2\xaf\xad\x93\xb4\xb2\xa9\xae\xa7\x40",
    // "" / M(None) / S(0) / L(0)
    "\x2f\x67\xb7\xec\xac\x0c\x77\x57\x01\x8b\x5a\x85\x48\xf9\xa9\x70\x72\x56\x26\x28\x2c\xbe\x79\x60\xd9\xab\x6a\x85\xc1\x63\xe7\xad",
    // "CFDateFormatterCreate" / M(Xor4) / S(174) / L(21)
    "\xb7\xb2\xb0\x95\x80\x91\xb2\x9b\x86\x99\x95\x80\x80\x91\x86\xb7\x86\x91\x95\x80\x91\xf4",
    // "" / M(None) / S(0) / L(0)
    "\x62\x28\xca\xe2\x1a\x19\xa7\x29\x29\xf3\x37\x04\xc5\x01\x75\x63\x70\x81\x7d\xd5\xfa\x2b\xdb\xa0\xf9\x39\x15\x9b\x42\x4f\xed\x4c",
    // "" / M(None) / S(0) / L(0)
    "\x3c\x2c\x38\x17\xfd\x92\xf3\x06\xde\x91\xcb\x7e\x8d\x31\x92\x53\xb4\xe6\xb4\x86\x4b\x7e\xf1\x41\x09\xe3\xbc\xb1\xe3\x57\x64\x4c",
    // "CC_SHA1" / M(Xor3) / S(11) / L(7)
    "\x58\x58\x44\x48\x53\x5a\x2a\x1b\xcb\xd8\x3e\xa0\xd5\x70\xd3\x4a",
    // "SHA1_Final" / M(Rot) / S(10) / L(10)
    "\x5d\x52\x4b\x3b\x69\x50\x73\x78\x6b\x76\x0a\xac\x91\x81\x98\x2e",
    // "CFReadStreamRead" / M(Xor2) / S(250) / L(16)
    "\xa8\xad\xb9\x8e\x8a\x8f\xb8\x9f\x99\x8e\x8a\x86\xb9\x8e\x8a\x8f\xeb",
    // "" / M(None) / S(0) / L(0)
    "\x82\x04\x2b\x15\x40\xeb\x67\x4f\xed\x7e\x93\xc6\x5d\x09\xd8\x4e\x14\xc0\x08\x37\x55\xe4\xa0\x8a\x5e\x45\x23\x9e\x6c\xa6\xdd\x45",
    // "" / M(None) / S(0) / L(0)
    "\x0d\x4c\x08\x0a\x1b\x79\xac\x02\x6d\x95\x85\xf9\x2e\xed\xab\xdf\xa8\x60\x96\x52\x8c\xed\x61\xa1\xf4\xed\x9b\x2d\x75\xf1\x9e\xd9",
    // "" / M(None) / S(0) / L(0)
    "\x33\x84\xfb\xf8\x12\x74\xcf\xb9\xa7\x0b\xbd\xe8\x95\xb5\x62\xc0\x73\xf6\x13\x28\xe1\xa9\xa5\x7b\x05\x16\x29\x27\xaa\x48\x6c\xee",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor2) / S(234) / L(39)
    "\x99\x9c\x8e\xb3\xb7\xbf\x80\xb5\xb4\xbf\x99\xa8\xbf\xbb\xae\xbf\x8d\xb3\xae\xb2\x8e\xb3\xb7\xbf\x93\xb4\xae\xbf\xa8\xac\xbb\xb6\x9c\xa8\xb5\xb7\x9d\x97\x8e\xda\x9a\xa0\x20\x5b\xc5\x53\xa2\x08",
    // "com.iccir.Embrace" / M(Xor2) / S(214) / L(17)
    "\xa7\xab\xa9\xea\xad\xa7\xa7\xad\xb6\xea\x81\xa9\xa6\xb6\xa5\xa7\xa1\xc4",
    // "" / M(None) / S(0) / L(0)
    "\x37\x4c\xcb\xb5\x3f\xdb\xd1\xf3\x73\x72\x1f\x8f\x29\x89\x49\x57\x6a\x6a\xbc\x54\x3f\x11\x92\x43\x78\x74\x14\xc7\x61\x97\x52\x3f",
    // "" / M(None) / S(0) / L(0)
    "\xe2\xac\x11\x26\xc0\xd9\xa2\xb4\xa7\xb6\xbf\x2a\x85\xd0\x5c\xb0\xec\x50\x41\xa5\x9b\x2e\xf5\x89\x15\xbb\x6f\xcd\xce\x76\xf5\xcf",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(94) / L(43)
    "\x29\x2c\x3f\x38\x26\x29\x18\x0f\x0b\x1e\x0f\x3d\x03\x1e\x02\x2c\x03\x06\x0f\x39\x13\x19\x1e\x0f\x07\x3a\x0b\x1e\x02\x38\x0f\x06\x0b\x1e\x03\x1c\x0f\x3e\x05\x28\x0b\x19\x0f\x6a\x00\x7a\x28\xb5\x9d\x74\xd9\x08",
    // "X509_STORE_free" / M(Rot) / S(225) / L(15)
    "\x39\x16\x11\x1a\x40\x34\x35\x30\x33\x26\x40\x47\x53\x46\x46\xe1",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(29) / L(54)
    "\x14\x68\x42\x48\x4f\x5e\x56\x14\x77\x52\x59\x49\x5a\x49\x42\x14\x7d\x49\x5a\x56\x5e\x4c\x54\x49\x50\x48\x14\x68\x5e\x58\x4e\x49\x52\x4f\x42\x15\x5d\x49\x5a\x56\x5e\x4c\x54\x49\x50\x14\x68\x5e\x58\x4e\x49\x52\x4f\x42\x3b",
    // "d2i_X509_bio" / M(Rot) / S(213) / L(12)
    "\x39\x07\x3e\x34\x2d\x0a\x05\x0e\x34\x37\x3e\x44\xd5\x63\xfb\x0f",
    // "SecKeychainOpen" / M(Xor1) / S(165) / L(15)
    "\xf6\xc0\xc6\xee\xc0\xdc\xc6\xcd\xc4\xcc\xcb\xea\xd5\xc0\xcb\xa5",
    // "exit" / M(Rot) / S(75) / L(4)
    "\xb0\xc3\xb4\xbf\x4b\x52\x0d\x8b\x9d\xc3\x35\x54\xa7\x4c\x6a\x90",
    // "CC_SHA1_Update" / M(Xor2) / S(100) / L(14)
    "\x37\x37\x2b\x27\x3c\x35\x45\x2b\x21\x04\x10\x15\x00\x11\x74\x89",
    // "dlsym" / M(Xor2) / S(51) / L(5)
    "\x47\x4f\x50\x5a\x4e\x23\x1e\xa7\x48\x39\x56\x2e\xdb\xb1\xeb\xb4",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(201) / L(59)
    "\xff\xf8\xf3\xf8\xac\xf3\xfc\xab\xf3\xff\xff\xf3\xfb\xaa\xf3\xfc\xf0\xf3\xfa\xa8\xf3\xf9\xf1\xf3\xaf\xaf\xf3\xfc\xf1\xf3\xad\xf8\xf3\xfd\xa8\xf3\xac\xfb\xf3\xfb\xfd\xf3\xfc\xfb\xf3\xad\xf8\xf3\xf0\xf1\xf3\xad\xaf\xf3\xff\xaa\xf3\xff\xf9\xc9\x13\x59\x32\x6e\xdc\xe3\x46\x65",
    // "longjmp" / M(Rot) / S(18) / L(7)
    "\x7e\x81\x80\x79\x7c\x7f\x82\x12\x23\x8e\x0c\xbe\x97\x75\xc4\x80",
    // "" / M(None) / S(0) / L(0)
    "\xe5\xf4\x9d\x69\x60\xce\x78\x1d\xdc\x95\xba\xad\xc8\xce\x63\x24\xcb\x80\x3f\x94\xc7\xc0\xf2\xe1\x71\xa6\x91\xd3\xe3\x69\x90\x46",
    // "kSecClassCertificate" / M(Rot) / S(154) / L(20)
    "\x05\xed\xff\xfd\xdd\x06\xfb\x0d\x0d\xdd\xff\x0c\x0e\x03\x00\x03\xfd\xfb\x0e\xff\x9a",
    // "IOBSDNameMatching" / M(Xor2) / S(236) / L(17)
    "\xb7\xb1\xbc\xad\xba\xb0\x9f\x93\x9b\xb3\x9f\x8a\x9d\x96\x97\x90\x99\xfe",
    // "." / M(Xor2) / S(213) / L(1)
    "\xeb\xc5\xb8\xe6\x03\xc2\x09\xbc\x56\x90\x65\x4a\xe8\x7f\x02\x28",
    // "" / M(None) / S(0) / L(0)
    "\xc6\x04\xc8\xdb\x6f\x89\xb8\xe6\x03\xc2\x09\xbc\x56\x90\x65\x4a\xe8\x7f\x02\x28\x3d\x92\x0a\xc2\x5f\xed\x61\x8b\x24\xd3\x54\x7a",
    // "kCFDateFormatterTimeZone" / M(Xor1) / S(205) / L(24)
    "\xa6\x8e\x8b\x89\xac\xb9\xa8\x8b\xa2\xbf\xa0\xac\xb9\xb9\xa8\xbf\x99\xa4\xa0\xa8\x97\xa2\xa3\xa8\xcd\x4b\x0c\xe1\x3d\x1d\x06\x3e\x19",
    // "CFDataAppendBytes" / M(Xor3) / S(103) / L(17)
    "\x3a\x3f\x3d\x18\x0d\x18\x38\x09\x09\x1c\x17\x1d\x3b\x00\x0d\x1c\x0a\x79",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(94) / L(29)
    "\x17\x11\x0c\x3b\x39\x37\x2d\x2a\x2c\x27\x1b\x30\x2a\x2c\x27\x19\x3b\x2a\x0e\x3f\x2c\x3b\x30\x2a\x1b\x30\x2a\x2c\x27\x5e\x14\x99\x37\x0d\x5b\x0a\xf8\x1a",
    // "kSecMatchSearchList" / M(Xor1) / S(135) / L(19)
    "\xec\xd4\xe2\xe4\xca\xe6\xf3\xe4\xef\xd4\xe2\xe6\xf5\xe4\xef\xcb\xee\xf4\xf3\x87",
    // "BIO_write" / M(Xor1) / S(170) / L(9)
    "\xe8\xe3\xe5\xf5\xdd\xd8\xc3\xde\xcf\xaa\xf0\x6d\xd8\xea\xc2\x5e",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(221) / L(40)
    "\x38\x3f\x3f\x6b\x3b\x6c\x38\x38\x3c\x6d\x3b\x37\x3d\x6f\x3e\x36\x68\x68\x3b\x36\x6a\x3f\x3a\x6f\x6b\x3c\x3c\x3a\x3b\x3c\x6a\x3f\x37\x36\x6a\x68\x38\x6d\x38\x3e\x0e\x3f\xf3\x64\x76\x8b\xab\x24\x56",
    // "" / M(None) / S(0) / L(0)
    "\xee\x40\xa9\x96\xac\x9b\x67\x32\x10\xd7\x01\x72\x1f\x55\xca\x85\xc3\x15\x93\x68\x84\xbb\x2d\xe2\x00\x59\x4b\xc4\xd3\x1b\xd5\x7f",
    // "objc_msgSend" / M(Xor2) / S(230) / L(12)
    "\x99\x94\x9c\x95\xa9\x9b\x85\x91\xa5\x93\x98\x92\xf6\xa8\x26\x1c",
    // "CFURLCreateCopyAppendingPathComponent" / M(Rot) / S(169) / L(37)
    "\xec\xef\xfe\xfb\xf5\xec\x1b\x0e\x0a\x1d\x0e\xec\x18\x19\x22\xea\x19\x19\x0e\x17\x0d\x12\x17\x10\xf9\x0a\x1d\x11\xec\x18\x16\x19\x18\x17\x0e\x17\x1d\xa9",
    // "" / M(None) / S(0) / L(0)
    "\x80\xf4\x35\x24\x84\x19\xcc\x2c\x16\x91\xbf\x85\x15\x75\x6f\x88\x09\xc2\xbb\x3c\x92\x03\x95\xb4\xd8\xa3\x4b\x6e\x3d\x53\x6a\xde",
    // "setDelegate:" / M(Rot) / S(128) / L(12)
    "\xf3\xe5\xf4\xc4\xe5\xec\xe5\xe7\xe1\xf4\xe5\xba\x80\xde\x3a\x13",
    // "EVP_DigestFinal" / M(Xor2) / S(66) / L(15)
    "\x17\x04\x02\x0d\x16\x3b\x35\x37\x21\x26\x14\x3b\x3c\x33\x3e\x52",
    // "" / M(None) / S(0) / L(0)
    "\xe1\x2c\x42\xa5\xbd\x86\xdc\x4b\x84\x2d\x41\x6f\x3d\xf2\x1b\x15\x67\x64\x90\xff\x65\x88\xe1\xba\xa0\x5d\xc8\xef\x50\xdb\x24\x99",
    // "IOObjectRelease" / M(Xor3) / S(251) / L(15)
    "\x42\x44\x44\x69\x61\x6e\x68\x7f\x59\x6e\x67\x6e\x6a\x78\x6e\x0b",
    // "CFDictionaryAddValue" / M(Xor3) / S(67) / L(20)
    "\x1b\x1e\x1c\x31\x3b\x2c\x31\x37\x36\x39\x2a\x21\x19\x3c\x3c\x0e\x39\x34\x2d\x3d\x58",
    // "BIO_new" / M(Xor1) / S(218) / L(7)
    "\x98\x93\x95\x85\xb4\xbf\xad\xda\xb6\x34\xa9\x8e\x52\xc6\x4f\x5e",
    // "" / M(None) / S(0) / L(0)
    "\xe2\x02\xcd\x5c\x21\x7d\xc3\xb3\x97\xb4\x41\x80\xaf\xb7\x8a\x00\x7a\x39\x87\x9c\xe0\x75\xee\xac\x3e\x58\xc7\x6a\x46\x35\xeb\x9c",
    // "" / M(None) / S(0) / L(0)
    "\x1b\xe1\xa9\x60\x3b\x94\x39\xf2\x84\xc7\xf5\x1c\xef\xa7\x86\xe0\x31\x4f\x81\x93\x81\xd6\xc2\xb2\xec\xe7\x71\x9f\x1b\x0d\x0b\x41",
    // "BIO_new" / M(Rot) / S(240) / L(7)
    "\x32\x39\x3f\x4f\x5e\x55\x67\xf0\x11\xdc\x90\xd9\x83\xe1\x85\x69",
    // "" / M(None) / S(0) / L(0)
    "\x8a\x81\x25\x7a\x66\x03\x3f\xcf\xa4\x2b\x25\x3a\xf9\x2a\x19\xa2\x57\xb3\xc6\x5a\x09\xe1\xac\x60\x14\x4e\x88\x4f\x80\xa1\x7f\x58",
    // "globfree" / M(Xor4) / S(36) / L(8)
    "\x27\x2c\x2f\x22\x26\x32\x25\x25\x40\xaf\x7e\x1d\xb2\x72\x85\x42",
    // "" / M(None) / S(0) / L(0)
    "\x2e\xdb\xbe\xf2\xde\x6f\xef\xd7\x8b\x18\x68\x33\xae\x19\x64\xf3\x87\x42\xc0\x70\xbc\xfa\x86\xc5\xe7\xba\xb3\x8a\x1f\xef\x21\x81",
    // "CFBundleGetMainBundle" / M(Xor1) / S(28) / L(21)
    "\x5f\x5a\x5e\x69\x72\x78\x70\x79\x5b\x79\x68\x51\x7d\x75\x72\x5e\x69\x72\x78\x70\x79\x1c",
    // "CFDateCompare" / M(Xor2) / S(179) / L(13)
    "\xe0\xe5\xe7\xc2\xd7\xc6\xe0\xcc\xce\xd3\xc2\xd1\xc6\xa3\x69\xe1",
    // "_MASReceipt/receipt" / M(Xor4) / S(99) / L(19)
    "\xe3\xf1\xfd\xef\xee\xd9\xdf\xd9\xd5\xcc\xc8\x93\xce\xd9\xdf\xd9\xd5\xcc\xc8\xbc",
    // "" / M(None) / S(0) / L(0)
    "\xa0\x8b\x4a\x87\x8e\x26\x73\x7e\x20\x60\xb0\xb1\xdc\x7b\x56\xac\x78\x41\x81\x6b\x96\x2c\xb7\x05\x2e\x72\xae\x85\x13\x59\x32\x6e",
    // "strncmp" / M(Xor4) / S(226) / L(7)
    "\x53\x54\x52\x4e\x43\x4d\x50\x20\x5d\x09\xd8\x4e\x14\xc0\x08\x37",
    // "" / M(None) / S(0) / L(0)
    "\xdc\xe3\x46\x65\x3b\x7c\x9c\xb0\x11\x0c\x1f\xe3\x63\x2b\x29\xf7\x83\x0f\x94\xed\x8a\x27\xa4\x01\x9c\xe0\x02\x7d\x34\x26\x40\x51",
    // "ASN1_OBJECT_free" / M(Xor1) / S(135) / L(16)
    "\xc6\xd4\xc9\xb6\xd8\xc8\xc5\xcd\xc2\xc4\xd3\xd8\xe1\xf5\xe2\xe2\x87",
    // "EVP_DigestInit" / M(Rot) / S(114) / L(14)
    "\xb7\xc8\xc2\xd1\xb6\xdb\xd9\xd7\xe5\xe6\xbb\xe0\xdb\xe6\x72\x7a",
    // "CFStringGetFileSystemRepresentation" / M(Xor2) / S(97) / L(35)
    "\x06\x03\x16\x31\x37\x2c\x2b\x22\x02\x20\x31\x03\x2c\x29\x20\x16\x3c\x36\x31\x20\x28\x17\x20\x35\x37\x20\x36\x20\x2b\x31\x24\x31\x2c\x2a\x2b\x45",
    // "" / M(None) / S(0) / L(0)
    "\x84\xc5\x5c\x59\x09\xfa\x28\xf6\x7c\xcd\x64\x69\x4a\xe9\x7d\x80\xd8\xd4\x0e\xb0\x2b\x98\x0e\x5c\xe5\x1f\xe6\x73\xaf\xc0\x9a\x6b",
    // "dlopen" / M(Xor1) / S(45) / L(6)
    "\x49\x41\x42\x5d\x48\x43\x2d\x53\xfb\x2e\x6a\x5d\x4d\x47\x03\xff",
    // "EVP_DigestUpdate" / M(Xor2) / S(108) / L(16)
    "\x38\x2b\x2d\x22\x39\x14\x1a\x18\x0e\x09\x28\x0d\x19\x1c\x09\x18\x7d",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(173) / L(14)
    "\x82\x84\x9c\x94\x8f\x9d\x91\x99\x9e\x8f\x9f\x9e\x9c\x89\xd0\xfe",
    // "start" / M(Xor1) / S(110) / L(5)
    "\x1d\x1a\x0f\x1c\x1a\x6e\xb2\x47\x1a\x8a\x12\x5e\xe2\x35\x58\x97",
    // "Apple Root CA" / M(Xor3) / S(167) / L(13)
    "\xf6\xc7\xc7\xdb\xd2\x97\xe5\xd8\xd8\xc3\x97\xf4\xf6\xb7\x28\x5f",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[608] = {
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) PKCS7_get0_signers),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) glob),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) strlen),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) X509_free),
    ((void *) EVP_DigestUpdate),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) ASN1_INTEGER_free),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) EVP_DigestUpdate),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_XZWMIWMCEARI __unused;
static int ReceiptValidation_YRNVGHTMPTLY __unused;
static int ReceiptValidation_VANJMWXHESJD __unused;
static int ReceiptValidation_GBCZTUDWNMFL __unused;
static int ReceiptValidation_DTMVFJNVYCIF __unused;
static int ReceiptValidation_RSEJXPWBDKHH __unused;
static int ReceiptValidation_RTOIMTFQUPTZ __unused;
static int ReceiptValidation_IQQWCRVQUIJC __unused;


#define ReceiptValidation_ASN1_get_object_000A016C ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction00C, 364, 26, 16))
#define ReceiptValidation_ASN1_INTEGER_free_000A0150 ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction005, 336, 224, 18))
#define ReceiptValidation_ASN1_INTEGER_get_025D01A5 ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction005, 421, 198, 17))
#define ReceiptValidation_ASN1_OBJECT_free_000A011C ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction00B, 284, 87, 17))
#define ReceiptValidation_BIO_free_000A0101 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction007, 257, 73, 16))
#define ReceiptValidation_BIO_free_00D70158 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction005, 344, 46, 16))
#define ReceiptValidation_BIO_new_00D7024A ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction006, 586, 218, 16))
#define ReceiptValidation_BIO_new_025D024A ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction006, 586, 218, 16))
#define ReceiptValidation_BIO_s_mem_00D70057 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction009, 87, 125, 16))
#define ReceiptValidation_BIO_s_mem_00D700CD ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction004, 205, 125, 16))
#define ReceiptValidation_BIO_write_000A0152 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction007, 338, 162, 16))
#define ReceiptValidation_BIO_write_00D701EB ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction006, 491, 227, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_025D011A ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction004, 282, 253, 17))
#define ReceiptValidation_CC_SHA1_011E01FF ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction00B, 511, 25, 16))
#define ReceiptValidation_CC_SHA1_Final_01460059 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction00A, 89, 21, 16))
#define ReceiptValidation_CFArrayAppendValue_0088021B ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction007, 539, 153, 19))
#define ReceiptValidation_CFBundleGetMainBundle_01120251 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction005, 593, 28, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_01120041 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction008, 65, 110, 33))
#define ReceiptValidation_CFDataAppendBytes_0007023C ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction009, 572, 103, 18))
#define ReceiptValidation_CFDataAppendBytes_00880004 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction003, 4, 109, 18))
#define ReceiptValidation_CFDataAppendBytes_0112023C ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction009, 572, 103, 18))
#define ReceiptValidation_CFDataCreateMutable_00880113 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction004, 275, 81, 20))
#define ReceiptValidation_CFDataGetLength_000700D5 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction003, 213, 212, 16))
#define ReceiptValidation_CFDateFormatterCreate_00070037 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00B, 55, 207, 22))
#define ReceiptValidation_CFDateFormatterSetProperty_00070034 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, 52, 240, 35))
#define ReceiptValidation_CFDictionaryAddValue_00070072 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction006, 114, 188, 21))
#define ReceiptValidation_CFDictionaryGetValue_000701B2 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction006, 434, 141, 21))
#define ReceiptValidation_CFDictionarySetValue_00070036 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00B, 54, 242, 21))
#define ReceiptValidation_CFNumberCreate_011200A1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00A, 161, 189, 16))
#define ReceiptValidation_CFRelease_0007008E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction007, 142, 81, 16))
#define ReceiptValidation_CFRelease_0007018E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, 398, 27, 16))
#define ReceiptValidation_CFRelease_00880006 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction007, 6, 227, 16))
#define ReceiptValidation_CFRelease_0088008E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction007, 142, 81, 16))
#define ReceiptValidation_CFRelease_0088018E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction004, 398, 27, 16))
#define ReceiptValidation_CFRelease_01120006 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, 6, 227, 16))
#define ReceiptValidation_CFRelease_0112008E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, 142, 81, 16))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_0088010C ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction006, 268, 189, 48))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_00880172 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction00C, 370, 149, 48))
#define ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_008800CC ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction004, 204, 32, 52))
#define ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_0112022C ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, 556, 94, 52))
#define ReceiptValidation_d2i_PKCS7_bio_000A0052 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction009, 82, 96, 16))
#define ReceiptValidation_d2i_PKCS7_bio_025D00FC ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction00B, 252, 68, 16))
#define ReceiptValidation_d2i_X509_bio_00D7022F ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction004, 559, 213, 16))
#define ReceiptValidation_EVP_DigestFinal_000A012C ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction009, 300, 86, 16))
#define ReceiptValidation_EVP_DigestInit_00D7015F ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction004, 351, 51, 16))
#define ReceiptValidation_EVP_DigestUpdate_000A0161 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction003, 353, 32, 17))
#define ReceiptValidation_EVP_get_digestbyname_000A01DE ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction00B, 478, 127, 21))
#define ReceiptValidation_EVP_MD_CTX_init_000A01BC ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction00A, 444, 94, 16))
#define ReceiptValidation_exit_00BE000B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 190, 200, 33, ReceiptValidation_ObfuscationFunction008, 11, 190, 16))
#define ReceiptValidation_exit_011E000B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction008, 11, 190, 16))
#define ReceiptValidation_exit_011E012F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction008, 303, 204, 16))
#define ReceiptValidation_exit_011E0231 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction004, 561, 75, 16))
#define ReceiptValidation_exit_0146000B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction008, 11, 190, 16))
#define ReceiptValidation_exit_0146012F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction008, 303, 204, 16))
#define ReceiptValidation_exit_01460231 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction004, 561, 75, 16))
#define ReceiptValidation_XZWMIWMCEARI_0007016B ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_XZWMIWMCEARI, 181, 21))
#define ReceiptValidation_XZWMIWMCEARI_000701B0 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_XZWMIWMCEARI, 252, 16))
#define ReceiptValidation_XZWMIWMCEARI_008800EB ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_XZWMIWMCEARI, 69, 17))
#define ReceiptValidation_XZWMIWMCEARI_0088016B ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_XZWMIWMCEARI, 181, 21))
#define ReceiptValidation_XZWMIWMCEARI_008801EA ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_XZWMIWMCEARI, 114, 48))
#define ReceiptValidation_XZWMIWMCEARI_0112008D ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_XZWMIWMCEARI, 142, 16))
#define ReceiptValidation_XZWMIWMCEARI_011200A4 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XZWMIWMCEARI, 130, 19))
#define ReceiptValidation_XZWMIWMCEARI_013D00C2 ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 317, 110, 49, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_XZWMIWMCEARI, 231, 16))
#define ReceiptValidation_YRNVGHTMPTLY_00070032 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YRNVGHTMPTLY, 131, 34))
#define ReceiptValidation_YRNVGHTMPTLY_00070083 ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_YRNVGHTMPTLY, 104, 16))
#define ReceiptValidation_YRNVGHTMPTLY_00070179 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YRNVGHTMPTLY, 195, 16))
#define ReceiptValidation_YRNVGHTMPTLY_008801CF ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_YRNVGHTMPTLY, 178, 20))
#define ReceiptValidation_YRNVGHTMPTLY_00990061 ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 153, 25, 51, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_YRNVGHTMPTLY, 253, 18))
#define ReceiptValidation_YRNVGHTMPTLY_011201B2 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_YRNVGHTMPTLY, 141, 21))
#define ReceiptValidation_YRNVGHTMPTLY_011201FC ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_YRNVGHTMPTLY, 160, 33))
#define ReceiptValidation_YRNVGHTMPTLY_0181014A ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 385, 129, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_YRNVGHTMPTLY, 158, 16))
#define ReceiptValidation_VANJMWXHESJD_000700D6 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_VANJMWXHESJD, 190, 18))
#define ReceiptValidation_VANJMWXHESJD_0007014E ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_VANJMWXHESJD, 61, 37))
#define ReceiptValidation_VANJMWXHESJD_000701C9 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_VANJMWXHESJD, 136, 35))
#define ReceiptValidation_VANJMWXHESJD_01120167 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_VANJMWXHESJD, 144, 16))
#define ReceiptValidation_VANJMWXHESJD_022E0164 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 558, 29, 55, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_VANJMWXHESJD, 218, 23))
#define ReceiptValidation_GBCZTUDWNMFL_00070032 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_GBCZTUDWNMFL, 131, 34))
#define ReceiptValidation_GBCZTUDWNMFL_00070082 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_GBCZTUDWNMFL, 82, 16))
#define ReceiptValidation_GBCZTUDWNMFL_000701B0 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_GBCZTUDWNMFL, 252, 16))
#define ReceiptValidation_GBCZTUDWNMFL_0088008D ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_GBCZTUDWNMFL, 142, 16))
#define ReceiptValidation_GBCZTUDWNMFL_00880243 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_GBCZTUDWNMFL, 169, 38))
#define ReceiptValidation_GBCZTUDWNMFL_00A80047 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 168, 207, 49, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_GBCZTUDWNMFL, 235, 38))
#define ReceiptValidation_GBCZTUDWNMFL_01120082 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_GBCZTUDWNMFL, 82, 16))
#define ReceiptValidation_GBCZTUDWNMFL_011200CB ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_GBCZTUDWNMFL, 181, 37))
#define ReceiptValidation_GBCZTUDWNMFL_011201C6 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_GBCZTUDWNMFL, 128, 23))
#define ReceiptValidation_DTMVFJNVYCIF_000700C3 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_DTMVFJNVYCIF, 31, 22))
#define ReceiptValidation_DTMVFJNVYCIF_00070249 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_DTMVFJNVYCIF, 67, 21))
#define ReceiptValidation_DTMVFJNVYCIF_00880053 ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_DTMVFJNVYCIF, 78, 18))
#define ReceiptValidation_DTMVFJNVYCIF_00880060 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_DTMVFJNVYCIF, 41, 36))
#define ReceiptValidation_DTMVFJNVYCIF_0088019F ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_DTMVFJNVYCIF, 26, 17))
#define ReceiptValidation_DTMVFJNVYCIF_008801D6 ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_DTMVFJNVYCIF, 24, 33))
#define ReceiptValidation_DTMVFJNVYCIF_0112017F ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_DTMVFJNVYCIF, 73, 16))
#define ReceiptValidation_RSEJXPWBDKHH_00070252 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_RSEJXPWBDKHH, 179, 16))
#define ReceiptValidation_RSEJXPWBDKHH_008801A4 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_RSEJXPWBDKHH, 31, 17))
#define ReceiptValidation_RSEJXPWBDKHH_00940230 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_RSEJXPWBDKHH, 165, 16))
#define ReceiptValidation_RSEJXPWBDKHH_00BE000D ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 190, 200, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_RSEJXPWBDKHH, 159, 16))
#define ReceiptValidation_RSEJXPWBDKHH_01120179 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_RSEJXPWBDKHH, 195, 16))
#define ReceiptValidation_RSEJXPWBDKHH_01120259 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_RSEJXPWBDKHH, 97, 36))
#define ReceiptValidation_RSEJXPWBDKHH_013D0178 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 317, 110, 49, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_RSEJXPWBDKHH, 172, 32))
#define ReceiptValidation_RTOIMTFQUPTZ_00070151 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RTOIMTFQUPTZ, 3, 22))
#define ReceiptValidation_RTOIMTFQUPTZ_008801BF ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_RTOIMTFQUPTZ, 151, 21))
#define ReceiptValidation_RTOIMTFQUPTZ_00A80186 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 168, 207, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_RTOIMTFQUPTZ, 223, 18))
#define ReceiptValidation_RTOIMTFQUPTZ_011200A1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RTOIMTFQUPTZ, 189, 16))
#define ReceiptValidation_RTOIMTFQUPTZ_01120213 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_RTOIMTFQUPTZ, 24, 16))
#define ReceiptValidation_RTOIMTFQUPTZ_01460140 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_RTOIMTFQUPTZ, 155, 16))
#define ReceiptValidation_IQQWCRVQUIJC_000700A1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_IQQWCRVQUIJC, 189, 16))
#define ReceiptValidation_IQQWCRVQUIJC_00880013 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_IQQWCRVQUIJC, 61, 16))
#define ReceiptValidation_IQQWCRVQUIJC_00880106 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_IQQWCRVQUIJC, 222, 21))
#define ReceiptValidation_IQQWCRVQUIJC_008801A4 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_IQQWCRVQUIJC, 31, 17))
#define ReceiptValidation_IQQWCRVQUIJC_00880224 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_IQQWCRVQUIJC, 250, 17))
#define ReceiptValidation_IQQWCRVQUIJC_01120078 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_IQQWCRVQUIJC, 172, 21))
#define ReceiptValidation_IQQWCRVQUIJC_01810073 ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 385, 129, 49, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_IQQWCRVQUIJC, 56, 37))
#define ReceiptValidation_IOObjectRelease_01810248 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 385, 129, 49, ReceiptValidation_ObfuscationFunction009, 584, 251, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_0007002E ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction004, 46, 232, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_000700EA ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction006, 234, 14, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_000701B4 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction005, 436, 218, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_0007021A ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction006, 538, 243, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_008801B4 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction005, 436, 218, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00070190 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, 400, 46, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008800DD ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 136, 176, 67, ReceiptValidation_ObfuscationFunction008, 221, 92, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_011200DD ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 274, 166, 67, ReceiptValidation_ObfuscationFunction008, 221, 92, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00070040 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction00A, 64, 100, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_000700C4 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction003, 196, 130, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_000700E7 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 7, 212, 67, ReceiptValidation_ObfuscationFunction005, 231, 81, 32))
#define ReceiptValidation_kSecClass_009400B1 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction009, 177, 134, 16))
#define ReceiptValidation_kSecClass_00E00139 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction00C, 313, 129, 16))
#define ReceiptValidation_kSecClassCertificate_0094005B ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction00B, 91, 163, 21))
#define ReceiptValidation_kSecClassCertificate_00940116 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction00A, 278, 75, 21))
#define ReceiptValidation_kSecMatchLimit_00E0021C ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction004, 540, 124, 16))
#define ReceiptValidation_kSecMatchLimit_022E021C ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 558, 29, 55, ReceiptValidation_ObfuscationFunction004, 540, 124, 16))
#define ReceiptValidation_kSecMatchLimitAll_009400FD ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction005, 253, 235, 18))
#define ReceiptValidation_kSecMatchLimitAll_00E000FD ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction005, 253, 235, 18))
#define ReceiptValidation_kSecMatchSearchList_00940005 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction004, 5, 3, 20))
#define ReceiptValidation_kSecMatchSearchList_022E023E ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 558, 29, 55, ReceiptValidation_ObfuscationFunction005, 574, 135, 20))
#define ReceiptValidation_kSecMatchSubjectContains_009400F5 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction005, 245, 94, 33))
#define ReceiptValidation_kSecMatchSubjectContains_00E00042 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction008, 66, 142, 33))
#define ReceiptValidation_kSecReturnRef_009401D8 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction00A, 472, 196, 16))
#define ReceiptValidation_kSecReturnRef_022E0095 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 558, 29, 55, ReceiptValidation_ObfuscationFunction00B, 149, 233, 16))
#define ReceiptValidation_longjmp_00BE016D ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 190, 200, 33, ReceiptValidation_ObfuscationFunction007, 365, 150, 16))
#define ReceiptValidation_longjmp_00BE01D2 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 190, 200, 33, ReceiptValidation_ObfuscationFunction003, 466, 100, 16))
#define ReceiptValidation_longjmp_00BE0235 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 190, 200, 33, ReceiptValidation_ObfuscationFunction004, 565, 18, 16))
#define ReceiptValidation_longjmp_011E0235 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction004, 565, 18, 16))
#define ReceiptValidation_longjmp_0146016D ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction007, 365, 150, 16))
#define ReceiptValidation_longjmp_01460235 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 326, 150, 33, ReceiptValidation_ObfuscationFunction004, 565, 18, 16))
#define ReceiptValidation_OBJ_txt2obj_025D0035 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction00B, 53, 116, 16))
#define ReceiptValidation_objc_getClass_006900BB ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction007, 187, 147, 16))
#define ReceiptValidation_objc_getClass_0069011D ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction003, 285, 222, 16))
#define ReceiptValidation_objc_getClass_01230025 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction009, 37, 103, 16))
#define ReceiptValidation_objc_getClass_012300BB ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction007, 187, 147, 16))
#define ReceiptValidation_objc_getClass_0123011D ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction003, 285, 222, 16))
#define ReceiptValidation_objc_getClass_01B30025 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction009, 37, 103, 16))
#define ReceiptValidation_objc_getClass_01B300BB ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction007, 187, 147, 16))
#define ReceiptValidation_objc_getClass_01B3011D ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction003, 285, 222, 16))
#define ReceiptValidation_objc_msgSend_00690008 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction006, 8, 65, 16))
#define ReceiptValidation_objc_msgSend_006900BF ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction006, 191, 129, 16))
#define ReceiptValidation_objc_msgSend_00690242 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction008, 578, 230, 16))
#define ReceiptValidation_objc_msgSend_01230242 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction008, 578, 230, 16))
#define ReceiptValidation_objc_msgSend_01B30008 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction006, 8, 65, 16))
#define ReceiptValidation_objc_msgSend_01B300BF ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction006, 191, 129, 16))
#define ReceiptValidation_objc_msgSend_01B30242 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction008, 578, 230, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_000A004C ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction005, 76, 108, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_00D70107 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction005, 263, 144, 32))
#define ReceiptValidation_PKCS7_free_00D7003E ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction008, 62, 133, 16))
#define ReceiptValidation_PKCS7_free_025D003E ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction008, 62, 133, 16))
#define ReceiptValidation_PKCS7_get0_signers_000A00E4 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction005, 228, 92, 19))
#define ReceiptValidation_PKCS7_verify_000A0103 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction007, 259, 244, 16))
#define ReceiptValidation_SecItemCopyMatching_00940075 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction008, 117, 68, 20))
#define ReceiptValidation_SecItemCopyMatching_00E00075 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction008, 117, 68, 20))
#define ReceiptValidation_SecKeychainSearchCopyNext_022E00B5 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 558, 29, 55, ReceiptValidation_ObfuscationFunction005, 181, 240, 34))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_009401D5 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 148, 237, 55, ReceiptValidation_ObfuscationFunction008, 469, 99, 38))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_00E000E3 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 63, 55, ReceiptValidation_ObfuscationFunction00C, 227, 44, 38))
#define ReceiptValidation_sel_registerName_006900F4 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction003, 244, 191, 17))
#define ReceiptValidation_sel_registerName_006900F9 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction003, 249, 211, 17))
#define ReceiptValidation_sel_registerName_006901F8 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 105, 183, 23, ReceiptValidation_ObfuscationFunction008, 504, 95, 17))
#define ReceiptValidation_sel_registerName_012300F4 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction003, 244, 191, 17))
#define ReceiptValidation_sel_registerName_012300F9 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction003, 249, 211, 17))
#define ReceiptValidation_sel_registerName_012301F8 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 291, 16, 23, ReceiptValidation_ObfuscationFunction008, 504, 95, 17))
#define ReceiptValidation_sel_registerName_01B300F4 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 435, 229, 23, ReceiptValidation_ObfuscationFunction003, 244, 191, 17))
#define ReceiptValidation_setjmp_011E0002 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 286, 140, 33, ReceiptValidation_ObfuscationFunction008, 2, 224, 16))
#define ReceiptValidation_SHA1_000A00DF ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction007, 223, 238, 16))
#define ReceiptValidation_SHA1_Final_025D00E9 ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction008, 233, 226, 16))
#define ReceiptValidation_SHA1_Init_00D700DC ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction008, 220, 164, 16))
#define ReceiptValidation_SHA1_Update_025D00B4 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction00C, 180, 153, 16))
#define ReceiptValidation_sk_free_025D01FA ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction006, 506, 149, 16))
#define ReceiptValidation_sk_num_025D0153 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction009, 339, 221, 16))
#define ReceiptValidation_sk_value_000A0215 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction007, 533, 115, 16))
#define ReceiptValidation_X509_digest_025D0148 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction00A, 328, 191, 16))
#define ReceiptValidation_X509_free_00D70160 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 215, 135, 16, ReceiptValidation_ObfuscationFunction00B, 352, 91, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_025D01A8 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction00C, 424, 161, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_025D017A ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction004, 378, 58, 34))
#define ReceiptValidation_X509_STORE_add_cert_000A01A2 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction005, 418, 102, 20))
#define ReceiptValidation_X509_STORE_free_000A016A ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 10, 122, 16, ReceiptValidation_ObfuscationFunction003, 362, 8, 16))
#define ReceiptValidation_X509_STORE_new_025D0003 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 605, 173, 16, ReceiptValidation_ObfuscationFunction005, 3, 116, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[419])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[63])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[419])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[189])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[324])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[189])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[324])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[345])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[63])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[608], ReceiptValidation_tmp2[608];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[603])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[411])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#ifdef DEBUG
inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_01120251();
    if (!ReceiptValidation_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_00880006(ReceiptValidation_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_01120041((CFBundleRef) ReceiptValidation_bundle);
    }
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
    // Global variables computation
    // Set to 235
    ReceiptValidation_XZWMIWMCEARI = 235;
    // Set to 463
    ReceiptValidation_YRNVGHTMPTLY = 463;
    // Set to 457
    ReceiptValidation_VANJMWXHESJD = 457;
    // Set to 579
    ReceiptValidation_GBCZTUDWNMFL = 579;
    // Set to 83
    ReceiptValidation_DTMVFJNVYCIF = 83;
    // Set to 601
    ReceiptValidation_RSEJXPWBDKHH = 601;
    // Set to 337
    ReceiptValidation_RTOIMTFQUPTZ = 337;
    // Set to 548
    ReceiptValidation_IQQWCRVQUIJC = 548;
}
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_01120251(); \
    if (!ReceiptValidation_bundle) { \
        ReceiptValidation_CFRelease_00880006(ReceiptValidation_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_01120041((CFBundleRef) ReceiptValidation_bundle); \
    } \
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
    ReceiptValidation_XZWMIWMCEARI = 235; \
    ReceiptValidation_YRNVGHTMPTLY = 463; \
    ReceiptValidation_VANJMWXHESJD = 457; \
    ReceiptValidation_GBCZTUDWNMFL = 579; \
    ReceiptValidation_DTMVFJNVYCIF = 83; \
    ReceiptValidation_RSEJXPWBDKHH = 601; \
    ReceiptValidation_RTOIMTFQUPTZ = 337; \
    ReceiptValidation_IQQWCRVQUIJC = 548; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt038(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_RTOIMTFQUPTZ_00070151((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[423]), 196, 16);
    ReceiptValidation_url2 = ReceiptValidation_GBCZTUDWNMFL_00880243(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url1);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[182]), 143, 20);
    ReceiptValidation_url1 = ReceiptValidation_GBCZTUDWNMFL_00880243(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url2);
    ReceiptValidation_url2 = ReceiptValidation_url1;
    ReceiptValidation_url1 = NULL;
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_VANJMWXHESJD_000701C9(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_XZWMIWMCEARI_008800EB(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_011E012F(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_YRNVGHTMPTLY_008801CF(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_IQQWCRVQUIJC_00880224(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_CFDataAppendBytes_0112023C(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_DTMVFJNVYCIF_00880053(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0088018E(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 235 to 194
    ReceiptValidation_XZWMIWMCEARI += 153; ReceiptValidation_XZWMIWMCEARI /= 2; 
    // From 463 to 330
    ReceiptValidation_YRNVGHTMPTLY += 197; ReceiptValidation_YRNVGHTMPTLY /= 2; 
    // From 579 to 71
    ReceiptValidation_GBCZTUDWNMFL += 131; ReceiptValidation_GBCZTUDWNMFL /= 10; 
    // From 601 to 376
    ReceiptValidation_RSEJXPWBDKHH += 527; ReceiptValidation_RSEJXPWBDKHH /= 3; 
    // From 337 to 390
    ReceiptValidation_RTOIMTFQUPTZ -= 207; ReceiptValidation_RTOIMTFQUPTZ *= 3; 
    // From 548 to 115
    ReceiptValidation_IQQWCRVQUIJC += 142; ReceiptValidation_IQQWCRVQUIJC /= 6; 
ReceiptValidation_LoadReceipt038_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0088018E(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt038(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_RTOIMTFQUPTZ_00070151((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[423]), 196, 16); \
    ReceiptValidation_url2 = ReceiptValidation_GBCZTUDWNMFL_00880243(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url1); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[182]), 143, 20); \
    ReceiptValidation_url1 = ReceiptValidation_GBCZTUDWNMFL_00880243(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url2); \
    ReceiptValidation_url2 = ReceiptValidation_url1; \
    ReceiptValidation_url1 = NULL; \
    ReceiptValidation_stream = ReceiptValidation_VANJMWXHESJD_000701C9(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_XZWMIWMCEARI_008800EB(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_011E012F(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_YRNVGHTMPTLY_008801CF(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_IQQWCRVQUIJC_00880224(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_CFDataAppendBytes_0112023C(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_DTMVFJNVYCIF_00880053(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0088018E(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_XZWMIWMCEARI += 153; ReceiptValidation_XZWMIWMCEARI /= 2;  \
    ReceiptValidation_YRNVGHTMPTLY += 197; ReceiptValidation_YRNVGHTMPTLY /= 2;  \
    ReceiptValidation_GBCZTUDWNMFL += 131; ReceiptValidation_GBCZTUDWNMFL /= 10;  \
    ReceiptValidation_RSEJXPWBDKHH += 527; ReceiptValidation_RSEJXPWBDKHH /= 3;  \
    ReceiptValidation_RTOIMTFQUPTZ -= 207; ReceiptValidation_RTOIMTFQUPTZ *= 3;  \
    ReceiptValidation_IQQWCRVQUIJC += 142; ReceiptValidation_IQQWCRVQUIJC /= 6;  \
ReceiptValidation_LoadReceipt038_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0088018E(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt038(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 126; ReceiptValidation_code -= 69; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[569]), 213, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_RSEJXPWBDKHH_01120259(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[185])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[27])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_0088010C(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[237])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[27])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_VANJMWXHESJD_000701C9(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_XZWMIWMCEARI_008800EB(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_YRNVGHTMPTLY_008801CF(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_IQQWCRVQUIJC_00880224(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_CFDataAppendBytes_0007023C(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_DTMVFJNVYCIF_00880053(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 235 to 194
    ReceiptValidation_XZWMIWMCEARI += 153; ReceiptValidation_XZWMIWMCEARI /= 2; 
    // From 463 to 330
    ReceiptValidation_YRNVGHTMPTLY += 197; ReceiptValidation_YRNVGHTMPTLY /= 2; 
    // From 579 to 71
    ReceiptValidation_GBCZTUDWNMFL += 131; ReceiptValidation_GBCZTUDWNMFL /= 10; 
    // From 601 to 376
    ReceiptValidation_RSEJXPWBDKHH += 527; ReceiptValidation_RSEJXPWBDKHH /= 3; 
    // From 337 to 390
    ReceiptValidation_RTOIMTFQUPTZ -= 207; ReceiptValidation_RTOIMTFQUPTZ *= 3; 
    // From 548 to 115
    ReceiptValidation_IQQWCRVQUIJC += 142; ReceiptValidation_IQQWCRVQUIJC /= 6; 
ReceiptValidation_LoadReceipt038_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt038(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 126; ReceiptValidation_code -= 69; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[569]), 213, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_RSEJXPWBDKHH_01120259(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[185])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[27])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_0088010C(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[237])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[27])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_VANJMWXHESJD_000701C9(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_XZWMIWMCEARI_008800EB(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt038_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_YRNVGHTMPTLY_008801CF(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_IQQWCRVQUIJC_00880224(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_CFDataAppendBytes_0007023C(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_DTMVFJNVYCIF_00880053(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_XZWMIWMCEARI += 153; ReceiptValidation_XZWMIWMCEARI /= 2;  \
    ReceiptValidation_YRNVGHTMPTLY += 197; ReceiptValidation_YRNVGHTMPTLY /= 2;  \
    ReceiptValidation_GBCZTUDWNMFL += 131; ReceiptValidation_GBCZTUDWNMFL /= 10;  \
    ReceiptValidation_RSEJXPWBDKHH += 527; ReceiptValidation_RSEJXPWBDKHH /= 3;  \
    ReceiptValidation_RTOIMTFQUPTZ -= 207; ReceiptValidation_RTOIMTFQUPTZ *= 3;  \
    ReceiptValidation_IQQWCRVQUIJC += 142; ReceiptValidation_IQQWCRVQUIJC /= 6;  \
ReceiptValidation_LoadReceipt038_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_0088008E(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_0088008E(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#ifdef DEBUG
inline static void ReceiptValidation_GetGUID04A(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[439]), 231, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_XZWMIWMCEARI_013D00C2(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[458]), ReceiptValidation_str1_, 184, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_RTOIMTFQUPTZ_00A80186(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_IQQWCRVQUIJC_01810073(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_YRNVGHTMPTLY_0181014A(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_GBCZTUDWNMFL_00A80047(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_RSEJXPWBDKHH_013D0178(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_service);
    }
    // Global variables computation
    // From 194 to 164
    ReceiptValidation_XZWMIWMCEARI += 134; ReceiptValidation_XZWMIWMCEARI /= 2; 
    // From 330 to 50
    ReceiptValidation_YRNVGHTMPTLY += 70; ReceiptValidation_YRNVGHTMPTLY /= 8; 
    // From 457 to 356
    ReceiptValidation_VANJMWXHESJD += 255; ReceiptValidation_VANJMWXHESJD /= 2; 
    // From 71 to 454
    ReceiptValidation_GBCZTUDWNMFL -= 15; ReceiptValidation_GBCZTUDWNMFL *= 8; ReceiptValidation_GBCZTUDWNMFL += 6; 
    // From 83 to 585
    ReceiptValidation_DTMVFJNVYCIF -= 18; ReceiptValidation_DTMVFJNVYCIF *= 9; 
    // From 376 to 560
    ReceiptValidation_RSEJXPWBDKHH -= 190; ReceiptValidation_RSEJXPWBDKHH *= 3; ReceiptValidation_RSEJXPWBDKHH += 2; 
    // From 390 to 531
    ReceiptValidation_RTOIMTFQUPTZ -= 213; ReceiptValidation_RTOIMTFQUPTZ *= 3; 
    // From 115 to 262
    ReceiptValidation_IQQWCRVQUIJC -= 50; ReceiptValidation_IQQWCRVQUIJC *= 4; ReceiptValidation_IQQWCRVQUIJC += 2; 
ReceiptValidation_GetGUID04A_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID04A(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[439]), 231, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_XZWMIWMCEARI_013D00C2(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[458]), ReceiptValidation_str1_, 184, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_RTOIMTFQUPTZ_00A80186(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_IQQWCRVQUIJC_01810073(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04A_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_YRNVGHTMPTLY_0181014A(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_GBCZTUDWNMFL_00A80047(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_RSEJXPWBDKHH_013D0178(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_01810248(ReceiptValidation_service); \
    } \
    ReceiptValidation_XZWMIWMCEARI += 134; ReceiptValidation_XZWMIWMCEARI /= 2;  \
    ReceiptValidation_YRNVGHTMPTLY += 70; ReceiptValidation_YRNVGHTMPTLY /= 8;  \
    ReceiptValidation_VANJMWXHESJD += 255; ReceiptValidation_VANJMWXHESJD /= 2;  \
    ReceiptValidation_GBCZTUDWNMFL -= 15; ReceiptValidation_GBCZTUDWNMFL *= 8; ReceiptValidation_GBCZTUDWNMFL += 6;  \
    ReceiptValidation_DTMVFJNVYCIF -= 18; ReceiptValidation_DTMVFJNVYCIF *= 9;  \
    ReceiptValidation_RSEJXPWBDKHH -= 190; ReceiptValidation_RSEJXPWBDKHH *= 3; ReceiptValidation_RSEJXPWBDKHH += 2;  \
    ReceiptValidation_RTOIMTFQUPTZ -= 213; ReceiptValidation_RTOIMTFQUPTZ *= 3;  \
    ReceiptValidation_IQQWCRVQUIJC -= 50; ReceiptValidation_IQQWCRVQUIJC *= 4; ReceiptValidation_IQQWCRVQUIJC += 2;  \
ReceiptValidation_GetGUID04A_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 36; ReceiptValidation_code -= 8; ReceiptValidation_code *= 6; ReceiptValidation_code += 5; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[171]), ReceiptValidation_str1_, 251, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_RSEJXPWBDKHH_00940230(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146012F(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_008801B4);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[499]), 99, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00E00139;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00940116;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00940005;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_00E00042;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_022E021C;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_009400FD;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_009401D8;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_00E00075(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146012F(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_RTOIMTFQUPTZ_01120213((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_GBCZTUDWNMFL_011201C6((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01120006(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_VANJMWXHESJD_022E0164(ReceiptValidation_certificate);
    }
    // Global variables computation
    // Set to 203
    ReceiptValidation_GBCZTUDWNMFL = 203;
    // From 585 to 195
    ReceiptValidation_DTMVFJNVYCIF += 390; ReceiptValidation_DTMVFJNVYCIF /= 5; 
    // From 560 to 377
    ReceiptValidation_RSEJXPWBDKHH += 194; ReceiptValidation_RSEJXPWBDKHH /= 2; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_01120006(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_01120006(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01120006(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01120006(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 36; ReceiptValidation_code -= 8; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[171]), ReceiptValidation_str1_, 251, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_RSEJXPWBDKHH_00940230(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146012F(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_008801B4); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[499]), 99, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00E00139; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00940116; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00940005; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_00E00042; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_022E021C; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_009400FD; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_009401D8; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_00E00075(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146012F(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_RTOIMTFQUPTZ_01120213((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_GBCZTUDWNMFL_011201C6((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01120006(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_VANJMWXHESJD_022E0164(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_GBCZTUDWNMFL = 203; \
    ReceiptValidation_DTMVFJNVYCIF += 390; ReceiptValidation_DTMVFJNVYCIF /= 5;  \
    ReceiptValidation_RSEJXPWBDKHH += 194; ReceiptValidation_RSEJXPWBDKHH /= 2;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_01120006(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_01120006(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01120006(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01120006(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    volatile CFIndex ReceiptValidation_count3 = 3; ReceiptValidation_count3 -= 1; ReceiptValidation_count3 *= 6; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 155; ReceiptValidation_code -= 98; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[171]), ReceiptValidation_str1_, 251, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_RSEJXPWBDKHH_00940230(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_011E000B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0007021A);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[608];
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[327]), ReceiptValidation_str2_, 146, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_00E000E3(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_011E000B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_SecKeychainSearchCopyNext_022E00B5(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_VANJMWXHESJD_022E0164((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // Set to 203
    ReceiptValidation_GBCZTUDWNMFL = 203;
    // From 585 to 195
    ReceiptValidation_DTMVFJNVYCIF += 390; ReceiptValidation_DTMVFJNVYCIF /= 5; 
    // From 560 to 377
    ReceiptValidation_RSEJXPWBDKHH += 194; ReceiptValidation_RSEJXPWBDKHH /= 2; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    volatile CFIndex ReceiptValidation_count3 = 3; ReceiptValidation_count3 -= 1; ReceiptValidation_count3 *= 6; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 155; ReceiptValidation_code -= 98; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[171]), ReceiptValidation_str1_, 251, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_RSEJXPWBDKHH_00940230(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_011E000B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0007021A); \
    char ReceiptValidation_str2_[608]; \
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[327]), ReceiptValidation_str2_, 146, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_00E000E3(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_011E000B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_SecKeychainSearchCopyNext_022E00B5(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_VANJMWXHESJD_022E0164((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_GBCZTUDWNMFL = 203; \
    ReceiptValidation_DTMVFJNVYCIF += 390; ReceiptValidation_DTMVFJNVYCIF /= 5;  \
    ReceiptValidation_RSEJXPWBDKHH += 194; ReceiptValidation_RSEJXPWBDKHH /= 2;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_0007018E(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[553]), 214, 18);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[416]), 196, 19);
    volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_GBCZTUDWNMFL_011200CB((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_RSEJXPWBDKHH_01120179(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_011E000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
    }
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str2);
    // Global variables computation
    // From 356 to 334
    ReceiptValidation_VANJMWXHESJD += 312; ReceiptValidation_VANJMWXHESJD /= 2; 
    // From 203 to 141
    ReceiptValidation_GBCZTUDWNMFL += 79; ReceiptValidation_GBCZTUDWNMFL /= 2; 
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[553]), 214, 18); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[416]), 196, 19); \
    volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_GBCZTUDWNMFL_011200CB((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_RSEJXPWBDKHH_01120179(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_011E000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
    } \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str2); \
    ReceiptValidation_VANJMWXHESJD += 312; ReceiptValidation_VANJMWXHESJD /= 2;  \
    ReceiptValidation_GBCZTUDWNMFL += 79; ReceiptValidation_GBCZTUDWNMFL /= 2;  \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleVersion061(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    volatile int ReceiptValidation_code = 142; ReceiptValidation_code -= 85; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[22]), 134, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[442]), 10, 35);
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_VANJMWXHESJD_0007014E((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_GBCZTUDWNMFL_0088008D(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2);
    }
    // Global variables computation
    // From 164 to 490
    ReceiptValidation_XZWMIWMCEARI -= 42; ReceiptValidation_XZWMIWMCEARI *= 4; ReceiptValidation_XZWMIWMCEARI += 2; 
    // From 50 to 508
    ReceiptValidation_YRNVGHTMPTLY -= 8; ReceiptValidation_YRNVGHTMPTLY *= 12; ReceiptValidation_YRNVGHTMPTLY += 4; 
    // From 334 to 214
    ReceiptValidation_VANJMWXHESJD += 308; ReceiptValidation_VANJMWXHESJD /= 3; 
    // From 141 to 50
    ReceiptValidation_GBCZTUDWNMFL += 59; ReceiptValidation_GBCZTUDWNMFL /= 4; 
    // From 195 to 96
    ReceiptValidation_DTMVFJNVYCIF += 189; ReceiptValidation_DTMVFJNVYCIF /= 4; 
    // From 377 to 420
    ReceiptValidation_RSEJXPWBDKHH -= 237; ReceiptValidation_RSEJXPWBDKHH *= 3; 
    // Set to 447
    ReceiptValidation_RTOIMTFQUPTZ = 447;
    // Set to 19
    ReceiptValidation_IQQWCRVQUIJC = 19;
    ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_01120006(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion061(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    volatile int ReceiptValidation_code = 142; ReceiptValidation_code -= 85; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[22]), 134, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[442]), 10, 35); \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_VANJMWXHESJD_0007014E((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_GBCZTUDWNMFL_0088008D(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2); \
    } \
    ReceiptValidation_XZWMIWMCEARI -= 42; ReceiptValidation_XZWMIWMCEARI *= 4; ReceiptValidation_XZWMIWMCEARI += 2;  \
    ReceiptValidation_YRNVGHTMPTLY -= 8; ReceiptValidation_YRNVGHTMPTLY *= 12; ReceiptValidation_YRNVGHTMPTLY += 4;  \
    ReceiptValidation_VANJMWXHESJD += 308; ReceiptValidation_VANJMWXHESJD /= 3;  \
    ReceiptValidation_GBCZTUDWNMFL += 59; ReceiptValidation_GBCZTUDWNMFL /= 4;  \
    ReceiptValidation_DTMVFJNVYCIF += 189; ReceiptValidation_DTMVFJNVYCIF /= 4;  \
    ReceiptValidation_RSEJXPWBDKHH -= 237; ReceiptValidation_RSEJXPWBDKHH *= 3;  \
    ReceiptValidation_RTOIMTFQUPTZ = 447; \
    ReceiptValidation_IQQWCRVQUIJC = 19; \
    ReceiptValidation_CFRelease_01120006(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_01120006(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#ifdef DEBUG
inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    CFTimeZoneRef ReceiptValidation_tz = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    ASN1_INTEGER *ReceiptValidation_value;
    const unsigned char *ReceiptValidation_seq_end;
    long ReceiptValidation_attr_type;
    long ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 103; ReceiptValidation_code -= 46; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    long ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00D7024A(ReceiptValidation_BIO_s_mem_00D700CD());
    ReceiptValidation_BIO_write_00D701EB(ReceiptValidation_bio_p7, (void *) ReceiptValidation_RSEJXPWBDKHH_008801A4((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_000700D5((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_000A0052(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00070037(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[170]), 31, 33);
    ReceiptValidation_YRNVGHTMPTLY_011201FC(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1);
    ReceiptValidation_tz = ReceiptValidation_XZWMIWMCEARI_008801EA(NULL, 0.0);
    ReceiptValidation_CFDateFormatterSetProperty_00070034(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_000700EA, ReceiptValidation_tz);
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_tz);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_GBCZTUDWNMFL_00070032(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_011200DD, ReceiptValidation_kCFTypeDictionaryValueCallBacks_000700E7);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value);
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value);
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_IQQWCRVQUIJC_00880013(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_DTMVFJNVYCIF_00880060(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value);
                    ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value);
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberLongType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_IQQWCRVQUIJC_00880013(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_000700D5((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_CFDictionaryAddValue_00070072((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key);
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_CFDictionaryAddValue_00070072((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key);
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_000701B2((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_RTOIMTFQUPTZ_008801BF(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_000701B4);
                ReceiptValidation_CFDictionarySetValue_00070036((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1);
            }
            ReceiptValidation_CFArrayAppendValue_0088021B((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_0112008E(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // From 50 to 432
    ReceiptValidation_GBCZTUDWNMFL -= 7; ReceiptValidation_GBCZTUDWNMFL *= 10; ReceiptValidation_GBCZTUDWNMFL += 2; 
    // From 96 to 415
    ReceiptValidation_DTMVFJNVYCIF -= 27; ReceiptValidation_DTMVFJNVYCIF *= 6; ReceiptValidation_DTMVFJNVYCIF += 1; 
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_025D003E(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00D70158(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    CFTimeZoneRef ReceiptValidation_tz = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    ASN1_INTEGER *ReceiptValidation_value; \
    const unsigned char *ReceiptValidation_seq_end; \
    long ReceiptValidation_attr_type; \
    long ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 103; ReceiptValidation_code -= 46; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    long ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00D7024A(ReceiptValidation_BIO_s_mem_00D700CD()); \
    ReceiptValidation_BIO_write_00D701EB(ReceiptValidation_bio_p7, (void *) ReceiptValidation_RSEJXPWBDKHH_008801A4((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_000700D5((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_000A0052(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00070037(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[170]), 31, 33); \
    ReceiptValidation_YRNVGHTMPTLY_011201FC(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1); \
    ReceiptValidation_tz = ReceiptValidation_XZWMIWMCEARI_008801EA(NULL, 0.0); \
    ReceiptValidation_CFDateFormatterSetProperty_00070034(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_000700EA, ReceiptValidation_tz); \
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_tz); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_GBCZTUDWNMFL_00070032(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_011200DD, ReceiptValidation_kCFTypeDictionaryValueCallBacks_000700E7); \
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_IQQWCRVQUIJC_00880013(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_DTMVFJNVYCIF_00880060(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_000A016C(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_025D011A(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_025D01A5(ReceiptValidation_value); \
                    ReceiptValidation_ASN1_INTEGER_free_000A0150(ReceiptValidation_value); \
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberLongType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_IQQWCRVQUIJC_00880013(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_000700D5((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_CFDictionaryAddValue_00070072((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_CFDictionaryAddValue_00070072((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_000701B2((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_RTOIMTFQUPTZ_008801BF(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_000701B4); \
                ReceiptValidation_CFDictionarySetValue_00070036((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_0112008E(ReceiptValidation_value1); \
            } \
            ReceiptValidation_CFArrayAppendValue_0088021B((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_0112008E(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_GBCZTUDWNMFL -= 7; ReceiptValidation_GBCZTUDWNMFL *= 10; ReceiptValidation_GBCZTUDWNMFL += 2;  \
    ReceiptValidation_DTMVFJNVYCIF -= 27; ReceiptValidation_DTMVFJNVYCIF *= 6; ReceiptValidation_DTMVFJNVYCIF += 1;  \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_025D003E(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00D70158(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_0112008E(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptSignature06A(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str2;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 13; ReceiptValidation_code -= 2; ReceiptValidation_code *= 15; ReceiptValidation_code += 8; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_025D024A(ReceiptValidation_BIO_s_mem_00D70057());
    ReceiptValidation_BIO_write_000A0152(ReceiptValidation_bio_p7, (void *) ReceiptValidation_DTMVFJNVYCIF_0088019F((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_GBCZTUDWNMFL_000701B0((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_025D00FC(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_000A004C();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_025D024A(ReceiptValidation_BIO_s_mem_00D70057());
        ReceiptValidation_BIO_write_000A0152(ReceiptValidation_bio_apple, (void *) ReceiptValidation_DTMVFJNVYCIF_0088019F((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_GBCZTUDWNMFL_000701B0((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00D7022F(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_025D0003();
        ReceiptValidation_X509_STORE_add_cert_000A01A2(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_000A0103(NULL, NULL, NULL, NULL, NULL, 0) * 535;
        if (ReceiptValidation_verify == 535) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_000A0103(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 535;
        if (ReceiptValidation_verify != 535) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_025D0153((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000A0215((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[608];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_025D017A(NULL, NID_commonName, ReceiptValidation_common_name, 420);
        if (ReceiptValidation_status > 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_025D017A(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608);
        if (ReceiptValidation_status <= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 2; ReceiptValidation_digest_length -= 1; ReceiptValidation_digest_length *= 12; ReceiptValidation_digest_length += 8; 
        char ReceiptValidation_str2_[608];
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[162]), ReceiptValidation_str2_, 186, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_000A01DE(ReceiptValidation_str2);
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_025D0148(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 535;
        if (ReceiptValidation_status == 535 || ReceiptValidation_len > 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_025D0148(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 535;
        if (ReceiptValidation_status != 535 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01460231(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[608];
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x:", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[608];
        ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[537]), ReceiptValidation_str3_, 201, 68);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[607]), ReceiptValidation_str1_, 167, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 11; ReceiptValidation_num -= 7; ReceiptValidation_num *= 3; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[33])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[33])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 535;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 535) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[608];
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[247]), ReceiptValidation_str4_, 123, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_025D0035(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_025D01A8(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_000A011C(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[608];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[176]), ReceiptValidation_str5_, 6, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_000A00E4(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_025D0153((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000A0215((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_025D0035(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_025D01A8(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_000A011C(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01460231(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 490 to 363
    ReceiptValidation_XZWMIWMCEARI += 236; ReceiptValidation_XZWMIWMCEARI /= 2; 
    // From 508 to 377
    ReceiptValidation_YRNVGHTMPTLY += 246; ReceiptValidation_YRNVGHTMPTLY /= 2; 
    // From 432 to 130
    ReceiptValidation_GBCZTUDWNMFL += 218; ReceiptValidation_GBCZTUDWNMFL /= 5; 
ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_000A0101(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00D7003E(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_00D70160(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_000A0101(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_000A016A(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature06A(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str2; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 13; ReceiptValidation_code -= 2; ReceiptValidation_code *= 15; ReceiptValidation_code += 8;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_025D024A(ReceiptValidation_BIO_s_mem_00D70057()); \
    ReceiptValidation_BIO_write_000A0152(ReceiptValidation_bio_p7, (void *) ReceiptValidation_DTMVFJNVYCIF_0088019F((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_GBCZTUDWNMFL_000701B0((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_025D00FC(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_000A004C(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_025D024A(ReceiptValidation_BIO_s_mem_00D70057()); \
        ReceiptValidation_BIO_write_000A0152(ReceiptValidation_bio_apple, (void *) ReceiptValidation_DTMVFJNVYCIF_0088019F((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_GBCZTUDWNMFL_000701B0((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00D7022F(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_025D0003(); \
        ReceiptValidation_X509_STORE_add_cert_000A01A2(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_000A0103(NULL, NULL, NULL, NULL, NULL, 0) * 535; \
        if (ReceiptValidation_verify == 535) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_000A0103(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 535; \
        if (ReceiptValidation_verify != 535) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_025D0153((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000A0215((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[608]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_025D017A(NULL, NID_commonName, ReceiptValidation_common_name, 420); \
        if (ReceiptValidation_status > 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_025D017A(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608); \
        if (ReceiptValidation_status <= 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 2; ReceiptValidation_digest_length -= 1; ReceiptValidation_digest_length *= 12; ReceiptValidation_digest_length += 8;  \
        char ReceiptValidation_str2_[608]; \
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[162]), ReceiptValidation_str2_, 186, 16); \
        ReceiptValidation_str2 = ReceiptValidation_str2_; \
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_000A01DE(ReceiptValidation_str2); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_025D0148(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 535; \
        if (ReceiptValidation_status == 535 || ReceiptValidation_len > 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_025D0148(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 535; \
        if (ReceiptValidation_status != 535 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01460231(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[608]; \
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x:", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[608]; \
        ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[537]), ReceiptValidation_str3_, 201, 68); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[608]; \
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[607]), ReceiptValidation_str1_, 167, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 11; ReceiptValidation_num -= 7; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[33])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[33])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 535; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 535) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[608]; \
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[247]), ReceiptValidation_str4_, 123, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_025D0035(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_025D01A8(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_000A011C(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[608]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[176]), ReceiptValidation_str5_, 6, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_000A00E4(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_025D0153((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000A0215((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_025D0035(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_025D01A8(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_000A011C(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01460231(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_XZWMIWMCEARI += 236; ReceiptValidation_XZWMIWMCEARI /= 2;  \
    ReceiptValidation_YRNVGHTMPTLY += 246; ReceiptValidation_YRNVGHTMPTLY /= 2;  \
    ReceiptValidation_GBCZTUDWNMFL += 218; ReceiptValidation_GBCZTUDWNMFL /= 5;  \
ReceiptValidation_CheckReceiptSignature06A_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_000A0101(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00D7003E(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_00D70160(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_000A0101(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_000A016A(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[314]), 202, 18);
    volatile int ReceiptValidation_code = 5; ReceiptValidation_code -= 1; ReceiptValidation_code *= 36; ReceiptValidation_code += 29; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_01120082(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_XZWMIWMCEARI_0007016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
    if (ReceiptValidation_YRNVGHTMPTLY_00070179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0146000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 363 to 141
    ReceiptValidation_XZWMIWMCEARI += 201; ReceiptValidation_XZWMIWMCEARI /= 4; 
    // From 447 to 161
    ReceiptValidation_RTOIMTFQUPTZ += 197; ReceiptValidation_RTOIMTFQUPTZ /= 4; 
    // From 19 to 120
    ReceiptValidation_IQQWCRVQUIJC -= 4; ReceiptValidation_IQQWCRVQUIJC *= 8; 
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[314]), 202, 18); \
    volatile int ReceiptValidation_code = 5; ReceiptValidation_code -= 1; ReceiptValidation_code *= 36; ReceiptValidation_code += 29;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_01120082(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_XZWMIWMCEARI_0007016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
    if (ReceiptValidation_YRNVGHTMPTLY_00070179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0146000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
    } \
    ReceiptValidation_XZWMIWMCEARI += 201; ReceiptValidation_XZWMIWMCEARI /= 4;  \
    ReceiptValidation_RTOIMTFQUPTZ += 197; ReceiptValidation_RTOIMTFQUPTZ /= 4;  \
    ReceiptValidation_IQQWCRVQUIJC -= 4; ReceiptValidation_IQQWCRVQUIJC *= 8;  \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[272]), 160, 18);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_01120082(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_XZWMIWMCEARI_0007016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
    if (ReceiptValidation_YRNVGHTMPTLY_00070179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // From 363 to 141
    ReceiptValidation_XZWMIWMCEARI += 201; ReceiptValidation_XZWMIWMCEARI /= 4; 
    // From 447 to 161
    ReceiptValidation_RTOIMTFQUPTZ += 197; ReceiptValidation_RTOIMTFQUPTZ /= 4; 
    // From 19 to 120
    ReceiptValidation_IQQWCRVQUIJC -= 4; ReceiptValidation_IQQWCRVQUIJC *= 8; 
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[272]), 160, 18); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_01120082(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_XZWMIWMCEARI_0007016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
    if (ReceiptValidation_YRNVGHTMPTLY_00070179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_XZWMIWMCEARI += 201; ReceiptValidation_XZWMIWMCEARI /= 4;  \
    ReceiptValidation_RTOIMTFQUPTZ += 197; ReceiptValidation_RTOIMTFQUPTZ /= 4;  \
    ReceiptValidation_IQQWCRVQUIJC -= 4; ReceiptValidation_IQQWCRVQUIJC *= 8;  \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[480]), 173, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_RTOIMTFQUPTZ_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_IQQWCRVQUIJC_01120078((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key);
    if (ReceiptValidation_XZWMIWMCEARI_0112008D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 141 to 432
    ReceiptValidation_XZWMIWMCEARI -= 55; ReceiptValidation_XZWMIWMCEARI *= 5; ReceiptValidation_XZWMIWMCEARI += 2; 
    // From 377 to 434
    ReceiptValidation_YRNVGHTMPTLY -= 233; ReceiptValidation_YRNVGHTMPTLY *= 3; ReceiptValidation_YRNVGHTMPTLY += 2; 
    // From 214 to 359
    ReceiptValidation_VANJMWXHESJD -= 95; ReceiptValidation_VANJMWXHESJD *= 3; ReceiptValidation_VANJMWXHESJD += 2; 
    // From 130 to 130
    ReceiptValidation_GBCZTUDWNMFL /= 1; 
    // From 415 to 383
    ReceiptValidation_DTMVFJNVYCIF += 351; ReceiptValidation_DTMVFJNVYCIF /= 2; 
    // From 420 to 13
    ReceiptValidation_RSEJXPWBDKHH += 22; ReceiptValidation_RSEJXPWBDKHH /= 34; 
    // From 161 to 320
    ReceiptValidation_RTOIMTFQUPTZ -= 55; ReceiptValidation_RTOIMTFQUPTZ *= 3; ReceiptValidation_RTOIMTFQUPTZ += 2; 
    // From 120 to 420
    ReceiptValidation_IQQWCRVQUIJC -= 36; ReceiptValidation_IQQWCRVQUIJC *= 5; 
    ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[480]), 173, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_RTOIMTFQUPTZ_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_IQQWCRVQUIJC_01120078((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key); \
    if (ReceiptValidation_XZWMIWMCEARI_0112008D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1); \
    } \
    ReceiptValidation_XZWMIWMCEARI -= 55; ReceiptValidation_XZWMIWMCEARI *= 5; ReceiptValidation_XZWMIWMCEARI += 2;  \
    ReceiptValidation_YRNVGHTMPTLY -= 233; ReceiptValidation_YRNVGHTMPTLY *= 3; ReceiptValidation_YRNVGHTMPTLY += 2;  \
    ReceiptValidation_VANJMWXHESJD -= 95; ReceiptValidation_VANJMWXHESJD *= 3; ReceiptValidation_VANJMWXHESJD += 2;  \
    ReceiptValidation_GBCZTUDWNMFL /= 1;  \
    ReceiptValidation_DTMVFJNVYCIF += 351; ReceiptValidation_DTMVFJNVYCIF /= 2;  \
    ReceiptValidation_RSEJXPWBDKHH += 22; ReceiptValidation_RSEJXPWBDKHH /= 34;  \
    ReceiptValidation_RTOIMTFQUPTZ -= 55; ReceiptValidation_RTOIMTFQUPTZ *= 3; ReceiptValidation_RTOIMTFQUPTZ += 2;  \
    ReceiptValidation_IQQWCRVQUIJC -= 36; ReceiptValidation_IQQWCRVQUIJC *= 5;  \
    ReceiptValidation_CFRelease_0007008E(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[480]), 173, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_RTOIMTFQUPTZ_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_IQQWCRVQUIJC_01120078((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key);
    if (ReceiptValidation_XZWMIWMCEARI_0112008D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // From 141 to 432
    ReceiptValidation_XZWMIWMCEARI -= 55; ReceiptValidation_XZWMIWMCEARI *= 5; ReceiptValidation_XZWMIWMCEARI += 2; 
    // From 377 to 434
    ReceiptValidation_YRNVGHTMPTLY -= 233; ReceiptValidation_YRNVGHTMPTLY *= 3; ReceiptValidation_YRNVGHTMPTLY += 2; 
    // From 214 to 359
    ReceiptValidation_VANJMWXHESJD -= 95; ReceiptValidation_VANJMWXHESJD *= 3; ReceiptValidation_VANJMWXHESJD += 2; 
    // From 130 to 130
    ReceiptValidation_GBCZTUDWNMFL /= 1; 
    // From 415 to 383
    ReceiptValidation_DTMVFJNVYCIF += 351; ReceiptValidation_DTMVFJNVYCIF /= 2; 
    // From 420 to 13
    ReceiptValidation_RSEJXPWBDKHH += 22; ReceiptValidation_RSEJXPWBDKHH /= 34; 
    // From 161 to 320
    ReceiptValidation_RTOIMTFQUPTZ -= 55; ReceiptValidation_RTOIMTFQUPTZ *= 3; ReceiptValidation_RTOIMTFQUPTZ += 2; 
    // From 120 to 420
    ReceiptValidation_IQQWCRVQUIJC -= 36; ReceiptValidation_IQQWCRVQUIJC *= 5; 
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[480]), 173, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_RTOIMTFQUPTZ_011200A1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_IQQWCRVQUIJC_01120078((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_key); \
    if (ReceiptValidation_XZWMIWMCEARI_0112008D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_XZWMIWMCEARI -= 55; ReceiptValidation_XZWMIWMCEARI *= 5; ReceiptValidation_XZWMIWMCEARI += 2;  \
    ReceiptValidation_YRNVGHTMPTLY -= 233; ReceiptValidation_YRNVGHTMPTLY *= 3; ReceiptValidation_YRNVGHTMPTLY += 2;  \
    ReceiptValidation_VANJMWXHESJD -= 95; ReceiptValidation_VANJMWXHESJD *= 3; ReceiptValidation_VANJMWXHESJD += 2;  \
    ReceiptValidation_GBCZTUDWNMFL /= 1;  \
    ReceiptValidation_DTMVFJNVYCIF += 351; ReceiptValidation_DTMVFJNVYCIF /= 2;  \
    ReceiptValidation_RSEJXPWBDKHH += 22; ReceiptValidation_RSEJXPWBDKHH /= 34;  \
    ReceiptValidation_RTOIMTFQUPTZ -= 55; ReceiptValidation_RTOIMTFQUPTZ *= 3; ReceiptValidation_RTOIMTFQUPTZ += 2;  \
    ReceiptValidation_IQQWCRVQUIJC -= 36; ReceiptValidation_IQQWCRVQUIJC *= 5;  \
    ReceiptValidation_CFRelease_0112008E(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptHash099(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[608];
    volatile int ReceiptValidation_counter = 2; ReceiptValidation_counter -= 1; ReceiptValidation_counter *= 12; ReceiptValidation_counter += 8; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    char *ReceiptValidation_str1;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00880113(NULL, ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1) + ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2));
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data1), ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1));
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data2), ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2));
    ReceiptValidation_CC_SHA1_011E01FF(ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data4), ReceiptValidation_digest);
    ReceiptValidation_OpenSSL_add_all_digests_00D70107();
    EVP_MD_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_EVP_MD_CTX_init_000A01BC(&ReceiptValidation_hashctx2);
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[29]), ReceiptValidation_str1_, 77, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1);
    ReceiptValidation_EVP_DigestInit_00D7015F(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data1), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1));
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data2), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2));
    ReceiptValidation_EVP_DigestFinal_000A012C(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_VANJMWXHESJD_01120167(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
    if (!ReceiptValidation_DTMVFJNVYCIF_0112017F(ReceiptValidation_data3, ReceiptValidation_data5)) {
        volatile int ReceiptValidation_code = 38; ReceiptValidation_code -= 10; ReceiptValidation_code *= 6; ReceiptValidation_code += 5; 
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_011E0231(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data1);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data2);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data4);
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5);
        goto ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail;
    }
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5);
    // Global variables computation
    // From 432 to 363
    ReceiptValidation_XZWMIWMCEARI += 294; ReceiptValidation_XZWMIWMCEARI /= 2; 
    // From 434 to 131
    ReceiptValidation_YRNVGHTMPTLY += 221; ReceiptValidation_YRNVGHTMPTLY /= 5; 
    // Set to 470
    ReceiptValidation_DTMVFJNVYCIF = 470;
    // Set to 594
    ReceiptValidation_RSEJXPWBDKHH = 594;
    // From 420 to 161
    ReceiptValidation_IQQWCRVQUIJC += 224; ReceiptValidation_IQQWCRVQUIJC /= 4; 
ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash099(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[608]; \
    volatile int ReceiptValidation_counter = 2; ReceiptValidation_counter -= 1; ReceiptValidation_counter *= 12; ReceiptValidation_counter += 8;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    char *ReceiptValidation_str1; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_GBCZTUDWNMFL_00070082(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_YRNVGHTMPTLY_011201B2((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00880113(NULL, ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1) + ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2)); \
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data1), ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1)); \
    ReceiptValidation_CFDataAppendBytes_00880004(ReceiptValidation_data4, ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data2), ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2)); \
    ReceiptValidation_CC_SHA1_011E01FF(ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data4), ReceiptValidation_digest); \
    ReceiptValidation_OpenSSL_add_all_digests_00D70107(); \
    EVP_MD_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_EVP_MD_CTX_init_000A01BC(&ReceiptValidation_hashctx2); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[29]), ReceiptValidation_str1_, 77, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1); \
    ReceiptValidation_EVP_DigestInit_00D7015F(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data1), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data1)); \
    ReceiptValidation_EVP_DigestUpdate_000A0161(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_IQQWCRVQUIJC_008801A4(ReceiptValidation_data2), (size_t) ReceiptValidation_XZWMIWMCEARI_000701B0(ReceiptValidation_data2)); \
    ReceiptValidation_EVP_DigestFinal_000A012C(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_VANJMWXHESJD_01120167(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
    if (!ReceiptValidation_DTMVFJNVYCIF_0112017F(ReceiptValidation_data3, ReceiptValidation_data5)) { \
        volatile int ReceiptValidation_code = 38; ReceiptValidation_code -= 10; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;  \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_011E0231(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data1); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data2); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data4); \
        ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5); \
        goto ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail; \
    } \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data5); \
    ReceiptValidation_XZWMIWMCEARI += 294; ReceiptValidation_XZWMIWMCEARI /= 2;  \
    ReceiptValidation_YRNVGHTMPTLY += 221; ReceiptValidation_YRNVGHTMPTLY /= 5;  \
    ReceiptValidation_DTMVFJNVYCIF = 470; \
    ReceiptValidation_RSEJXPWBDKHH = 594; \
    ReceiptValidation_IQQWCRVQUIJC += 224; ReceiptValidation_IQQWCRVQUIJC /= 4;  \
ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_0088018E(ReceiptValidation_data4); \
}
#endif


// CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptExpirationDate0A6(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_YRNVGHTMPTLY_00070083(NULL, ReceiptValidation_DTMVFJNVYCIF_008801D6());
    volatile int ReceiptValidation_code = 73; ReceiptValidation_code -= 30; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IQQWCRVQUIJC_000700A1(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_XZWMIWMCEARI_0088016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key);
    if (ReceiptValidation_date2 && ReceiptValidation_RSEJXPWBDKHH_00070252(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1);
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1);
    }
    // Global variables computation
    // From 131 to 97
    ReceiptValidation_YRNVGHTMPTLY += 63; ReceiptValidation_YRNVGHTMPTLY /= 2; 
    ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1);
}
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A6(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_YRNVGHTMPTLY_00070083(NULL, ReceiptValidation_DTMVFJNVYCIF_008801D6()); \
    volatile int ReceiptValidation_code = 73; ReceiptValidation_code -= 30; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IQQWCRVQUIJC_000700A1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_XZWMIWMCEARI_0088016B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key); \
    if (ReceiptValidation_date2 && ReceiptValidation_RSEJXPWBDKHH_00070252(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00BE000B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1); \
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1); \
    } \
    ReceiptValidation_YRNVGHTMPTLY += 63; ReceiptValidation_YRNVGHTMPTLY /= 2;  \
    ReceiptValidation_CFRelease_0007018E(ReceiptValidation_date1); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 97);
#endif

inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_YRNVGHTMPTLY))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_YRNVGHTMPTLY_00990061((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#ifdef DEBUG
inline static void ReceiptValidation_CleanUp0AD(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    int ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) {
        if (ReceiptValidation_references[ReceiptValidation_idx]) {
            ReceiptValidation_CFRelease_01120006(ReceiptValidation_references[ReceiptValidation_idx]);
            ReceiptValidation_references[ReceiptValidation_idx] = NULL;
        }
    }
}
#else
#define ReceiptValidation_CleanUp0AD(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    int ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) { \
        if (ReceiptValidation_references[ReceiptValidation_idx]) { \
            ReceiptValidation_CFRelease_01120006(ReceiptValidation_references[ReceiptValidation_idx]); \
            ReceiptValidation_references[ReceiptValidation_idx] = NULL; \
        } \
    } \
}
#endif




// CodeBlock EntryPoint
#ifdef DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = _argc;
    ReceiptValidation_ctx1.argv = (const char **) _argv;
    // Call each step
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
    ReceiptValidation_LoadReceipt038((&ReceiptValidation_ctx1));
    ReceiptValidation_GetGUID04A((&ReceiptValidation_ctx1));
    ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1));
    ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptSignature06A((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptHash099((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptExpirationDate0A6((&ReceiptValidation_ctx1));
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
    ReceiptValidation_CleanUp0AD((&ReceiptValidation_ctx1));
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
    ReceiptValidation_ctx1.argc = _argc; \
    ReceiptValidation_ctx1.argv = (const char **) _argv; \
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
    ReceiptValidation_LoadReceipt038((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetGUID04A((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptSignature06A((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptHash099((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptExpirationDate0A6((&ReceiptValidation_ctx1)); \
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CleanUp0AD((&ReceiptValidation_ctx1)); \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

