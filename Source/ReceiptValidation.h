//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : 
// CFBundleShortVersionString : 2.0
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
        #define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
    #endif
#else
        #define __ReceiptValidation_RECEIPT_LOG(...)
#endif

// Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
    #define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 1863,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 2),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 2),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 2),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 2),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 2),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 2),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 2),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 2),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 2),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 2),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 2)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    CFTypeRef dummy0000;
    CFTypeRef receipt_data;
    CFTypeRef dummy0005;
    CFTypeRef dummy0001;
    CFTypeRef dummy0008;
    CFTypeRef receipt_dict;
    CFTypeRef dummy0007;
    CFTypeRef dummy0006;
    CFTypeRef dummy0004;
    const char ** argv;
    CFTypeRef dummy0009;
    CFTypeRef guid_data;
    CFTypeRef dummy0002;
    CFTypeRef ca_data;
    CFTypeRef dummy0003;
    CFTypeRef main_bundle;
    long argc;
    CFTypeRef dummy000A;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0003;
    CFTypeRef dictionary;
    CFTypeRef dummy0004;
    CFTypeRef dummy0007;
    CFTypeRef dummy0001;
    const unsigned char * ptr;
    CFTypeRef dummy0005;
    CFTypeRef dummy0009;
    CFTypeRef dummy0006;
    const unsigned char * end;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy000A;
    CFTypeRef dummy0000;
    CFTypeRef dummy0002;
    CFTypeRef dummy0008;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_INTEGER_free
typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
// Symbol ASN1_INTEGER_get
typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol c2i_ASN1_INTEGER
typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFAbsoluteTimeGetCurrent
typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateCompare
typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFDateCreate
typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDateFormatterSetProperty
typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFDateFormatterTimeZone
typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[608] = {
    // "SHA1_Update" / M(Xor2) / S(197) / L(11)
    "\x86\x9d\x94\xe4\x8a\x80\xa5\xb1\xb4\xa1\xb0\xd5\xdf\xfd\xfb\xb1",
    // "CC_SHA1" / M(Xor2) / S(153) / L(7)
    "\xca\xca\xd6\xda\xc1\xc8\xb8\x89\x4f\x15\x95\x6e\xc7\x45\x8d\xb5",
    // "sha1" / M(Rot) / S(48) / L(4)
    "\xa3\x98\x91\x61\x30\xa2\xa0\x0d\x2a\x02\x82\x88\x1d\xda\x94\x8b",
    // "" / M(None) / S(0) / L(0)
    "\x19\x5c\x70\xf6\xec\x46\xf2\xc3\x1c\x69\x83\x3a\xfa\x37\x69\xf0\xb3\xd5\xf9\xa6\xad\xa3\xa6\x19\xaa\x3d\xcd\x21\xbd\x83\xf7\x73",
    // "X509_NAME_get_text_by_NID" / M(Xor3) / S(159) / L(25)
    "\x99\xf4\xf1\xf8\x9e\x8f\x80\x8c\x84\x9e\xa6\xa4\xb5\x9e\xb5\xa4\xb9\xb5\x9e\xa3\xb8\x9e\x8f\x88\x85\xc1\x4d\x5b\x46\x5f\xbd\xa5\x09\x55",
    // "" / M(None) / S(0) / L(0)
    "\x8e\xb3\x06\x3f\xaa\x09\x09\x8f\xf5\x3d\x46\x06\xc1\x99\x8d\x3a\xd6\x6a\xf6\x82\x8c\x9e\xf0\x67\xea\xc9\xd7\xa5\xa3\xcd\xba\xf4",
    // "" / M(None) / S(0) / L(0)
    "\x7b\xab\x3a\x31\xd5\x68\x11\xb8\x9c\x7f\xdc\x66\x66\xf9\x0b\xda\x8a\x3f\xee\xaa\x38\xa6\x5e\x39\x79\xfa\xe1\x3f\x5a\x0b\xb2\x4d",
    // "EVP_DigestInit" / M(Xor1) / S(128) / L(14)
    "\xc5\xd6\xd0\xdf\xc4\xe9\xe7\xe5\xf3\xf4\xc9\xee\xe9\xf4\x80\xbf",
    // "" / M(None) / S(0) / L(0)
    "\x34\xfd\xe5\xca\x85\x24\x06\x4d\x41\xc7\xa1\xe7\x98\x0b\x76\x5b\x19\x87\xc8\x75\x24\x91\x0e\xd5\x2a\xec\x32\x20\xa7\x31\x77\xbf",
    // "X509_digest" / M(Xor4) / S(84) / L(11)
    "\x18\x75\x70\x79\x1f\x24\x29\x27\x25\x33\x34\x40\x90\xf6\x4a\xa0",
    // "X509_get_ext_by_OBJ" / M(Xor4) / S(207) / L(19)
    "\x74\x19\x1c\x15\x73\x4b\x49\x58\x73\x49\x54\x58\x73\x4e\x55\x73\x63\x6e\x66\x2c",
    // "_MASReceipt/receipt" / M(Xor3) / S(29) / L(19)
    "\x6e\x7c\x70\x62\x63\x54\x52\x54\x58\x41\x45\x1e\x43\x54\x52\x54\x58\x41\x45\x31",
    // "d2i_PKCS7_bio" / M(Xor3) / S(170) / L(13)
    "\xde\x88\xd3\xe5\xea\xf1\xf9\xe9\x8d\xe5\xd8\xd3\xd5\xba\xfa\x2b",
    // "CFArrayCreateMutable" / M(Xor2) / S(109) / L(20)
    "\x3b\x3e\x39\x0a\x0a\x19\x01\x3b\x0a\x1d\x19\x0c\x1d\x35\x0d\x0c\x19\x1a\x14\x1d\x78",
    // "IOMasterPort" / M(Xor1) / S(216) / L(12)
    "\x91\x97\x95\xb9\xab\xac\xbd\xaa\x88\xb7\xaa\xac\xd8\x33\x4d\x50",
    // "X509_STORE_free" / M(Xor4) / S(151) / L(15)
    "\x28\x45\x40\x49\x2f\x23\x24\x3f\x22\x35\x2f\x16\x02\x15\x15\x70",
    // "CFBundleVersion" / M(Xor4) / S(128) / L(15)
    "\x43\x46\x42\x75\x6e\x64\x6c\x65\x56\x65\x72\x73\x69\x6f\x6e\x00",
    // "" / M(None) / S(0) / L(0)
    "\x18\x0c\xab\x00\xb4\x4f\x02\x87\x45\xb1\xf8\x5c\x39\xaa\xd9\x25\x20\xc0\x4f\x2d\xac\x7b\x5e\x09\xea\xdf\x84\x23\xa0\xe6\x92\x6e",
    // "X509_get_ext_by_OBJ" / M(Xor1) / S(57) / L(19)
    "\x61\x0c\x09\x00\x66\x5e\x5c\x4d\x66\x5c\x41\x4d\x66\x5b\x40\x66\x76\x7b\x73\x39",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(235) / L(36)
    "\xa8\xad\xa9\x9e\x85\x8f\x87\x8e\xac\x8e\x9f\xbd\x8a\x87\x9e\x8e\xad\x84\x99\xa2\x85\x8d\x84\xaf\x82\x88\x9f\x82\x84\x85\x8a\x99\x92\xa0\x8e\x92\xeb",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(62) / L(50)
    "\x11\x6d\x47\x4d\x4a\x5b\x53\x11\x72\x57\x5c\x4c\x5f\x4c\x47\x11\x78\x4c\x5f\x53\x5b\x49\x51\x4c\x55\x4d\x11\x7f\x4e\x4e\x75\x57\x4a\x10\x58\x4c\x5f\x53\x5b\x49\x51\x4c\x55\x11\x7f\x4e\x4e\x75\x57\x4a\x3e",
    // "IOMACAddress" / M(Xor2) / S(48) / L(12)
    "\x69\x6f\x6d\x61\x63\x61\x44\x44\x52\x45\x53\x53\x20\xda\x63\xbb",
    // "X509_digest" / M(Xor4) / S(33) / L(11)
    "\x48\x25\x20\x29\x4f\x74\x79\x77\x75\x63\x64\x10\x7f\xcd\xab\x4a",
    // "" / M(None) / S(0) / L(0)
    "\x68\x4b\x76\x21\x01\x01\xac\xe6\x4f\xa8\x64\x64\x73\xe6\xd3\x54\xc6\x3b\xee\xd6\x7f\x93\xc3\x6a\xa0\xe0\x3d\xce\x9f\x8f\x18\xff",
    // "CFReadStreamRead" / M(Xor3) / S(27) / L(16)
    "\x6f\x6a\x7e\x49\x4d\x48\x7f\x58\x5e\x49\x4d\x41\x7e\x49\x4d\x48\x2c",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(161) / L(37)
    "\xc4\xc1\xd2\xd5\xcb\xc4\xf5\xe2\xe6\xf3\xe2\xc4\xe8\xf7\xfe\xc6\xf7\xf7\xe2\xe9\xe3\xee\xe9\xe0\xd7\xe6\xf3\xef\xc4\xe8\xea\xf7\xe8\xe9\xe2\xe9\xf3\x87",
    // "" / M(None) / S(0) / L(0)
    "\x89\x72\x33\xbc\xdd\xde\xbc\x96\xfb\x9e\x9e\xf0\x54\xf0\xa5\x2e\x3d\x4d\x2f\xd7\x41\x0b\x2e\x27\xbf\xf6\x5f\x1f\xe0\x24\xda\x6a",
    // "en0" / M(Xor3) / S(76) / L(3)
    "\x39\x32\x6c\x5c\x32\x04\xc2\xad\x2b\xac\x71\x7e\xa2\xf0\x73\x85",
    // "Contents/_MASReceipt" / M(Xor4) / S(153) / L(20)
    "\xce\xe2\xe3\xf9\xe8\xe3\xf9\xfe\xa2\xd2\xc0\xcc\xde\xdf\xe8\xee\xe8\xe4\xfd\xf9\x8d",
    // "SHA1_Update" / M(Xor3) / S(62) / L(11)
    "\x1d\x06\x0f\x7f\x11\x1b\x3e\x2a\x2f\x3a\x2b\x4e\x5a\xa1\x63\x0b",
    // "SecKeychainOpen" / M(Xor4) / S(216) / L(15)
    "\xd3\xe5\xe3\xcb\xe5\xf9\xe3\xe8\xe1\xe9\xee\xcf\xf0\xe5\xee\x80",
    // "OBJ_txt2obj" / M(Xor3) / S(26) / L(11)
    "\x65\x68\x60\x75\x5e\x52\x5e\x18\x45\x48\x40\x2a\xde\x19\x41\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x39\xbf\x70\xcf\xe9\xb3\xce\x0f\x48\x79\x43\x37\x08\xc0\x5c\x1e\xab\x68\x68\xba\x6b\x86\xc4\x8c\xfc\x96\x66\x8c\x67\x10\xfd\x35",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(211) / L(54)
    "\xcb\xb7\x9d\x97\x90\x81\x89\xcb\xa8\x8d\x86\x96\x85\x96\x9d\xcb\xa2\x96\x85\x89\x81\x93\x8b\x96\x8f\x97\xcb\xb7\x81\x87\x91\x96\x8d\x90\x9d\xca\x82\x96\x85\x89\x81\x93\x8b\x96\x8f\xcb\xb7\x81\x87\x91\x96\x8d\x90\x9d\xe4",
    // "objc_getClass" / M(Xor2) / S(236) / L(13)
    "\x93\x9e\x96\x9f\xa3\x9b\x99\x88\xbf\x90\x9d\x8f\x8f\xfc\x93\xd7",
    // "" / M(None) / S(0) / L(0)
    "\x8d\xd2\x20\xe6\xed\x99\x8e\xb6\xb1\x41\xf3\x19\x99\x9e\xb3\x69\x53\xf2\x38\xdd\x45\xe1\x69\x45\x69\xcf\x74\xd9\x11\x68\x8b\xbf",
    // "IORegistryEntryGetParentEntry" / M(Rot) / S(137) / L(29)
    "\xd2\xd8\xdb\xee\xf0\xf2\xfc\xfd\xfb\x02\xce\xf7\xfd\xfb\x02\xd0\xee\xfd\xd9\xea\xfb\xee\xf7\xfd\xce\xf7\xfd\xfb\x02\x89\xbf\xa1\x2b\x33\xb2\x0b\x58\x8d",
    // "" / M(None) / S(0) / L(0)
    "\x07\xb0\xa0\x77\x29\x45\xf4\x8c\xb1\x90\xdb\x49\xb4\x01\xd4\x71\xb9\x89\x26\xfd\x86\xcf\xdb\xe2\x8e\xe5\x7d\x54\x89\x72\x92\x61",
    // "" / M(None) / S(0) / L(0)
    "\x99\xf5\x55\x27\xde\xb8\xd5\xde\x57\xbf\x25\xdb\x75\x83\x5e\x25\x11\xf4\x6b\xb3\x4e\x0b\x00\x60\xa0\x32\xb7\x65\xfa\xe3\x45\xb7",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(77) / L(22)
    "\xa8\xad\xaa\x99\x99\x8a\x92\xac\x8e\x9f\xbd\x8a\x87\x9e\x8e\xaa\x9f\xa2\x85\x8f\x8e\x93\xeb",
    // "_MASReceipt/receipt" / M(Xor1) / S(97) / L(19)
    "\x3e\x2c\x20\x32\x33\x04\x02\x04\x08\x11\x15\x4e\x13\x04\x02\x04\x08\x11\x15\x61",
    // "." / M(Xor4) / S(44) / L(1)
    "\xee\xc0\xc1\xbf\xb8\x1f\x5e\xe8\xe4\xe7\x2b\x17\x23\x97\xd8\x88",
    // "CFBundleShortVersionString" / M(Rot) / S(36) / L(26)
    "\x67\x6a\x66\x99\x92\x88\x90\x89\x77\x8c\x93\x96\x98\x7a\x89\x96\x97\x8d\x93\x92\x77\x98\x96\x8d\x92\x8b\x24\x9e\x57\xc3\x7b\xb6\x4f\x61\x0a",
    // "objc_msgSend" / M(Xor1) / S(188) / L(12)
    "\xd3\xde\xd6\xdf\xe3\xd1\xcf\xdb\xef\xd9\xd2\xd8\xbc\xc2\x28\x96",
    // "IOBSDNameMatching" / M(Xor3) / S(249) / L(17)
    "\x42\x44\x49\x58\x4f\x45\x6a\x66\x6e\x46\x6a\x7f\x68\x63\x62\x65\x6c\x0b",
    // "CFReadStreamOpen" / M(Xor2) / S(232) / L(16)
    "\xba\xbf\xab\x9c\x98\x9d\xaa\x8d\x8b\x9c\x98\x94\xb6\x89\x9c\x97\xf9",
    // "" / M(None) / S(0) / L(0)
    "\x22\x9b\xaf\xc1\xa3\xab\xa4\x0d\xcc\x4e\xbc\xd9\xda\x63\xb3\x2b\x00\xdf\x6b\x9f\x4f\xca\x56\xc2\xb2\x9e\x81\x1c\x6f\xc4\xda\x56",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(207) / L(48)
    "\xe0\x9c\xb6\xbc\xbb\xaa\xa2\xe0\x83\xa6\xad\xbd\xae\xbd\xb6\xe0\x89\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xbc\xe0\x86\x80\x84\xa6\xbb\xe1\xa9\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xe0\x86\x80\x84\xa6\xbb\xcf",
    // "dlsym" / M(Xor3) / S(92) / L(5)
    "\x08\x00\x1f\x15\x01\x6c\x34\x4a\x54\xae\xb2\x76\x6f\xe6\xac\x03",
    // "" / M(None) / S(0) / L(0)
    "\xe8\x9d\x9f\x85\x19\x0e\x7c\xfc\xc8\x05\x33\xb6\x85\xa1\x0c\x04\xef\xb7\x61\xe3\xdd\xc2\x50\x44\x15\xbe\xc8\xaa\x66\x0f\x26\xf5",
    // "kCFTypeArrayCallBacks" / M(Xor2) / S(241) / L(21)
    "\x8c\xa4\xa1\xb3\x9e\x97\x82\xa6\x95\x95\x86\x9e\xa4\x86\x8b\x8b\xa5\x86\x84\x8c\x94\xe7",
    // "CFRelease" / M(Xor3) / S(233) / L(9)
    "\xba\xbf\xab\x9c\x95\x9c\x98\x8a\x9c\xf9\x23\x1e\xf1\x36\x82\x19",
    // "CFDataCreateMutable" / M(Rot) / S(172) / L(19)
    "\xef\xf2\xf0\x0d\x20\x0d\xef\x1e\x11\x0d\x20\x11\xf9\x21\x20\x0d\x0e\x18\x11\xac",
    // "EVP_DigestUpdate" / M(Rot) / S(78) / L(16)
    "\x93\xa4\x9e\xad\x92\xb7\xb5\xb3\xc1\xc2\xa3\xbe\xb2\xaf\xc2\xb3\x4e",
    // "" / M(None) / S(0) / L(0)
    "\x08\xe8\x9d\x1f\x77\x93\xef\x4f\xe2\x18\xf7\x9b\x37\xe7\xf4\x89\xdf\x88\xaa\x2e\xf0\x75\x49\x0e\x36\xbd\x42\x2a\xec\xcd\xf0\x6c",
    // "CFBundleIdentifier" / M(Xor3) / S(234) / L(18)
    "\xbe\xbb\xbf\x88\x93\x99\x91\x98\xb4\x99\x98\x93\x89\x94\x9b\x94\x98\x8f\xfd",
    // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(74) / L(35)
    "\x2d\x28\x2a\x0f\x1a\x0b\x28\x01\x1c\x03\x0f\x1a\x1a\x0b\x1c\x2d\x1c\x0b\x0f\x1a\x0b\x2a\x0f\x1a\x0b\x28\x1c\x01\x03\x3d\x1a\x1c\x07\x00\x09\x6e",
    // "CFBundleVersion" / M(Xor2) / S(171) / L(15)
    "\xf8\xfd\xf9\xce\xd5\xdf\xd7\xde\xed\xde\xc9\xc8\xd2\xd4\xd5\xbb",
    // "" / M(None) / S(0) / L(0)
    "\xd9\x49\xf2\x96\xe7\x84\xb9\x00\xc9\xf9\xeb\x6a\x58\x0d\xc5\xf9\x4d\x32\x73\x0f\x18\x43\x86\x5e\x66\x5d\xa5\x1b\xca\x70\x2b\x40",
    // "CFBundleShortVersionString" / M(Rot) / S(208) / L(26)
    "\x13\x16\x12\x45\x3e\x34\x3c\x35\x23\x38\x3f\x42\x44\x26\x35\x42\x43\x39\x3f\x3e\x23\x44\x42\x39\x3e\x37\xd0\x4e\xeb\x87\xed\x8c\xb3\x41\x42",
    // "ASN1_get_object" / M(Xor1) / S(128) / L(15)
    "\xc1\xd3\xce\xb1\xdf\xe7\xe5\xf4\xdf\xef\xe2\xea\xe5\xe3\xf4\x80",
    // "CFDictionaryGetValue" / M(Xor4) / S(211) / L(20)
    "\x0c\x09\x0b\x26\x2c\x3b\x26\x20\x21\x2e\x3d\x36\x08\x2a\x3b\x19\x2e\x23\x3a\x2a\x4f",
    // "SecCertificateCopyData" / M(Rot) / S(184) / L(22)
    "\x0b\x1d\x1b\xfb\x1d\x2a\x2c\x21\x1e\x21\x1b\x19\x2c\x1d\xfb\x27\x28\x31\xfc\x19\x2c\x19\xb8",
    // "%02x" / M(Rot) / S(242) / L(4)
    "\x17\x22\x24\x6a\xf2\x7f\x72\x86\x4d\x1f\x38\x74\x4b\x78\x4d\xde",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(125) / L(57)
    "\xac\xd0\xf6\xf0\xf1\xe2\xea\xac\xc9\xe6\xdf\xef\xde\xef\xf6\xac\xc8\xe2\xf6\xe0\xe5\xde\xe6\xeb\xf0\xac\xd0\xf6\xf0\xf1\xe2\xea\xcf\xec\xec\xf1\xc0\xe2\xef\xf1\xe6\xe3\xe6\xe0\xde\xf1\xe2\xf0\xab\xe8\xe2\xf6\xe0\xe5\xde\xe6\xeb\x7d\x24\x9f\x45\x64\x6b\x1f\xe6\xae",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(158) / L(24)
    "\xfc\xf9\xfb\xde\xcb\xda\xf9\xd0\xcd\xd2\xde\xcb\xcb\xda\xcd\xec\xda\xcb\xf9\xd0\xcd\xd2\xde\xcb\xbf\x5d\xbe\x76\xbb\xae\x4d\x7e\xa3",
    // "" / M(None) / S(0) / L(0)
    "\xa1\x90\x67\xbd\x44\xa3\x51\x8e\x11\x08\x28\x90\x86\x82\xad\x41\xf5\xa6\x3f\xc7\x53\xe8\xca\x70\xc0\x32\xf1\xa9\xf5\x9e\x4e\x7f",
    // "ASN1_INTEGER_get" / M(Xor1) / S(205) / L(16)
    "\x8c\x9e\x83\xfc\x92\x84\x83\x99\x88\x8a\x88\x9f\x92\xaa\xa8\xb9\xcd",
    // "CFDateCreate" / M(Xor1) / S(142) / L(12)
    "\xcd\xc8\xca\xef\xfa\xeb\xcd\xfc\xeb\xef\xfa\xeb\x8e\x82\x89\xf9",
    // "CFRelease" / M(Xor3) / S(111) / L(9)
    "\x3c\x39\x2d\x1a\x13\x1a\x1e\x0c\x1a\x7f\x05\xb3\x80\x8d\x80\xed",
    // "" / M(None) / S(0) / L(0)
    "\x52\x4a\xe4\x1d\xb5\xbd\x16\xa5\xa7\x6a\x39\xf1\x1f\x99\x82\xc0\x5f\x58\x91\xac\x1d\xfb\x4a\x52\x2d\xb2\x3f\x8f\xbf\x27\xfe\x39",
    // "globfree" / M(Xor1) / S(180) / L(8)
    "\xd3\xd8\xdb\xd6\xd2\xc6\xd1\xd1\xb4\x7a\xb2\x0e\xf5\xab\xbf\x27",
    // "ASN1_INTEGER_get" / M(Xor3) / S(184) / L(16)
    "\x88\x9a\x87\xf8\x96\x80\x87\x9d\x8c\x8e\x8c\x9b\x96\xae\xac\xbd\xc9",
    // "" / M(None) / S(0) / L(0)
    "\xdf\x05\x30\x4d\xde\x2d\x7e\xee\x9d\x63\x24\x1b\x02\x59\x87\xeb\x32\xca\xb3\x4e\x6b\x9a\xb2\x6d\x4b\xea\xc7\xed\xa4\x50\x58\x3e",
    // "dlopen" / M(Xor3) / S(195) / L(6)
    "\xb7\xbf\xbc\xa3\xb6\xbd\xd3\x40\x24\xdc\xd1\x7f\x79\x14\x3f\xd9",
    // "EVP_DigestUpdate" / M(Xor4) / S(226) / L(16)
    "\x47\x54\x52\x5d\x46\x6b\x65\x67\x71\x76\x57\x72\x66\x63\x76\x67\x02",
    // "SHA1_Final" / M(Xor2) / S(207) / L(10)
    "\x8c\x97\x9e\xee\x80\x99\xb6\xb1\xbe\xb3\xdf\xf6\x80\x69\x04\x2f",
    // "sk_num" / M(Xor2) / S(200) / L(6)
    "\xab\xb3\x87\xb6\xad\xb5\xd8\x21\x9e\xa0\xf2\xbc\x13\x82\x1e\x47",
    // "CFArrayGetCount" / M(Xor1) / S(32) / L(15)
    "\x63\x66\x61\x52\x52\x41\x59\x67\x45\x54\x63\x4f\x55\x4e\x54\x20",
    // "" / M(None) / S(0) / L(0)
    "\x08\x45\xb2\x5d\x20\x13\x0a\x9b\x62\x00\x9a\x6c\x43\x90\x74\xad\x5b\xe1\x55\xea\xc2\x55\xb3\x20\xe8\x08\x07\x5f\x6d\x95\x68\x31",
    // "CFStringCreateWithCString" / M(Xor4) / S(175) / L(25)
    "\x7d\x78\x6d\x4a\x4c\x57\x50\x59\x7d\x4c\x5b\x5f\x4a\x5b\x69\x57\x4a\x56\x7d\x6d\x4a\x4c\x57\x50\x59\x3e\x7c\x3d\xe3\x11\xf7\x46\xcb\xc5",
    // "CFStringCreateWithCString" / M(Rot) / S(228) / L(25)
    "\x27\x2a\x37\x58\x56\x4d\x52\x4b\x27\x56\x49\x45\x58\x49\x3b\x4d\x58\x4c\x27\x37\x58\x56\x4d\x52\x4b\xe4\x2b\x03\xaa\x4a\x3f\x71\xc4\xb4",
    // "CFDateFormatterSetFormat" / M(Xor1) / S(2) / L(24)
    "\x41\x44\x46\x63\x76\x67\x44\x6d\x70\x6f\x63\x76\x76\x67\x70\x51\x67\x76\x44\x6d\x70\x6f\x63\x76\x02\xb5\xda\x9b\x69\x89\xbb\x56\xc7",
    // "CC_SHA1" / M(Xor4) / S(205) / L(7)
    "\x93\x93\x8f\x83\x98\x91\xe1\xd0\x1b\x73\xf6\xde\xfa\x5a\x71\x6d",
    // "" / M(None) / S(0) / L(0)
    "\xe9\xb3\xa7\x50\x62\x54\x5e\xb1\x50\x83\x01\x9f\x06\x9a\x6a\x87\xaa\x16\x8b\x91\x4b\xc2\x35\x0f\x09\xd9\xc5\xb6\x27\x0b\x49\xa5",
    // "kCFBundleIdentifierKey" / M(Xor4) / S(77) / L(22)
    "\x80\xa8\xad\xa9\x9e\x85\x8f\x87\x8e\xa2\x8f\x8e\x85\x9f\x82\x8d\x82\x8e\x99\xa0\x8e\x92\xeb",
    // "CFReadStreamOpen" / M(Xor2) / S(20) / L(16)
    "\x46\x43\x57\x60\x64\x61\x56\x71\x77\x60\x64\x68\x4a\x75\x60\x6b\x05",
    // "d2i_X509_bio" / M(Rot) / S(69) / L(12)
    "\xa9\x77\xae\xa4\x9d\x7a\x75\x7e\xa4\xa7\xae\xb4\x45\xba\x19\x9d",
    // "Contents" / M(Rot) / S(138) / L(8)
    "\xcd\xf9\xf8\xfe\xef\xf8\xfe\xfd\x8a\x28\x9c\x76\x5a\x64\x55\xb8",
    // "CFURLCreateFromFileSystemRepresentation" / M(Rot) / S(64) / L(39)
    "\x83\x86\x95\x92\x8c\x83\xb2\xa5\xa1\xb4\xa5\x86\xb2\xaf\xad\x86\xa9\xac\xa5\x93\xb9\xb3\xb4\xa5\xad\x92\xa5\xb0\xb2\xa5\xb3\xa5\xae\xb4\xa1\xb4\xa9\xaf\xae\x40\x87\xb4\x1a\xd4\x10\x20\xdf\x5b",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(215) / L(59)
    "\xe1\xe6\xed\xe6\x92\xed\xe2\x95\xed\xe1\xe1\xed\xe5\x94\xed\xe2\xee\xed\xe4\x96\xed\xe7\xef\xed\x91\x91\xed\xe2\xef\xed\x93\xe6\xed\xe3\x96\xed\x92\xe5\xed\xe5\xe3\xed\xe2\xe5\xed\x93\xe6\xed\xee\xef\xed\x93\x91\xed\xe1\x94\xed\xe1\xe7\xd7\xe3\x69\x19\x91\xdf\xa4\xa9\xf9",
    // "init" / M(Xor2) / S(136) / L(4)
    "\xf1\xf6\xf1\xec\x98\x5a\x47\x95\x55\x5c\x74\xeb\xd0\xf7\xfe\xf4",
    // "kCFTypeArrayCallBacks" / M(Xor2) / S(119) / L(21)
    "\x0a\x22\x27\x35\x18\x11\x04\x20\x13\x13\x00\x18\x22\x00\x0d\x0d\x23\x00\x02\x0a\x12\x61",
    // "NSApplicationMain" / M(Xor2) / S(90) / L(17)
    "\x06\x1b\x09\x38\x38\x24\x21\x2b\x29\x3c\x21\x27\x26\x05\x29\x21\x26\x48",
    // "" / M(None) / S(0) / L(0)
    "\xfe\x3e\x58\x13\xd7\xfc\x03\x14\xcc\x05\x03\x15\x2d\x10\x6f\xb6\x97\xaf\xb9\xad\x8d\xb9\x52\x0e\x86\x39\xcd\x52\x4d\xd7\x12\x96",
    // "" / M(None) / S(0) / L(0)
    "\x5f\xe3\xbc\x6f\x6e\x68\x05\x4f\xc2\x0f\x0f\xec\xb9\x41\x67\xcb\xd6\x6d\xbb\xf9\x92\x29\x59\x5f\x0f\x10\xfa\xdc\xdd\xd9\x03\xd0",
    // "strlen" / M(Rot) / S(167) / L(6)
    "\x1a\x1b\x19\x13\x0c\x15\xa7\xf2\x3e\x64\xf4\xc9\xbb\x86\x10\xd3",
    // "" / M(None) / S(0) / L(0)
    "\xe4\xda\x99\x91\x5a\x35\x6d\xc4\xd4\xc1\xbc\xbd\x46\x4c\x15\xc3\x84\xf2\x5b\x1d\x45\xcd\xa6\x6a\x87\x77\x2b\x1a\xcb\xe1\xb0\x16",
    // "" / M(None) / S(0) / L(0)
    "\xd9\x1b\x92\x96\xcb\x93\x4d\x58\x23\x96\x7e\xbf\x03\x5d\x7b\xd4\x63\x10\xc1\x84\xd9\x60\xdf\x8a\x90\xc0\x3c\x7f\xa3\xe4\xdd\x70",
    // "EVP_MD_CTX_init" / M(Xor2) / S(129) / L(15)
    "\xd4\xc7\xc1\xce\xdc\xd5\xce\xd2\xc5\xc9\xce\xf8\xff\xf8\xe5\x91",
    // "%02x:" / M(Xor3) / S(173) / L(5)
    "\x98\x8d\x8f\xc5\x87\xbd\xa9\x41\x59\xa2\x15\x34\x1f\x1a\x4e\x7e",
    // "CFArrayCreateMutable" / M(Xor2) / S(31) / L(20)
    "\x49\x4c\x4b\x78\x78\x6b\x73\x49\x78\x6f\x6b\x7e\x6f\x47\x7f\x7e\x6b\x68\x66\x6f\x0a",
    // "objc_getClass" / M(Xor2) / S(101) / L(13)
    "\x1a\x17\x1f\x16\x2a\x12\x10\x01\x36\x19\x14\x06\x06\x75\xbc\x8e",
    // "CFDateFormatterCreate" / M(Rot) / S(42) / L(21)
    "\x6d\x70\x6e\x8b\x9e\x8f\x70\x99\x9c\x97\x8b\x9e\x9e\x8f\x9c\x6d\x9c\x8f\x8b\x9e\x8f\x2a",
    // "SHA1" / M(Xor4) / S(111) / L(4)
    "\xa3\xb8\xb1\xc1\xf0\x31\x49\x3c\x97\xcb\x79\x51\x84\x53\x1c\x79",
    // "kSecMatchLimitAll" / M(Rot) / S(105) / L(17)
    "\xd4\xbc\xce\xcc\xb6\xca\xdd\xcc\xd1\xb5\xd2\xd6\xd2\xdd\xaa\xd5\xd5\x69",
    // "kSecMatchSubjectContains" / M(Xor2) / S(234) / L(24)
    "\xa0\x98\xae\xa8\x86\xaa\xbf\xa8\xa3\x98\xbe\xa9\xa1\xae\xa8\xbf\x88\xa4\xa5\xbf\xaa\xa2\xa5\xb8\xcb\x80\xe8\xc3\x8b\x3c\xdd\x41\xe7",
    // "" / M(None) / S(0) / L(0)
    "\xb0\xf1\x34\x55\xdc\x61\x71\x50\x96\xc4\xf2\x5d\x24\xbc\xe8\x83\xf9\x69\x93\x4e\x1a\x8c\xdc\xb0\xcf\x20\xee\x95\x10\x8c\x3a\xf3",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(89) / L(28)
    "\x9e\xb2\xb3\xa9\xb8\xb3\xa9\xae\xf2\x82\x90\x9c\x8e\x8f\xb8\xbe\xb8\xb4\xad\xa9\xf2\xaf\xb8\xbe\xb8\xb4\xad\xa9\xdd\xf4\xac\x32\x0f\x6c\x41\x73\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x15\x2d\x47\x74\xeb\x8b\x3c\x25\x0c\x74\x5a\x9a\x78\xa5\xe2\x8e\xee\x08\x2d\xa1\x9b\xb5\x8c\x1a\x9a\xf0\xe3\xa1\xaa\x0b\x24\x5a",
    // "dlopen" / M(Rot) / S(98) / L(6)
    "\xc6\xce\xd1\xd2\xc7\xd0\x62\x39\x50\x86\x56\xbd\xbe\xe0\x74\x09",
    // "" / M(None) / S(0) / L(0)
    "\x25\x84\x89\x9b\x90\x2c\x75\x4b\xdc\xb6\xae\x6e\xb2\x5a\x33\xf9\x97\x68\x44\x40\xbe\x6a\x30\x99\xd3\x8a\x99\x2c\x42\x7b\x5c\x28",
    // "sk_free" / M(Xor3) / S(184) / L(7)
    "\xbb\xa3\x97\xae\xba\xad\xad\xc8\x29\x68\x69\x85\xba\xc8\xdd\xf0",
    // "longjmp" / M(Xor4) / S(192) / L(7)
    "\x6c\x6f\x6e\x67\x6a\x6d\x70\x00\x4d\xcc\xcf\x46\xbb\x52\xf1\x02",
    // "" / M(None) / S(0) / L(0)
    "\x32\x53\x9a\x46\x9d\x1e\x37\x1f\x02\x1e\xa9\xb0\x50\x94\x7d\xe7\x79\x6a\x65\x1c\xf0\x12\x90\x91\x89\x13\x4a\xeb\x2a\x34\x39\xc1",
    // "" / M(None) / S(0) / L(0)
    "\xc2\x61\x92\xf6\x8a\x02\x25\x58\xb2\xaf\x95\x74\xec\x4b\xea\x67\x1f\x61\x02\x3d\x81\x1d\x6b\x51\x56\xa5\x7e\xa8\x04\xb2\xc0\x2c",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(196) / L(66)
    "\x28\x54\x7e\x74\x73\x62\x6a\x28\x4b\x6e\x65\x75\x66\x75\x7e\x28\x41\x75\x66\x6a\x62\x70\x68\x75\x6c\x74\x28\x44\x68\x75\x62\x41\x68\x72\x69\x63\x66\x73\x6e\x68\x69\x29\x61\x75\x66\x6a\x62\x70\x68\x75\x6c\x28\x44\x68\x75\x62\x41\x68\x72\x69\x63\x66\x73\x6e\x68\x69\x07",
    // "" / M(None) / S(0) / L(0)
    "\x3e\xb5\x63\x3a\x6d\x61\x65\xeb\x04\x50\x61\xb4\xea\xcc\xd9\xd1\x4c\xa1\x7a\x6d\x7d\x27\x04\x58\x9c\xf5\x1a\xf8\x14\xa0\x85\x40",
    // "RTLD_MAIN_ONLY" / M(Xor3) / S(67) / L(14)
    "\x01\x07\x1f\x17\x0c\x1e\x12\x1a\x1d\x0c\x1c\x1d\x1f\x0a\x53\x9c",
    // "" / M(None) / S(0) / L(0)
    "\x04\x90\x80\x4a\xb8\x80\x49\x8f\x55\x6d\x8a\xc1\xfc\x29\x8e\xb2\xe5\x5a\x19\xfd\x5c\x5f\x8a\x3d\x72\xd9\xaf\xeb\x0c\x18\xf4\x7c",
    // "" / M(None) / S(0) / L(0)
    "\xab\x70\x30\x55\x1b\x7f\x32\x09\x8e\xa9\x19\x8c\xb6\xb8\xcd\xbb\x9a\xd7\x04\x9c\x70\x60\x31\xf9\xbb\x1d\xaa\x77\xd5\x65\x10\x09",
    // "" / M(None) / S(0) / L(0)
    "\x57\x04\x1c\xd9\x94\xac\x09\x0c\x3c\x3c\x84\xef\xd7\x48\xf0\xb1\x1c\x75\xa4\x0a\x68\x9a\x33\x33\xd6\x2e\x60\x52\xe1\xc5\x3c\x9e",
    // "IOObjectRelease" / M(Xor1) / S(41) / L(15)
    "\x60\x66\x66\x4b\x43\x4c\x4a\x5d\x7b\x4c\x45\x4c\x48\x5a\x4c\x29",
    // "CFDataGetBytePtr" / M(Xor4) / S(96) / L(16)
    "\x23\x26\x24\x01\x14\x01\x27\x05\x14\x22\x19\x14\x05\x30\x14\x12\x60",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x3d\x9b\xcb\xb5\x91\xfb\xa9\x5a\x83\x38\x19\x17\x98\xfe\x17\x50\x05\x84\x8d\x36\x3a\xdf\xa9\xca\xfd\xe3\x49\xaf\x1a\xf3\x3c",
    // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(150) / L(24)
    "\xf4\xf1\xf6\xd5\xc4\xd8\xdb\xc2\xc3\xd2\xe3\xde\xda\xd2\xf0\xd2\xc3\xf4\xc2\xc5\xc5\xd2\xd9\xc3\xb7\xe4\xa8\xaa\x4a\xb7\xaf\x1c\xa0",
    // "SHA1" / M(Xor1) / S(196) / L(4)
    "\x97\x8c\x85\xf5\xc4\xe0\xad\x07\x47\x5b\x42\xd5\xba\xbb\xe5\x38",
    // "" / M(None) / S(0) / L(0)
    "\x08\x94\xdb\xa7\xca\xb1\x97\xe0\x62\x8c\x51\x56\xb4\x48\x89\x18\xac\xde\x24\x1b\xec\x8c\xf9\x29\xbe\x6f\xb1\xac\xd0\x13\x52\x77",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(240) / L(39)
    "\x43\x46\x54\x69\x6d\x65\x5a\x6f\x6e\x65\x43\x72\x65\x61\x74\x65\x57\x69\x74\x68\x54\x69\x6d\x65\x49\x6e\x74\x65\x72\x76\x61\x6c\x46\x72\x6f\x6d\x47\x4d\x54\x00\xbd\x48\x61\xd1\x49\x1a\xbf\x82",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(84) / L(40)
    "\x8a\x85\x85\xb9\x89\xb6\x8a\x8a\x86\xb7\x89\x8d\x87\xb5\x84\x8c\xba\xba\x89\x8c\xb8\x85\x88\xb5\xb9\x86\x86\x88\x89\x86\xb8\x85\x8d\x8c\xb8\xba\x8a\xb7\x8a\x84\x54\xda\x73\xea\xeb\x2d\x05\xc4\xdd",
    // "kCFDateFormatterTimeZone" / M(Rot) / S(100) / L(24)
    "\xcf\xa7\xaa\xa8\xc5\xd8\xc9\xaa\xd3\xd6\xd1\xc5\xd8\xd8\xc9\xd6\xb8\xcd\xd1\xc9\xbe\xd3\xd2\xc9\x64\x37\xd5\x5f\x73\x04\xe5\xdd\xf9",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(98) / L(29)
    "\x2f\x07\x02\x10\x3d\x34\x21\x00\x2d\x27\x30\x2d\x2b\x2a\x25\x36\x3d\x0f\x21\x3d\x07\x25\x28\x28\x06\x25\x27\x2f\x37\x44\xa1\x88\x14\x34\x3c\xa4\x31\x1d",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x2f\xc6\x5a\x84\x1b\x6e\x4a\x1a\xba\x75\xcd\x81\x52\xa0\x11\xac\xbf\xb9\x03\x54\xfe\x26\xd7\x72\x28\x9f\xb7\x9a\x94\x6b\x17",
    // "" / M(None) / S(0) / L(0)
    "\x16\x50\xd8\x36\xf9\x54\xac\x5b\xa1\x3f\x05\xaf\x54\x46\x38\xf0\x6a\xf2\x74\xfd\x18\x5b\xc2\xd9\x20\xce\x9b\xb7\x06\xff\x47\xee",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(161) / L(37)
    "\xf2\xc4\xc2\xea\xc4\xd8\xc2\xc9\xc0\xc8\xcf\xf2\xc4\xc0\xd3\xc2\xc9\xe2\xd3\xc4\xc0\xd5\xc4\xe7\xd3\xce\xcc\xe0\xd5\xd5\xd3\xc8\xc3\xd4\xd5\xc4\xd2\xa1",
    // "Apple Root CA" / M(Xor4) / S(120) / L(13)
    "\xc1\xf0\xf0\xec\xe5\xa0\xd2\xef\xef\xf4\xa0\xc3\xc1\x80\x63\xe1",
    // "" / M(Rot) / S(60) / L(0)
    "\x3c\xd5\x35\x79\x9b\x26\x3a\xcb\xcd\x1c\x0c\x75\x43\xb7\x70\xf9",
    // "CFDataGetLength" / M(Xor1) / S(114) / L(15)
    "\x31\x34\x36\x13\x06\x13\x35\x17\x06\x3e\x17\x1c\x15\x06\x1a\x72",
    // "" / M(None) / S(0) / L(0)
    "\x6d\x56\x9f\xab\x36\x35\xd6\x12\x3c\xac\x55\x89\xe0\xf7\x20\x74\xb7\xdf\x50\xb3\x45\x54\x19\x0a\x38\xfe\x94\x93\xfa\xf9\xf1\xca",
    // "exit" / M(Xor2) / S(217) / L(4)
    "\xac\xb1\xa0\xbd\xc9\x9e\xd8\x89\x4a\xdf\xe8\x27\xb2\xbb\xb3\x80",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(80) / L(28)
    "\x36\x1a\x1b\x01\x10\x1b\x01\x06\x5a\x2a\x38\x34\x26\x27\x10\x16\x10\x1c\x05\x01\x5a\x07\x10\x16\x10\x1c\x05\x01\x75\x72\xfe\x6c\x1d\xc9\xa6\x13\xa8",
    // "receipt" / M(Xor3) / S(22) / L(7)
    "\x54\x43\x45\x43\x4f\x56\x52\x26\x32\x25\xb5\xbb\xf4\xf8\xce\x04",
    // "" / M(None) / S(0) / L(0)
    "\x9f\x5e\x40\x68\xd9\xf1\x27\x57\x43\xfa\x91\x9a\xc8\x9b\x5e\x52\xaf\xb4\x17\xe3\x80\xde\x21\x14\x66\x65\xad\x82\x0d\xbb\x6d\x6d",
    // "start" / M(Xor2) / S(212) / L(5)
    "\xb7\xb0\xa5\xb6\xb0\xc4\x46\x73\xb1\x9e\x3f\x53\x08\xe7\xb1\x3a",
    // "en0" / M(Xor3) / S(134) / L(3)
    "\xf3\xf8\xa6\x96\x08\x66\x35\x3f\xf0\x41\x61\x81\x78\x5c\xb5\x66",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor3) / S(214) / L(40)
    "\x31\x36\x36\x42\x32\x45\x31\x31\x35\x44\x32\x3e\x34\x46\x37\x3f\x41\x41\x32\x3f\x43\x36\x33\x46\x42\x35\x35\x33\x32\x35\x43\x36\x3e\x3f\x43\x41\x31\x44\x31\x37\x07\xb2\x5d\x7a\x14\x68\x0c\x6d\xeb",
    // "" / M(None) / S(0) / L(0)
    "\x23\xec\xef\xc9\xe4\x28\x2c\xff\x69\x8f\xe0\x14\xf2\xca\x4c\x0c\x5c\xc4\xb0\xfb\x3c\xb5\xf9\xae\x19\xe2\x96\x9c\x60\x3d\xe7\x49",
    // "BIO_new" / M(Xor2) / S(48) / L(7)
    "\x62\x69\x6f\x7f\x4e\x45\x57\x20\x3e\x82\xd4\xce\xdb\xca\x19\x6a",
    // "CC_SHA1_Init" / M(Rot) / S(77) / L(12)
    "\x90\x90\xac\xa0\x95\x8e\x7e\xac\x96\xbb\xb6\xc1\x4d\xc7\x69\xad",
    // "CFDictionaryCreateMutable" / M(Xor4) / S(181) / L(25)
    "\x49\x4c\x4e\x63\x69\x7e\x63\x65\x64\x6b\x78\x73\x49\x78\x6f\x6b\x7e\x6f\x47\x7f\x7e\x6b\x68\x66\x6f\x0a\x52\x4f\x8a\x8c\x05\xf2\xb5\xde",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(204) / L(48)
    "\xd2\xae\x84\x8e\x89\x98\x90\xd2\xb1\x94\x9f\x8f\x9c\x8f\x84\xd2\xbb\x8f\x9c\x90\x98\x8a\x92\x8f\x96\x8e\xd2\xb4\xb2\xb6\x94\x89\xd3\x9b\x8f\x9c\x90\x98\x8a\x92\x8f\x96\xd2\xb4\xb2\xb6\x94\x89\xfd",
    // "sk_free" / M(Xor3) / S(75) / L(7)
    "\x28\x30\x04\x3d\x29\x3e\x3e\x5b\x3a\xeb\x81\x1c\xab\x0b\xb2\xbf",
    // "CFDataCreate" / M(Xor2) / S(172) / L(12)
    "\xff\xfa\xf8\xdd\xc8\xdd\xff\xce\xd9\xdd\xc8\xd9\xbc\x09\x75\x8e",
    // "CFDictionaryCreateMutable" / M(Xor2) / S(3) / L(25)
    "\x62\x67\x65\x48\x42\x55\x48\x4e\x4f\x40\x53\x58\x62\x53\x44\x40\x55\x44\x6c\x54\x55\x40\x43\x4d\x44\x21\x57\xf4\x43\xd3\xd4\x2f\x33\x55",
    // "%02X:" / M(Xor1) / S(180) / L(5)
    "\x91\x84\x86\xec\x8e\xb4\xa6\xfb\xb2\x35\x3e\xb0\xdb\x4b\x35\x88",
    // "CFReadStreamCreateWithFile" / M(Xor3) / S(174) / L(26)
    "\x92\x97\x83\xb4\xb0\xb5\x82\xa5\xa3\xb4\xb0\xbc\x92\xa3\xb4\xb0\xa5\xb4\x86\xb8\xa5\xb9\x97\xb8\xbd\xb4\xd1\xc1\x4d\xe1\x29\x58\x99\xd4\xb9",
    // "ASN1_INTEGER_free" / M(Rot) / S(235) / L(17)
    "\x2c\x3e\x39\x1c\x4a\x34\x39\x3f\x30\x32\x30\x3d\x4a\x51\x5d\x50\x50\xeb",
    // "" / M(None) / S(0) / L(0)
    "\x84\x4e\xdf\x84\xd5\xcb\xf2\x66\x25\x98\x82\x3c\x4d\x3f\xb9\x13\x5e\x6d\x86\xaa\xd4\x64\x2d\x0c\xf2\x3f\xd3\x1c\x90\x03\x47\x16",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(131) / L(23)
    "\xf0\xe8\xf1\xc6\xc0\xc6\xca\xd3\xd7\xf1\xc6\xc5\xd1\xc6\xd0\xcb\xf1\xc6\xd2\xd6\xc6\xd0\xd7\xa3\x6c\xf8\x68\x3a\x9d\x07\x85\xed",
    // "receipt" / M(Rot) / S(212) / L(7)
    "\x46\x39\x37\x39\x3d\x44\x48\xd4\xcd\xf2\x27\xaf\xcc\xc0\x96\xf3",
    // "CFBundleGetIdentifier" / M(Xor2) / S(91) / L(21)
    "\x0e\x0b\x0f\x38\x23\x29\x21\x28\x0a\x28\x39\x04\x29\x28\x23\x39\x24\x2b\x24\x28\x3f\x4d",
    // "sel_registerName" / M(Xor4) / S(165) / L(16)
    "\x86\x90\x99\xaa\x87\x90\x92\x9c\x86\x81\x90\x87\xbb\x94\x98\x90\xf5",
    // "X509_STORE_free" / M(Rot) / S(93) / L(15)
    "\xb5\x92\x8d\x96\xbc\xb0\xb1\xac\xaf\xa2\xbc\xc3\xcf\xc2\xc2\x5d",
    // "PKCS7_verify" / M(Xor2) / S(27) / L(12)
    "\x5b\x40\x48\x58\x3c\x54\x7d\x6e\x79\x62\x6d\x72\x0b\x2d\xb5\xf7",
    // "CFArrayGetValueAtIndex" / M(Xor2) / S(254) / L(22)
    "\xaa\xaf\xa8\x9b\x9b\x88\x90\xae\x8c\x9d\xbf\x88\x85\x9c\x8c\xa8\x9d\xa0\x87\x8d\x8c\x91\xe9",
    // "glob" / M(Xor4) / S(182) / L(4)
    "\x07\x0c\x0f\x02\x60\xe3\x0b\xe6\xc4\x79\xc4\xcf\xc7\xc4\xa3\x53",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(150) / L(35)
    "\xd9\xdc\xda\xf7\x0a\xfb\xdc\x05\x08\x03\xf7\x0a\x0a\xfb\x08\xd9\x08\xfb\xf7\x0a\xfb\xda\xf7\x0a\xfb\xdc\x08\x05\x03\xe9\x0a\x08\xff\x04\xfd\x96",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x35\xab\xa5\x54\xb2\x8d\x09\x2b\x48\x5c\xb8\xd4\x8e\x42\x05\x05\xda\xdf\x52\x92\x60\x9a\x54\x5c\x57\x88\x51\x91\x18\x07\x30",
    // "kSecClassCertificate" / M(Rot) / S(177) / L(20)
    "\x1c\x04\x16\x14\xf4\x1d\x12\x24\x24\xf4\x16\x23\x25\x1a\x17\x1a\x14\x12\x25\x16\xb1",
    // "kSecMatchSearchList" / M(Xor4) / S(65) / L(19)
    "\x7f\x47\x71\x77\x59\x75\x60\x77\x7c\x47\x71\x75\x66\x77\x7c\x58\x7d\x67\x60\x14",
    // "dlopen" / M(Xor4) / S(181) / L(6)
    "\x34\x3c\x3f\x20\x35\x3e\x50\x2d\xa2\x2e\x74\x93\x41\xd4\xcb\x93",
    // "CFDateCompare" / M(Rot) / S(41) / L(13)
    "\x6c\x6f\x6d\x8a\x9d\x8e\x6c\x98\x96\x99\x8a\x9b\x8e\x29\x95\xff",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(149) / L(28)
    "\xf9\xff\xe3\xd5\xc2\xc6\xd9\xd3\xd5\xf7\xd5\xc4\xfd\xd1\xc4\xd3\xd8\xd9\xde\xd7\xe3\xd5\xc2\xc6\xd9\xd3\xd5\xc3\xb0\xb9\xed\x73\x8e\x0f\x9d\x10\x1c",
    // "" / M(None) / S(0) / L(0)
    "\x40\x6e\x03\x40\xa4\xb2\x9f\x6d\x21\xe3\xb4\xc0\xc7\x47\xbd\x5d\x18\x47\xbd\xd8\x06\x38\xd8\x7c\xc6\xe8\xcd\xe3\xeb\x67\x5c\x18",
    // "PKCS7_verify" / M(Xor3) / S(30) / L(12)
    "\x7e\x65\x6d\x7d\x19\x71\x58\x4b\x5c\x47\x48\x57\x2e\xa6\x56\x47",
    // "CC_SHA1_Final" / M(Xor2) / S(232) / L(13)
    "\xbb\xbb\xa7\xab\xb0\xb9\xc9\xa7\xbe\x91\x96\x99\x94\xf8\xc9\x18",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(120) / L(59)
    "\x8a\x8d\x86\x8d\xd9\x86\x89\xde\x86\x8a\x8a\x86\x8e\xdf\x86\x89\x85\x86\x8f\xdd\x86\x8c\x84\x86\xda\xda\x86\x89\x84\x86\xd8\x8d\x86\x88\xdd\x86\xd9\x8e\x86\x8e\x88\x86\x89\x8e\x86\xd8\x8d\x86\x85\x84\x86\xd8\xda\x86\x8a\xdf\x86\x8a\x8c\xbc\xb6\x55\xfc\x2a\xc7\xf5\xb0\xed",
    // "PKCS7_get0_signers" / M(Rot) / S(4) / L(18)
    "\x54\x4f\x47\x57\x3b\x63\x6b\x69\x78\x34\x63\x77\x6d\x6b\x72\x69\x76\x77\x04",
    // "CFDateFormatterSetFormat" / M(Xor1) / S(110) / L(24)
    "\x2d\x28\x2a\x0f\x1a\x0b\x28\x01\x1c\x03\x0f\x1a\x1a\x0b\x1c\x3d\x0b\x1a\x28\x01\x1c\x03\x0f\x1a\x6e\xc0\xa5\xdb\x45\x37\x9e\xe8\x87",
    // "" / M(Xor1) / S(246) / L(0)
    "\xf6\x74\x5c\x05\xbe\xc5\x36\x49\xab\x1d\x2b\xbf\x8c\x41\x47\x0a",
    // "" / M(None) / S(0) / L(0)
    "\x76\xca\x7c\x98\xec\x19\x45\x60\x17\xf6\x0f\xd6\x77\xf0\x07\x9f\x59\xcc\xc2\x09\xbe\xe8\x56\x55\x8a\x65\x62\xd8\xd8\x54\x64\xd9",
    // "kCFTypeArrayCallBacks" / M(Xor1) / S(232) / L(21)
    "\x83\xab\xae\xbc\x91\x98\x8d\xa9\x9a\x9a\x89\x91\xab\x89\x84\x84\xaa\x89\x8b\x83\x9b\xe8",
    // "2.0" / M(Xor1) / S(171) / L(3)
    "\x99\x85\x9b\xab\x46\xf1\x0b\x27\x9b\x84\xc4\x21\xbe\x5f\x0a\x3a",
    // "BIO_s_mem" / M(Rot) / S(99) / L(9)
    "\xa5\xac\xb2\xc2\xd6\xc2\xd0\xc8\xd0\x63\xb0\xd3\xd4\x7b\x01\x27",
    // "kCFBundleIdentifierKey" / M(Xor1) / S(6) / L(22)
    "\x6d\x45\x40\x44\x73\x68\x62\x6a\x63\x4f\x62\x63\x68\x72\x6f\x60\x6f\x63\x74\x4d\x63\x7f\x06",
    // "CFNumberCreate" / M(Xor4) / S(133) / L(14)
    "\x13\x16\x1e\x25\x3d\x32\x35\x22\x13\x22\x35\x31\x24\x35\x50\xd8",
    // "globfree" / M(Rot) / S(34) / L(8)
    "\x89\x8e\x91\x84\x88\x94\x87\x87\x22\xfd\x41\x5f\x54\x4c\xa4\xdb",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(128) / L(28)
    "\xe6\xca\xcb\xd1\xc0\xcb\xd1\xd6\x8a\xfa\xe8\xe4\xf6\xf7\xc0\xc6\xc0\xcc\xd5\xd1\x8a\xd7\xc0\xc6\xc0\xcc\xd5\xd1\xa5\xbd\x00\xf4\x74\x0a\xff\xc1\xec",
    // "CFDateFormatterCreate" / M(Xor4) / S(60) / L(21)
    "\x6b\x6e\x6c\x49\x5c\x4d\x6e\x47\x5a\x45\x49\x5c\x5c\x4d\x5a\x6b\x5a\x4d\x49\x5c\x4d\x28",
    // "kCFDateFormatterTimeZone" / M(Xor2) / S(115) / L(24)
    "\x39\x11\x14\x16\x33\x26\x37\x14\x3d\x20\x3f\x33\x26\x26\x37\x20\x06\x3b\x3f\x37\x08\x3d\x3c\x37\x52\xc7\x8b\x76\x5c\x68\x21\xad\xda",
    // "IORegistryEntryGetParentEntry" / M(Xor2) / S(152) / L(29)
    "\xf7\xf1\xec\xdb\xd9\xd7\xcd\xca\xcc\xc7\xfb\xd0\xca\xcc\xc7\xf9\xdb\xca\xee\xdf\xcc\xdb\xd0\xca\xfb\xd0\xca\xcc\xc7\xbe\xa7\x9d\xd0\x49\xdc\x6a\x60\xdd",
    // "" / M(None) / S(0) / L(0)
    "\x9e\x5d\x66\x38\xd7\x79\x9f\xf8\xc0\x1d\x4d\xd6\xfe\x04\xaa\xe7\xf1\x4d\xa3\x7b\x7d\x38\x13\x57\x01\x14\xec\x3a\x5b\xc7\xc3\xf1",
    // "" / M(None) / S(0) / L(0)
    "\x18\xc4\xd6\x02\xfe\xac\x8c\x31\x6c\x9b\xfa\x0c\x9f\x0c\xb6\xdc\x53\xd3\x22\x55\xd2\xda\xc1\x76\x21\xaa\x5e\xc0\xd2\x4b\xe5\x75",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(83) / L(54)
    "\xfa\x86\xac\xa6\xa1\xb0\xb8\xfa\x99\xbc\xb7\xa7\xb4\xa7\xac\xfa\x93\xa7\xb4\xb8\xb0\xa2\xba\xa7\xbe\xa6\xfa\x86\xb0\xb6\xa0\xa7\xbc\xa1\xac\xfb\xb3\xa7\xb4\xb8\xb0\xa2\xba\xa7\xbe\xfa\x86\xb0\xb6\xa0\xa7\xbc\xa1\xac\xd5",
    // "PKCS7_free" / M(Xor1) / S(251) / L(10)
    "\xab\xb0\xb8\xa8\xcc\xa4\x9d\x89\x9e\x9e\xfb\xa3\xcf\x0a\x80\xa5",
    // "BIO_write" / M(Rot) / S(49) / L(9)
    "\x73\x7a\x80\x90\xa8\xa3\x9a\xa5\x96\x31\x5f\xf0\x3a\x77\xb8\xa6",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(205) / L(23)
    "\xbe\xa6\xbf\x88\x8e\x88\x84\x9d\x99\xbf\x88\x8b\x9f\x88\x9e\x85\xbf\x88\x9c\x98\x88\x9e\x99\xed\xa7\x6f\xc9\x55\x06\xf3\xe7\xac",
    // "sha1" / M(Rot) / S(53) / L(4)
    "\xa8\x9d\x96\x66\x35\x42\x0f\xb5\x12\x27\x16\x2f\x5a\x6f\xb2\x51",
    // "CFBundleIdentifier" / M(Rot) / S(66) / L(18)
    "\x85\x88\x84\xb7\xb0\xa6\xae\xa7\x8b\xa6\xa7\xb0\xb6\xab\xa8\xab\xa7\xb4\x42",
    // "CC_SHA1_Final" / M(Xor4) / S(107) / L(13)
    "\xf3\xf3\xef\xe3\xf8\xf1\x81\xef\xf6\xd9\xde\xd1\xdc\xb0\xa9\x51",
    // "" / M(None) / S(0) / L(0)
    "\x7b\x96\x18\x36\x39\x41\x59\xc6\xe7\x1e\x08\xa4\xc4\x10\x30\x8f\xa3\x2c\x4c\x17\xe6\x97\xb7\xd6\xca\x14\xef\xad\x11\x90\x6f\x9c",
    // "" / M(None) / S(0) / L(0)
    "\x2e\xf0\x90\x90\xa5\x49\xab\x56\x7d\x71\x1a\x75\xe3\xe6\xe5\x33\x1c\xe9\x88\xf2\x01\xfd\x4d\xe0\x2d\x55\x47\xe5\xdc\xba\xa4\x54",
    // "kCFBundleIdentifierKey" / M(Xor1) / S(225) / L(22)
    "\x8a\xa2\xa7\xa3\x94\x8f\x85\x8d\x84\xa8\x85\x84\x8f\x95\x88\x87\x88\x84\x93\xaa\x84\x98\xe1",
    // "" / M(None) / S(0) / L(0)
    "\xe2\x71\xbc\x6d\x02\x47\x85\xad\x6b\x6d\x9b\x39\x8e\xa8\xaa\x0a\x89\x4c\x1a\x48\xe9\x7e\xd0\x5a\xaf\xd3\xe3\xe6\xb7\x02\x51\x01",
    // "IORegistryEntryCreateCFProperty" / M(Rot) / S(7) / L(31)
    "\x50\x56\x59\x6c\x6e\x70\x7a\x7b\x79\x80\x4c\x75\x7b\x79\x80\x4a\x79\x6c\x68\x7b\x6c\x4a\x4d\x57\x79\x76\x77\x6c\x79\x7b\x80\x07",
    // "CC_SHA1_Update" / M(Xor4) / S(213) / L(14)
    "\x13\x13\x0f\x03\x18\x11\x61\x0f\x05\x20\x34\x31\x24\x35\x50\xac",
    // "IOObjectRelease" / M(Xor2) / S(185) / L(15)
    "\xe0\xe6\xe6\xcb\xc3\xcc\xca\xdd\xfb\xcc\xc5\xcc\xc8\xda\xcc\xa9",
    // "IOMasterPort" / M(Xor2) / S(43) / L(12)
    "\x72\x74\x76\x5a\x48\x4f\x5e\x49\x6b\x54\x49\x4f\x3b\x6d\x2f\x38",
    // "CFBundleGetIdentifier" / M(Xor2) / S(141) / L(21)
    "\xd8\xdd\xd9\xee\xf5\xff\xf7\xfe\xdc\xfe\xef\xd2\xff\xfe\xf5\xef\xf2\xfd\xf2\xfe\xe9\x9b",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(94) / L(66)
    "\x32\x4e\x64\x6e\x69\x78\x70\x32\x51\x74\x7f\x6f\x7c\x6f\x64\x32\x5b\x6f\x7c\x70\x78\x6a\x72\x6f\x76\x6e\x32\x5e\x72\x6f\x78\x5b\x72\x68\x73\x79\x7c\x69\x74\x72\x73\x33\x7b\x6f\x7c\x70\x78\x6a\x72\x6f\x76\x32\x5e\x72\x6f\x78\x5b\x72\x68\x73\x79\x7c\x69\x74\x72\x73\x1d",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(3) / L(22)
    "\x32\x78\x76\x75\x32\x6f\x6c\x65\x32\x6f\x6c\x65\x72\x65\x6d\x66\x31\x67\x7c\x6f\x6c\x65\x03",
    // "CFStringCreateWithCString" / M(Xor1) / S(221) / L(25)
    "\x9e\x9b\x8e\xa9\xaf\xb4\xb3\xba\x9e\xaf\xb8\xbc\xa9\xb8\x8a\xb4\xa9\xb5\x9e\x8e\xa9\xaf\xb4\xb3\xba\xdd\x22\x1e\xfa\x7e\xb8\x2b\x75\x5b",
    // "SHA1" / M(Xor2) / S(95) / L(4)
    "\x1c\x07\x0e\x7e\x4f\xeb\xaa\xa4\xeb\xb6\xef\xc0\x3a\x91\xfc\x60",
    // "CFDataAppendBytes" / M(Rot) / S(84) / L(17)
    "\x97\x9a\x98\xb5\xc8\xb5\x95\xc4\xc4\xb9\xc2\xb8\x96\xcd\xc8\xb9\xc7\x54",
    // "CFDataCreate" / M(Xor1) / S(227) / L(12)
    "\xa0\xa5\xa7\x82\x97\x82\xa0\x91\x86\x82\x97\x86\xe3\x92\x3c\xf6",
    // "" / M(None) / S(0) / L(0)
    "\x3e\x16\x16\x53\x29\x50\x31\x79\xb1\x40\x4c\x0c\xb1\xec\x41\xdd\xb5\x32\x7e\x00\x52\x52\x9d\xac\x83\x60\x99\xda\x1b\xae\xae\xc8",
    // "%02X" / M(Xor3) / S(217) / L(4)
    "\xcc\xd9\xdb\xb1\xe9\x01\xa4\xe7\x9d\x3d\xcd\x4c\xa8\x1a\x6a\xa5",
    // "BIO_new" / M(Xor3) / S(30) / L(7)
    "\x6c\x67\x61\x71\x40\x4b\x59\x2e\x48\x68\x52\x1f\x26\xdd\x91\x0f",
    // "CFArrayGetCount" / M(Xor3) / S(77) / L(15)
    "\x1e\x1b\x1c\x2f\x2f\x3c\x24\x1a\x38\x29\x1e\x32\x28\x33\x29\x5d",
    // "ASN1_OBJECT_free" / M(Rot) / S(69) / L(16)
    "\x86\x98\x93\x76\xa4\x94\x87\x8f\x8a\x88\x99\xa4\xab\xb7\xaa\xaa\x45",
    // "EVP_get_digestbyname" / M(Xor4) / S(60) / L(20)
    "\xa9\xba\xbc\xb3\x8b\x89\x98\xb3\x88\x85\x8b\x89\x9f\x98\x8e\x95\x82\x8d\x81\x89\xec",
    // "CFDictionaryAddValue" / M(Xor3) / S(217) / L(20)
    "\xad\xa8\xaa\x87\x8d\x9a\x87\x81\x80\x8f\x9c\x97\xaf\x8a\x8a\xb8\x8f\x82\x9b\x8b\xee",
    // "_MASReceipt" / M(Xor4) / S(62) / L(11)
    "\xbf\xad\xa1\xb3\xb2\x85\x83\x85\x89\x90\x94\xe0\x85\x2c\x62\x5b",
    // "sk_free" / M(Xor1) / S(220) / L(7)
    "\xaf\xb7\x83\xba\xae\xb9\xb9\xdc\x02\xbb\x48\xf9\x73\x89\xba\x10",
    // "" / M(None) / S(0) / L(0)
    "\x80\x15\x1e\x6f\x1a\xd3\x1d\x8e\x20\x97\xa2\x1a\xb7\xba\x8b\x36\x5a\x21\x57\x57\x9a\x19\x95\x00\x10\x43\xe7\x5d\xf5\x9b\x2c\xcc",
    // "" / M(None) / S(0) / L(0)
    "\xc6\xc3\xa3\xa4\x1a\xd5\xf9\xd8\x70\x9c\x07\xbd\xea\xa0\xfc\x21\xe0\xbe\x1c\xc5\x17\x64\x23\x3e\x54\xb9\x9c\x75\x00\x9f\x97\x52",
    // "%02X" / M(Xor3) / S(153) / L(4)
    "\x8c\x99\x9b\xf1\xa9\x7c\xdc\x76\xfa\x8a\xcf\xa2\x13\xa7\xbb\x0e",
    // "" / M(None) / S(0) / L(0)
    "\xc9\x69\x04\x7d\xe8\x74\x7d\x7f\xd1\xa5\xe1\xa9\x78\xc2\xa8\x74\x4d\xa4\x17\xcc\xb4\xa9\x48\xfa\x33\xff\xae\xbd\xbc\x9d\x7f\x77",
    // "CFDateCreate" / M(Xor1) / S(85) / L(12)
    "\x16\x13\x11\x34\x21\x30\x16\x27\x30\x34\x21\x30\x55\x02\x05\x1c",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(4) / L(39)
    "\x83\x86\x94\xa9\xad\xa5\x9a\xaf\xae\xa5\x83\xb2\xa5\xa1\xb4\xa5\x97\xa9\xb4\xa8\x94\xa9\xad\xa5\x89\xae\xb4\xa5\xb2\xb6\xa1\xac\x86\xb2\xaf\xad\x87\x8d\x94\xc0\xeb\xcb\x07\x63\x0e\x34\x19\x45",
    // "" / M(None) / S(0) / L(0)
    "\x48\x87\x73\xd5\x40\x1e\x8f\xe9\x58\x70\x04\x48\x8e\x65\x51\x48\xc1\x2d\x7e\xe5\x15\xd2\xb4\xb7\xdf\x85\xd9\xf5\x9a\x63\xdd\x17",
    // "strlen" / M(Xor4) / S(98) / L(6)
    "\x53\x54\x52\x4c\x45\x4e\x20\x52\xd9\xf5\x65\xdd\x96\x8f\x6c\xdd",
    // "IORegistryEntryGetParentEntry" / M(Xor4) / S(12) / L(29)
    "\x81\x87\x9a\xad\xaf\xa1\xbb\xbc\xba\xb1\x8d\xa6\xbc\xba\xb1\x8f\xad\xbc\x98\xa9\xba\xad\xa6\xbc\x8d\xa6\xbc\xba\xb1\xc8\x5a\x06\xf4\xa4\xfd\xd5\x56\xfd",
    // "CFDateFormatterCreate" / M(Xor3) / S(245) / L(21)
    "\x48\x4d\x4f\x6a\x7f\x6e\x4d\x64\x79\x66\x6a\x7f\x7f\x6e\x79\x48\x79\x6e\x6a\x7f\x6e\x0b",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(37) / L(59)
    "\x5b\x56\x5f\x56\x6a\x5f\x5a\x67\x5f\x5b\x5b\x5f\x57\x68\x5f\x5a\x5e\x5f\x58\x66\x5f\x55\x5d\x5f\x6b\x6b\x5f\x5a\x5d\x5f\x69\x56\x5f\x59\x66\x5f\x6a\x57\x5f\x57\x59\x5f\x5a\x57\x5f\x69\x56\x5f\x5e\x5d\x5f\x69\x6b\x5f\x5b\x68\x5f\x5b\x55\x25\x74\x56\x28\x78\x44\xff\x66\x1f",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(192) / L(14)
    "\x82\x84\x9c\x94\x8f\x9d\x91\x99\x9e\x8f\x9f\x9e\x9c\x89\xd0\x4e",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(208) / L(40)
    "\xe6\xe1\xe1\x95\xe5\x92\xe6\xe6\xe2\x93\xe5\xe9\xe3\x91\xe0\xe8\x96\x96\xe5\xe8\x94\xe1\xe4\x91\x95\xe2\xe2\xe4\xe5\xe2\x94\xe1\xe9\xe8\x94\x96\xe6\x93\xe6\xe0\xd0\x86\xe7\x59\xd7\x9f\xd7\x3b\x5e",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(123) / L(39)
    "\x38\x3d\x2e\x29\x37\x38\x09\x1e\x1a\x0f\x1e\x3d\x09\x14\x16\x3d\x12\x17\x1e\x28\x02\x08\x0f\x1e\x16\x29\x1e\x0b\x09\x1e\x08\x1e\x15\x0f\x1a\x0f\x12\x14\x15\x7b\xb6\xea\x8e\xe5\x4f\xf1\x9d\x93",
    // "." / M(Xor2) / S(35) / L(1)
    "\x1d\x33\x24\xdd\x2d\x77\xff\x7f\x75\xc9\xb7\xc6\xfb\x0a\x20\xc5",
    // "kSecMatchLimitAll" / M(Xor4) / S(103) / L(17)
    "\x55\x6d\x5b\x5d\x73\x5f\x4a\x5d\x56\x72\x57\x53\x57\x4a\x7f\x52\x52\x3e",
    // "CFDataCreate" / M(Rot) / S(38) / L(12)
    "\x69\x6c\x6a\x87\x9a\x87\x69\x98\x8b\x87\x9a\x8b\x26\x0c\x22\x99",
    // "CFDateCreate" / M(Xor1) / S(3) / L(12)
    "\x40\x45\x47\x62\x77\x66\x40\x71\x66\x62\x77\x66\x03\x62\xba\x04",
    // "" / M(None) / S(0) / L(0)
    "\xf3\xec\x4d\xcb\x26\x0e\xc8\x78\x81\x1e\x53\x80\xf5\xd8\xc2\x95\x51\xc9\x3f\x82\x6b\x26\xe6\x18\xa7\x0e\x61\x78\x48\xae\x31\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x1e\xc0\x2d\x0c\xb9\x66\x43\xc0\x56\xae\xc4\xa3\x30\x1e\x38\xd9\xd5\x68\xa3\x75\xb2\xc9\x5c\xa6\x54\xb1\x84\x91\x06\x21\xa6\x37",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(36) / L(23)
    "\x17\x0f\x16\x21\x27\x21\x2d\x34\x30\x16\x21\x22\x36\x21\x37\x2c\x16\x21\x35\x31\x21\x37\x30\x44\x72\x78\xe2\xa0\x56\xfc\xa1\xa3",
    // "X509_STORE_add_cert" / M(Xor3) / S(4) / L(19)
    "\x40\x2d\x28\x21\x47\x4b\x4c\x57\x4a\x5d\x47\x79\x7c\x7c\x47\x7b\x7d\x6a\x6c\x18",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(183) / L(59)
    "\xcd\xca\xc1\xca\x9e\xc1\xce\x99\xc1\xcd\xcd\xc1\xc9\x98\xc1\xce\xc2\xc1\xc8\x9a\xc1\xcb\xc3\xc1\x9d\x9d\xc1\xce\xc3\xc1\x9f\xca\xc1\xcf\x9a\xc1\x9e\xc9\xc1\xc9\xcf\xc1\xce\xc9\xc1\x9f\xca\xc1\xc2\xc3\xc1\x9f\x9d\xc1\xcd\x98\xc1\xcd\xcb\xfb\x3d\x8a\xe3\x5e\xdd\xd9\x28\x05",
    // "IOServiceGetMatchingServices" / M(Xor1) / S(164) / L(28)
    "\xed\xeb\xf7\xc1\xd6\xd2\xcd\xc7\xc1\xe3\xc1\xd0\xe9\xc5\xd0\xc7\xcc\xcd\xca\xc3\xf7\xc1\xd6\xd2\xcd\xc7\xc1\xd7\xa4\xbb\xf1\x20\xd8\x36\xb5\x9a\xa4",
    // "IOMasterPort" / M(Xor3) / S(29) / L(12)
    "\x64\x62\x60\x4c\x5e\x59\x48\x5f\x7d\x42\x5f\x59\x2d\xde\x28\xdb",
    // "1.2.840.113635.100.6.11.1" / M(Rot) / S(209) / L(25)
    "\x02\xff\x03\xff\x09\x05\x01\xff\x02\x02\x04\x07\x04\x06\xff\x02\x01\x01\xff\x07\xff\x02\x02\xff\x02\xd1\x35\x26\x59\xea\x9f\xde\xa6\x11",
    // "ASN1_OBJECT_free" / M(Rot) / S(101) / L(16)
    "\xa6\xb8\xb3\x96\xc4\xb4\xa7\xaf\xaa\xa8\xb9\xc4\xcb\xd7\xca\xca\x65",
    // "CFDataAppendBytes" / M(Xor4) / S(133) / L(17)
    "\x19\x1c\x1e\x3b\x2e\x3b\x1b\x2a\x2a\x3f\x34\x3e\x18\x23\x2e\x3f\x29\x5a",
    // "" / M(None) / S(0) / L(0)
    "\xa8\x3d\xa3\x1a\xe2\xbe\x50\x52\x92\xc7\x3c\x51\x3c\x8c\xf2\xe6\xbc\xc0\x8a\x29\xa0\x58\x3c\xe5\x09\xcb\x36\xd5\x55\x8c\x46\xa1",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(207) / L(31)
    "\x84\xac\xa9\xbb\x96\x9f\x8a\xab\x86\x8c\x9b\x86\x80\x81\x8e\x9d\x96\xb9\x8e\x83\x9a\x8a\xac\x8e\x83\x83\xad\x8e\x8c\x84\x9c\xef",
    // "" / M(None) / S(0) / L(0)
    "\x8b\xbb\x23\xc0\x70\x4a\x9c\xef\x87\xbb\x14\x76\xf7\x5e\xc7\x12\x3c\x18\x9c\x6d\xe3\xba\xea\x96\x8f\xb8\x5c\x5e\x99\x21\xb9\xf6",
    // "CFDictionaryCreateMutable" / M(Xor1) / S(193) / L(25)
    "\x82\x87\x85\xa8\xa2\xb5\xa8\xae\xaf\xa0\xb3\xb8\x82\xb3\xa4\xa0\xb5\xa4\x8c\xb4\xb5\xa0\xa3\xad\xa4\xc1\x07\x19\x3b\x21\x17\x2d\x6f\x1d",
    // "%02X" / M(Xor4) / S(29) / L(4)
    "\xf5\xe0\xe2\x88\xd0\xd4\xef\x8c\x86\x07\x55\x36\x0e\xa8\x94\xf1",
    // "" / M(None) / S(0) / L(0)
    "\xed\x6b\x75\x51\x4c\xa0\xe4\x8f\x89\x03\xb0\x19\xfc\x3c\x70\x5e\xcc\xde\xeb\xec\xb1\x55\xd9\xeb\x87\x2b\xa1\xb9\x44\xf1\x2b\x9a",
    // "CFDataAppendBytes" / M(Xor4) / S(59) / L(17)
    "\x65\x60\x62\x47\x52\x47\x67\x56\x56\x43\x48\x42\x64\x5f\x52\x43\x55\x26",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor4) / S(160) / L(31)
    "\x6b\x43\x46\x54\x79\x70\x65\x44\x69\x63\x74\x69\x6f\x6e\x61\x72\x79\x56\x61\x6c\x75\x65\x43\x61\x6c\x6c\x42\x61\x63\x6b\x73\x00",
    // "en0" / M(Xor2) / S(149) / L(3)
    "\xe0\xeb\xb5\x85\x3d\x5b\x64\xd2\x8e\xa6\x33\xfd\xd3\xce\xdd\xaf",
    // "IOMACAddress" / M(Rot) / S(198) / L(12)
    "\x0f\x15\x13\x07\x09\x07\x2a\x2a\x38\x2b\x39\x39\xc6\x6e\x50\xb9",
    // "" / M(None) / S(0) / L(0)
    "\x2c\x20\x11\x62\xd3\xe7\xf5\x14\x4e\xfc\x67\x45\xf1\x82\x61\x0c\xc0\xd7\xae\x48\x86\xeb\x13\x1e\xe0\xa2\xd4\xd6\xbe\x0e\x39\x97",
    // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(76) / L(35)
    "\x0f\x0a\x1f\x38\x3e\x25\x22\x2b\x0b\x29\x38\x0a\x25\x20\x29\x1f\x35\x3f\x38\x29\x21\x1e\x29\x3c\x3e\x29\x3f\x29\x22\x38\x2d\x38\x25\x23\x22\x4c",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(39) / L(43)
    "\xaf\xaa\xb9\xbe\xa0\xaf\x9e\x89\x8d\x98\x89\xbb\x85\x98\x84\xaa\x85\x80\x89\xbf\x95\x9f\x98\x89\x81\xbc\x8d\x98\x84\xbe\x89\x80\x8d\x98\x85\x9a\x89\xb8\x83\xae\x8d\x9f\x89\xec\x8a\xba\x65\x2e\x69\x92\x4c\xe4",
    // "CFDataCreateMutable" / M(Xor1) / S(240) / L(19)
    "\xb3\xb6\xb4\x91\x84\x91\xb3\x82\x95\x91\x84\x95\xbd\x85\x84\x91\x92\x9c\x95\xf0",
    // "kSecReturnRef" / M(Xor1) / S(138) / L(13)
    "\xe1\xd9\xef\xe9\xd8\xef\xfe\xff\xf8\xe4\xd8\xef\xec\x8a\x77\xd9",
    // "IOIteratorNext" / M(Xor3) / S(241) / L(14)
    "\x48\x4e\x48\x75\x64\x73\x60\x75\x6e\x73\x4f\x64\x79\x75\x01\xec",
    // "kSecClass" / M(Xor1) / S(244) / L(9)
    "\x9f\xa7\x91\x97\xb7\x98\x95\x87\x87\xf4\x37\x9a\x31\x2b\x42\xcf",
    // "c2i_ASN1_INTEGER" / M(Rot) / S(147) / L(16)
    "\xf6\xc5\xfc\xf2\xd4\xe6\xe1\xc4\xf2\xdc\xe1\xe7\xd8\xda\xd8\xe5\x93",
    // "/usr/lib/libobjc.dylib" / M(Xor2) / S(22) / L(22)
    "\x2e\x74\x72\x73\x2e\x6d\x68\x63\x2e\x6d\x68\x63\x6e\x63\x6b\x62\x2f\x65\x78\x6d\x68\x63\x01",
    // "" / M(None) / S(0) / L(0)
    "\x53\xdc\x5d\xfc\x0d\xbc\xdd\x95\x52\x67\x63\x83\xc4\x3b\xc7\xdd\x41\xc6\x0d\x43\x0f\x0e\x3e\x4a\xc2\x83\x2b\x1f\x1c\x06\x66\xf7",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x48\x46\x9e\x46\x65\x2d\xe1\x4f\x7d\x5f\x34\x20\x84\x59\x0f\x09\x65\xec\x3b\xf0\xf9\xc1\xb4\x4e\x34\x91\x6d\x95\x2c\x4a\xcb",
    // "" / M(None) / S(0) / L(0)
    "\x15\x69\xcf\x3f\xdb\xf1\x3f\x6e\x9b\xd7\xa3\xde\xff\xc8\x09\x0e\x12\xd6\x15\x37\x02\x01\xdf\x20\x9e\xdf\x93\x74\x4f\x3a\x49\x1c",
    // "" / M(None) / S(0) / L(0)
    "\x78\xc6\x3a\x4d\x74\xc2\xcc\xf9\x91\x6c\x3c\xa5\x21\xf0\x3e\xe5\x5d\x76\x8d\x8e\x66\xd7\x0c\x14\x73\xfd\x43\xae\x48\x6c\x5f\x53",
    // "dlsym" / M(Xor2) / S(148) / L(5)
    "\xe0\xe8\xf7\xfd\xe9\x84\x3a\xef\x8d\xb3\x46\xc5\xab\xae\x60\x6c",
    // "glob_b" / M(Rot) / S(91) / L(6)
    "\xc2\xc7\xca\xbd\xba\xbd\x5b\xb1\x9a\xdc\x35\xd0\x89\x15\xe4\x7c",
    // "" / M(None) / S(0) / L(0)
    "\x50\x36\xb1\x21\x37\x60\xaa\x39\x35\xa8\x9d\x1b\x3a\xda\x93\x5f\xf4\xf3\x9e\xa3\xc4\xe6\xc0\xea\x6b\x4a\x43\xe5\x6e\x33\xfa\x60",
    // "CFEqual" / M(Xor3) / S(151) / L(7)
    "\xe4\xe1\xe2\xd6\xd2\xc6\xcb\xa7\x3c\x1e\xf6\x3b\x0b\xb8\x41\x51",
    // "IOBSDNameMatching" / M(Xor2) / S(34) / L(17)
    "\x79\x7f\x72\x63\x74\x7e\x51\x5d\x55\x7d\x51\x44\x53\x58\x59\x5e\x57\x30",
    // "" / M(None) / S(0) / L(0)
    "\xf2\x14\xf8\x92\x0c\x93\xbe\xad\x20\x40\x16\xa3\x96\xf6\x39\x37\x5e\x5d\x65\x1c\x8a\x52\xc5\xf0\x29\x97\x58\x0a\x13\xec\xf7\x7f",
    // "X509_STORE_new" / M(Xor1) / S(82) / L(14)
    "\x0a\x67\x62\x6b\x0d\x01\x06\x1d\x00\x17\x0d\x3c\x37\x25\x52\xa5",
    // "" / M(None) / S(0) / L(0)
    "\x7f\x2c\xa3\x46\x99\x6a\xad\x94\x67\x42\x10\xbe\x01\xc2\xa5\x71\x2c\x27\x58\x67\x67\xb4\x16\xe0\x40\x90\x98\x75\xb0\xfa\x74\x05",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(12) / L(32)
    "\x75\x75\x75\x75\x2b\x21\x2b\x41\x41\x2b\x21\x2b\x68\x68\x2b\x58\x2b\x44\x44\x2b\x36\x2b\x61\x61\x2b\x36\x2b\x7f\x7f\x2b\x56\x2b\x0c",
    // "" / M(None) / S(0) / L(0)
    "\xc7\xea\x17\x8e\xd2\x93\xb3\xa5\x5c\x41\x92\xa6\x1d\x87\x55\xa6\x3f\x86\x86\x25\xcf\x60\x4d\xcb\x55\x1e\xda\x6d\x31\xc0\x2c\x73",
    // "sk_num" / M(Xor1) / S(113) / L(6)
    "\x02\x1a\x2e\x1f\x04\x1c\x71\x49\x7b\xb3\xf2\x2a\x85\x71\xa3\xe8",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(4) / L(29)
    "\x49\x61\x64\x76\x5b\x52\x47\x66\x4b\x41\x56\x4b\x4d\x4c\x43\x50\x5b\x69\x47\x5b\x61\x43\x4e\x4e\x60\x43\x41\x49\x51\x22\xab\xb1\xb7\x58\xef\xc3\x8a\xcc",
    // "" / M(None) / S(0) / L(0)
    "\xa3\xa7\x1a\x91\x88\x59\xdd\xd2\x8e\xaf\x25\x54\x50\xbc\x5d\x05\xcf\x37\x3f\x7a\x1c\xdf\xc3\x66\x05\x54\x31\x01\xa2\xd1\x62\x13",
    // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(70) / L(35)
    "\x05\x00\x15\x32\x34\x2f\x28\x21\x01\x23\x32\x00\x2f\x2a\x23\x15\x3f\x35\x32\x23\x2b\x14\x23\x36\x34\x23\x35\x23\x28\x32\x27\x32\x2f\x29\x28\x46",
    // "CFDataGetBytePtr" / M(Xor2) / S(245) / L(16)
    "\xa7\xa2\xa0\x85\x90\x85\xa3\x81\x90\xa6\x9d\x90\x81\xb4\x90\x96\xe4",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(99) / L(36)
    "\x05\x00\x04\x33\x28\x22\x2a\x23\x01\x23\x32\x10\x27\x2a\x33\x23\x00\x29\x34\x0f\x28\x20\x29\x02\x2f\x25\x32\x2f\x29\x28\x27\x34\x3f\x0d\x23\x3f\x46",
    // "" / M(None) / S(0) / L(0)
    "\xfd\x99\x74\x31\x1e\x1f\x33\x45\x91\xf6\x70\x01\x35\x1b\x42\x71\x15\x79\x7f\x7e\xac\x4a\xf9\xd6\xef\xcc\xeb\x48\xb5\xe4\xe5\x52",
    // "kSecMatchLimit" / M(Xor1) / S(98) / L(14)
    "\x09\x31\x07\x01\x2f\x03\x16\x01\x0a\x2e\x0b\x0f\x0b\x16\x62\xe4",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(224) / L(24)
    "\x82\x87\x83\xb4\xaf\xa5\xad\xa4\x94\xaf\xad\xae\xa0\xa5\x84\xb9\xa4\xa2\xb4\xb5\xa0\xa3\xad\xa4\xc1\xd4\xcc\xe1\x0f\x6d\x81\xcd\x63",
    // "sha1" / M(Xor4) / S(3) / L(4)
    "\x43\x58\x51\x01\x30\x9a\x70\x56\x4c\x72\xff\x74\x12\x4c\xfd\xaa",
    // "CFReadStreamRead" / M(Xor2) / S(168) / L(16)
    "\xfa\xff\xeb\xdc\xd8\xdd\xea\xcd\xcb\xdc\xd8\xd4\xeb\xdc\xd8\xdd\xb9",
    // "CFDictionarySetValue" / M(Xor2) / S(175) / L(20)
    "\xf9\xfc\xfe\xd3\xd9\xce\xd3\xd5\xd4\xdb\xc8\xc3\xe9\xdf\xce\xec\xdb\xd6\xcf\xdf\xba",
    // "SecKeychainOpen" / M(Xor4) / S(107) / L(15)
    "\xe3\xd5\xd3\xfb\xd5\xc9\xd3\xd8\xd1\xd9\xde\xff\xc0\xd5\xde\xb0",
    // "kSecMatchSubjectContains" / M(Rot) / S(164) / L(24)
    "\x0f\xf7\x09\x07\xf1\x05\x18\x07\x0c\xf7\x19\x06\x0e\x09\x07\x18\xe7\x13\x12\x18\x05\x0d\x12\x17\xa4\xd0\x67\x86\xf3\x83\xee\x9e\x11",
    // "strlen" / M(Rot) / S(38) / L(6)
    "\x99\x9a\x98\x92\x8b\x94\x26\xc4\x5a\xfb\x1a\x68\x48\xd4\x0e\x4d",
    // "Apple Root CA" / M(Xor4) / S(121) / L(13)
    "\xd1\xe0\xe0\xfc\xf5\xb0\xc2\xff\xff\xe4\xb0\xd3\xd1\x90\xc3\x8a",
    // "setDelegate:" / M(Xor1) / S(174) / L(12)
    "\xdd\xcb\xda\xea\xcb\xc2\xcb\xc9\xcf\xda\xcb\x94\xae\x14\xbe\x51",
    // "kSecClassCertificate" / M(Rot) / S(120) / L(20)
    "\xe3\xcb\xdd\xdb\xbb\xe4\xd9\xeb\xeb\xbb\xdd\xea\xec\xe1\xde\xe1\xdb\xd9\xec\xdd\x78",
    // "BIO_write" / M(Xor2) / S(168) / L(9)
    "\xfa\xf1\xf7\xe7\xcf\xca\xd1\xcc\xdd\xb8\x73\x9c\x98\x8c\x91\x52",
    // "" / M(None) / S(0) / L(0)
    "\x69\x93\x79\xe4\x34\xc7\x31\x1c\x40\x9e\x0e\xf3\xa0\x1f\xcc\xf4\x84\xdb\xbb\xcb\xb6\x1a\x2a\x8f\x9c\x60\xe2\xa1\xfa\xc1\x82\x8e",
    // "strncmp" / M(Xor4) / S(215) / L(7)
    "\x03\x04\x02\x1e\x13\x1d\x00\x70\x06\xe0\xc8\x03\xf4\x8d\xaa\x6a",
    // "" / M(None) / S(0) / L(0)
    "\xab\x07\x34\x0d\x58\x90\xcd\x81\x36\x07\xd8\xfe\x78\xa5\xf0\xa4\x48\xc5\x46\xf8\x65\x51\xb4\xbf\x3d\x32\xe0\x0c\xef\x4f\x5f\x92",
    // "CFBundleUnloadExecutable" / M(Xor4) / S(60) / L(24)
    "\xff\xfa\xfe\xc9\xd2\xd8\xd0\xd9\xe9\xd2\xd0\xd3\xdd\xd8\xf9\xc4\xd9\xdf\xc9\xc8\xdd\xde\xd0\xd9\xbc\xec\x80\x5a\x10\x83\xa0\x0f\x08",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(23) / L(37)
    "\x72\x77\x64\x63\x7d\x72\x43\x54\x50\x45\x54\x72\x5e\x41\x48\x70\x41\x41\x54\x5f\x55\x58\x5f\x56\x61\x50\x45\x59\x72\x5e\x5c\x41\x5e\x5f\x54\x5f\x45\x31",
    // "" / M(None) / S(0) / L(0)
    "\xb0\xab\x7e\xdb\x66\xec\x3b\x5a\xdc\xe5\xab\xf5\x1d\xdb\xfd\xce\x1a\xef\xf1\x34\x28\xf8\xa2\xd3\x23\x0e\x2c\x97\xf9\x2e\x77\x7a",
    // "X509_NAME_get_text_by_NID" / M(Xor2) / S(234) / L(25)
    "\x90\xfd\xf8\xf1\x97\x86\x89\x85\x8d\x97\xaf\xad\xbc\x97\xbc\xad\xb0\xbc\x97\xaa\xb1\x97\x86\x81\x8c\xc8\xa1\xc5\x72\xbb\x56\x62\xf6\x20",
    // "SecKeychainSearchCopyNext" / M(Xor2) / S(134) / L(25)
    "\xf7\xc1\xc7\xef\xc1\xdd\xc7\xcc\xc5\xcd\xca\xf7\xc1\xc5\xd6\xc7\xcc\xe7\xcb\xd4\xdd\xea\xc1\xdc\xd0\xa4\x31\xe2\x0b\x19\xb2\xb6\x0a\x33",
    // "" / M(None) / S(0) / L(0)
    "\xa8\x76\x3c\x2f\xad\x41\x2c\x81\xb4\x5e\x82\xb4\xa6\xbd\x73\x8c\x03\xf7\x8b\x58\x0b\x00\x95\x2e\x57\xef\xb2\xd0\xc4\xb9\xe5\x64",
    // "" / M(None) / S(0) / L(0)
    "\x50\xdc\xe6\x29\x9a\x90\x92\x37\x5d\x7f\x9f\x14\x7c\xe5\x80\x59\x1e\xda\xf4\x0c\x4e\x2f\x0f\x3b\x48\x94\x37\x5a\x38\x11\xdc\x6e",
    // "_MASReceipt" / M(Xor1) / S(231) / L(11)
    "\xb8\xaa\xa6\xb4\xb5\x82\x84\x82\x8e\x97\x93\xe7\xa8\xa6\x34\x58",
    // "SecItemCopyMatching" / M(Xor3) / S(141) / L(19)
    "\xf2\xc4\xc2\xe8\xd5\xc4\xcc\xe2\xce\xd1\xd8\xec\xc0\xd5\xc2\xc9\xc8\xcf\xc6\xa1",
    // "%02x:" / M(Rot) / S(199) / L(5)
    "\xec\xf7\xf9\x3f\x01\xc7\xbd\x04\x14\x55\x7f\x71\x28\xfe\xe5\x1c",
    // "" / M(None) / S(0) / L(0)
    "\xe0\xde\x04\xa6\x39\xd8\x76\xcc\x46\xc3\xa1\x04\xa0\x79\xce\x24\x49\x5d\x2b\x40\x8e\x58\x30\xbd\x2a\x6a\x81\x78\xb8\xf3\x80\x36",
    // "%02X:" / M(Xor3) / S(15) / L(5)
    "\x3a\x2f\x2d\x47\x25\x1f\x45\xee\x41\x26\x59\xd2\x5c\xde\x74\x59",
    // "" / M(None) / S(0) / L(0)
    "\x69\xf2\x61\x5e\x01\x79\x9f\x11\xdd\xc4\x8e\x3c\x51\x97\x23\x53\x9e\xcf\x53\xf6\x08\xa4\x4e\x33\x1d\x07\xd5\x40\xb4\x6d\xe7\x22",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x45\xa1\x63\xff\x37\xaa\x3f\x6c\x08\x30\x4d\xae\xa6\x88\x78\x1b\x5d\x8c\xab\x52\x65\xac\xe9\x28\xd9\x49\x02\x6e\x7f\xcd\x92",
    // "EVP_get_digestbyname" / M(Xor4) / S(29) / L(20)
    "\x24\x37\x31\x3e\x06\x04\x15\x3e\x05\x08\x06\x04\x12\x15\x03\x18\x0f\x00\x0c\x04\x61",
    // "ASN1_get_object" / M(Xor3) / S(219) / L(15)
    "\xaa\xb8\xa5\xda\xb4\x8c\x8e\x9f\xb4\x84\x89\x81\x8e\x88\x9f\xeb",
    // "" / M(None) / S(0) / L(0)
    "\xee\xb9\x78\xc1\xac\x3b\x1c\xbd\x1d\xe0\x75\xf2\x8a\xb9\x07\xca\x5e\xf2\x4c\xb0\x32\x87\x0d\x6a\x00\xd6\xa3\xd5\x5d\xb2\x21\xd6",
    // "CFReadStreamClose" / M(Rot) / S(184) / L(17)
    "\xfb\xfe\x0a\x1d\x19\x1c\x0b\x2c\x2a\x1d\x19\x25\xfb\x24\x27\x2b\x1d\xb8",
    // "" / M(None) / S(0) / L(0)
    "\x49\x17\xaa\x1f\xfa\x05\x5f\x34\x42\xec\xd5\x2e\xa0\x73\x5b\x7c\xa0\x9c\x79\x75\x75\x3c\xc9\x8e\x41\x36\x4d\x4c\x82\x7c\xad\x23",
    // "" / M(None) / S(0) / L(0)
    "\xa5\x28\x02\xb7\x56\xce\x34\xd4\x25\x0b\x88\x70\x12\x6b\xb1\xdc\x0a\x3e\x85\x4f\x09\xaf\xb9\xb8\xb5\x98\xb5\xac\x17\xc4\xc6\xe5",
    // "SecItemCopyMatching" / M(Xor1) / S(50) / L(19)
    "\x61\x57\x51\x7b\x46\x57\x5f\x71\x5d\x42\x4b\x7f\x53\x46\x51\x5a\x5b\x5c\x55\x32",
    // "X509_free" / M(Xor1) / S(99) / L(9)
    "\x3b\x56\x53\x5a\x3c\x05\x11\x06\x06\x63\x57\x3c\x3a\xca\xe2\xaf",
    // "c2i_ASN1_INTEGER" / M(Xor2) / S(71) / L(16)
    "\x35\x64\x3f\x09\x17\x05\x18\x67\x09\x1f\x18\x02\x13\x11\x13\x04\x56",
    // "" / M(None) / S(0) / L(0)
    "\x15\xea\x3f\x9d\x7f\x88\x98\x21\x32\x08\x03\x09\x12\xea\x3c\x3b\x77\x4a\xbd\x67\x2a\x97\xa6\x7b\xb3\xff\x2f\xb4\x52\x09\xdf\xe4",
    // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(32) / L(25)
    "\x73\x6c\x70\x6c\x7a\x76\x72\x6c\x73\x73\x71\x74\x71\x77\x6c\x73\x72\x72\x6c\x74\x6c\x73\x73\x6c\x73\x42\x3b\x40\x22\x25\xbd\x61\xa9\xd9",
    // "init" / M(Xor1) / S(87) / L(4)
    "\x3e\x39\x3e\x23\x57\x22\xbb\xe2\x43\xaa\xb5\xe9\x54\x1d\xac\xf3",
    // "CFArrayAppendValue" / M(Rot) / S(63) / L(18)
    "\x82\x85\x80\xb1\xb1\xa0\xb8\x80\xaf\xaf\xa4\xad\xa3\x95\xa0\xab\xb4\xa4\x3f",
    // "globfree" / M(Xor1) / S(159) / L(8)
    "\xf8\xf3\xf0\xfd\xf9\xed\xfa\xfa\x9f\x18\x5f\x05\xd0\x29\xbb\xad",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(46) / L(28)
    "\x42\x44\x58\x6e\x79\x7d\x62\x68\x6e\x4c\x6e\x7f\x46\x6a\x7f\x68\x63\x62\x65\x6c\x58\x6e\x79\x7d\x62\x68\x6e\x78\x0b\x84\x76\x4c\xd8\xd4\x24\x68\x5a",
    // "IOIteratorNext" / M(Xor3) / S(132) / L(14)
    "\xdd\xdb\xdd\xe0\xf1\xe6\xf5\xe0\xfb\xe6\xda\xf1\xec\xe0\x94\x28",
    // "sk_value" / M(Xor3) / S(255) / L(8)
    "\x7c\x64\x50\x79\x6e\x63\x7a\x6a\x0f\x18\x5a\xe2\x09\x4e\x41\xea",
    // "d2i_X509_bio" / M(Rot) / S(229) / L(12)
    "\x49\x17\x4e\x44\x3d\x1a\x15\x1e\x44\x47\x4e\x54\xe5\xf6\x98\x26",
    // "" / M(None) / S(0) / L(0)
    "\xb6\x88\x9f\x1d\xf5\xe6\x1d\x42\x65\xb1\xec\x80\x0a\xb7\x9b\xfd\xd9\x37\x31\x02\xf7\x5a\xd6\x5d\xdd\xe2\x75\x8a\xe8\xc7\xf7\x14",
    // "alloc" / M(Xor1) / S(157) / L(5)
    "\xfc\xf1\xf1\xf2\xfe\x9d\x2f\x62\x2f\x00\xdc\xe3\x6d\xc0\xc9\x79",
    // "%02x" / M(Xor4) / S(239) / L(4)
    "\xd5\xc0\xc2\x88\xf0\x0d\x49\xd1\xaa\x42\xea\xa7\xa8\xab\xf0\x30",
    // "CFBundleGetMainBundle" / M(Xor4) / S(35) / L(21)
    "\x41\x44\x40\x77\x6c\x66\x6e\x67\x45\x67\x76\x4f\x63\x6b\x6c\x40\x77\x6c\x66\x6e\x67\x02",
    // "Contents" / M(Xor4) / S(251) / L(8)
    "\xf3\xdf\xde\xc4\xd5\xde\xc4\xc3\xb0\x19\xe7\xcc\xe9\x9c\x16\x3f",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(204) / L(25)
    "\xfd\xe2\xfe\xe2\xf4\xf8\xfc\xe2\xfd\xfd\xff\xfa\xff\xf9\xe2\xfd\xfc\xfc\xe2\xfa\xe2\xfd\xfd\xe2\xfd\xcc\x73\xf1\xd9\xc4\xb9\xc0\x74\x7c",
    // "EVP_MD_CTX_init" / M(Xor4) / S(204) / L(15)
    "\x85\x96\x90\x9f\x8d\x84\x9f\x83\x94\x98\x9f\xa9\xae\xa9\xb4\xc0",
    // "%02X:" / M(Xor3) / S(63) / L(5)
    "\x6a\x7f\x7d\x17\x75\x4f\x79\x03\x61\xf2\x74\xfa\x80\x3c\x41\x3c",
    // "" / M(None) / S(0) / L(0)
    "\xd8\x0e\xc2\x4c\x5b\xbb\xdb\x56\x78\x75\x36\x7b\x36\xd8\x32\xac\xe6\xa0\x81\xf2\x76\x1b\xf9\x81\x0f\x30\xb6\x86\x2e\x9b\x2b\xc3",
    // "%02x:" / M(Xor2) / S(197) / L(5)
    "\xf0\xe5\xe7\xad\xef\xd5\x8c\x38\x1b\xe5\x12\xc6\xcd\xc2\xda\xc3",
    // "glob_b" / M(Xor2) / S(180) / L(6)
    "\xc3\xc8\xcb\xc6\xfb\xc6\xa4\x92\xe6\x17\xe3\x20\x56\xbd\xdb\x50",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(59) / L(22)
    "\x0e\x0b\x0c\x3f\x3f\x2c\x34\x0a\x28\x39\x1b\x2c\x21\x38\x28\x0c\x39\x04\x23\x29\x28\x35\x4d",
    // "" / M(None) / S(0) / L(0)
    "\x29\xa1\xac\x12\x13\x9c\xc1\x19\x8d\x8b\x11\xff\x0d\xb2\xe6\x2c\xc3\x8e\x6f\x2a\x23\x87\x04\xf4\x65\x07\xdd\x48\x3d\x5b\xd0\x3b",
    // "c2i_ASN1_INTEGER" / M(Xor4) / S(19) / L(16)
    "\x20\x71\x2a\x1c\x02\x10\x0d\x72\x1c\x0a\x0d\x17\x06\x04\x06\x11\x43",
    // "" / M(None) / S(0) / L(0)
    "\xc1\xcd\xd1\x9b\x26\x25\xed\x1e\x25\x32\xca\x38\xaf\x7a\xa6\x18\xed\xa6\xf3\x1c\x3c\xa8\x26\x9c\x0d\x6d\x61\x95\x84\xd2\xba\x42",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(163) / L(36)
    "\xe0\xe5\xe1\xd6\xcd\xc7\xcf\xc6\xe4\xc6\xd7\xf5\xc2\xcf\xd6\xc6\xe5\xcc\xd1\xea\xcd\xc5\xcc\xe7\xca\xc0\xd7\xca\xcc\xcd\xc2\xd1\xda\xe8\xc6\xda\xa3",
    // "Contents" / M(Xor3) / S(160) / L(8)
    "\xf3\xdf\xde\xc4\xd5\xde\xc4\xc3\xb0\x85\x07\x9e\x89\x76\x81\x3a",
    // "CFDictionarySetValue" / M(Xor3) / S(216) / L(20)
    "\xae\xab\xa9\x84\x8e\x99\x84\x82\x83\x8c\x9f\x94\xbe\x88\x99\xbb\x8c\x81\x98\x88\xed",
    // "" / M(None) / S(0) / L(0)
    "\xe1\x9a\x3e\xaf\x6a\x58\x6b\x18\xb7\xca\x2e\xdf\x4f\xa8\x3f\x8b\xd8\x4a\xa0\x97\x97\xb2\x51\x77\x21\xfb\x19\xaa\x7e\xa8\x69\xbd",
    // "CFArrayAppendValue" / M(Xor2) / S(40) / L(18)
    "\x78\x7d\x7a\x49\x49\x5a\x42\x7a\x4b\x4b\x5e\x55\x5f\x6d\x5a\x57\x4e\x5e\x3b",
    // "CFBundleGetIdentifier" / M(Xor2) / S(234) / L(21)
    "\xbf\xba\xbe\x89\x92\x98\x90\x99\xbb\x99\x88\xb5\x98\x99\x92\x88\x95\x9a\x95\x99\x8e\xfc",
    // "IORegistryEntryCreateCFProperty" / M(Rot) / S(146) / L(31)
    "\xdb\xe1\xe4\xf7\xf9\xfb\x05\x06\x04\x0b\xd7\x00\x06\x04\x0b\xd5\x04\xf7\xf3\x06\xf7\xd5\xd8\xe2\x04\x01\x02\xf7\x04\x06\x0b\x92",
    // "BIO_free" / M(Xor2) / S(143) / L(8)
    "\xdd\xd6\xd0\xc0\xf9\xed\xfa\xfa\x9f\x28\xc9\x8a\x69\x1b\xab\xd6",
    // "" / M(None) / S(0) / L(0)
    "\xfa\xe4\xa0\x10\xb1\x80\x43\xc8\x9a\x6c\x97\x04\x2c\x33\xbc\x3d\x0d\x59\x01\xcb\x73\x69\x7b\x1b\x2a\x03\xc2\x42\x6c\xc0\x92\x4e",
    // "CFDataGetLength" / M(Xor1) / S(82) / L(15)
    "\x11\x14\x16\x33\x26\x33\x15\x37\x26\x1e\x37\x3c\x35\x26\x3a\x52",
    // "" / M(None) / S(0) / L(0)
    "\x05\xf4\x4d\x7d\x3b\xd7\x79\xad\xe7\xa6\x9f\xcf\x9a\x11\x0b\xa5\x65\x82\xb4\x05\xd1\xac\x34\xdd\xc5\x1f\x65\xc0\x7f\xaf\xb7\x89",
    // "setDelegate:" / M(Xor2) / S(7) / L(12)
    "\x64\x72\x63\x53\x72\x7b\x72\x70\x76\x63\x72\x2d\x17\x5b\xdb\xce",
    // "EVP_DigestInit" / M(Xor3) / S(72) / L(14)
    "\x1d\x0e\x08\x07\x1c\x31\x3f\x3d\x2b\x2c\x11\x36\x31\x2c\x58\x70",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(9) / L(50)
    "\x13\x6f\x45\x4f\x48\x59\x51\x13\x70\x55\x5e\x4e\x5d\x4e\x45\x13\x7a\x4e\x5d\x51\x59\x4b\x53\x4e\x57\x4f\x13\x7d\x4c\x4c\x77\x55\x48\x12\x5a\x4e\x5d\x51\x59\x4b\x53\x4e\x57\x13\x7d\x4c\x4c\x77\x55\x48\x3c",
    // "CFEqual" / M(Xor3) / S(71) / L(7)
    "\x14\x11\x12\x26\x22\x36\x3b\x57\xca\x3f\xbb\xaa\x41\xea\x78\x5b",
    // "glob" / M(Xor1) / S(25) / L(4)
    "\x7e\x75\x76\x7b\x19\x5a\xd5\xca\x8d\x90\xe9\x08\x7e\xe8\xf1\xbd",
    // "PKCS7_get0_signers" / M(Rot) / S(202) / L(18)
    "\x1a\x15\x0d\x1d\x01\x29\x31\x2f\x3e\xfa\x29\x3d\x33\x31\x38\x2f\x3c\x3d\xca",
    // "_MASReceipt/receipt" / M(Xor1) / S(5) / L(19)
    "\x5a\x48\x44\x56\x57\x60\x66\x60\x6c\x75\x71\x2a\x77\x60\x66\x60\x6c\x75\x71\x05",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(190) / L(23)
    "\xd1\xee\xfb\xf0\xcd\xcd\xd2\xc1\xff\xfa\xfa\xc1\xff\xf2\xf2\xc1\xfa\xf7\xf9\xfb\xed\xea\xed\x9e\xb7\x0c\xae\xf2\xbf\x0d\xe5\x55",
    // "alloc" / M(Xor2) / S(129) / L(5)
    "\xf0\xfd\xfd\xfe\xf2\x91\x26\x91\x2a\x97\x8e\xa6\xe8\x89\x0e\x4b",
    // "CFBundleUnloadExecutable" / M(Xor1) / S(43) / L(24)
    "\x68\x6d\x69\x5e\x45\x4f\x47\x4e\x7e\x45\x47\x44\x4a\x4f\x6e\x53\x4e\x48\x5e\x5f\x4a\x49\x47\x4e\x2b\x0f\x75\xe1\xc9\x00\xd0\x80\x0f",
    // "SHA1_Update" / M(Xor4) / S(7) / L(11)
    "\x23\x38\x31\x41\x2f\x25\x00\x14\x11\x04\x15\x70\xdd\x63\x7f\xce",
    // "CFStringCreateWithBytes" / M(Xor1) / S(231) / L(23)
    "\xa4\xa1\xb4\x93\x95\x8e\x89\x80\xa4\x95\x82\x86\x93\x82\xb0\x8e\x93\x8f\xa5\x9e\x93\x82\x94\xe7\x9c\xf0\xe5\x38\x16\x31\xc6\x34",
    // "" / M(None) / S(0) / L(0)
    "\xc3\x36\x3b\x00\xbb\xa0\x86\xb9\x6d\xa7\x7a\x46\xd9\x1d\xbc\xe2\x50\x88\xfc\x0e\x17\xbf\x2b\x4e\x85\x79\x0b\x2d\x71\x7e\xc7\xe1",
    // "sk_value" / M(Xor3) / S(121) / L(8)
    "\xfa\xe2\xd6\xff\xe8\xe5\xfc\xec\x89\xe9\x66\xcb\x7b\x24\x7f\x95",
    // "CC_SHA1_Init" / M(Xor4) / S(76) / L(12)
    "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x89\xae\xa9\xb4\xc0\x24\xfa\x70",
    // "" / M(None) / S(0) / L(0)
    "\x46\x26\xe2\x0d\x5f\x64\xa8\x95\x8e\xdf\x5a\x4d\x58\x4c\x5e\xf3\xc9\xdd\xc0\x0e\x3f\xc8\x8f\x7d\x31\x31\x32\x6b\x4d\xee\xe9\x11",
    // "" / M(None) / S(0) / L(0)
    "\x1d\x7e\x16\xbe\x65\x29\x98\x73\x64\xde\x2c\x64\xc9\x4e\x43\x7e\x68\xec\x69\xd3\xda\x6f\x48\x22\x6f\x10\x79\x82\x9e\x2b\xfe\x3a",
    // "CFReadStreamRead" / M(Xor4) / S(5) / L(16)
    "\x16\x13\x07\x30\x34\x31\x06\x21\x27\x30\x34\x38\x07\x30\x34\x31\x55",
    // "SecKeychainSearchCopyNext" / M(Xor3) / S(197) / L(25)
    "\xb4\x82\x84\xac\x82\x9e\x84\x8f\x86\x8e\x89\xb4\x82\x86\x95\x84\x8f\xa4\x88\x97\x9e\xa9\x82\x9f\x93\xe7\xfc\xeb\x87\x7c\xff\x23\x3b\x2e",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(197) / L(54)
    "\xf4\x18\x3e\x38\x39\x2a\x32\xf4\x11\x2e\x27\x37\x26\x37\x3e\xf4\x0b\x37\x26\x32\x2a\x3c\x34\x37\x30\x38\xf4\x18\x2a\x28\x3a\x37\x2e\x39\x3e\xf3\x2b\x37\x26\x32\x2a\x3c\x34\x37\x30\xf4\x18\x2a\x28\x3a\x37\x2e\x39\x3e\xc5",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(42) / L(40)
    "\x3c\x3b\x3b\x6f\x3f\x68\x3c\x3c\x38\x69\x3f\x33\x39\x6b\x3a\x32\x6c\x6c\x3f\x32\x6e\x3b\x3e\x6b\x6f\x38\x38\x3e\x3f\x38\x6e\x3b\x33\x32\x6e\x6c\x3c\x69\x3c\x3a\x0a\x79\x62\xcb\x23\x11\xbf\xf8\x4a",
    // "Apple Root CA" / M(Xor4) / S(125) / L(13)
    "\x91\xa0\xa0\xbc\xb5\xf0\x82\xbf\xbf\xa4\xf0\x93\x91\xd0\xe1\x66",
    // "setjmp" / M(Rot) / S(173) / L(6)
    "\x20\x12\x21\x17\x1a\x1d\xad\xde\x00\xdb\xc2\xce\xfc\xab\x88\xd1",
    // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(55) / L(35)
    "\xff\xfa\xef\xc8\xce\xd5\xd2\xdb\xfb\xd9\xc8\xfa\xd5\xd0\xd9\xef\xc5\xcf\xc8\xd9\xd1\xee\xd9\xcc\xce\xd9\xcf\xd9\xd2\xc8\xdd\xc8\xd5\xd3\xd2\xbc",
    // "receipt" / M(Xor3) / S(221) / L(7)
    "\x9f\x88\x8e\x88\x84\x9d\x99\xed\xcd\x30\x08\xba\xf3\xb6\x09\x22",
    // "CFDictionaryGetValue" / M(Xor4) / S(10) / L(20)
    "\x91\x94\x96\xbb\xb1\xa6\xbb\xbd\xbc\xb3\xa0\xab\x95\xb7\xa6\x84\xb3\xbe\xa7\xb7\xd2",
    // "X509_STORE_free" / M(Xor3) / S(46) / L(15)
    "\x66\x0b\x0e\x07\x61\x6d\x6a\x71\x6c\x7b\x61\x58\x4c\x5b\x5b\x3e",
    // "" / M(None) / S(0) / L(0)
    "\x02\xc1\xd8\x0e\xb5\xe7\xdd\x03\xdd\xf4\xe4\xcb\xee\x52\xcf\x84\x27\x13\xf1\x44\x73\x03\x78\xa1\xc7\x4c\xa3\x29\xb4\xa2\xbc\x5a",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(11) / L(37)
    "\x58\x6e\x68\x40\x6e\x72\x68\x63\x6a\x62\x65\x58\x6e\x6a\x79\x68\x63\x48\x79\x6e\x6a\x7f\x6e\x4d\x79\x64\x66\x4a\x7f\x7f\x79\x62\x69\x7e\x7f\x6e\x78\x0b",
    // "BIO_free" / M(Xor4) / S(100) / L(8)
    "\x02\x09\x0f\x1f\x26\x32\x25\x25\x40\xe6\x14\x54\x47\x85\xd5\xf3",
    // "CFBundleCopyBundleURL" / M(Rot) / S(232) / L(21)
    "\x2b\x2e\x2a\x5d\x56\x4c\x54\x4d\x2b\x57\x58\x61\x2a\x5d\x56\x4c\x54\x4d\x3d\x3a\x34\xe8",
    // "start" / M(Xor3) / S(174) / L(5)
    "\xcd\xca\xdf\xcc\xca\xbe\xf6\x02\xd3\xd6\x32\x89\x1a\x95\x11\x4a",
    // "ASN1_INTEGER_free" / M(Xor3) / S(14) / L(17)
    "\x61\x73\x6e\x11\x7f\x69\x6e\x74\x65\x67\x65\x72\x7f\x46\x52\x45\x45\x20",
    // "" / M(None) / S(0) / L(0)
    "\xf5\xd4\x02\xe4\x40\x39\x72\x0f\x29\xca\x33\xf7\xfa\x54\xfa\xe0\x09\xfd\xea\x44\x23\x0d\x78\xd3\x6a\x8f\x5a\xdd\xce\xd9\xf9\x34",
    // "CFReadStreamOpen" / M(Xor2) / S(155) / L(16)
    "\xc9\xcc\xd8\xef\xeb\xee\xd9\xfe\xf8\xef\xeb\xe7\xc5\xfa\xef\xe4\x8a",
    // "kSecMatchLimitAll" / M(Xor3) / S(25) / L(17)
    "\x40\x78\x4e\x48\x66\x4a\x5f\x48\x43\x67\x42\x46\x42\x5f\x6a\x47\x47\x2b",
    // "" / M(None) / S(0) / L(0)
    "\xef\x96\x58\xdd\x68\x59\x7e\x35\xc7\xac\x4e\x9b\xf7\xca\x9d\x7a\x8d\xf0\xc4\x46\x26\x90\x19\x6a\x9d\x9e\x9c\x9d\xe8\x8c\xfa\xa6",
    // "" / M(None) / S(0) / L(0)
    "\xbe\xc5\x6f\x6c\x86\x18\xdc\xea\xfd\xdc\xa6\x45\xf0\x04\x9e\x48\x91\x2a\x06\xe3\x2f\x53\x43\x79\x13\x46\x56\x5f\x85\xf9\xe9\x5f",
    // "CFBundleGetMainBundle" / M(Xor3) / S(99) / L(21)
    "\x3a\x3f\x3b\x0c\x17\x1d\x15\x1c\x3e\x1c\x0d\x34\x18\x10\x17\x3b\x0c\x17\x1d\x15\x1c\x79",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(254) / L(23)
    "\x91\xae\xbb\xb0\x8d\x8d\x92\x81\xbf\xba\xba\x81\xbf\xb2\xb2\x81\xba\xb7\xb9\xbb\xad\xaa\xad\xde\x06\x3b\x2e\x8f\x93\xd0\x25\x9d",
    // "setDelegate:" / M(Xor3) / S(254) / L(12)
    "\x7d\x6b\x7a\x4a\x6b\x62\x6b\x69\x6f\x7a\x6b\x34\x0e\x4c\x9d\xc0",
    // "" / M(None) / S(0) / L(0)
    "\xb3\xff\x42\x53\xda\x95\x68\x08\xff\xcc\x26\x28\xec\xc4\xa6\x9f\x71\xaa\x7e\x2e\x33\x56\x94\xd9\xc4\x40\x1b\xe1\x8a\x60\x01\x34",
    // "NSApplicationMain" / M(Rot) / S(35) / L(17)
    "\x71\x76\x64\x93\x93\x8f\x8c\x86\x84\x97\x8c\x92\x91\x70\x84\x8c\x91\x23",
    // "" / M(None) / S(0) / L(0)
    "\x07\xb9\x51\x69\xd1\x5f\x2d\x38\xb5\xb7\x9d\xd0\xde\xe1\x0f\x0a\xee\xc3\x58\xfb\x38\xe1\x35\xc7\xa4\x09\x79\x4c\xeb\xba\x0c\x04",
    // "PKCS7_free" / M(Xor1) / S(252) / L(10)
    "\xac\xb7\xbf\xaf\xcb\xa3\x9a\x8e\x99\x99\xfc\x9a\x83\x0c\x2f\x5e",
    // "kSecMatchSearchList" / M(Rot) / S(157) / L(19)
    "\x08\xf0\x02\x00\xea\xfe\x11\x00\x05\xf0\x02\xfe\x0f\x00\x05\xe9\x06\x10\x11\x9d",
    // "kSecClass" / M(Rot) / S(39) / L(9)
    "\x92\x7a\x8c\x8a\x6a\x93\x88\x9a\x9a\x27\x1e\x32\x34\x24\xc4\xba",
    // "X509_free" / M(Xor1) / S(187) / L(9)
    "\xe3\x8e\x8b\x82\xe4\xdd\xc9\xde\xde\xbb\xca\x6a\xb9\xaa\xe5\xa6",
    // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(7) / L(35)
    "\x68\x6d\x6f\x4a\x5f\x4e\x6d\x44\x59\x46\x4a\x5f\x5f\x4e\x59\x68\x59\x4e\x4a\x5f\x4e\x6f\x4a\x5f\x4e\x6d\x59\x44\x46\x78\x5f\x59\x42\x45\x4c\x2b",
    // "" / M(None) / S(0) / L(0)
    "\x19\xb4\x2f\x88\x43\xb5\x1e\xee\xb8\x79\x1c\xa9\x12\xe0\x89\xea\x8e\x33\x66\x65\x46\x37\xbc\xf6\x48\x8c\x23\xa7\x97\x1d\x08\x6c",
    // "SecKeychainOpen" / M(Xor1) / S(132) / L(15)
    "\xd7\xe1\xe7\xcf\xe1\xfd\xe7\xec\xe5\xed\xea\xcb\xf4\xe1\xea\x84",
    // "" / M(None) / S(0) / L(0)
    "\xf1\x10\xe9\x83\x24\x3c\x63\x56\x08\xb6\xd4\x38\x64\x2a\x66\x6f\xf2\x96\x0d\xa6\x16\x06\xc5\xe5\x10\xed\x5a\xaf\x52\x71\x95\x6f",
    // "X509_get_ext_by_OBJ" / M(Xor4) / S(125) / L(19)
    "\x9c\xf1\xf4\xfd\x9b\xa3\xa1\xb0\x9b\xa1\xbc\xb0\x9b\xa6\xbd\x9b\x8b\x86\x8e\xc4",
    // "CFBundleVersion" / M(Rot) / S(35) / L(15)
    "\x66\x69\x65\x98\x91\x87\x8f\x88\x79\x88\x95\x96\x8c\x92\x91\x23",
    // "X509_STORE_add_cert" / M(Rot) / S(14) / L(19)
    "\x66\x43\x3e\x47\x6d\x61\x62\x5d\x60\x53\x6d\x6f\x72\x72\x6d\x71\x73\x80\x82\x0e",
    // "CFStringCompare" / M(Xor4) / S(60) / L(15)
    "\x83\x86\x93\xb4\xb2\xa9\xae\xa7\x83\xaf\xad\xb0\xa1\xb2\xa5\xc0",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(15) / L(50)
    "\x6d\x11\x3b\x31\x36\x27\x2f\x6d\x0e\x2b\x20\x30\x23\x30\x3b\x6d\x04\x30\x23\x2f\x27\x35\x2d\x30\x29\x31\x6d\x03\x32\x32\x09\x2b\x36\x6c\x24\x30\x23\x2f\x27\x35\x2d\x30\x29\x6d\x03\x32\x32\x09\x2b\x36\x42",
    // "glob" / M(Rot) / S(88) / L(4)
    "\xbf\xc4\xc7\xba\x58\xb4\xc9\x28\xd2\xb4\x89\x6e\xaa\xeb\x02\xe2",
    // "objc_msgSend" / M(Rot) / S(199) / L(12)
    "\x36\x29\x31\x2a\x26\x34\x3a\x2e\x1a\x2c\x35\x2b\xc7\x98\xb1\x73",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(75) / L(39)
    "\x08\x0d\x1e\x19\x07\x08\x39\x2e\x2a\x3f\x2e\x0d\x39\x24\x26\x0d\x22\x27\x2e\x18\x32\x38\x3f\x2e\x26\x19\x2e\x3b\x39\x2e\x38\x2e\x25\x3f\x2a\x3f\x22\x24\x25\x4b\x2d\xa6\xae\x80\x85\xba\x8d\xf0",
    // "kSecClass" / M(Xor4) / S(228) / L(9)
    "\x2b\x13\x25\x23\x03\x2c\x21\x33\x33\x40\xf0\x7a\x0d\x67\x6f\x96",
    // "" / M(None) / S(0) / L(0)
    "\x1f\x32\x20\x85\x5f\x6d\xa3\xa9\x7c\x5d\xf4\x76\x87\x72\x64\xdc\xd4\x49\x02\x58\x5f\xd8\xf9\xff\x6f\x4e\xf2\x7b\x80\x30\xd3\x41",
    // "" / M(None) / S(0) / L(0)
    "\x16\x5c\x1a\x74\xc7\x7a\x59\x01\xbd\x2d\x86\x3c\x60\xd5\xe5\xbe\xa3\xec\x82\x87\x7c\x19\x09\x89\x2e\x4e\x57\xcc\x4d\xbf\x1e\x6c",
    // "IOObjectRelease" / M(Xor3) / S(58) / L(15)
    "\x03\x05\x05\x28\x20\x2f\x29\x3e\x18\x2f\x26\x2f\x2b\x39\x2f\x4a",
    // "CFReadStreamClose" / M(Xor1) / S(12) / L(17)
    "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x4f\x60\x63\x7f\x69\x0c",
    // "" / M(None) / S(0) / L(0)
    "\x19\x9b\x8d\x6f\x9b\x8e\x9b\xa7\xf1\x90\x3a\xd2\x39\x31\x3c\xcc\x4a\xb0\xb8\x8e\xd1\xed\x2b\xe9\xe4\x96\x39\xbf\xc9\xda\x14\xb5",
    // "alloc" / M(Xor3) / S(224) / L(5)
    "\x91\x9c\x9c\x9f\x93\xf0\x21\x29\x7a\xe1\x13\x76\x0d\xbf\x1e\x59",
    // "exit" / M(Xor4) / S(242) / L(4)
    "\x45\x58\x49\x54\x20\x5f\x3f\x86\x30\x9f\xdb\x10\x5c\xb4\x8b\x1a",
    // "/usr/lib/libSystem.dylib" / M(Rot) / S(162) / L(24)
    "\xd1\x17\x15\x14\xd1\x0e\x0b\x04\xd1\x0e\x0b\x04\xf5\x1b\x15\x16\x07\x0f\xd0\x06\x1b\x0e\x0b\x04\xa2\x4d\xbd\x6b\xe1\x0e\xfc\x28\xcb",
    // "EVP_MD_CTX_init" / M(Xor3) / S(13) / L(15)
    "\x58\x4b\x4d\x42\x50\x59\x42\x5e\x49\x45\x42\x74\x73\x74\x69\x1d",
    // "CFDateFormatterSetProperty" / M(Xor1) / S(185) / L(26)
    "\xfa\xff\xfd\xd8\xcd\xdc\xff\xd6\xcb\xd4\xd8\xcd\xcd\xdc\xcb\xea\xdc\xcd\xe9\xcb\xd6\xc9\xdc\xcb\xcd\xc0\xb9\xcd\xdd\x00\x95\x31\x4b\xe9\x29",
    // "CFBundleGetMainBundle" / M(Xor2) / S(210) / L(21)
    "\x87\x82\x86\xb1\xaa\xa0\xa8\xa1\x83\xa1\xb0\x89\xa5\xad\xaa\x86\xb1\xaa\xa0\xa8\xa1\xc4",
    // "glob_b" / M(Xor1) / S(209) / L(6)
    "\xb6\xbd\xbe\xb3\x8e\xb3\xd1\x7d\xe6\x8c\xc0\xb1\x8b\xb5\x2f\xb7",
    // "SHA1_Final" / M(Xor4) / S(48) / L(10)
    "\x53\x48\x41\x31\x5f\x46\x69\x6e\x61\x6c\x00\xf8\x45\x00\xa0\xac",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(26) / L(37)
    "\x49\x7f\x79\x51\x7f\x63\x79\x72\x7b\x73\x74\x49\x7f\x7b\x68\x79\x72\x59\x68\x7f\x7b\x6e\x7f\x5c\x68\x75\x77\x5b\x6e\x6e\x68\x73\x78\x6f\x6e\x7f\x69\x1a",
    // "kSecReturnRef" / M(Rot) / S(159) / L(13)
    "\x0a\xf2\x04\x02\xf1\x04\x13\x14\x11\x0d\xf1\x04\x05\x9f\x81\xd0",
    // "init" / M(Xor4) / S(116) / L(4)
    "\x29\x2e\x29\x34\x40\x4c\x94\xce\xd0\x56\x53\x55\xd2\x14\x8c\x20",
    // "" / M(None) / S(0) / L(0)
    "\xb2\x10\x77\x25\x62\xf8\x34\x4c\x38\xc7\x80\x81\x52\xc9\x18\x67\x6e\x69\x5e\x14\x22\xf7\xd8\xa5\xd5\xe7\x5f\x2c\x50\x78\xa3\x47",
    // "SecItemCopyMatching" / M(Xor4) / S(2) / L(19)
    "\x7b\x4d\x4b\x61\x5c\x4d\x45\x6b\x47\x58\x51\x65\x49\x5c\x4b\x40\x41\x46\x4f\x28",
    // "dlsym" / M(Xor2) / S(113) / L(5)
    "\x05\x0d\x12\x18\x0c\x61\x3f\xa0\x32\xf7\xe4\x93\xc6\xaa\xba\x6a",
    // "CC_SHA1_Final" / M(Xor4) / S(28) / L(13)
    "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x86\xa9\xae\xa1\xac\xc0\x25\x0c",
    // "CFDictionaryAddValue" / M(Xor4) / S(194) / L(20)
    "\xa9\xac\xae\x83\x89\x9e\x83\x85\x84\x8b\x98\x93\xab\x8e\x8e\xbc\x8b\x86\x9f\x8f\xea",
    // "sk_num" / M(Xor3) / S(219) / L(6)
    "\x98\x80\xb4\x85\x9e\x86\xeb\x5b\x20\x15\x82\xe0\xb8\x68\xda\x1d",
    // "CFBundleCopyBundleURL" / M(Xor4) / S(212) / L(21)
    "\x7b\x7e\x7a\x4d\x56\x5c\x54\x5d\x7b\x57\x48\x41\x7a\x4d\x56\x5c\x54\x5d\x6d\x6a\x74\x38",
    // "" / M(None) / S(0) / L(0)
    "\x43\xef\xc1\xb5\xaf\xc5\x83\x34\xe6\x08\x44\xb8\x28\x0d\x5d\x75\x1a\xa7\x5a\x4b\xbe\x6f\x81\x57\x12\x03\xb9\x19\xbf\x15\xb2\x74",
    // "SecKeychainSearchCopyNext" / M(Rot) / S(139) / L(25)
    "\xde\xf0\xee\xd6\xf0\x04\xee\xf3\xec\xf4\xf9\xde\xf0\xec\xfd\xee\xf3\xce\xfa\xfb\x04\xd9\xf0\x03\xff\x8b\x11\xf6\xc0\x68\x1f\x17\xc0\xe6",
    // "CC_SHA1_Update" / M(Xor2) / S(97) / L(14)
    "\x32\x32\x2e\x22\x39\x30\x40\x2e\x24\x01\x15\x10\x05\x14\x71\x95",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(20) / L(43)
    "\x63\x66\x75\x72\x6c\x63\x52\x45\x41\x54\x45\x77\x49\x54\x48\x66\x49\x4c\x45\x73\x59\x53\x54\x45\x4d\x70\x41\x54\x48\x72\x45\x4c\x41\x54\x49\x56\x45\x74\x4f\x62\x41\x53\x45\x20\x06\x46\x18\x38\xf9\x25\x8a\xb2",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(130) / L(31)
    "\xeb\xed\xf0\xc7\xc5\xcb\xd1\xd6\xd0\xdb\xe7\xcc\xd6\xd0\xdb\xe1\xd0\xc7\xc3\xd6\xc7\xe1\xe4\xf2\xd0\xcd\xd2\xc7\xd0\xd6\xdb\xa2",
    // "" / M(None) / S(0) / L(0)
    "\x48\xea\x8f\xa6\xaf\xee\xfd\xf3\x43\xc8\x76\x33\x56\xb0\xd3\xce\x42\x4c\x57\x2d\x37\xa4\xf0\xc6\xcb\x78\x5a\x34\x22\xdf\x55\x04",
    // "start" / M(Xor3) / S(224) / L(5)
    "\x83\x84\x91\x82\x84\xf0\x20\x74\x8a\xc7\x5e\x64\x8d\x8f\x66\x09",
    // "kSecMatchSubjectContains" / M(Xor2) / S(252) / L(24)
    "\xb6\x8e\xb8\xbe\x90\xbc\xa9\xbe\xb5\x8e\xa8\xbf\xb7\xb8\xbe\xa9\x9e\xb2\xb3\xa9\xbc\xb4\xb3\xae\xdd\x91\xa8\x86\x5d\x1b\x44\x96\x41",
    // "" / M(None) / S(0) / L(0)
    "\x21\x82\xed\xac\xda\x4f\x5c\x10\x69\xbb\xbc\x0d\x4a\xdc\x7f\x7a\xdd\xc9\xd6\x2d\x06\x68\x6f\x5c\x60\xd4\x35\x90\x22\x99\x22\x5c",
    // "" / M(None) / S(0) / L(0)
    "\xa5\xd1\xb9\x64\x78\xf4\x53\x81\x34\x39\x94\xb3\x4c\x03\xe3\xf0\xd1\x59\x86\x13\x5e\xaa\x9a\x3e\x6a\x61\x85\xa0\x6a\x4b\x01\x9a",
    // "CFDataGetBytePtr" / M(Xor2) / S(180) / L(16)
    "\xe6\xe3\xe1\xc4\xd1\xc4\xe2\xc0\xd1\xe7\xdc\xd1\xc0\xf5\xd1\xd7\xa5",
    // "d2i_PKCS7_bio" / M(Xor1) / S(204) / L(13)
    "\xa8\xfe\xa5\x93\x9c\x87\x8f\x9f\xfb\x93\xae\xa5\xa3\xcc\xb6\x80",
    // "EVP_DigestFinal" / M(Xor4) / S(100) / L(15)
    "\x05\x16\x10\x1f\x04\x29\x27\x25\x33\x34\x06\x29\x2e\x21\x2c\x40",
    // "%02x" / M(Rot) / S(47) / L(4)
    "\x54\x5f\x61\xa7\x2f\x2f\xbc\xa8\x4a\x1a\x00\x5c\xb8\x06\x88\x4e",
    // "sel_registerName" / M(Xor2) / S(245) / L(16)
    "\x97\x81\x88\xbb\x96\x81\x83\x8d\x97\x90\x81\x96\xaa\x85\x89\x81\xe4",
    // "2.0" / M(Xor1) / S(68) / L(3)
    "\x76\x6a\x74\x44\x7f\x97\x0e\xe0\x1a\x6a\xda\x60\x76\xe2\x48\x7d",
    // "Contents/_MASReceipt" / M(Xor2) / S(250) / L(20)
    "\xac\x80\x81\x9b\x8a\x81\x9b\x9c\xc0\xb0\xa2\xae\xbc\xbd\x8a\x8c\x8a\x86\x9f\x9b\xef",
    // "" / M(None) / S(0) / L(0)
    "\xbb\xec\x8f\x1d\xcf\x54\x30\xeb\x1b\xcb\xb9\x0f\xab\xdb\x52\x78\xc3\xf2\x43\x03\x55\x2a\x26\x25\xeb\x83\xe3\x79\xfe\xb8\x37\x27",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(208) / L(40)
    "\xe6\xe1\xe1\x95\xe5\x92\xe6\xe6\xe2\x93\xe5\xe9\xe3\x91\xe0\xe8\x96\x96\xe5\xe8\x94\xe1\xe4\x91\x95\xe2\xe2\xe4\xe5\xe2\x94\xe1\xe9\xe8\x94\x96\xe6\x93\xe6\xe0\xd0\x8d\x4d\xf5\xb2\xc6\x01\xfa\x2c",
    // "" / M(None) / S(0) / L(0)
    "\x53\x5a\xa4\x52\xbd\x94\x8b\x93\x0f\x23\xe2\x0a\xb2\xc5\xc2\xe6\xdd\xaa\x5a\xb6\x90\x51\x39\x70\xb6\x3f\xe0\xb9\x82\x68\x20\x7c",
    // "CC_SHA1_Init" / M(Xor1) / S(48) / L(12)
    "\x73\x73\x6f\x63\x78\x71\x01\x6f\x79\x5e\x59\x44\x30\x5c\xd3\xfe",
    // "EVP_get_digestbyname" / M(Xor3) / S(148) / L(20)
    "\xec\xff\xf9\xf6\xce\xcc\xdd\xf6\xcd\xc0\xce\xcc\xda\xdd\xcb\xd0\xc7\xc8\xc4\xcc\xa9",
    // "ASN1_INTEGER_get" / M(Xor3) / S(92) / L(16)
    "\x2c\x3e\x23\x5c\x32\x24\x23\x39\x28\x2a\x28\x3f\x32\x0a\x08\x19\x6d",
    // "setjmp" / M(Xor2) / S(14) / L(6)
    "\x6d\x7b\x6a\x74\x73\x6e\x1e\xbd\xc2\xdf\x11\x0d\x4f\x9c\xa6\x33",
    // "CFStringCreateWithBytes" / M(Xor3) / S(43) / L(23)
    "\x08\x0d\x18\x3f\x39\x22\x25\x2c\x08\x39\x2e\x2a\x3f\x2e\x1c\x22\x3f\x23\x09\x32\x3f\x2e\x38\x4b\x32\x67\xd8\x3c\xcc\x70\x1d\x9a",
    // "longjmp" / M(Xor3) / S(218) / L(7)
    "\x86\x85\x84\x8d\x80\x87\x9a\xea\xb6\x2e\x39\x3d\x2e\x3c\x9e\xb1",
    // "PKCS7_get0_signers" / M(Xor3) / S(200) / L(18)
    "\x8b\x90\x98\x88\xec\x84\xbc\xbe\xaf\xeb\x84\xa8\xb2\xbc\xb5\xbe\xa9\xa8\xdb",
    // "SHA1_Init" / M(Xor2) / S(242) / L(9)
    "\xb1\xaa\xa3\xd3\xbd\xab\x8c\x8b\x96\xe2\x7f\xaa\x3d\xf0\x70\x16",
    // "IOIteratorNext" / M(Rot) / S(238) / L(14)
    "\x37\x3d\x37\x62\x53\x60\x4f\x62\x5d\x60\x3c\x53\x66\x62\xee\xa9",
    // "kSecMatchLimit" / M(Xor3) / S(36) / L(14)
    "\x5f\x67\x51\x57\x79\x55\x40\x57\x5c\x78\x5d\x59\x5d\x40\x34\x99",
    // "CFArrayAppendValue" / M(Xor2) / S(238) / L(18)
    "\xbe\xbb\xbc\x8f\x8f\x9c\x84\xbc\x8d\x8d\x98\x93\x99\xab\x9c\x91\x88\x98\xfd",
    // "CFDateFormatterSetProperty" / M(Xor1) / S(153) / L(26)
    "\xda\xdf\xdd\xf8\xed\xfc\xdf\xf6\xeb\xf4\xf8\xed\xed\xfc\xeb\xca\xfc\xed\xc9\xeb\xf6\xe9\xfc\xeb\xed\xe0\x99\xfb\x43\x18\x18\x37\x36\xa6\xe3",
    // "PKCS7_free" / M(Xor4) / S(88) / L(10)
    "\xd0\xcb\xc3\xd3\xb7\xdf\xe6\xf2\xe5\xe5\x80\xd2\x7f\x30\x0b\xee",
    // "BIO_free" / M(Xor2) / S(228) / L(8)
    "\xb6\xbd\xbb\xab\x92\x86\x91\x91\xf4\x64\xa1\xdd\x63\xff\x87\xad",
    // "kSecMatchLimit" / M(Xor1) / S(93) / L(14)
    "\x36\x0e\x38\x3e\x10\x3c\x29\x3e\x35\x11\x34\x30\x34\x29\x5d\x4f",
    // "EVP_DigestUpdate" / M(Xor1) / S(24) / L(16)
    "\x5d\x4e\x48\x47\x5c\x71\x7f\x7d\x6b\x6c\x4d\x68\x7c\x79\x6c\x7d\x18",
    // "SHA1_Init" / M(Xor3) / S(186) / L(9)
    "\x99\x82\x8b\xfb\x95\x83\xa4\xa3\xbe\xca\x84\x33\x08\xe7\x61\xf1",
    // "" / M(None) / S(0) / L(0)
    "\x64\x64\x41\xae\x12\x97\xfa\x32\x75\xfa\xa6\x19\x5c\x11\x99\x62\x55\xdd\x4b\x83\xb8\x41\xa7\x34\x3a\x1d\x32\x03\x4e\x38\x9a\xa7",
    // "ASN1_get_object" / M(Xor2) / S(182) / L(15)
    "\xe7\xf5\xe8\x97\xf9\xc1\xc3\xd2\xf9\xc9\xc4\xcc\xc3\xc5\xd2\xa6",
    // "kSecMatchSearchList" / M(Rot) / S(30) / L(19)
    "\x89\x71\x83\x81\x6b\x7f\x92\x81\x86\x71\x83\x7f\x90\x81\x86\x6a\x87\x91\x92\x1e",
    // "" / M(None) / S(0) / L(0)
    "\x5a\x5a\x61\xf7\x18\xff\x37\xc4\x3c\xc0\xe2\xb8\xbd\x10\xad\xb8\xc2\x36\xe6\xc6\xe4\x6c\x5a\xef\x80\xfc\x31\xdb\xfa\x0e\xd9\xf2",
    // "CFBundleShortVersionString" / M(Xor3) / S(209) / L(26)
    "\xb7\xb2\xb6\x81\x9a\x90\x98\x91\xa7\x9c\x9b\x86\x80\xa2\x91\x86\x87\x9d\x9b\x9a\xa7\x80\x86\x9d\x9a\x93\xf4\x03\x8f\xf6\x72\xb7\xc5\xa5\xb4",
    // "2.0" / M(Rot) / S(196) / L(3)
    "\xf6\xf2\xf4\xc4\x83\x80\xde\x83\xf3\x96\x6f\x05\xac\x0b\xd8\x37",
    // "IOMACAddress" / M(Xor4) / S(101) / L(12)
    "\x19\x1f\x1d\x11\x13\x11\x34\x34\x22\x35\x23\x23\x50\x3e\xd0\x90",
    // "." / M(Xor3) / S(107) / L(1)
    "\x55\x7b\x1e\xff\x50\xdf\x3e\xc2\xe5\x85\xbb\x67\xeb\xbf\xe7\x42",
    // "CFArrayGetCount" / M(Xor4) / S(254) / L(15)
    "\xa3\xa6\xa1\x92\x92\x81\x99\xa7\x85\x94\xa3\x8f\x95\x8e\x94\xe0",
    // "CFReadStreamCreateWithFile" / M(Xor2) / S(78) / L(26)
    "\x2e\x2b\x3f\x08\x0c\x09\x3e\x19\x1f\x08\x0c\x00\x2e\x1f\x08\x0c\x19\x08\x3a\x04\x19\x05\x2b\x04\x01\x08\x6d\x3a\xa0\x06\x34\x50\x45\x85\xe0",
    // "CFNumberCreate" / M(Rot) / S(211) / L(14)
    "\x16\x19\x21\x48\x40\x35\x38\x45\x16\x45\x38\x34\x47\x38\xd3\xa2",
    // "" / M(None) / S(0) / L(0)
    "\x18\xae\x5e\x42\xef\x86\xc8\x94\x09\xd4\x58\x89\x67\x88\xad\xd1\xef\x3c\xc0\x0d\x15\x9a\xe0\x5d\xce\xd2\xe3\x64\x20\x61\x68\xf3",
    // "CFStringCompare" / M(Rot) / S(105) / L(15)
    "\xac\xaf\xbc\xdd\xdb\xd2\xd7\xd0\xac\xd8\xd6\xd9\xca\xdb\xce\x69",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(167) / L(32)
    "\xfe\xfe\xfe\xfe\xa0\xaa\xa0\xca\xca\xa0\xaa\xa0\xe3\xe3\xa0\xd3\xa0\xcf\xcf\xa0\xbd\xa0\xea\xea\xa0\xbd\xa0\xf4\xf4\xa0\xdd\xa0\x87",
    // "" / M(None) / S(0) / L(0)
    "\xb0\xf1\xa3\xc7\xc0\xf1\xb8\x5f\xa3\x01\x93\x20\x99\x8a\x94\xd9\x62\x9a\xaa\xb3\xc4\x53\xc1\x80\xcb\xa1\xcc\x6c\xc6\xe6\x56\xa4",
    // "" / M(None) / S(0) / L(0)
    "\x76\xd1\xa3\xd9\x74\x1f\x6d\x27\x85\x9b\xf2\xc6\x08\xed\x72\x45\x7d\x49\x45\x16\xa0\x1c\xca\x51\xc4\x26\xdc\x83\xf5\x0a\x2b\x66",
    // "" / M(None) / S(0) / L(0)
    "\xc9\x7d\x18\x53\x53\x52\x9c\x0c\x87\xa2\x95\x5e\x7f\x99\x95\x6b\x51\x43\x55\xbd\x3c\x84\x32\xf1\x4e\x4a\x54\x3c\xd9\x55\x46\x51",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(189) / L(48)
    "\xa3\xdf\xf5\xff\xf8\xe9\xe1\xa3\xc0\xe5\xee\xfe\xed\xfe\xf5\xa3\xca\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xff\xa3\xc5\xc3\xc7\xe5\xf8\xa2\xea\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xa3\xc5\xc3\xc7\xe5\xf8\x8c",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(137) / L(57)
    "\xb8\xdc\x02\xfc\xfd\xee\xf6\xb8\xd5\xf2\xeb\xfb\xea\xfb\x02\xb8\xd4\xee\x02\xec\xf1\xea\xf2\xf7\xfc\xb8\xdc\x02\xfc\xfd\xee\xf6\xdb\xf8\xf8\xfd\xcc\xee\xfb\xfd\xf2\xef\xf2\xec\xea\xfd\xee\xfc\xb7\xf4\xee\x02\xec\xf1\xea\xf2\xf7\x89\xe3\x4e\x74\xfe\xb0\x55\xa2\x91",
    // "CFStringCompare" / M(Xor1) / S(172) / L(15)
    "\xef\xea\xff\xd8\xde\xc5\xc2\xcb\xef\xc3\xc1\xdc\xcd\xde\xc9\xac",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(82) / L(31)
    "\x19\x31\x34\x26\x0b\x02\x17\x36\x1b\x11\x06\x1b\x1d\x1c\x13\x00\x0b\x24\x13\x1e\x07\x17\x31\x13\x1e\x1e\x30\x13\x11\x19\x01\x72",
    // "d2i_X509_bio" / M(Xor2) / S(163) / L(12)
    "\xd7\x81\xda\xec\xeb\x86\x83\x8a\xec\xd1\xda\xdc\xb3\xc7\x0b\x03",
    // "CC_SHA1_Update" / M(Xor4) / S(106) / L(14)
    "\xe3\xe3\xff\xf3\xe8\xe1\x91\xff\xf5\xd0\xc4\xc1\xd4\xc5\xa0\x09",
    // "strncmp" / M(Xor4) / S(136) / L(7)
    "\xf3\xf4\xf2\xee\xe3\xed\xf0\x80\x72\xc6\x64\xab\x34\x3d\x09\xb2",
    // "CFReadStreamClose" / M(Xor1) / S(20) / L(17)
    "\x57\x52\x46\x71\x75\x70\x47\x60\x66\x71\x75\x79\x57\x78\x7b\x67\x71\x14",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(251) / L(40)
    "\xcd\xca\xca\x9e\xce\x99\xcd\xcd\xc9\x98\xce\xc2\xc8\x9a\xcb\xc3\x9d\x9d\xce\xc3\x9f\xca\xcf\x9a\x9e\xc9\xc9\xcf\xce\xc9\x9f\xca\xc2\xc3\x9f\x9d\xcd\x98\xcd\xcb\xfb\x89\xfa\x5a\x39\xea\x20\x6f\x00",
    // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(14) / L(24)
    "\x6c\x69\x6e\x4d\x5c\x40\x43\x5a\x5b\x4a\x7b\x46\x42\x4a\x68\x4a\x5b\x6c\x5a\x5d\x5d\x4a\x41\x5b\x2f\x6e\x9f\xa6\x95\xb1\xe8\x1b\xfe",
    // "X509_STORE_new" / M(Xor1) / S(19) / L(14)
    "\x4b\x26\x23\x2a\x4c\x40\x47\x5c\x41\x56\x4c\x7d\x76\x64\x13\xf5",
    // "X509_STORE_new" / M(Xor2) / S(44) / L(14)
    "\x64\x09\x0c\x05\x63\x6f\x68\x73\x6e\x79\x63\x52\x59\x4b\x3c\x38",
    // "CFStringCreateWithBytes" / M(Xor4) / S(160) / L(23)
    "\x43\x46\x53\x74\x72\x69\x6e\x67\x43\x72\x65\x61\x74\x65\x57\x69\x74\x68\x42\x79\x74\x65\x73\x00\x3b\x43\x4e\xc9\xd5\x66\x4b\x6b",
    // "CFBundleCopyBundleURL" / M(Xor4) / S(25) / L(21)
    "\x65\x60\x64\x53\x48\x42\x4a\x43\x65\x49\x56\x5f\x64\x53\x48\x42\x4a\x43\x73\x74\x6a\x26",
    // "" / M(None) / S(0) / L(0)
    "\x23\xaf\x4d\x47\xb1\x0d\x39\x46\x8f\xad\x29\xee\x28\x20\xd8\xe6\x87\xe7\xa9\x76\xb1\x93\x1c\xfc\x07\x4a\x9a\xf1\x3c\xb0\x72\xe5",
    // "" / M(None) / S(0) / L(0)
    "\xbd\x37\xec\xb2\x44\xd8\x64\x30\x25\x4a\xcf\xcd\x7d\xe0\x47\x34\xa9\x07\x67\x0f\xa7\xa5\xdb\x7e\x6c\xd9\xa1\x7b\x69\x5b\x00\x6c",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(226) / L(66)
    "\x09\x75\x5f\x55\x52\x43\x4b\x09\x6a\x4f\x44\x54\x47\x54\x5f\x09\x60\x54\x47\x4b\x43\x51\x49\x54\x4d\x55\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x08\x40\x54\x47\x4b\x43\x51\x49\x54\x4d\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x26",
    // "objc_msgSend" / M(Xor4) / S(47) / L(12)
    "\x9f\x92\x9a\x93\xaf\x9d\x83\x97\xa3\x95\x9e\x94\xf0\x30\x72\x8d",
    // "CFDataCreateMutable" / M(Xor1) / S(151) / L(19)
    "\xd4\xd1\xd3\xf6\xe3\xf6\xd4\xe5\xf2\xf6\xe3\xf2\xda\xe2\xe3\xf6\xf5\xfb\xf2\x97",
    // "" / M(None) / S(0) / L(0)
    "\xac\x53\x89\xd0\xef\x20\x7d\x9e\xba\x8a\xd9\x7b\x72\x3b\x73\xd9\x08\x56\xb6\x3c\xd4\x6b\x72\xaf\xee\xd0\xf7\x65\x6e\xee\x74\x06",
    // "" / M(None) / S(0) / L(0)
    "\xc8\x68\x3a\x33\x60\xd1\xa4\xf6\x0d\xed\x87\x23\x9c\x41\xbb\x39\x48\xc9\x2a\x87\x7e\x35\xb9\x36\x65\xdb\x06\xad\x03\xf5\xfa\xbe",
    // "PKCS7_verify" / M(Xor1) / S(26) / L(12)
    "\x4a\x51\x59\x49\x2d\x45\x6c\x7f\x68\x73\x7c\x63\x1a\x59\x43\x6e",
    // "" / M(None) / S(0) / L(0)
    "\xd2\xd7\x0c\x30\xf1\xf9\x68\x61\x04\x42\x9d\xfb\xe9\x6e\xda\x5b\x97\xa3\xcf\x11\x1b\x3a\xf4\x6b\xec\xf0\xa4\xb0\x1a\x25\x6a\x58",
    // "" / M(None) / S(0) / L(0)
    "\x23\x7f\xed\x40\xd6\x79\x5f\x40\x42\x36\x6c\x5e\x47\x18\x70\x46\xb5\x26\x1c\x20\x45\xa8\xdc\x1d\xdb\x83\x72\xd5\x52\x8b\xc5\x78",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x4f\x6c\x98\xe7\x64\x96\x9c\xf3\x49\xf4\x50\x72\xcc\xd0\xfc\x15\x0f\x95\xd9\x6c\x1a\x83\xb5\x8b\xfc\x9d\xf9\xa2\x8a\xd6\x18",
    // "strncmp" / M(Xor4) / S(102) / L(7)
    "\x13\x14\x12\x0e\x03\x0d\x10\x60\xda\x8e\x01\x57\xa0\x1a\x25\x6c",
    // "CC_SHA1" / M(Rot) / S(215) / L(7)
    "\x1a\x1a\x36\x2a\x1f\x18\x08\xd7\x13\x2e\x29\xe2\xc6\x07\xec\xbf",
    // "sk_value" / M(Xor4) / S(185) / L(8)
    "\xe3\xfb\xcf\xe6\xf1\xfc\xe5\xf5\x90\x01\x35\x26\xcd\x10\x4a\x4a",
    // "BIO_write" / M(Xor2) / S(72) / L(9)
    "\x1a\x11\x17\x07\x2f\x2a\x31\x2c\x3d\x58\x4f\xea\xed\x76\x2c\xff",
    // "ASN1_INTEGER_free" / M(Xor3) / S(78) / L(17)
    "\x21\x33\x2e\x51\x3f\x29\x2e\x34\x25\x27\x25\x32\x3f\x06\x12\x05\x05\x60",
    // "CFBundleIdentifier" / M(Xor4) / S(174) / L(18)
    "\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xa3\x8e\x8f\x84\x9e\x83\x8c\x83\x8f\x98\xea",
    // "" / M(None) / S(0) / L(0)
    "\x21\x7e\x5a\x2c\x06\x96\x1d\xcf\x68\x87\xfb\xa7\x46\xc4\xb5\x47\xe6\x08\x6f\x57\xac\x5c\x25\x12\x34\xc0\x58\x72\x0b\xc4\xa7\xf4",
    // "sel_registerName" / M(Xor3) / S(121) / L(16)
    "\xf9\xef\xe6\xd5\xf8\xef\xed\xe3\xf9\xfe\xef\xf8\xc4\xeb\xe7\xef\x8a",
    // "CFDictionaryGetValue" / M(Xor2) / S(235) / L(20)
    "\xbd\xb8\xba\x97\x9d\x8a\x97\x91\x90\x9f\x8c\x87\xb9\x9b\x8a\xa8\x9f\x92\x8b\x9b\xfe",
    // "kSecClassCertificate" / M(Rot) / S(169) / L(20)
    "\x14\xfc\x0e\x0c\xec\x15\x0a\x1c\x1c\xec\x0e\x1b\x1d\x12\x0f\x12\x0c\x0a\x1d\x0e\xa9",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(18) / L(37)
    "\x51\x54\x47\x40\x5e\x51\x60\x77\x73\x66\x77\x51\x7d\x62\x6b\x53\x62\x62\x77\x7c\x76\x7b\x7c\x75\x42\x73\x66\x7a\x51\x7d\x7f\x62\x7d\x7c\x77\x7c\x66\x12",
    // "objc_getClass" / M(Xor4) / S(209) / L(13)
    "\x7f\x72\x7a\x73\x4f\x77\x75\x64\x53\x7c\x71\x63\x63\x10\xf1\x8d",
    // "setjmp" / M(Rot) / S(112) / L(6)
    "\xe3\xd5\xe4\xda\xdd\xe0\x70\xe5\xfb\x75\xdd\x25\xf2\xa5\x0c\xfb",
    // "CFDateFormatterSetProperty" / M(Xor2) / S(238) / L(26)
    "\x8e\x8b\x89\xac\xb9\xa8\x8b\xa2\xbf\xa0\xac\xb9\xb9\xa8\xbf\x9e\xa8\xb9\x9d\xbf\xa2\xbd\xa8\xbf\xb9\xb4\xcd\xca\xc1\x80\x08\x32\x29\x22\x0c",
    // "" / M(None) / S(0) / L(0)
    "\x67\x4c\xef\x7c\x30\x20\x42\x5c\x43\x74\x42\xb3\xaa\xa6\x10\x5f\x44\x56\x0c\xcb\x24\x43\xb9\x5a\x26\x62\x36\xe1\x44\xa0\xc3\x0d",
    // "BIO_s_mem" / M(Xor3) / S(21) / L(9)
    "\x67\x6c\x6a\x7a\x56\x7a\x48\x40\x48\x25\x93\x45\xb5\x86\xd6\xbc",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(253) / L(14)
    "\xbf\xb9\xa1\xa9\xb2\xa0\xac\xa4\xa3\xb2\xa2\xa3\xa1\xb4\xed\x68",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(230) / L(43)
    "\x91\x94\x87\x80\x9e\x91\xa0\xb7\xb3\xa6\xb7\x85\xbb\xa6\xba\x94\xbb\xbe\xb7\x81\xab\xa1\xa6\xb7\xbf\x82\xb3\xa6\xba\x80\xb7\xbe\xb3\xa6\xbb\xa4\xb7\x86\xbd\x90\xb3\xa1\xb7\xd2\x5c\xa3\xce\xc5\x13\x69\xb6\x6c",
    // "CFDataGetLength" / M(Xor3) / S(34) / L(15)
    "\x71\x74\x76\x53\x46\x53\x75\x57\x46\x7e\x57\x5c\x55\x46\x5a\x32",
    // "NSApplicationMain" / M(Xor1) / S(222) / L(17)
    "\x90\x8d\x9f\xae\xae\xb2\xb7\xbd\xbf\xaa\xb7\xb1\xb0\x93\xbf\xb7\xb0\xde",
    // "" / M(None) / S(0) / L(0)
    "\x1f\x3a\x44\x5e\xad\x93\x51\xd2\x67\xb1\xb0\x70\x84\xb3\x40\x0b\x6d\x68\xd0\x15\xd7\xb2\x7b\xd5\xf5\xa6\x1a\x4d\x23\xba\x64\x69",
    // "CFDateCompare" / M(Xor3) / S(161) / L(13)
    "\xf2\xf7\xf5\xd0\xc5\xd4\xf2\xde\xdc\xc1\xd0\xc3\xd4\xb1\xf5\x66",
    // "CFDictionaryAddValue" / M(Xor2) / S(61) / L(20)
    "\x6b\x6e\x6c\x41\x4b\x5c\x41\x47\x46\x49\x5a\x51\x69\x4c\x4c\x7e\x49\x44\x5d\x4d\x28",
    // "longjmp" / M(Xor3) / S(116) / L(7)
    "\xe8\xeb\xea\xe3\xee\xe9\xf4\x84\xf1\x6a\x49\xff\xc8\x03\xf2\xa2",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(253) / L(32)
    "\xe4\xe4\xe4\xe4\xba\xb0\xba\xd0\xd0\xba\xb0\xba\xf9\xf9\xba\xc9\xba\xd5\xd5\xba\xa7\xba\xf0\xf0\xba\xa7\xba\xee\xee\xba\xc7\xba\x9d",
    // "" / M(None) / S(0) / L(0)
    "\x49\x94\xc0\x60\xa3\xa0\xd3\xea\xcf\xc0\x7f\xc1\xfc\xd5\x1b\xb5\x97\xab\x6f\x39\xcb\x1a\x45\x7a\xdf\xbc\x61\x4e\xea\x7d\x7e\x7f",
    // "CFArrayCreateMutable" / M(Xor1) / S(60) / L(20)
    "\x7f\x7a\x7d\x4e\x4e\x5d\x45\x7f\x4e\x59\x5d\x48\x59\x71\x49\x48\x5d\x5e\x50\x59\x3c",
    // "CFDictionarySetValue" / M(Rot) / S(54) / L(20)
    "\x79\x7c\x7a\x9f\x99\xaa\x9f\xa5\xa4\x97\xa8\xaf\x89\x9b\xaa\x8c\x97\xa2\xab\x9b\x36",
    // "/usr/lib/libSystem.dylib" / M(Xor3) / S(174) / L(24)
    "\xe0\xba\xbc\xbd\xe0\xa3\xa6\xad\xe0\xa3\xa6\xad\x9c\xb6\xbc\xbb\xaa\xa2\xe1\xab\xb6\xa3\xa6\xad\xcf\xf7\x27\x72\x73\x96\xd9\x0f\x48",
    // "SecCertificateCopyData" / M(Rot) / S(253) / L(22)
    "\x50\x62\x60\x40\x62\x6f\x71\x66\x63\x66\x60\x5e\x71\x62\x40\x6c\x6d\x76\x41\x5e\x71\x5e\xfd",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(147) / L(29)
    "\xfe\xd6\xd9\xe7\x0c\x03\xf8\xd7\xfc\xf6\x07\xfc\x02\x01\xf4\x05\x0c\xde\xf8\x0c\xd6\xf4\xff\xff\xd5\xf4\xf6\xfe\x06\x93\x90\x70\x00\x2d\x52\x13\xeb\x18",
    // "X509_NAME_get_text_by_NID" / M(Xor4) / S(192) / L(25)
    "\xd8\xb5\xb0\xb9\xdf\xce\xc1\xcd\xc5\xdf\xe7\xe5\xf4\xdf\xf4\xe5\xf8\xf4\xdf\xe2\xf9\xdf\xce\xc9\xc4\x80\xef\xd3\x71\x1b\x2e\xea\xc1\x43",
    // "X509_free" / M(Xor1) / S(49) / L(9)
    "\x69\x04\x01\x08\x6e\x57\x43\x54\x54\x31\x2e\xde\xe6\xdf\x2b\x65",
    // "kCFDateFormatterTimeZone" / M(Rot) / S(136) / L(24)
    "\xf3\xcb\xce\xcc\xe9\xfc\xed\xce\xf7\xfa\xf5\xe9\xfc\xfc\xed\xfa\xdc\xf1\xf5\xed\xe2\xf7\xf6\xed\x88\xa7\xf6\xce\xcb\x61\xdd\x4e\xb4",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(123) / L(57)
    "\xaa\xce\xf4\xee\xef\xe0\xe8\xaa\xc7\xe4\xdd\xed\xdc\xed\xf4\xaa\xc6\xe0\xf4\xde\xe3\xdc\xe4\xe9\xee\xaa\xce\xf4\xee\xef\xe0\xe8\xcd\xea\xea\xef\xbe\xe0\xed\xef\xe4\xe1\xe4\xde\xdc\xef\xe0\xee\xa9\xe6\xe0\xf4\xde\xe3\xdc\xe4\xe9\x7b\xad\xe8\x60\xbe\x28\x0f\x6c\x02",
    // "SecCertificateCopyData" / M(Rot) / S(9) / L(22)
    "\x5c\x6e\x6c\x4c\x6e\x7b\x7d\x72\x6f\x72\x6c\x6a\x7d\x6e\x4c\x78\x79\x82\x4d\x6a\x7d\x6a\x09",
    // "EVP_DigestFinal" / M(Xor2) / S(173) / L(15)
    "\xf8\xeb\xed\xe2\xf9\xd4\xda\xd8\xce\xc9\xfb\xd4\xd3\xdc\xd1\xbd",
    // "_MASReceipt" / M(Xor1) / S(217) / L(11)
    "\x86\x94\x98\x8a\x8b\xbc\xba\xbc\xb0\xa9\xad\xd9\xdf\x0a\x0a\x16",
    // "OBJ_txt2obj" / M(Xor1) / S(78) / L(11)
    "\x01\x0c\x04\x11\x3a\x36\x3a\x7c\x21\x2c\x24\x4e\x2f\xd7\x01\xf0",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(199) / L(59)
    "\xea\xed\xe6\xed\xb9\xe6\xe9\xbe\xe6\xea\xea\xe6\xee\xbf\xe6\xe9\xe5\xe6\xef\xbd\xe6\xec\xe4\xe6\xba\xba\xe6\xe9\xe4\xe6\xb8\xed\xe6\xe8\xbd\xe6\xb9\xee\xe6\xee\xe8\xe6\xe9\xee\xe6\xb8\xed\xe6\xe5\xe4\xe6\xb8\xba\xe6\xea\xbf\xe6\xea\xec\xdc\xe6\x97\x53\xb7\x86\x80\x26\x21",
    // "" / M(None) / S(0) / L(0)
    "\x2f\xb9\x6a\xd2\x83\x31\x90\x89\xf8\xa7\xbb\x54\xbf\x5b\xf4\x82\x75\x00\xde\x19\xde\x48\x1a\xb0\x10\xe6\xf8\x8d\x46\xf0\x06\xd4",
    // "" / M(None) / S(0) / L(0)
    "\xf8\xcc\xf5\x4f\x81\x12\xb9\x23\x18\x84\x2b\xe4\x51\x68\x00\x53\x16\x44\x04\x5a\xa3\xbc\xdf\xe6\xdb\xe9\x25\x2d\x27\x54\xa8\xf2",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(250) / L(59)
    "\x08\x0f\x04\x0f\x7b\x04\x0b\x7c\x04\x08\x08\x04\x0c\x7d\x04\x0b\x07\x04\x0d\x7f\x04\x0e\x06\x04\x78\x78\x04\x0b\x06\x04\x7a\x0f\x04\x0a\x7f\x04\x7b\x0c\x04\x0c\x0a\x04\x0b\x0c\x04\x7a\x0f\x04\x07\x06\x04\x7a\x78\x04\x08\x7d\x04\x08\x0e\x3e\xd7\x34\x0e\x07\x92\xb5\xda\xe6",
    // "OBJ_txt2obj" / M(Xor1) / S(192) / L(11)
    "\x8f\x82\x8a\x9f\xb4\xb8\xb4\xf2\xaf\xa2\xaa\xc0\xd8\xe9\x0e\x08",
    // "" / M(None) / S(0) / L(0)
    "\x92\x70\xec\x38\x01\x10\x49\x8b\xeb\xf8\x29\x7f\x5e\x0b\xfd\x24\x43\x58\x48\x43\x99\x2e\xd8\xf3\x7d\xd9\xf7\xc6\x43\xc7\x49\x07",
    // "" / M(None) / S(0) / L(0)
    "\x80\xba\x77\x8b\x9b\x0a\xb7\xde\x54\x99\x98\xb0\x29\x43\x88\x5f\xe9\x14\xa1\xfa\x7c\x9a\xd6\xa2\x6e\x67\x36\xfa\x17\x19\x94\x15",
    // "" / M(None) / S(0) / L(0)
    "\x29\x2f\x25\xe2\x25\x8b\x9f\xed\x4c\x83\x4f\x31\x6a\xb4\xd6\x55\xc2\x60\x02\x74\x9a\xf6\x5e\xbc\x5d\xac\x26\xaf\x22\x09\xce\xf2",
    // "EVP_DigestFinal" / M(Xor4) / S(136) / L(15)
    "\xc5\xd6\xd0\xdf\xc4\xe9\xe7\xe5\xf3\xf4\xc6\xe9\xee\xe1\xec\x80",
    // "SHA1_Final" / M(Xor2) / S(168) / L(10)
    "\xeb\xf0\xf9\x89\xe7\xfe\xd1\xd6\xd9\xd4\xb8\x1d\xce\x27\x2c\x7b",
    // "Contents/_MASReceipt" / M(Xor4) / S(127) / L(20)
    "\x28\x04\x05\x1f\x0e\x05\x1f\x18\x44\x34\x26\x2a\x38\x39\x0e\x08\x0e\x02\x1b\x1f\x6b",
    // "CFRelease" / M(Xor3) / S(17) / L(9)
    "\x62\x67\x73\x44\x4d\x44\x40\x52\x44\x21\xe4\xaf\x4b\x78\xe0\x47",
    // "ASN1_OBJECT_free" / M(Xor2) / S(173) / L(16)
    "\xfd\xef\xf2\x8d\xe3\xf3\xfe\xf6\xf9\xff\xe8\xe3\xda\xce\xd9\xd9\xbc",
    // "" / M(None) / S(0) / L(0)
    "\xa3\xac\x76\xbc\x77\xc8\x65\xb4\x2d\x30\x19\x68\xc2\x92\xa4\xa1\x7e\x99\x0f\xdc\x4c\x03\x38\x7c\xc7\xaf\x51\xa0\x97\x91\x13\x83",
    // "X509_digest" / M(Xor4) / S(29) / L(11)
    "\x88\xe5\xe0\xe9\x8f\xb4\xb9\xb7\xb5\xa3\xa4\xd0\x25\xe7\x7c\x54",
    // "BIO_s_mem" / M(Xor3) / S(123) / L(9)
    "\xc9\xc2\xc4\xd4\xf8\xd4\xe6\xee\xe6\x8b\x60\x50\x0f\x6b\x27\x92",
    // "" / M(None) / S(0) / L(0)
    "\xf2\xcb\xda\x1d\x75\xa3\x9d\x6f\xc7\x69\x74\x61\xea\x87\x23\x12\xbc\xc0\x17\xc2\x5e\xd1\xf5\xa2\x5c\x33\xde\xd0\x0d\xc1\xb2\xe6",
    // "" / M(None) / S(0) / L(0)
    "\xb8\xec\x06\x26\xba\x1d\xe5\x12\x3c\xe5\xa6\x75\xab\x54\x6e\x21\x06\x1a\xbd\xba\x8c\xc9\x6d\xc8\x5d\xf6\x86\xe7\xfe\x0a\x85\x78",
    // "X509_STORE_add_cert" / M(Xor1) / S(86) / L(19)
    "\x0e\x63\x66\x6f\x09\x05\x02\x19\x04\x13\x09\x37\x32\x32\x09\x35\x33\x24\x22\x56",
    // "CFReadStreamCreateWithFile" / M(Xor4) / S(128) / L(26)
    "\xc3\xc6\xd2\xe5\xe1\xe4\xd3\xf4\xf2\xe5\xe1\xed\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xc6\xe9\xec\xe5\x80\xb0\xda\xbd\x92\xc5\xd2\x7e\x49",
    // "" / M(None) / S(0) / L(0)
    "\x58\x6a\xe1\x8f\x4e\x7e\xb4\x41\x5d\x34\x38\x3b\xac\x37\x51\xd5\x03\x8a\x02\x3b\xac\x9e\x07\xa0\x2e\xa5\xfc\xbb\xa9\x30\x21\x53",
    // "SHA1_Init" / M(Xor1) / S(134) / L(9)
    "\xd5\xce\xc7\xb7\xd9\xcf\xe8\xef\xf2\x86\xb1\xdb\xbc\x09\x26\xe0",
    // "IOBSDNameMatching" / M(Xor3) / S(117) / L(17)
    "\xce\xc8\xc5\xd4\xc3\xc9\xe6\xea\xe2\xca\xe6\xf3\xe4\xef\xee\xe9\xe0\x87",
    // "kSecReturnRef" / M(Xor1) / S(25) / L(13)
    "\x72\x4a\x7c\x7a\x4b\x7c\x6d\x6c\x6b\x77\x4b\x7c\x7f\x19\x08\x46",
    // "CFNumberCreate" / M(Xor4) / S(240) / L(14)
    "\x43\x46\x4e\x75\x6d\x62\x65\x72\x43\x72\x65\x61\x74\x65\x00\x95",
    // "" / M(None) / S(0) / L(0)
    "\x68\xf6\xee\x7b\xb5\x45\xe0\x17\xc6\x27\x11\x16\x75\x81\x58\x35\x8f\xcd\x55\xfb\xc1\x65\xaf\xf9\x73\x04\x53\x60\xf9\xae\xfc\x01",
    // "/usr/lib/libobjc.dylib" / M(Xor1) / S(13) / L(22)
    "\x22\x78\x7e\x7f\x22\x61\x64\x6f\x22\x61\x64\x6f\x62\x6f\x67\x6e\x23\x69\x74\x61\x64\x6f\x0d",
    // "exit" / M(Rot) / S(116) / L(4)
    "\xd9\xec\xdd\xe8\x74\x93\x5c\x1d\x45\x8b\xef\x6c\x5f\xb7\xbf\xee",
    // "" / M(Xor3) / S(96) / L(0)
    "\x70\x0c\x69\x96\xfa\x11\x7f\x22\xee\x99\xd6\x09\xc9\xff\xb6\x7d",
    // "d2i_PKCS7_bio" / M(Xor4) / S(14) / L(13)
    "\x84\xd2\x89\xbf\xb0\xab\xa3\xb3\xd7\xbf\x82\x89\x8f\xe0\xfc\xd5",
    // "/usr/lib/libSystem.dylib" / M(Xor3) / S(204) / L(24)
    "\xc2\x98\x9e\x9f\xc2\x81\x84\x8f\xc2\x81\x84\x8f\xbe\x94\x9e\x99\x88\x80\xc3\x89\x94\x81\x84\x8f\xed\xd7\x12\x5a\xe7\x08\x67\x2b\xee",
    // "CFEqual" / M(Xor4) / S(21) / L(7)
    "\x13\x16\x15\x21\x25\x31\x3c\x50\xdf\x95\xb2\x34\x03\x1c\xa3\x0f",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(234) / L(23)
    "\x85\xba\xaf\xa4\x99\x99\x86\x95\xab\xae\xae\x95\xab\xa6\xa6\x95\xae\xa3\xad\xaf\xb9\xbe\xb9\xca\xf4\xb1\x97\x50\x81\x5d\x8a\x4f",
    // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(121) / L(24)
    "\xd9\xdc\xdb\xf8\xe9\xf5\xf6\xef\xee\xff\xce\xf3\xf7\xff\xdd\xff\xee\xd9\xef\xe8\xe8\xff\xf4\xee\x9a\xf1\x18\x71\xa7\xd9\x07\xd0\xed",
    // "CFDateCompare" / M(Rot) / S(88) / L(13)
    "\x9b\x9e\x9c\xb9\xcc\xbd\x9b\xc7\xc5\xc8\xb9\xca\xbd\x58\x08\x22",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x54\xf6\x15\xa9\x65\x06\x4a\x73\xb7\x8d\xb9\xb2\x09\xc9\x29\xfe\xe2\x72\x6d\x56\x75\xe1\xc3\x9f\x8c\x62\x5f\x5f\x94\x6c\xa2",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(56) / L(39)
    "\x2b\x2e\x3c\x01\x05\x0d\x32\x07\x06\x0d\x2b\x1a\x0d\x09\x1c\x0d\x3f\x01\x1c\x00\x3c\x01\x05\x0d\x21\x06\x1c\x0d\x1a\x1e\x09\x04\x2e\x1a\x07\x05\x2f\x25\x3c\x68\x25\x10\xcc\xa0\x44\xa5\x1d\x9f",
    // "" / M(None) / S(0) / L(0)
    "\x21\x45\x6c\xd4\x3d\x9b\xa4\x54\x2a\x9a\xf4\xe6\xee\xd7\x3c\x0c\xe6\xad\x77\x13\xcd\x4d\x85\x64\x02\x19\xb9\xba\x91\xca\xee\x79",
    // "" / M(None) / S(0) / L(0)
    "\x3f\x31\xfe\xdc\x70\xc8\xf4\x85\x11\x7f\x83\x71\xc4\x20\xa3\xc9\x5e\xaf\xc0\xa5\x1c\xf9\x1d\xff\x28\xb9\xc2\x5d\xb5\x5c\xd5\x9d",
    // "EVP_DigestInit" / M(Xor4) / S(97) / L(14)
    "\x55\x46\x40\x4f\x54\x79\x77\x75\x63\x64\x59\x7e\x79\x64\x10\x6e",
    // "BIO_new" / M(Xor3) / S(133) / L(7)
    "\xd7\xdc\xda\xca\xfb\xf0\xe2\x95\xa9\xdc\xe4\xd8\xae\xae\x5a\xa6",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[608] = {
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) EVP_DigestUpdate),
    ((void *) SHA1_Final),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) X509_STORE_new),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) BIO_write),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) BIO_new),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_LRGSUIOCSMPO __unused;
static int ReceiptValidation_QNDRODJENBPS __unused;
static int ReceiptValidation_ZEFRYEHTKOPT __unused;
static int ReceiptValidation_AXKDDCPIDUNL __unused;
static int ReceiptValidation_VTQDTLRTWECH __unused;
static int ReceiptValidation_PMUZNRINNCPP __unused;
static int ReceiptValidation_PJIOCTJUWXZF __unused;
static int ReceiptValidation_EWMOGFDQKGBI __unused;


#define ReceiptValidation_ASN1_get_object_02200142 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction009, 322, 219, 16))
#define ReceiptValidation_ASN1_INTEGER_free_0220018D ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction009, 397, 14, 18))
#define ReceiptValidation_ASN1_INTEGER_get_00EB0048 ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction009, 72, 184, 17))
#define ReceiptValidation_ASN1_OBJECT_free_00EB00DB ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction003, 219, 69, 17))
#define ReceiptValidation_BIO_free_007601E2 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction007, 482, 228, 16))
#define ReceiptValidation_BIO_free_0220018A ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction00C, 394, 100, 16))
#define ReceiptValidation_BIO_new_007600D9 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00A, 217, 30, 16))
#define ReceiptValidation_BIO_new_022000D9 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction00A, 217, 30, 16))
#define ReceiptValidation_BIO_s_mem_00760246 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00A, 582, 123, 16))
#define ReceiptValidation_BIO_s_mem_00EB00B7 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction004, 183, 99, 16))
#define ReceiptValidation_BIO_write_0076012F ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction007, 303, 168, 16))
#define ReceiptValidation_BIO_write_02200213 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction007, 531, 72, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_00EB0160 ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00C, 352, 19, 17))
#define ReceiptValidation_CC_SHA1_Init_025501D5 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction006, 469, 48, 16))
#define ReceiptValidation_CFArrayAppendValue_00D101DF ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, 479, 238, 19))
#define ReceiptValidation_CFBundleGetMainBundle_020701B4 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction007, 436, 210, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_00D10133 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00C, 307, 60, 33))
#define ReceiptValidation_CFDataCreate_00D100D6 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction006, 214, 227, 16))
#define ReceiptValidation_CFDataCreateMutable_00740109 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction006, 265, 240, 20))
#define ReceiptValidation_CFDataCreateMutable_00D10109 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction006, 265, 240, 20))
#define ReceiptValidation_CFDataCreateMutable_02070209 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, 521, 151, 20))
#define ReceiptValidation_CFDataGetBytePtr_007401CB ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, 459, 180, 17))
#define ReceiptValidation_CFDataGetLength_00D10222 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction009, 546, 34, 16))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_00D1019D ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00A, 413, 7, 36))
#define ReceiptValidation_CFDateFormatterSetFormat_00D100B2 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction006, 178, 110, 33))
#define ReceiptValidation_CFDictionaryCreateMutable_00740099 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, 153, 3, 34))
#define ReceiptValidation_CFDictionaryCreateMutable_00D10099 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, 153, 3, 34))
#define ReceiptValidation_CFDictionaryCreateMutable_020700FF ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction005, 255, 193, 34))
#define ReceiptValidation_CFDictionarySetValue_00740164 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00A, 356, 216, 21))
#define ReceiptValidation_CFNumberCreate_007401F0 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction004, 496, 211, 16))
#define ReceiptValidation_CFNumberCreate_00D101F0 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction004, 496, 211, 16))
#define ReceiptValidation_CFReadStreamRead_0074017E ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00B, 382, 5, 17))
#define ReceiptValidation_CFReadStreamRead_00D10127 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, 295, 168, 17))
#define ReceiptValidation_CFRelease_00740033 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction009, 51, 233, 16))
#define ReceiptValidation_CFRelease_00740045 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction009, 69, 111, 16))
#define ReceiptValidation_CFRelease_00740242 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00A, 578, 17, 16))
#define ReceiptValidation_CFRelease_00D10033 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction009, 51, 233, 16))
#define ReceiptValidation_CFRelease_00D10045 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction009, 69, 111, 16))
#define ReceiptValidation_CFRelease_00D10242 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00A, 578, 17, 16))
#define ReceiptValidation_CFRelease_02070045 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction009, 69, 111, 16))
#define ReceiptValidation_CFURLCreateCopyAppendingPathComponent_0074021A ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction006, 538, 18, 38))
#define ReceiptValidation_CFURLCreateCopyAppendingPathComponent_00D10019 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, 25, 161, 38))
#define ReceiptValidation_d2i_PKCS7_bio_00EB000C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00A, 12, 170, 16))
#define ReceiptValidation_d2i_PKCS7_bio_00EB01CC ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction006, 460, 204, 16))
#define ReceiptValidation_d2i_X509_bio_00EB0152 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction003, 338, 229, 16))
#define ReceiptValidation_EVP_DigestFinal_00EB0234 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction007, 564, 173, 16))
#define ReceiptValidation_EVP_DigestInit_00EB0007 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction005, 7, 128, 16))
#define ReceiptValidation_EVP_DigestUpdate_0076004B ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00C, 75, 226, 17))
#define ReceiptValidation_EVP_get_digestbyname_00EB00DC ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00B, 220, 60, 21))
#define ReceiptValidation_EVP_MD_CTX_init_007601B2 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction009, 434, 13, 16))
#define ReceiptValidation_exit_01B101B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 433, 162, 33, ReceiptValidation_ObfuscationFunction00C, 432, 242, 16))
#define ReceiptValidation_exit_01B10252 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 433, 162, 33, ReceiptValidation_ObfuscationFunction004, 594, 116, 16))
#define ReceiptValidation_exit_022C008B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction008, 139, 217, 16))
#define ReceiptValidation_exit_022C01B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction00C, 432, 242, 16))
#define ReceiptValidation_exit_022C0252 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction004, 594, 116, 16))
#define ReceiptValidation_exit_0255008B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction008, 139, 217, 16))
#define ReceiptValidation_exit_025501B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction00C, 432, 242, 16))
#define ReceiptValidation_exit_02550252 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction004, 594, 116, 16))
#define ReceiptValidation_LRGSUIOCSMPO_002F002C ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 47, 207, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_LRGSUIOCSMPO, 249, 18))
#define ReceiptValidation_LRGSUIOCSMPO_00740218 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_LRGSUIOCSMPO, 235, 21))
#define ReceiptValidation_LRGSUIOCSMPO_00D10080 ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_LRGSUIOCSMPO, 240, 48))
#define ReceiptValidation_LRGSUIOCSMPO_00D1016B ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_LRGSUIOCSMPO, 82, 16))
#define ReceiptValidation_LRGSUIOCSMPO_00D1022A ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_LRGSUIOCSMPO, 60, 21))
#define ReceiptValidation_LRGSUIOCSMPO_020700ED ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_LRGSUIOCSMPO, 123, 48))
#define ReceiptValidation_LRGSUIOCSMPO_02070186 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_LRGSUIOCSMPO, 10, 21))
#define ReceiptValidation_LRGSUIOCSMPO_020701F9 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_LRGSUIOCSMPO, 172, 16))
#define ReceiptValidation_QNDRODJENBPS_002F0150 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 47, 207, 49, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_QNDRODJENBPS, 132, 16))
#define ReceiptValidation_QNDRODJENBPS_0074009B ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_QNDRODJENBPS, 174, 35))
#define ReceiptValidation_QNDRODJENBPS_00740122 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_QNDRODJENBPS, 99, 37))
#define ReceiptValidation_QNDRODJENBPS_00D100FB ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_QNDRODJENBPS, 133, 18))
#define ReceiptValidation_QNDRODJENBPS_00D101BE ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_QNDRODJENBPS, 194, 21))
#define ReceiptValidation_QNDRODJENBPS_020700B9 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_QNDRODJENBPS, 133, 16))
#define ReceiptValidation_QNDRODJENBPS_02550211 ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_QNDRODJENBPS, 215, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_007400AB ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_ZEFRYEHTKOPT, 41, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_00740116 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_ZEFRYEHTKOPT, 151, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_007401F2 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_ZEFRYEHTKOPT, 105, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_00D101A4 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_ZEFRYEHTKOPT, 60, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_01800147 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ZEFRYEHTKOPT, 50, 20))
#define ReceiptValidation_ZEFRYEHTKOPT_020701E0 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ZEFRYEHTKOPT, 153, 35))
#define ReceiptValidation_ZEFRYEHTKOPT_020701F9 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_ZEFRYEHTKOPT, 172, 16))
#define ReceiptValidation_ZEFRYEHTKOPT_020701FE ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ZEFRYEHTKOPT, 20, 18))
#define ReceiptValidation_AXKDDCPIDUNL_0014005D ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 20, 62, 51, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AXKDDCPIDUNL, 90, 18))
#define ReceiptValidation_AXKDDCPIDUNL_002F014F ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 47, 207, 49, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AXKDDCPIDUNL, 46, 37))
#define ReceiptValidation_AXKDDCPIDUNL_007401CB ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_AXKDDCPIDUNL, 180, 17))
#define ReceiptValidation_AXKDDCPIDUNL_007401DF ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_AXKDDCPIDUNL, 238, 19))
#define ReceiptValidation_AXKDDCPIDUNL_00740218 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_AXKDDCPIDUNL, 235, 21))
#define ReceiptValidation_AXKDDCPIDUNL_00D10067 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_AXKDDCPIDUNL, 42, 22))
#define ReceiptValidation_AXKDDCPIDUNL_020701C4 ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AXKDDCPIDUNL, 20, 52))
#define ReceiptValidation_AXKDDCPIDUNL_022C00AF ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AXKDDCPIDUNL, 232, 16))
#define ReceiptValidation_VTQDTLRTWECH_002F0168 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 47, 207, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_VTQDTLRTWECH, 146, 32))
#define ReceiptValidation_VTQDTLRTWECH_00D1002D ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_VTQDTLRTWECH, 232, 17))
#define ReceiptValidation_VTQDTLRTWECH_00D100F0 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_VTQDTLRTWECH, 38, 16))
#define ReceiptValidation_VTQDTLRTWECH_00D10218 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_VTQDTLRTWECH, 235, 21))
#define ReceiptValidation_VTQDTLRTWECH_02070044 ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_VTQDTLRTWECH, 142, 16))
#define ReceiptValidation_VTQDTLRTWECH_0207004E ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_VTQDTLRTWECH, 32, 16))
#define ReceiptValidation_PMUZNRINNCPP_00210086 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_PMUZNRINNCPP, 161, 38))
#define ReceiptValidation_PMUZNRINNCPP_00740013 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_PMUZNRINNCPP, 235, 37))
#define ReceiptValidation_PMUZNRINNCPP_0074007B ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PMUZNRINNCPP, 96, 17))
#define ReceiptValidation_PMUZNRINNCPP_00740184 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_PMUZNRINNCPP, 55, 36))
#define ReceiptValidation_PMUZNRINNCPP_00740218 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_PMUZNRINNCPP, 235, 21))
#define ReceiptValidation_PMUZNRINNCPP_00960024 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 150, 204, 49, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_PMUZNRINNCPP, 137, 38))
#define ReceiptValidation_PMUZNRINNCPP_020701F0 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_PMUZNRINNCPP, 211, 16))
#define ReceiptValidation_PMUZNRINNCPP_02070222 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_PMUZNRINNCPP, 34, 16))
#define ReceiptValidation_PJIOCTJUWXZF_00210129 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PJIOCTJUWXZF, 107, 16))
#define ReceiptValidation_PJIOCTJUWXZF_007400B9 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PJIOCTJUWXZF, 133, 16))
#define ReceiptValidation_PJIOCTJUWXZF_009600CF ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 150, 204, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_PJIOCTJUWXZF, 43, 16))
#define ReceiptValidation_PJIOCTJUWXZF_020701C0 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_PJIOCTJUWXZF, 212, 22))
#define ReceiptValidation_PJIOCTJUWXZF_0207022A ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_PJIOCTJUWXZF, 60, 21))
#define ReceiptValidation_PJIOCTJUWXZF_025501C3 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_PJIOCTJUWXZF, 97, 16))
#define ReceiptValidation_EWMOGFDQKGBI_007400D0 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_EWMOGFDQKGBI, 141, 22))
#define ReceiptValidation_EWMOGFDQKGBI_00D1007D ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_EWMOGFDQKGBI, 150, 33))
#define ReceiptValidation_EWMOGFDQKGBI_00D100A4 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_EWMOGFDQKGBI, 254, 23))
#define ReceiptValidation_EWMOGFDQKGBI_00D10102 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_EWMOGFDQKGBI, 59, 18))
#define ReceiptValidation_EWMOGFDQKGBI_02070102 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_EWMOGFDQKGBI, 59, 18))
#define ReceiptValidation_EWMOGFDQKGBI_020701BE ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_EWMOGFDQKGBI, 194, 21))
#define ReceiptValidation_IOObjectRelease_002F00CE ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 47, 207, 49, ReceiptValidation_ObfuscationFunction007, 206, 185, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_020700B8 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction006, 184, 6, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_02070082 ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction003, 130, 100, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_0074005C ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction008, 92, 119, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_00D1005C ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction008, 92, 119, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_0207005C ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction008, 92, 119, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00740083 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction008, 131, 98, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0074011E ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction008, 286, 4, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0207011E ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction008, 286, 4, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00740103 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 116, 196, 67, ReceiptValidation_ObfuscationFunction00B, 259, 160, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D101FA ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 209, 94, 67, ReceiptValidation_ObfuscationFunction009, 506, 82, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_02070103 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 519, 226, 67, ReceiptValidation_ObfuscationFunction00B, 259, 160, 32))
#define ReceiptValidation_kSecClass_00C101A9 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 193, 83, 55, ReceiptValidation_ObfuscationFunction00B, 425, 228, 16))
#define ReceiptValidation_kSecClass_0180019B ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction003, 411, 39, 16))
#define ReceiptValidation_kSecClassCertificate_0021012E ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction004, 302, 120, 21))
#define ReceiptValidation_kSecClassCertificate_018000A8 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction004, 168, 177, 21))
#define ReceiptValidation_kSecMatchLimit_00C10124 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 193, 83, 55, ReceiptValidation_ObfuscationFunction005, 292, 98, 16))
#define ReceiptValidation_kSecMatchLimit_018001DE ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction00A, 478, 36, 16))
#define ReceiptValidation_kSecMatchLimitAll_00210069 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction003, 105, 105, 18))
#define ReceiptValidation_kSecMatchLimitAll_00C10190 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 193, 83, 55, ReceiptValidation_ObfuscationFunction00A, 400, 25, 18))
#define ReceiptValidation_kSecMatchSearchList_002100A9 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction00B, 169, 65, 20))
#define ReceiptValidation_kSecMatchSearchList_018000A9 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction00B, 169, 65, 20))
#define ReceiptValidation_kSecMatchSubjectContains_002101C8 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction007, 456, 252, 33))
#define ReceiptValidation_kSecMatchSubjectContains_0180012A ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction003, 298, 164, 33))
#define ReceiptValidation_kSecReturnRef_0021010A ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction006, 266, 138, 16))
#define ReceiptValidation_longjmp_01B101DA ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 433, 162, 33, ReceiptValidation_ObfuscationFunction00A, 474, 218, 16))
#define ReceiptValidation_longjmp_022C0071 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction00C, 113, 192, 16))
#define ReceiptValidation_longjmp_022C0227 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction00A, 551, 116, 16))
#define ReceiptValidation_longjmp_02550071 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction00C, 113, 192, 16))
#define ReceiptValidation_longjmp_025501DA ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction00A, 474, 218, 16))
#define ReceiptValidation_longjmp_02550227 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 597, 204, 33, ReceiptValidation_ObfuscationFunction00A, 551, 116, 16))
#define ReceiptValidation_OBJ_txt2obj_00EB0236 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction005, 566, 78, 16))
#define ReceiptValidation_objc_getClass_00D20022 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction008, 34, 236, 16))
#define ReceiptValidation_objc_getClass_00D20066 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction007, 102, 101, 16))
#define ReceiptValidation_objc_getClass_010E0022 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction008, 34, 236, 16))
#define ReceiptValidation_objc_getClass_010E0066 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction007, 102, 101, 16))
#define ReceiptValidation_objc_getClass_010E021B ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction00C, 539, 209, 16))
#define ReceiptValidation_objc_getClass_02510022 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction008, 34, 236, 16))
#define ReceiptValidation_objc_getClass_02510066 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction007, 102, 101, 16))
#define ReceiptValidation_objc_msgSend_00D2002B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction006, 43, 188, 16))
#define ReceiptValidation_objc_msgSend_00D20208 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction00B, 520, 47, 16))
#define ReceiptValidation_objc_msgSend_010E002B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction006, 43, 188, 16))
#define ReceiptValidation_objc_msgSend_010E01A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction003, 423, 199, 16))
#define ReceiptValidation_objc_msgSend_010E0208 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction00B, 520, 47, 16))
#define ReceiptValidation_objc_msgSend_0251002B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction006, 43, 188, 16))
#define ReceiptValidation_objc_msgSend_025101A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction003, 423, 199, 16))
#define ReceiptValidation_objc_msgSend_02510208 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction00B, 520, 47, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_02200174 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction007, 372, 190, 32))
#define ReceiptValidation_PKCS7_free_00EB0199 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction006, 409, 252, 16))
#define ReceiptValidation_PKCS7_free_02200199 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction006, 409, 252, 16))
#define ReceiptValidation_PKCS7_get0_signers_00EB01DB ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00A, 475, 200, 19))
#define ReceiptValidation_PKCS7_verify_022000A3 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction008, 163, 27, 16))
#define ReceiptValidation_SecCertificateCopyData_00C1022D ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 193, 83, 55, ReceiptValidation_ObfuscationFunction004, 557, 253, 23))
#define ReceiptValidation_SecCertificateCopyData_0180022D ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction004, 557, 253, 23))
#define ReceiptValidation_SecKeychainSearchCopyNext_00210137 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 33, 211, 55, ReceiptValidation_ObfuscationFunction007, 311, 134, 34))
#define ReceiptValidation_SecKeychainSearchCopyNext_01800137 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 384, 197, 55, ReceiptValidation_ObfuscationFunction007, 311, 134, 34))
#define ReceiptValidation_sel_registerName_00D200A1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction00B, 161, 165, 17))
#define ReceiptValidation_sel_registerName_00D201CF ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction008, 463, 245, 17))
#define ReceiptValidation_sel_registerName_00D20217 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 3, 23, ReceiptValidation_ObfuscationFunction00A, 535, 121, 17))
#define ReceiptValidation_sel_registerName_010E00A1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction00B, 161, 165, 17))
#define ReceiptValidation_sel_registerName_010E01CF ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 22, 23, ReceiptValidation_ObfuscationFunction008, 463, 245, 17))
#define ReceiptValidation_sel_registerName_025100A1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 593, 13, 23, ReceiptValidation_ObfuscationFunction00B, 161, 165, 17))
#define ReceiptValidation_setjmp_022C0183 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 556, 174, 33, ReceiptValidation_ObfuscationFunction004, 387, 173, 16))
#define ReceiptValidation_SHA1_00760068 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00B, 104, 111, 16))
#define ReceiptValidation_SHA1_Final_007601B6 ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00B, 438, 48, 16))
#define ReceiptValidation_SHA1_Init_022001DC ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction007, 476, 242, 16))
#define ReceiptValidation_SHA1_Update_00760177 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00C, 375, 7, 16))
#define ReceiptValidation_sk_free_02200097 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction009, 151, 75, 16))
#define ReceiptValidation_sk_num_00EB011D ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction006, 285, 113, 16))
#define ReceiptValidation_sk_value_00760212 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00C, 530, 185, 16))
#define ReceiptValidation_X509_digest_00760016 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 118, 67, 16, ReceiptValidation_ObfuscationFunction00C, 22, 33, 16))
#define ReceiptValidation_X509_free_0220019C ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 544, 253, 16, ReceiptValidation_ObfuscationFunction006, 412, 187, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_00EB000A ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00B, 10, 207, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_00EB0136 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction008, 310, 234, 34))
#define ReceiptValidation_X509_STORE_add_cert_00EB01A3 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction003, 419, 14, 20))
#define ReceiptValidation_X509_STORE_free_00EB000F ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction00C, 15, 151, 16))
#define ReceiptValidation_X509_STORE_new_00EB0201 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 235, 192, 16, ReceiptValidation_ObfuscationFunction005, 513, 19, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[515])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[81])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[515])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[211])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[515])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[211])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[515])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[81])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[376])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[81])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[608], ReceiptValidation_tmp2[608];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[170])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[444])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#ifdef DEBUG
inline static void ReceiptValidation_GetMainBundle016(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_020701B4();
    if (!ReceiptValidation_ctx->main_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->main_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_00D10133((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    }
    // Global variables computation
    // Set to 237
    ReceiptValidation_LRGSUIOCSMPO = 237;
    // Set to 155
    ReceiptValidation_QNDRODJENBPS = 155;
    // Set to 510
    ReceiptValidation_ZEFRYEHTKOPT = 510;
    // Set to 452
    ReceiptValidation_AXKDDCPIDUNL = 452;
    // Set to 45
    ReceiptValidation_VTQDTLRTWECH = 45;
    // Set to 388
    ReceiptValidation_PMUZNRINNCPP = 388;
    // Set to 448
    ReceiptValidation_PJIOCTJUWXZF = 448;
    // Set to 258
    ReceiptValidation_EWMOGFDQKGBI = 258;
}
#else
#define ReceiptValidation_GetMainBundle016(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_020701B4(); \
    if (!ReceiptValidation_ctx->main_bundle) { \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->main_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_00D10133((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    } \
    ReceiptValidation_LRGSUIOCSMPO = 237; \
    ReceiptValidation_QNDRODJENBPS = 155; \
    ReceiptValidation_ZEFRYEHTKOPT = 510; \
    ReceiptValidation_AXKDDCPIDUNL = 452; \
    ReceiptValidation_VTQDTLRTWECH = 45; \
    ReceiptValidation_PMUZNRINNCPP = 388; \
    ReceiptValidation_PJIOCTJUWXZF = 448; \
    ReceiptValidation_EWMOGFDQKGBI = 258; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt019(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    volatile int ReceiptValidation_code = 135; ReceiptValidation_code -= 78; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_PJIOCTJUWXZF_020701C0((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[140]), 80, 37);
    ReceiptValidation_url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_0074021A(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_url1);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_QNDRODJENBPS_0074009B(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_VTQDTLRTWECH_00D1002D(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_02550252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_02070209(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0074017E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_EWMOGFDQKGBI_00D10102(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_ZEFRYEHTKOPT_020701FE(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00740033(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // Set to 44
    ReceiptValidation_LRGSUIOCSMPO = 44;
    // From 155 to 336
    ReceiptValidation_QNDRODJENBPS -= 71; ReceiptValidation_QNDRODJENBPS *= 4; 
    // From 452 to 335
    ReceiptValidation_AXKDDCPIDUNL += 218; ReceiptValidation_AXKDDCPIDUNL /= 2; 
    // From 45 to 360
    ReceiptValidation_VTQDTLRTWECH -= 9; ReceiptValidation_VTQDTLRTWECH *= 10; 
    // From 388 to 36
    ReceiptValidation_PMUZNRINNCPP += 44; ReceiptValidation_PMUZNRINNCPP /= 12; 
    // From 448 to 207
    ReceiptValidation_PJIOCTJUWXZF += 380; ReceiptValidation_PJIOCTJUWXZF /= 4; 
ReceiptValidation_LoadReceipt019_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00740033(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt019(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    volatile int ReceiptValidation_code = 135; ReceiptValidation_code -= 78; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_PJIOCTJUWXZF_020701C0((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[140]), 80, 37); \
    ReceiptValidation_url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_0074021A(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_url1); \
    ReceiptValidation_stream = ReceiptValidation_QNDRODJENBPS_0074009B(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_VTQDTLRTWECH_00D1002D(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_02550252(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_02070209(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0074017E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_EWMOGFDQKGBI_00D10102(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_ZEFRYEHTKOPT_020701FE(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00740033(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_LRGSUIOCSMPO = 44; \
    ReceiptValidation_QNDRODJENBPS -= 71; ReceiptValidation_QNDRODJENBPS *= 4;  \
    ReceiptValidation_AXKDDCPIDUNL += 218; ReceiptValidation_AXKDDCPIDUNL /= 2;  \
    ReceiptValidation_VTQDTLRTWECH -= 9; ReceiptValidation_VTQDTLRTWECH *= 10;  \
    ReceiptValidation_PMUZNRINNCPP += 44; ReceiptValidation_PMUZNRINNCPP /= 12;  \
    ReceiptValidation_PJIOCTJUWXZF += 380; ReceiptValidation_PJIOCTJUWXZF /= 4;  \
ReceiptValidation_LoadReceipt019_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00740033(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt019(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 17; ReceiptValidation_code -= 3; ReceiptValidation_code *= 12; ReceiptValidation_code += 5; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[238]), 35, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_PMUZNRINNCPP_00740184(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_025501B0(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[422])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[186])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_025501B0(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_LRGSUIOCSMPO_020700ED(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[96])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[186])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_QNDRODJENBPS_0074009B(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_VTQDTLRTWECH_00D1002D(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_025501B0(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1);
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_00D10109(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00D10127(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_EWMOGFDQKGBI_00D10102(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_ZEFRYEHTKOPT_020701FE(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // Set to 44
    ReceiptValidation_LRGSUIOCSMPO = 44;
    // From 155 to 336
    ReceiptValidation_QNDRODJENBPS -= 71; ReceiptValidation_QNDRODJENBPS *= 4; 
    // From 452 to 335
    ReceiptValidation_AXKDDCPIDUNL += 218; ReceiptValidation_AXKDDCPIDUNL /= 2; 
    // From 45 to 360
    ReceiptValidation_VTQDTLRTWECH -= 9; ReceiptValidation_VTQDTLRTWECH *= 10; 
    // From 388 to 36
    ReceiptValidation_PMUZNRINNCPP += 44; ReceiptValidation_PMUZNRINNCPP /= 12; 
    // From 448 to 207
    ReceiptValidation_PJIOCTJUWXZF += 380; ReceiptValidation_PJIOCTJUWXZF /= 4; 
ReceiptValidation_LoadReceipt019_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00740242(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt019(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 17; ReceiptValidation_code -= 3; ReceiptValidation_code *= 12; ReceiptValidation_code += 5;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[238]), 35, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_PMUZNRINNCPP_00740184(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_025501B0(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[422])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[186])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_025501B0(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_LRGSUIOCSMPO_020700ED(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[96])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[186])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_QNDRODJENBPS_0074009B(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_VTQDTLRTWECH_00D1002D(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_025501B0(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1); \
        goto ReceiptValidation_LoadReceipt019_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_00D10109(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00D10127(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_EWMOGFDQKGBI_00D10102(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_ZEFRYEHTKOPT_020701FE(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_LRGSUIOCSMPO = 44; \
    ReceiptValidation_QNDRODJENBPS -= 71; ReceiptValidation_QNDRODJENBPS *= 4;  \
    ReceiptValidation_AXKDDCPIDUNL += 218; ReceiptValidation_AXKDDCPIDUNL /= 2;  \
    ReceiptValidation_VTQDTLRTWECH -= 9; ReceiptValidation_VTQDTLRTWECH *= 10;  \
    ReceiptValidation_PMUZNRINNCPP += 44; ReceiptValidation_PMUZNRINNCPP /= 12;  \
    ReceiptValidation_PJIOCTJUWXZF += 380; ReceiptValidation_PJIOCTJUWXZF /= 4;  \
ReceiptValidation_LoadReceipt019_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00740242(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_00740242(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00740242(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#ifdef DEBUG
inline static void ReceiptValidation_GetGUID046(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[21]), 48, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_PJIOCTJUWXZF_009600CF(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[144]), ReceiptValidation_str1_, 134, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_LRGSUIOCSMPO_002F002C(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_AXKDDCPIDUNL_002F014F(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_QNDRODJENBPS_002F0150(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_PMUZNRINNCPP_00960024(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_002F0168(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_service);
    }
    // Global variables computation
    // From 44 to 554
    ReceiptValidation_LRGSUIOCSMPO -= 5; ReceiptValidation_LRGSUIOCSMPO *= 14; ReceiptValidation_LRGSUIOCSMPO += 8; 
    // From 336 to 446
    ReceiptValidation_QNDRODJENBPS -= 188; ReceiptValidation_QNDRODJENBPS *= 3; ReceiptValidation_QNDRODJENBPS += 2; 
    // From 510 to 327
    ReceiptValidation_ZEFRYEHTKOPT += 471; ReceiptValidation_ZEFRYEHTKOPT /= 3; 
    // From 335 to 479
    ReceiptValidation_AXKDDCPIDUNL -= 176; ReceiptValidation_AXKDDCPIDUNL *= 3; ReceiptValidation_AXKDDCPIDUNL += 2; 
    // From 360 to 78
    ReceiptValidation_VTQDTLRTWECH += 108; ReceiptValidation_VTQDTLRTWECH /= 6; 
    // From 36 to 134
    ReceiptValidation_PMUZNRINNCPP -= 10; ReceiptValidation_PMUZNRINNCPP *= 5; ReceiptValidation_PMUZNRINNCPP += 4; 
    // From 207 to 297
    ReceiptValidation_PJIOCTJUWXZF -= 108; ReceiptValidation_PJIOCTJUWXZF *= 3; 
    // From 258 to 164
    ReceiptValidation_EWMOGFDQKGBI += 234; ReceiptValidation_EWMOGFDQKGBI /= 3; 
ReceiptValidation_GetGUID046_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID046(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[21]), 48, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_PJIOCTJUWXZF_009600CF(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[144]), ReceiptValidation_str1_, 134, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_LRGSUIOCSMPO_002F002C(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_AXKDDCPIDUNL_002F014F(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_QNDRODJENBPS_002F0150(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_PMUZNRINNCPP_00960024(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00740242(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_002F0168(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_002F00CE(ReceiptValidation_service); \
    } \
    ReceiptValidation_LRGSUIOCSMPO -= 5; ReceiptValidation_LRGSUIOCSMPO *= 14; ReceiptValidation_LRGSUIOCSMPO += 8;  \
    ReceiptValidation_QNDRODJENBPS -= 188; ReceiptValidation_QNDRODJENBPS *= 3; ReceiptValidation_QNDRODJENBPS += 2;  \
    ReceiptValidation_ZEFRYEHTKOPT += 471; ReceiptValidation_ZEFRYEHTKOPT /= 3;  \
    ReceiptValidation_AXKDDCPIDUNL -= 176; ReceiptValidation_AXKDDCPIDUNL *= 3; ReceiptValidation_AXKDDCPIDUNL += 2;  \
    ReceiptValidation_VTQDTLRTWECH += 108; ReceiptValidation_VTQDTLRTWECH /= 6;  \
    ReceiptValidation_PMUZNRINNCPP -= 10; ReceiptValidation_PMUZNRINNCPP *= 5; ReceiptValidation_PMUZNRINNCPP += 4;  \
    ReceiptValidation_PJIOCTJUWXZF -= 108; ReceiptValidation_PJIOCTJUWXZF *= 3;  \
    ReceiptValidation_EWMOGFDQKGBI += 234; ReceiptValidation_EWMOGFDQKGBI /= 3;  \
ReceiptValidation_GetGUID046_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00740242(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[504]), ReceiptValidation_str1_, 137, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_PJIOCTJUWXZF_00210129(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = ReceiptValidation_LRGSUIOCSMPO_00D1022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00D1005C);
    ReceiptValidation_AXKDDCPIDUNL_007401DF((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[135]), 120, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0180019B;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_018000A8;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_002100A9;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_002101C8;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00C10124;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00C10190;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_0021010A;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_ZEFRYEHTKOPT_01800147(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_VTQDTLRTWECH_0207004E((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_EWMOGFDQKGBI_00D100A4((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_SecCertificateCopyData_0180022D(ReceiptValidation_certificate);
    }
    // Global variables computation
    // Set to 420
    ReceiptValidation_ZEFRYEHTKOPT = 420;
    // From 134 to 19
    ReceiptValidation_PMUZNRINNCPP += 37; ReceiptValidation_PMUZNRINNCPP /= 9; 
    // From 164 to 208
    ReceiptValidation_EWMOGFDQKGBI -= 95; ReceiptValidation_EWMOGFDQKGBI *= 3; ReceiptValidation_EWMOGFDQKGBI += 1; 
ReceiptValidation_GetRootCA051_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA051(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[504]), ReceiptValidation_str1_, 137, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_PJIOCTJUWXZF_00210129(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = ReceiptValidation_LRGSUIOCSMPO_00D1022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00D1005C); \
    ReceiptValidation_AXKDDCPIDUNL_007401DF((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[135]), 120, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0180019B; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_018000A8; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_002100A9; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_002101C8; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00C10124; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00C10190; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_0021010A; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
    ReceiptValidation_status = ReceiptValidation_ZEFRYEHTKOPT_01800147(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_VTQDTLRTWECH_0207004E((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_EWMOGFDQKGBI_00D100A4((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_SecCertificateCopyData_0180022D(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_ZEFRYEHTKOPT = 420; \
    ReceiptValidation_PMUZNRINNCPP += 37; ReceiptValidation_PMUZNRINNCPP /= 9;  \
    ReceiptValidation_EWMOGFDQKGBI -= 95; ReceiptValidation_EWMOGFDQKGBI *= 3; ReceiptValidation_EWMOGFDQKGBI += 1;  \
ReceiptValidation_GetRootCA051_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D10033(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    volatile CFIndex ReceiptValidation_count3 = 6; ReceiptValidation_count3 -= 3; ReceiptValidation_count3 *= 4; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[504]), ReceiptValidation_str1_, 137, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_PJIOCTJUWXZF_00210129(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = ReceiptValidation_LRGSUIOCSMPO_00D1022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0207005C);
    ReceiptValidation_AXKDDCPIDUNL_007401DF((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[608];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[300]), ReceiptValidation_str2_, 121, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_PMUZNRINNCPP_00210086(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_SecKeychainSearchCopyNext_00210137(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_02070045(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00C1022D((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // Set to 420
    ReceiptValidation_ZEFRYEHTKOPT = 420;
    // From 134 to 19
    ReceiptValidation_PMUZNRINNCPP += 37; ReceiptValidation_PMUZNRINNCPP /= 9; 
    // From 164 to 208
    ReceiptValidation_EWMOGFDQKGBI -= 95; ReceiptValidation_EWMOGFDQKGBI *= 3; ReceiptValidation_EWMOGFDQKGBI += 1; 
ReceiptValidation_GetRootCA051_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_02070045(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_02070045(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_02070045(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_02070045(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA051(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    volatile CFIndex ReceiptValidation_count3 = 6; ReceiptValidation_count3 -= 3; ReceiptValidation_count3 *= 4; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[504]), ReceiptValidation_str1_, 137, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_PJIOCTJUWXZF_00210129(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = ReceiptValidation_LRGSUIOCSMPO_00D1022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0207005C); \
    ReceiptValidation_AXKDDCPIDUNL_007401DF((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
    char ReceiptValidation_str2_[608]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[300]), ReceiptValidation_str2_, 121, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_PMUZNRINNCPP_00210086(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_SecKeychainSearchCopyNext_00210137(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_02070045(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00C1022D((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_ZEFRYEHTKOPT = 420; \
    ReceiptValidation_PMUZNRINNCPP += 37; ReceiptValidation_PMUZNRINNCPP /= 9;  \
    ReceiptValidation_EWMOGFDQKGBI -= 95; ReceiptValidation_EWMOGFDQKGBI *= 3; ReceiptValidation_EWMOGFDQKGBI += 1;  \
ReceiptValidation_GetRootCA051_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_02070045(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_02070045(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_02070045(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_02070045(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[55]), 234, 19);
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_PMUZNRINNCPP_00740013((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_ZEFRYEHTKOPT_00D101A4(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_0255008B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1);
    }
    ReceiptValidation_CFRelease_00740045(ReceiptValidation_str2);
    // Global variables computation
    // From 446 to 290
    ReceiptValidation_QNDRODJENBPS += 424; ReceiptValidation_QNDRODJENBPS /= 3; 
    // From 420 to 505
    ReceiptValidation_ZEFRYEHTKOPT -= 252; ReceiptValidation_ZEFRYEHTKOPT *= 3; ReceiptValidation_ZEFRYEHTKOPT += 1; 
    ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[55]), 234, 19); \
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_PMUZNRINNCPP_00740013((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_ZEFRYEHTKOPT_00D101A4(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_0255008B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1); \
    } \
    ReceiptValidation_CFRelease_00740045(ReceiptValidation_str2); \
    ReceiptValidation_QNDRODJENBPS += 424; ReceiptValidation_QNDRODJENBPS /= 3;  \
    ReceiptValidation_ZEFRYEHTKOPT -= 252; ReceiptValidation_ZEFRYEHTKOPT *= 3; ReceiptValidation_ZEFRYEHTKOPT += 1;  \
    ReceiptValidation_CFRelease_00740045(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleVersion060(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    volatile int ReceiptValidation_code = 45; ReceiptValidation_code -= 11; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[464]), 68, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[490]), 209, 35);
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_QNDRODJENBPS_00740122((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_ZEFRYEHTKOPT_020701F9(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 554 to 128
    ReceiptValidation_LRGSUIOCSMPO += 214; ReceiptValidation_LRGSUIOCSMPO /= 6; 
    // From 290 to 251
    ReceiptValidation_QNDRODJENBPS += 212; ReceiptValidation_QNDRODJENBPS /= 2; 
    // From 505 to 480
    ReceiptValidation_ZEFRYEHTKOPT += 455; ReceiptValidation_ZEFRYEHTKOPT /= 2; 
    // From 479 to 103
    ReceiptValidation_AXKDDCPIDUNL += 139; ReceiptValidation_AXKDDCPIDUNL /= 6; 
    // From 78 to 240
    ReceiptValidation_VTQDTLRTWECH -= 30; ReceiptValidation_VTQDTLRTWECH *= 5; 
    // From 19 to 536
    ReceiptValidation_PMUZNRINNCPP -= 2; ReceiptValidation_PMUZNRINNCPP *= 30; ReceiptValidation_PMUZNRINNCPP += 26; 
    // From 297 to 554
    ReceiptValidation_PJIOCTJUWXZF -= 113; ReceiptValidation_PJIOCTJUWXZF *= 3; ReceiptValidation_PJIOCTJUWXZF += 2; 
    // From 208 to 446
    ReceiptValidation_EWMOGFDQKGBI -= 97; ReceiptValidation_EWMOGFDQKGBI *= 4; ReceiptValidation_EWMOGFDQKGBI += 2; 
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion060(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    volatile int ReceiptValidation_code = 45; ReceiptValidation_code -= 11; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[464]), 68, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[490]), 209, 35); \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_QNDRODJENBPS_00740122((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_ZEFRYEHTKOPT_020701F9(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
    } \
    ReceiptValidation_LRGSUIOCSMPO += 214; ReceiptValidation_LRGSUIOCSMPO /= 6;  \
    ReceiptValidation_QNDRODJENBPS += 212; ReceiptValidation_QNDRODJENBPS /= 2;  \
    ReceiptValidation_ZEFRYEHTKOPT += 455; ReceiptValidation_ZEFRYEHTKOPT /= 2;  \
    ReceiptValidation_AXKDDCPIDUNL += 139; ReceiptValidation_AXKDDCPIDUNL /= 6;  \
    ReceiptValidation_VTQDTLRTWECH -= 30; ReceiptValidation_VTQDTLRTWECH *= 5;  \
    ReceiptValidation_PMUZNRINNCPP -= 2; ReceiptValidation_PMUZNRINNCPP *= 30; ReceiptValidation_PMUZNRINNCPP += 26;  \
    ReceiptValidation_PJIOCTJUWXZF -= 113; ReceiptValidation_PJIOCTJUWXZF *= 3; ReceiptValidation_PJIOCTJUWXZF += 2;  \
    ReceiptValidation_EWMOGFDQKGBI -= 97; ReceiptValidation_EWMOGFDQKGBI *= 4; ReceiptValidation_EWMOGFDQKGBI += 2;  \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#ifdef DEBUG
inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    CFTimeZoneRef ReceiptValidation_tz = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    ASN1_INTEGER *ReceiptValidation_value;
    const unsigned char *ReceiptValidation_seq_end;
    long ReceiptValidation_attr_type;
    long ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 166; ReceiptValidation_code -= 109; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    long ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_022000D9(ReceiptValidation_BIO_s_mem_00760246());
    ReceiptValidation_BIO_write_0076012F(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_007401CB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_00D10222((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00EB000C(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_AXKDDCPIDUNL_00D10067(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[552]), 253, 33);
    ReceiptValidation_CFDateFormatterSetFormat_00D100B2(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1);
    ReceiptValidation_tz = ReceiptValidation_LRGSUIOCSMPO_00D10080(NULL, 0.0);
    ReceiptValidation_ZEFRYEHTKOPT_020701E0(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_02070082, ReceiptValidation_tz);
    ReceiptValidation_CFRelease_00D10242(ReceiptValidation_tz);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_00D10099(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0207011E, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D101FA);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value);
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value);
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[376])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_VTQDTLRTWECH_00D100F0(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[376])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_00D1019D(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value);
                    ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value);
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberLongType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_VTQDTLRTWECH_00D100F0(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_00D10222((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_EWMOGFDQKGBI_020701BE((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_EWMOGFDQKGBI_020701BE((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_PMUZNRINNCPP_00740218((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_PJIOCTJUWXZF_0207022A(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_0074005C);
                ReceiptValidation_CFDictionarySetValue_00740164((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1);
            }
            ReceiptValidation_CFArrayAppendValue_00D101DF((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00D10242(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // From 103 to 459
    ReceiptValidation_AXKDDCPIDUNL -= 27; ReceiptValidation_AXKDDCPIDUNL *= 6; ReceiptValidation_AXKDDCPIDUNL += 3; 
    // From 536 to 546
    ReceiptValidation_PMUZNRINNCPP -= 354; ReceiptValidation_PMUZNRINNCPP *= 3; 
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00EB0199(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0220018A(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00D10242(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    CFTimeZoneRef ReceiptValidation_tz = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    ASN1_INTEGER *ReceiptValidation_value; \
    const unsigned char *ReceiptValidation_seq_end; \
    long ReceiptValidation_attr_type; \
    long ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 166; ReceiptValidation_code -= 109; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    long ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_022000D9(ReceiptValidation_BIO_s_mem_00760246()); \
    ReceiptValidation_BIO_write_0076012F(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_007401CB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_00D10222((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00EB000C(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_AXKDDCPIDUNL_00D10067(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[552]), 253, 33); \
    ReceiptValidation_CFDateFormatterSetFormat_00D100B2(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1); \
    ReceiptValidation_tz = ReceiptValidation_LRGSUIOCSMPO_00D10080(NULL, 0.0); \
    ReceiptValidation_ZEFRYEHTKOPT_020701E0(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_02070082, ReceiptValidation_tz); \
    ReceiptValidation_CFRelease_00D10242(ReceiptValidation_tz); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_00D10099(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0207011E, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D101FA); \
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[376])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_VTQDTLRTWECH_00D100F0(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[376])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_00D1019D(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_02200142(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_01B10252(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00EB0160(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_00EB0048(ReceiptValidation_value); \
                    ReceiptValidation_ASN1_INTEGER_free_0220018D(ReceiptValidation_value); \
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberLongType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_VTQDTLRTWECH_00D100F0(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_00D10222((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_EWMOGFDQKGBI_020701BE((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_EWMOGFDQKGBI_020701BE((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D101F0(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_PMUZNRINNCPP_00740218((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_PJIOCTJUWXZF_0207022A(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_0074005C); \
                ReceiptValidation_CFDictionarySetValue_00740164((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00D10242(ReceiptValidation_value1); \
            } \
            ReceiptValidation_CFArrayAppendValue_00D101DF((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00D10242(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00D10242(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_AXKDDCPIDUNL -= 27; ReceiptValidation_AXKDDCPIDUNL *= 6; ReceiptValidation_AXKDDCPIDUNL += 3;  \
    ReceiptValidation_PMUZNRINNCPP -= 354; ReceiptValidation_PMUZNRINNCPP *= 3;  \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00EB0199(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0220018A(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00D10242(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptSignature06F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str2;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 108; ReceiptValidation_code -= 51; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_007600D9(ReceiptValidation_BIO_s_mem_00EB00B7());
    ReceiptValidation_BIO_write_02200213(ReceiptValidation_bio_p7, (void *) ReceiptValidation_AXKDDCPIDUNL_007401CB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_PMUZNRINNCPP_02070222((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00EB01CC(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_02200174();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_007600D9(ReceiptValidation_BIO_s_mem_00EB00B7());
        ReceiptValidation_BIO_write_02200213(ReceiptValidation_bio_apple, (void *) ReceiptValidation_AXKDDCPIDUNL_007401CB((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_PMUZNRINNCPP_02070222((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00EB0152(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_00EB0201();
        ReceiptValidation_X509_STORE_add_cert_00EB01A3(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_022000A3(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1863;
        if (ReceiptValidation_verify == 1863) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_022000A3(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1863;
        if (ReceiptValidation_verify != 1863) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_00EB011D((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00760212((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[608];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00EB0136(NULL, NID_commonName, NULL, 0);
        if (ReceiptValidation_status > 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00EB0136(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608);
        if (ReceiptValidation_status <= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 16; ReceiptValidation_digest_length -= 10; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2; 
        char ReceiptValidation_str2_[608];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[197]), ReceiptValidation_str2_, 53, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00EB00DC(ReceiptValidation_str2);
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_00760016(NULL, NULL, NULL, &ReceiptValidation_len) * 1863;
        if (ReceiptValidation_status == 1863 || ReceiptValidation_len > 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_00760016(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1863;
        if (ReceiptValidation_status != 1863 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_022C008B(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[608];
        volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[608];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[234]), ReceiptValidation_str3_, 37, 68);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[300]), ReceiptValidation_str1_, 121, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[528])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[528])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 1863;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 1863) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[608];
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[331]), ReceiptValidation_str4_, 32, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00EB0236(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00EB000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_00EB00DB(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[608];
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[331]), ReceiptValidation_str5_, 32, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_00EB01DB(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_00EB011D((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00760212((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00EB0236(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00EB000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_00EB00DB(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 128 to 505
    ReceiptValidation_LRGSUIOCSMPO -= 27; ReceiptValidation_LRGSUIOCSMPO *= 5; 
    // From 251 to 185
    ReceiptValidation_QNDRODJENBPS += 119; ReceiptValidation_QNDRODJENBPS /= 2; 
    // From 459 to 536
    ReceiptValidation_AXKDDCPIDUNL -= 281; ReceiptValidation_AXKDDCPIDUNL *= 3; ReceiptValidation_AXKDDCPIDUNL += 2; 
ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_007601E2(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_02200199(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_0220019C(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_007601E2(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_00EB000F(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature06F(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str2; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 108; ReceiptValidation_code -= 51; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_007600D9(ReceiptValidation_BIO_s_mem_00EB00B7()); \
    ReceiptValidation_BIO_write_02200213(ReceiptValidation_bio_p7, (void *) ReceiptValidation_AXKDDCPIDUNL_007401CB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_PMUZNRINNCPP_02070222((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00EB01CC(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_02200174(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_007600D9(ReceiptValidation_BIO_s_mem_00EB00B7()); \
        ReceiptValidation_BIO_write_02200213(ReceiptValidation_bio_apple, (void *) ReceiptValidation_AXKDDCPIDUNL_007401CB((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_PMUZNRINNCPP_02070222((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00EB0152(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_00EB0201(); \
        ReceiptValidation_X509_STORE_add_cert_00EB01A3(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_022000A3(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1863; \
        if (ReceiptValidation_verify == 1863) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_022000A3(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1863; \
        if (ReceiptValidation_verify != 1863) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_00EB011D((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00760212((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[608]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00EB0136(NULL, NID_commonName, NULL, 0); \
        if (ReceiptValidation_status > 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00EB0136(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608); \
        if (ReceiptValidation_status <= 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 16; ReceiptValidation_digest_length -= 10; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
        char ReceiptValidation_str2_[608]; \
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[197]), ReceiptValidation_str2_, 53, 16); \
        ReceiptValidation_str2 = ReceiptValidation_str2_; \
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00EB00DC(ReceiptValidation_str2); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_00760016(NULL, NULL, NULL, &ReceiptValidation_len) * 1863; \
        if (ReceiptValidation_status == 1863 || ReceiptValidation_len > 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_00760016(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1863; \
        if (ReceiptValidation_status != 1863 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[608]; \
        volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[608]; \
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[234]), ReceiptValidation_str3_, 37, 68); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[608]; \
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[300]), ReceiptValidation_str1_, 121, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[528])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[528])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 1863; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 1863) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[608]; \
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[331]), ReceiptValidation_str4_, 32, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00EB0236(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00EB000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_00EB00DB(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[608]; \
    ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[331]), ReceiptValidation_str5_, 32, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_00EB01DB(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_00EB011D((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00760212((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00EB0236(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00EB000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_00EB00DB(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_LRGSUIOCSMPO -= 27; ReceiptValidation_LRGSUIOCSMPO *= 5;  \
    ReceiptValidation_QNDRODJENBPS += 119; ReceiptValidation_QNDRODJENBPS /= 2;  \
    ReceiptValidation_AXKDDCPIDUNL -= 281; ReceiptValidation_AXKDDCPIDUNL *= 3; ReceiptValidation_AXKDDCPIDUNL += 2;  \
ReceiptValidation_CheckReceiptSignature06F_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_007601E2(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_02200199(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_0220019C(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_007601E2(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_00EB000F(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    volatile int ReceiptValidation_code = 120; ReceiptValidation_code -= 63; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_QNDRODJENBPS_020700B9(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AXKDDCPIDUNL_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
    if (ReceiptValidation_LRGSUIOCSMPO_020701F9(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_01B101B0(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 505 to 536
    ReceiptValidation_LRGSUIOCSMPO -= 327; ReceiptValidation_LRGSUIOCSMPO *= 3; ReceiptValidation_LRGSUIOCSMPO += 2; 
    // From 480 to 498
    ReceiptValidation_ZEFRYEHTKOPT -= 314; ReceiptValidation_ZEFRYEHTKOPT *= 3; 
    // From 546 to 496
    ReceiptValidation_PMUZNRINNCPP += 446; ReceiptValidation_PMUZNRINNCPP /= 2; 
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    volatile int ReceiptValidation_code = 120; ReceiptValidation_code -= 63; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_QNDRODJENBPS_020700B9(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AXKDDCPIDUNL_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
    if (ReceiptValidation_LRGSUIOCSMPO_020701F9(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_01B101B0(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
    } \
    ReceiptValidation_LRGSUIOCSMPO -= 327; ReceiptValidation_LRGSUIOCSMPO *= 3; ReceiptValidation_LRGSUIOCSMPO += 2;  \
    ReceiptValidation_ZEFRYEHTKOPT -= 314; ReceiptValidation_ZEFRYEHTKOPT *= 3;  \
    ReceiptValidation_PMUZNRINNCPP += 446; ReceiptValidation_PMUZNRINNCPP /= 2;  \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    CFNumberRef ReceiptValidation_key = ReceiptValidation_QNDRODJENBPS_020700B9(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AXKDDCPIDUNL_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key);
    if (ReceiptValidation_LRGSUIOCSMPO_020701F9(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // From 505 to 536
    ReceiptValidation_LRGSUIOCSMPO -= 327; ReceiptValidation_LRGSUIOCSMPO *= 3; ReceiptValidation_LRGSUIOCSMPO += 2; 
    // From 480 to 498
    ReceiptValidation_ZEFRYEHTKOPT -= 314; ReceiptValidation_ZEFRYEHTKOPT *= 3; 
    // From 546 to 496
    ReceiptValidation_PMUZNRINNCPP += 446; ReceiptValidation_PMUZNRINNCPP /= 2; 
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_QNDRODJENBPS_020700B9(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AXKDDCPIDUNL_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key); \
    if (ReceiptValidation_LRGSUIOCSMPO_020701F9(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_LRGSUIOCSMPO -= 327; ReceiptValidation_LRGSUIOCSMPO *= 3; ReceiptValidation_LRGSUIOCSMPO += 2;  \
    ReceiptValidation_ZEFRYEHTKOPT -= 314; ReceiptValidation_ZEFRYEHTKOPT *= 3;  \
    ReceiptValidation_PMUZNRINNCPP += 446; ReceiptValidation_PMUZNRINNCPP /= 2;  \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    volatile int ReceiptValidation_code = 145; ReceiptValidation_code -= 88; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[491]), 196, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PMUZNRINNCPP_020701F0(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_LRGSUIOCSMPO_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
    if (ReceiptValidation_ZEFRYEHTKOPT_007401F2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C0252(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 536 to 363
    ReceiptValidation_LRGSUIOCSMPO += 190; ReceiptValidation_LRGSUIOCSMPO /= 2; 
    // From 185 to 529
    ReceiptValidation_QNDRODJENBPS -= 53; ReceiptValidation_QNDRODJENBPS *= 4; ReceiptValidation_QNDRODJENBPS += 1; 
    // From 498 to 278
    ReceiptValidation_ZEFRYEHTKOPT += 336; ReceiptValidation_ZEFRYEHTKOPT /= 3; 
    // Set to 175
    ReceiptValidation_AXKDDCPIDUNL = 175;
    // From 240 to 536
    ReceiptValidation_VTQDTLRTWECH -= 106; ReceiptValidation_VTQDTLRTWECH *= 4; 
    // From 496 to 123
    ReceiptValidation_PMUZNRINNCPP += 242; ReceiptValidation_PMUZNRINNCPP /= 6; 
    // From 554 to 451
    ReceiptValidation_PJIOCTJUWXZF += 348; ReceiptValidation_PJIOCTJUWXZF /= 2; 
    // From 446 to 258
    ReceiptValidation_EWMOGFDQKGBI += 328; ReceiptValidation_EWMOGFDQKGBI /= 3; 
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    volatile int ReceiptValidation_code = 145; ReceiptValidation_code -= 88; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[491]), 196, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PMUZNRINNCPP_020701F0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_LRGSUIOCSMPO_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
    if (ReceiptValidation_ZEFRYEHTKOPT_007401F2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C0252(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
    } \
    ReceiptValidation_LRGSUIOCSMPO += 190; ReceiptValidation_LRGSUIOCSMPO /= 2;  \
    ReceiptValidation_QNDRODJENBPS -= 53; ReceiptValidation_QNDRODJENBPS *= 4; ReceiptValidation_QNDRODJENBPS += 1;  \
    ReceiptValidation_ZEFRYEHTKOPT += 336; ReceiptValidation_ZEFRYEHTKOPT /= 3;  \
    ReceiptValidation_AXKDDCPIDUNL = 175; \
    ReceiptValidation_VTQDTLRTWECH -= 106; ReceiptValidation_VTQDTLRTWECH *= 4;  \
    ReceiptValidation_PMUZNRINNCPP += 242; ReceiptValidation_PMUZNRINNCPP /= 6;  \
    ReceiptValidation_PJIOCTJUWXZF += 348; ReceiptValidation_PJIOCTJUWXZF /= 2;  \
    ReceiptValidation_EWMOGFDQKGBI += 328; ReceiptValidation_EWMOGFDQKGBI /= 3;  \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[182]), 171, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PMUZNRINNCPP_020701F0(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_LRGSUIOCSMPO_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key);
    if (ReceiptValidation_ZEFRYEHTKOPT_007401F2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // From 536 to 363
    ReceiptValidation_LRGSUIOCSMPO += 190; ReceiptValidation_LRGSUIOCSMPO /= 2; 
    // From 185 to 529
    ReceiptValidation_QNDRODJENBPS -= 53; ReceiptValidation_QNDRODJENBPS *= 4; ReceiptValidation_QNDRODJENBPS += 1; 
    // From 498 to 278
    ReceiptValidation_ZEFRYEHTKOPT += 336; ReceiptValidation_ZEFRYEHTKOPT /= 3; 
    // Set to 175
    ReceiptValidation_AXKDDCPIDUNL = 175;
    // From 240 to 536
    ReceiptValidation_VTQDTLRTWECH -= 106; ReceiptValidation_VTQDTLRTWECH *= 4; 
    // From 496 to 123
    ReceiptValidation_PMUZNRINNCPP += 242; ReceiptValidation_PMUZNRINNCPP /= 6; 
    // From 554 to 451
    ReceiptValidation_PJIOCTJUWXZF += 348; ReceiptValidation_PJIOCTJUWXZF /= 2; 
    // From 446 to 258
    ReceiptValidation_EWMOGFDQKGBI += 328; ReceiptValidation_EWMOGFDQKGBI /= 3; 
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[182]), 171, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PMUZNRINNCPP_020701F0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_LRGSUIOCSMPO_00740218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key); \
    if (ReceiptValidation_ZEFRYEHTKOPT_007401F2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_LRGSUIOCSMPO += 190; ReceiptValidation_LRGSUIOCSMPO /= 2;  \
    ReceiptValidation_QNDRODJENBPS -= 53; ReceiptValidation_QNDRODJENBPS *= 4; ReceiptValidation_QNDRODJENBPS += 1;  \
    ReceiptValidation_ZEFRYEHTKOPT += 336; ReceiptValidation_ZEFRYEHTKOPT /= 3;  \
    ReceiptValidation_AXKDDCPIDUNL = 175; \
    ReceiptValidation_VTQDTLRTWECH -= 106; ReceiptValidation_VTQDTLRTWECH *= 4;  \
    ReceiptValidation_PMUZNRINNCPP += 242; ReceiptValidation_PMUZNRINNCPP /= 6;  \
    ReceiptValidation_PJIOCTJUWXZF += 348; ReceiptValidation_PJIOCTJUWXZF /= 2;  \
    ReceiptValidation_EWMOGFDQKGBI += 328; ReceiptValidation_EWMOGFDQKGBI /= 3;  \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptHash082(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[608];
    volatile int ReceiptValidation_counter = 5; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 6; ReceiptValidation_counter += 2; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00D10109(NULL, 0);
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_LRGSUIOCSMPO_00D1016B((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data1), ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data1));
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data2), ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data2));
    ReceiptValidation_QNDRODJENBPS_02550211(ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data4), ReceiptValidation_digest);
    SHA_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_SHA1_Init_022001DC(&ReceiptValidation_hashctx2);
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data1), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data1));
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data2), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data2));
    ReceiptValidation_SHA1_Final_007601B6(ReceiptValidation_digest, &ReceiptValidation_hashctx2);
    volatile int ReceiptValidation_code = 141; ReceiptValidation_code -= 84; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest;
    const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data3);
    while(--ReceiptValidation_counter >= 0) {
        if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_01B101B0(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4);
            goto ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail;
        }
    }
    // Global variables computation
    // From 363 to 390
    ReceiptValidation_LRGSUIOCSMPO -= 233; ReceiptValidation_LRGSUIOCSMPO *= 3; 
    // From 278 to 171
    ReceiptValidation_ZEFRYEHTKOPT += 235; ReceiptValidation_ZEFRYEHTKOPT /= 3; 
    // From 536 to 68
    ReceiptValidation_VTQDTLRTWECH += 76; ReceiptValidation_VTQDTLRTWECH /= 9; 
    // From 451 to 185
    ReceiptValidation_PJIOCTJUWXZF += 289; ReceiptValidation_PJIOCTJUWXZF /= 4; 
    // From 258 to 125
    ReceiptValidation_EWMOGFDQKGBI += 242; ReceiptValidation_EWMOGFDQKGBI /= 4; 
ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash082(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[608]; \
    volatile int ReceiptValidation_counter = 5; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 6; ReceiptValidation_counter += 2;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_007401F0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_VTQDTLRTWECH_00D10218((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00D10109(NULL, 0); \
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_LRGSUIOCSMPO_00D1016B((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data1), ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data1)); \
    ReceiptValidation_EWMOGFDQKGBI_02070102(ReceiptValidation_data4, ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data2), ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data2)); \
    ReceiptValidation_QNDRODJENBPS_02550211(ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data4), ReceiptValidation_digest); \
    SHA_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_SHA1_Init_022001DC(&ReceiptValidation_hashctx2); \
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data1), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data1)); \
    ReceiptValidation_SHA1_Update_00760177(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data2), (size_t) ReceiptValidation_LRGSUIOCSMPO_00D1016B(ReceiptValidation_data2)); \
    ReceiptValidation_SHA1_Final_007601B6(ReceiptValidation_digest, &ReceiptValidation_hashctx2); \
    volatile int ReceiptValidation_code = 141; ReceiptValidation_code -= 84; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest; \
    const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_PMUZNRINNCPP_0074007B(ReceiptValidation_data3); \
    while(--ReceiptValidation_counter >= 0) { \
        if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4); \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_01B101B0(ReceiptValidation_code); \
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data1); \
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data2); \
            ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4); \
            goto ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_LRGSUIOCSMPO -= 233; ReceiptValidation_LRGSUIOCSMPO *= 3;  \
    ReceiptValidation_ZEFRYEHTKOPT += 235; ReceiptValidation_ZEFRYEHTKOPT /= 3;  \
    ReceiptValidation_VTQDTLRTWECH += 76; ReceiptValidation_VTQDTLRTWECH /= 9;  \
    ReceiptValidation_PJIOCTJUWXZF += 289; ReceiptValidation_PJIOCTJUWXZF /= 4;  \
    ReceiptValidation_EWMOGFDQKGBI += 242; ReceiptValidation_EWMOGFDQKGBI /= 4;  \
ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00D10045(ReceiptValidation_data4); \
}
#endif


// CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
    volatile int ReceiptValidation_code = 80; ReceiptValidation_code -= 37; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_VTQDTLRTWECH_02070044(NULL, ReceiptValidation_EWMOGFDQKGBI_00D1007D());
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PJIOCTJUWXZF_007400B9(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_LRGSUIOCSMPO_02070186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
    if (ReceiptValidation_date2 && ReceiptValidation_ZEFRYEHTKOPT_007400AB(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_022C008B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1);
    }
    // Global variables computation
    // From 175 to 93
    ReceiptValidation_AXKDDCPIDUNL += 104; ReceiptValidation_AXKDDCPIDUNL /= 3; 
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1);
}
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
    volatile int ReceiptValidation_code = 80; ReceiptValidation_code -= 37; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_VTQDTLRTWECH_02070044(NULL, ReceiptValidation_EWMOGFDQKGBI_00D1007D()); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PJIOCTJUWXZF_007400B9(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_LRGSUIOCSMPO_02070186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
    if (ReceiptValidation_date2 && ReceiptValidation_ZEFRYEHTKOPT_007400AB(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_022C008B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1); \
    } \
    ReceiptValidation_AXKDDCPIDUNL += 104; ReceiptValidation_AXKDDCPIDUNL /= 3;  \
    ReceiptValidation_CFRelease_00740033(ReceiptValidation_date1); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 93);
#endif

inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_AXKDDCPIDUNL))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_AXKDDCPIDUNL_0014005D((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#ifdef DEBUG
inline static void ReceiptValidation_CleanUp0AB(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    if (ReceiptValidation_ctx->receipt_data) {
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = NULL;
    }
    if (ReceiptValidation_ctx->guid_data) {
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->guid_data);
        ReceiptValidation_ctx->guid_data = NULL;
    }
    if (ReceiptValidation_ctx->receipt_dict) {
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = NULL;
    }
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = NULL;
    }
}
#else
#define ReceiptValidation_CleanUp0AB(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    if (ReceiptValidation_ctx->receipt_data) { \
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_data); \
        ReceiptValidation_ctx->receipt_data = NULL; \
    } \
    if (ReceiptValidation_ctx->guid_data) { \
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->guid_data); \
        ReceiptValidation_ctx->guid_data = NULL; \
    } \
    if (ReceiptValidation_ctx->receipt_dict) { \
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->receipt_dict); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
    } \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_CFRelease_00D10242(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = NULL; \
    } \
}
#endif




// CodeBlock EntryPoint
#ifdef DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = _argc;
    ReceiptValidation_ctx1.argv = (const char **) _argv;
    // Jump to first step
    goto ReceiptValidation_ReceiptValidation_label00;
ReceiptValidation_ReceiptValidation_label02:
    ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label03;
ReceiptValidation_ReceiptValidation_label05:
    ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label06;
ReceiptValidation_ReceiptValidation_label0D:
    ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0E;
ReceiptValidation_ReceiptValidation_label09:
    ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0A;
ReceiptValidation_ReceiptValidation_label0C:
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0D;
ReceiptValidation_ReceiptValidation_label0A:
    ReceiptValidation_CheckReceiptHash082((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0B;
ReceiptValidation_ReceiptValidation_label01:
    ReceiptValidation_LoadReceipt019((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label02;
ReceiptValidation_ReceiptValidation_label07:
    ReceiptValidation_CheckReceiptSignature06F((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label08;
ReceiptValidation_ReceiptValidation_label00:
    ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label01;
ReceiptValidation_ReceiptValidation_label0B:
    ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0C;
ReceiptValidation_ReceiptValidation_label08:
    ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label09;
ReceiptValidation_ReceiptValidation_label03:
    ReceiptValidation_GetRootCA051((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label04;
ReceiptValidation_ReceiptValidation_label06:
    ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label07;
ReceiptValidation_ReceiptValidation_label04:
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label05;
ReceiptValidation_ReceiptValidation_label0E:
    while(false);
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL }; \
    ReceiptValidation_ctx1.argc = _argc; \
    ReceiptValidation_ctx1.argv = (const char **) _argv; \
    goto ReceiptValidation_ReceiptValidation_label00; \
ReceiptValidation_ReceiptValidation_label02: \
    ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label03; \
ReceiptValidation_ReceiptValidation_label05: \
    ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label06; \
ReceiptValidation_ReceiptValidation_label0D: \
    ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0E; \
ReceiptValidation_ReceiptValidation_label09: \
    ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0A; \
ReceiptValidation_ReceiptValidation_label0C: \
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0D; \
ReceiptValidation_ReceiptValidation_label0A: \
    ReceiptValidation_CheckReceiptHash082((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0B; \
ReceiptValidation_ReceiptValidation_label01: \
    ReceiptValidation_LoadReceipt019((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label02; \
ReceiptValidation_ReceiptValidation_label07: \
    ReceiptValidation_CheckReceiptSignature06F((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label08; \
ReceiptValidation_ReceiptValidation_label00: \
    ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label01; \
ReceiptValidation_ReceiptValidation_label0B: \
    ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0C; \
ReceiptValidation_ReceiptValidation_label08: \
    ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label09; \
ReceiptValidation_ReceiptValidation_label03: \
    ReceiptValidation_GetRootCA051((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label04; \
ReceiptValidation_ReceiptValidation_label06: \
    ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label07; \
ReceiptValidation_ReceiptValidation_label04: \
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label05; \
ReceiptValidation_ReceiptValidation_label0E: \
    while(false); \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

