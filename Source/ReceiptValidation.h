//  ____                _                  
// |  _ \ ___  ___  ___(_) __ _  ___ _ ___ 
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_  \ 
// |  _ |  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/ 3.3.5.0
//
// This code was generated by Receigen and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.iccir.Embrace
// CFBundleShortVersionString : 1.0.2
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Set DEBUG to 0 if not defined to avoid semantic warnings
#ifndef DEBUG
    #define DEBUG 0
#endif

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if DEBUG && !RECEIGEN_QUIET_DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(args...)    NSLog(@args)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(args...)    fprintf(stderr, args); fprintf(stderr, "\n")
    #endif
#else
    #define __ReceiptValidation_RECEIPT_LOG(args...)
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 3945,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 1),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 1),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 1),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 1),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 1),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 1),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 1),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 1),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 1),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 1),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 1),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 1),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 1),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 1)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    long argc;
    CFTypeRef dummy0001;
    CFTypeRef dummy0005;
    CFTypeRef dummy000D;
    CFTypeRef dummy0000;
    CFTypeRef dummy000B;
    CFTypeRef dummy0007;
    CFTypeRef guid_data;
    CFTypeRef dummy0008;
    CFTypeRef receipt_dict;
    CFTypeRef dummy0006;
    CFTypeRef receipt_data;
    CFTypeRef dummy000A;
    const char ** argv;
    CFTypeRef ca_data;
    CFTypeRef dummy0003;
    CFTypeRef main_bundle;
    CFTypeRef dummy0004;
    CFTypeRef dummy0009;
    CFTypeRef dummy0002;
    CFTypeRef dummy000E;
    CFTypeRef dummy000C;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0000;
    CFTypeRef dummy0008;
    CFTypeRef dummy0001;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy0007;
    CFTypeRef dummy0002;
    CFTypeRef dummy0009;
    CFTypeRef dummy0006;
    const unsigned char * end;
    CFTypeRef dummy0005;
    CFTypeRef dummy0004;
    CFTypeRef dummy0003;
    const unsigned char * ptr;
    CFTypeRef dictionary;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[573] = {
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(255) / L(50)
    "\xd0\xac\x86\x8c\x8b\x9a\x92\xd0\xb3\x96\x9d\x8d\x9e\x8d\x86\xd0\xb9\x8d\x9e\x92\x9a\x88\x90\x8d\x94\x8c\xd0\xbe\x8f\x8f\xb4\x96\x8b\xd1\x99\x8d\x9e\x92\x9a\x88\x90\x8d\x94\xd0\xbe\x8f\x8f\xb4\x96\x8b\xff",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(247) / L(14)
    "\xb5\xb3\xab\xa3\xb8\xaa\xa6\xae\xa9\xb8\xa8\xa9\xab\xbe\xe7\x8e",
    // "/usr/lib/libSystem.dylib" / M(Rot) / S(21) / L(24)
    "\x44\x8a\x88\x87\x44\x81\x7e\x77\x44\x81\x7e\x77\x68\x8e\x88\x89\x7a\x82\x43\x79\x8e\x81\x7e\x77\x15\x4d\x41\x7a\x09\x98\x8e\xca\xa1",
    // "CC_SHA1_Update" / M(Xor2) / S(247) / L(14)
    "\xa4\xa4\xb8\xb4\xaf\xa6\xd6\xb8\xb2\x97\x83\x86\x93\x82\xe7\x31",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(220) / L(29)
    "\xb7\x9f\x9a\x88\xa5\xac\xb9\x98\xb5\xbf\xa8\xb5\xb3\xb2\xbd\xae\xa5\x97\xb9\xa5\x9f\xbd\xb0\xb0\x9e\xbd\xbf\xb7\xaf\xdc\x7e\xda\xa2\x6b\x1a\x31\xf9\x93",
    // "" / M(None) / S(0) / L(0)
    "\x1a\x07\xc3\x2b\xf5\x6f\x47\x69\x27\x25\xdf\x59\x2a\x67\xcc\xc5\x11\x07\xdf\x43\xed\x67\x19\x5e\xe2\x4d\xa8\xf6\xa7\x3a\x5a\xd7",
    // "" / M(None) / S(0) / L(0)
    "\x82\xb5\x2e\x11\x1e\x4c\xfd\x80\xb0\xb2\x52\xdd\x40\x7a\x15\x96\x21\xb0\x3d\xd1\x83\x36\xd7\x43\x85\x0d\xfc\xe4\x50\xfb\x6b\xa7",
    // "" / M(None) / S(0) / L(0)
    "\x75\x2d\x07\x4d\x27\x52\xb0\x7a\xe5\x2f\x06\x1c\xe4\xe2\x87\x9e\xc7\x9b\xfa\xc3\xe9\x5f\x6b\xda\x40\x01\x0a\xd1\x25\xaa\xcf\x35",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x23\xd7\x24\x96\x32\x0f\x82\xe8\xa2\xd7\xbf\x4d\x78\xd8\xab\xcd\xfa\xda\x7f\xd5\xc0\xd8\x3f\x60\xe3\x76\x02\xbc\x7d\x6b\x62",
    // "X509_STORE_free" / M(Rot) / S(15) / L(15)
    "\x67\x44\x3f\x48\x6e\x62\x63\x5e\x61\x54\x6e\x75\x81\x74\x74\x0f",
    // "IOBSDNameMatching" / M(Rot) / S(56) / L(17)
    "\x81\x87\x7a\x8b\x7c\x86\x99\xa5\x9d\x85\x99\xac\x9b\xa0\xa1\xa6\x9f\x38",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(130) / L(31)
    "\xeb\xed\xf0\xc7\xc5\xcb\xd1\xd6\xd0\xdb\xe7\xcc\xd6\xd0\xdb\xe1\xd0\xc7\xc3\xd6\xc7\xe1\xe4\xf2\xd0\xcd\xd2\xc7\xd0\xd6\xdb\xa2",
    // "" / M(None) / S(0) / L(0)
    "\x46\x63\x44\x24\x95\x0e\xc6\x1c\xcd\xff\xe8\x69\x89\xaa\x02\x00\xa1\x26\x5a\x22\xee\x52\xca\x69\xdd\x73\xdf\x72\x9c\x00\xbc\xcc",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(13) / L(28)
    "\xa2\x8e\x8f\x95\x84\x8f\x95\x92\xce\xbe\xac\xa0\xb2\xb3\x84\x82\x84\x88\x91\x95\xce\x93\x84\x82\x84\x88\x91\x95\xe1\x44\x0e\x9d\x65\xa4\x46\xf0\x4a",
    // "sk_free" / M(Xor4) / S(205) / L(7)
    "\xa3\xbb\x8f\xb6\xa2\xb5\xb5\xd0\xe7\x5e\x73\xcc\x4d\xe4\x64\x08",
    // "ASN1_OBJECT_free" / M(Xor3) / S(205) / L(16)
    "\x9f\x8d\x90\xef\x81\x91\x9c\x94\x9b\x9d\x8a\x81\xb8\xac\xbb\xbb\xde",
    // "PKCS7_verify" / M(Xor1) / S(201) / L(12)
    "\x99\x82\x8a\x9a\xfe\x96\xbf\xac\xbb\xa0\xaf\xb0\xc9\x6f\x01\x30",
    // "_MASReceipt" / M(Xor2) / S(124) / L(11)
    "\x33\x21\x2d\x3f\x3e\x09\x0f\x09\x05\x1c\x18\x6c\x56\xff\x8c\x6b",
    // "CFDataAppendBytes" / M(Xor4) / S(22) / L(17)
    "\xcf\xca\xc8\xed\xf8\xed\xcd\xfc\xfc\xe9\xe2\xe8\xce\xf5\xf8\xe9\xff\x8c",
    // "CC_SHA1_Update" / M(Xor3) / S(221) / L(14)
    "\xae\xae\xb2\xbe\xa5\xac\xdc\xb2\xb8\x9d\x89\x8c\x99\x88\xed\x8d",
    // "CFArrayAppendValue" / M(Xor3) / S(90) / L(18)
    "\x2e\x2b\x2c\x1f\x1f\x0c\x14\x2c\x1d\x1d\x08\x03\x09\x3b\x0c\x01\x18\x08\x6d",
    // "kSecClass" / M(Xor1) / S(157) / L(9)
    "\xf6\xce\xf8\xfe\xde\xf1\xfc\xee\xee\x9d\xa1\x27\xb2\x30\xee\x28",
    // "" / M(None) / S(0) / L(0)
    "\xd4\xd7\xd7\xe3\xee\x2d\xa9\xcc\x59\xb3\x25\xb2\xd2\x85\x75\xf6\x06\x03\x23\x4a\xe0\x6a\xa6\x79\x8f\x6c\x4d\xb1\x20\x98\x73\x00",
    // "" / M(None) / S(0) / L(0)
    "\xa6\x35\x44\xd7\xd8\x7c\x8b\xaa\x20\x57\xff\xa4\x71\x60\xc3\x63\xe4\x72\x24\xeb\xe0\x23\x59\xd3\x31\xa1\x9f\x17\x55\x2c\x41\xae",
    // "" / M(None) / S(0) / L(0)
    "\x93\xce\xb3\x2d\x14\x14\x33\xa2\x1f\xb0\x25\xf5\x89\x83\x20\xbb\x3b\xab\x12\x09\x43\x46\xbf\xf7\xa1\x76\x23\xaa\x67\x76\x76\x7e",
    // "sk_num" / M(Rot) / S(47) / L(6)
    "\xa2\x9a\x8e\x9d\xa4\x9c\x2f\x68\xbc\x70\x11\xd0\x4f\x6b\xe4\xfe",
    // "" / M(None) / S(0) / L(0)
    "\x38\x4e\x7f\x7b\xd6\x3f\x43\x28\x37\x79\xd8\xd7\xe0\x12\x13\x39\x00\x29\xf3\xab\xc4\xca\x38\x15\x95\x64\xae\x98\x3e\xf3\x5e\xf6",
    // "%02X" / M(Xor2) / S(142) / L(4)
    "\xbb\xae\xac\xc6\x9e\x13\xa4\x61\x7d\xb8\x17\x79\xcf\xbb\x2e\xcb",
    // "receipt" / M(Xor3) / S(197) / L(7)
    "\xa7\xb0\xb6\xb0\xbc\xa5\xa1\xd5\xa8\xbf\x90\x31\xdd\x87\xec\x06",
    // "CFEqual" / M(Rot) / S(85) / L(7)
    "\x98\x9b\x9a\xc6\xca\xb6\xc1\x55\xbf\x96\xd8\xd1\xea\x91\x45\x92",
    // "BIO_new" / M(Xor2) / S(170) / L(7)
    "\xf8\xf3\xf5\xe5\xd4\xdf\xcd\xba\x91\xd3\x92\xd5\xbc\xe6\x72\x5a",
    // "" / M(None) / S(0) / L(0)
    "\x78\xab\x1d\xb2\xa3\x0d\xa7\x01\xaa\xe9\x15\x98\x81\xf5\xbf\x8c\xe0\xbf\xfb\xcf\x38\x82\x1f\x41\xd6\xd3\x5e\x23\x9c\x36\x80\x35",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(151) / L(39)
    "\xd4\xd1\xc2\xc5\xdb\xd4\xe5\xf2\xf6\xe3\xf2\xd1\xe5\xf8\xfa\xd1\xfe\xfb\xf2\xc4\xee\xe4\xe3\xf2\xfa\xc5\xf2\xe7\xe5\xf2\xe4\xf2\xf9\xe3\xf6\xe3\xfe\xf8\xf9\x97\xaf\x28\x11\x4f\x9f\x24\x40\x6a",
    // "" / M(None) / S(0) / L(0)
    "\xce\xef\xc1\x48\x91\x1e\x7a\x74\x48\x33\xaf\xf5\x92\xb5\xf5\x54\x8e\xda\x39\x1a\x57\x28\x75\x42\xdc\x2d\xf1\x5b\x7b\x88\x87\x36",
    // "" / M(None) / S(0) / L(0)
    "\xa0\xe2\xe8\x8b\x62\x09\x96\x8c\x31\x21\x95\x1d\x2b\xf7\xcb\x93\xf6\x31\x32\x41\xba\xf7\xae\x98\x4e\xdf\x5f\x05\xbc\x70\xdd\xbc",
    // "CFBundleCopyBundleURL" / M(Rot) / S(250) / L(21)
    "\x3d\x40\x3c\x6f\x68\x5e\x66\x5f\x3d\x69\x6a\x73\x3c\x6f\x68\x5e\x66\x5f\x4f\x4c\x46\xfa",
    // "" / M(None) / S(0) / L(0)
    "\x02\x8e\x5f\x75\x8a\xfd\x88\xfa\xe3\x08\xe8\x15\x6d\x7d\x94\x44\xde\x12\xfb\x76\xcc\x17\x59\xe3\xe0\x5a\x2b\xed\x7f\x98\x03\x36",
    // "start" / M(Rot) / S(79) / L(5)
    "\xc2\xc3\xb0\xc1\xc3\x4f\xa3\x82\x24\xdf\x1a\x14\x48\xf9\xb3\x55",
    // "" / M(None) / S(0) / L(0)
    "\x3d\x8c\x35\x15\x8a\x4e\xff\xb2\x52\x20\x46\x44\x2b\x97\x3f\x6b\xfe\x05\xd9\xce\xf1\x44\xb9\xcb\x51\xd2\x3f\x74\x73\x3a\xfb\x31",
    // "setDelegate:" / M(Xor1) / S(133) / L(12)
    "\xf6\xe0\xf1\xc1\xe0\xe9\xe0\xe2\xe4\xf1\xe0\xbf\x85\x91\xff\x25",
    // "OBJ_txt2obj" / M(Xor3) / S(240) / L(11)
    "\x4f\x42\x4a\x5f\x74\x78\x74\x32\x6f\x62\x6a\x00\x7c\xea\x02\x62",
    // "CFStringCompare" / M(Xor3) / S(71) / L(15)
    "\x14\x11\x04\x23\x25\x3e\x39\x30\x14\x38\x3a\x27\x36\x25\x32\x57",
    // "CFDataGetLength" / M(Xor4) / S(187) / L(15)
    "\xf3\xf6\xf4\xd1\xc4\xd1\xf7\xd5\xc4\xfc\xd5\xde\xd7\xc4\xd8\xb0",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(41) / L(29)
    "\x94\x6c\x6f\x7d\xa2\x99\x8e\x6d\x92\x8c\x9d\x92\x98\x97\x8a\x9b\xa2\x74\x8e\xa2\x6c\x8a\x95\x95\x6b\x8a\x8c\x94\x9c\x29\xd7\x20\x0c\x63\xff\xae\x56\xcb",
    // "d2i_PKCS7_bio" / M(Xor2) / S(219) / L(13)
    "\xaf\xf9\xa2\x94\x9b\x80\x88\x98\xfc\x94\xa9\xa2\xa4\xcb\x2e\x53",
    // "" / M(None) / S(0) / L(0)
    "\xb6\xc7\xcf\x29\x52\xfc\x05\x73\x13\xf6\x9c\xfd\x25\x14\x2a\x14\x09\x59\xad\x0a\x25\xc9\x3a\x0b\xd6\x6d\x45\x61\xfb\x02\xad\xde",
    // "dlopen" / M(Xor3) / S(110) / L(6)
    "\x1a\x12\x11\x0e\x1b\x10\x7e\xdf\xd5\x3a\x40\x5a\x7f\x17\x11\x57",
    // "" / M(None) / S(0) / L(0)
    "\x0d\x4f\xa7\x2d\x71\x2a\x40\xea\xfc\x80\x20\xe6\x1f\xef\x90\x45\xfc\xd1\x2e\x12\x3e\xf9\x84\xd8\xba\x7f\x81\x25\x8b\xda\x32\x28",
    // "BIO_write" / M(Xor4) / S(246) / L(9)
    "\x22\x29\x2f\x3f\x17\x12\x09\x14\x05\x60\x93\x93\x5a\xb6\xcf\xec",
    // "CC_SHA1" / M(Xor1) / S(51) / L(7)
    "\x70\x70\x6c\x60\x7b\x72\x02\x33\x4f\x58\x65\x03\x72\x51\x7f\x9d",
    // "CFDictionaryAddValue" / M(Xor3) / S(81) / L(20)
    "\x25\x20\x22\x0f\x05\x12\x0f\x09\x08\x07\x14\x1f\x27\x02\x02\x30\x07\x0a\x13\x03\x66",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(112) / L(31)
    "\x3b\x13\x16\x04\x29\x20\x35\x14\x39\x33\x24\x39\x3f\x3e\x31\x22\x29\x06\x31\x3c\x25\x35\x13\x31\x3c\x3c\x12\x31\x33\x3b\x23\x50",
    // "" / M(None) / S(0) / L(0)
    "\xfa\x1c\xdd\x3f\xf4\x3a\x84\xc3\x5c\xdb\xdb\x12\x8a\x41\x86\xfe\xb3\xc6\xdf\xd6\x76\xd2\xab\xe4\x55\x8b\x50\x32\x36\x06\x66\x39",
    // "_MASReceipt/receipt" / M(Xor4) / S(196) / L(19)
    "\x0f\x1d\x11\x03\x02\x35\x33\x35\x39\x20\x24\x7f\x22\x35\x33\x35\x39\x20\x24\x50",
    // "." / M(Xor4) / S(53) / L(1)
    "\x7e\x50\x24\x65\x01\xa2\x51\x42\x88\xaf\xa4\x69\x27\x70\x8b\x03",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(142) / L(14)
    "\xb2\xb4\xac\xa4\xbf\xad\xa1\xa9\xae\xbf\xaf\xae\xac\xb9\xe0\x32",
    // "CFStringCreateWithBytes" / M(Xor3) / S(173) / L(23)
    "\x8e\x8b\x9e\xb9\xbf\xa4\xa3\xaa\x8e\xbf\xa8\xac\xb9\xa8\x9a\xa4\xb9\xa5\x8f\xb4\xb9\xa8\xbe\xcd\x12\x1b\xac\x94\xd0\xed\xbd\x1e",
    // "CFDictionarySetValue" / M(Xor3) / S(247) / L(20)
    "\x4f\x4a\x48\x65\x6f\x78\x65\x63\x62\x6d\x7e\x75\x5f\x69\x78\x5a\x6d\x60\x79\x69\x0c",
    // "%02X:" / M(Xor3) / S(137) / L(5)
    "\xbc\xa9\xab\xc1\xa3\x99\x09\xc0\x1b\xd4\x9e\x0d\x7d\xc5\xa7\xa9",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(235) / L(37)
    "\x42\x74\x72\x5a\x74\x68\x72\x79\x70\x78\x7f\x42\x74\x70\x63\x72\x79\x52\x63\x74\x70\x65\x74\x57\x63\x7e\x7c\x50\x65\x65\x63\x78\x73\x64\x65\x74\x62\x11",
    // "" / M(None) / S(0) / L(0)
    "\x24\x44\x0b\x0c\x65\x4f\xbf\xfe\x1e\x68\x32\x67\x83\xb2\x2c\xd5\x2a\xf5\xd4\x59\xa4\x2c\xc2\xc1\xf8\x98\x34\xe8\xd5\x34\x03\x5e",
    // "CFBundleGetIdentifier" / M(Xor4) / S(41) / L(21)
    "\xc5\xc0\xc4\xf3\xe8\xe2\xea\xe3\xc1\xe3\xf2\xcf\xe2\xe3\xe8\xf2\xef\xe0\xef\xe3\xf4\x86",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(2) / L(24)
    "\x6d\x37\x31\x30\x6d\x2e\x2b\x20\x6d\x2e\x2b\x20\x11\x3b\x31\x36\x27\x2f\x6c\x26\x3b\x2e\x2b\x20\x42\xaf\xdf\x4f\x21\x1c\x44\xf2\xb9",
    // "CFDictionarySetValue" / M(Xor4) / S(108) / L(20)
    "\x9f\x9a\x98\xb5\xbf\xa8\xb5\xb3\xb2\xbd\xae\xa5\x8f\xb9\xa8\x8a\xbd\xb0\xa9\xb9\xdc",
    // "ASN1_get_object" / M(Xor1) / S(163) / L(15)
    "\xe2\xf0\xed\x92\xfc\xc4\xc6\xd7\xfc\xcc\xc1\xc9\xc6\xc0\xd7\xa3",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(128) / L(43)
    "\xc3\xc6\xd5\xd2\xcc\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xc6\xe9\xec\xe5\xd3\xf9\xf3\xf4\xe5\xed\xd0\xe1\xf4\xe8\xd2\xe5\xec\xe1\xf4\xe9\xf6\xe5\xd4\xef\xc2\xe1\xf3\xe5\x80\x84\x06\x22\x10\xc7\x8a\x0d\x69",
    // "" / M(None) / S(0) / L(0)
    "\xbd\x72\xdf\x22\xbd\xd4\xd2\xdd\x9b\xe9\x01\x1c\x2e\x7f\x21\x94\x93\xb8\xfd\x4d\x31\x31\x35\xc5\x87\x98\x2c\x42\x91\xea\x2c\x40",
    // "kCFBundleIdentifierKey" / M(Xor2) / S(20) / L(22)
    "\x68\x40\x45\x41\x76\x6d\x67\x6f\x66\x4a\x67\x66\x6d\x77\x6a\x65\x6a\x66\x71\x48\x66\x7a\x03",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x49\x66\x66\x83\xac\xb4\x96\x62\x1c\x5b\x56\xfa\x91\x8b\x32\x10\x9b\xbb\x93\xa3\x19\x32\x7d\xa5\x96\xbc\x57\x50\x25\x29\x05",
    // "CFDictionaryGetValue" / M(Xor1) / S(185) / L(20)
    "\xfa\xff\xfd\xd0\xda\xcd\xd0\xd6\xd7\xd8\xcb\xc0\xfe\xdc\xcd\xef\xd8\xd5\xcc\xdc\xb9",
    // "SecKeychainSearchCopyNext" / M(Xor1) / S(210) / L(25)
    "\x81\xb7\xb1\x99\xb7\xab\xb1\xba\xb3\xbb\xbc\x81\xb7\xb3\xa0\xb1\xba\x91\xbd\xa2\xab\x9c\xb7\xaa\xa6\xd2\xef\xa2\x6b\x99\xd1\x4c\xb1\x5e",
    // "EVP_DigestInit" / M(Xor2) / S(15) / L(14)
    "\x5a\x49\x4f\x40\x5b\x76\x78\x7a\x6c\x6b\x56\x71\x76\x6b\x1f\x44",
    // "" / M(None) / S(0) / L(0)
    "\x87\xe4\xc1\xd7\x84\x90\x08\x60\xa7\x62\x92\x9d\x8d\x1b\x93\x0a\xf3\x96\x85\x3a\x99\x06\x17\xc7\xc2\x81\xa5\xab\x27\x23\x8d\x01",
    // "sel_registerName" / M(Rot) / S(73) / L(16)
    "\xbc\xae\xb5\xa8\xbb\xae\xb0\xb2\xbc\xbd\xae\xbb\x97\xaa\xb6\xae\x49",
    // "alloc" / M(Xor4) / S(191) / L(5)
    "\x91\x9c\x9c\x9f\x93\xf0\xe6\x83\xe7\x02\x8f\x07\x8b\x81\x6f\x9c",
    // "CFStringCompare" / M(Xor3) / S(164) / L(15)
    "\xf7\xf2\xe7\xc0\xc6\xdd\xda\xd3\xf7\xdb\xd9\xc4\xd5\xc6\xd1\xb4",
    // "EVP_DigestFinal" / M(Xor3) / S(141) / L(15)
    "\xd8\xcb\xcd\xc2\xd9\xf4\xfa\xf8\xee\xe9\xdb\xf4\xf3\xfc\xf1\x9d",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(82) / L(48)
    "\x4c\x30\x1a\x10\x17\x06\x0e\x4c\x2f\x0a\x01\x11\x02\x11\x1a\x4c\x25\x11\x02\x0e\x06\x14\x0c\x11\x08\x10\x4c\x2a\x2c\x28\x0a\x17\x4d\x05\x11\x02\x0e\x06\x14\x0c\x11\x08\x4c\x2a\x2c\x28\x0a\x17\x63",
    // "" / M(None) / S(0) / L(0)
    "\x75\xf9\xc3\x5d\x03\x70\x9f\x06\xa8\x24\x0d\x69\x7f\x2b\x65\xdd\xd4\x3a\xb2\xa5\xfd\x05\x77\x85\x6e\xc8\x14\x27\x8c\x98\xc1\xa0",
    // "IOServiceGetMatchingServices" / M(Xor1) / S(6) / L(28)
    "\x4f\x49\x55\x63\x74\x70\x6f\x65\x63\x41\x63\x72\x4b\x67\x72\x65\x6e\x6f\x68\x61\x55\x63\x74\x70\x6f\x65\x63\x75\x06\x34\x71\x49\x2e\x60\x5c\x56\x3a",
    // "com.iccir.Embrace" / M(Xor3) / S(159) / L(17)
    "\xd2\xde\xdc\x9f\xd8\xd2\xd2\xd8\xc3\x9f\xf4\xdc\xd3\xc3\xd0\xd2\xd4\xb1",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(166) / L(32)
    "\xbe\xbe\xbe\xbe\xe0\xea\xe0\x8a\x8a\xe0\xea\xe0\xa3\xa3\xe0\x93\xe0\x8f\x8f\xe0\xfd\xe0\xaa\xaa\xe0\xfd\xe0\xb4\xb4\xe0\x9d\xe0\xc7",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(118) / L(24)
    "\xd4\xd1\xd3\xf6\xe3\xf2\xd1\xf8\xe5\xfa\xf6\xe3\xe3\xf2\xe5\xc4\xf2\xe3\xd1\xf8\xe5\xfa\xf6\xe3\x97\xbd\x25\x33\x57\xd1\xfa\xcd\x27",
    // "CFArrayCreateMutable" / M(Xor4) / S(243) / L(20)
    "\xac\xa9\xae\x9d\x9d\x8e\x96\xac\x9d\x8a\x8e\x9b\x8a\xa2\x9a\x9b\x8e\x8d\x83\x8a\xef",
    // "objc_getClass" / M(Xor4) / S(27) / L(13)
    "\xdf\xd2\xda\xd3\xef\xd7\xd5\xc4\xf3\xdc\xd1\xc3\xc3\xb0\x76\xbe",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(160) / L(29)
    "\x0b\xe3\xe6\xf4\x19\x10\x05\xe4\x09\x03\x14\x09\x0f\x0e\x01\x12\x19\xeb\x05\x19\xe3\x01\x0c\x0c\xe2\x01\x03\x0b\x13\xa0\x9e\xd6\x21\xbc\x1c\x23\xa4\xb1",
    // "CFArrayGetValueAtIndex" / M(Rot) / S(154) / L(22)
    "\xdd\xe0\xdb\x0c\x0c\xfb\x13\xe1\xff\x0e\xf0\xfb\x06\x0f\xff\xdb\x0e\xe3\x08\xfe\xff\x12\x9a",
    // "" / M(None) / S(0) / L(0)
    "\xba\x6e\x8f\x24\x9b\x67\xa4\x15\xc2\x4a\x87\xf4\x08\x11\x50\x3c\x12\xdd\x97\x00\x97\xf5\x3f\xd5\x3f\x55\xcd\xdf\xd4\x37\x62\x92",
    // "ASN1_OBJECT_free" / M(Rot) / S(7) / L(16)
    "\x48\x5a\x55\x38\x66\x56\x49\x51\x4c\x4a\x5b\x66\x6d\x79\x6c\x6c\x07",
    // "CC_SHA1_Update" / M(Xor1) / S(230) / L(14)
    "\xa5\xa5\xb9\xb5\xae\xa7\xd7\xb9\xb3\x96\x82\x87\x92\x83\xe6\xc7",
    // "strlen" / M(Xor4) / S(205) / L(6)
    "\xa3\xa4\xa2\xbc\xb5\xbe\xd0\xdd\x4e\xed\x02\xc1\x85\x7c\xf7\xf2",
    // "_MASReceipt/receipt" / M(Rot) / S(108) / L(19)
    "\xcb\xb9\xad\xbf\xbe\xd1\xcf\xd1\xd5\xdc\xe0\x9b\xde\xd1\xcf\xd1\xd5\xdc\xe0\x6c",
    // "SecCertificateCopyData" / M(Xor2) / S(132) / L(22)
    "\xc0\xf6\xf0\xd0\xf6\xe1\xe7\xfa\xf5\xfa\xf0\xf2\xe7\xf6\xd0\xfc\xe3\xea\xd7\xf2\xe7\xf2\x93",
    // "" / M(None) / S(0) / L(0)
    "\x62\xc3\xe1\x8b\x22\x54\x8d\x97\x28\xd4\x0d\xfd\x6e\x82\x45\x99\x89\xbe\x5a\xad\xc4\x8a\x3d\x27\x0c\xcc\x42\x10\x44\x4f\x88\x2b",
    // "CFDictionaryAddValue" / M(Rot) / S(228) / L(20)
    "\x27\x2a\x28\x4d\x47\x58\x4d\x53\x52\x45\x56\x5d\x25\x48\x48\x3a\x45\x50\x59\x49\xe4",
    // "kSecMatchSearchList" / M(Xor1) / S(62) / L(19)
    "\x55\x6d\x5b\x5d\x73\x5f\x4a\x5d\x56\x6d\x5b\x5f\x4c\x5d\x56\x72\x57\x4d\x4a\x3e",
    // "init" / M(Rot) / S(152) / L(4)
    "\x01\x06\x01\x0c\x98\xca\x08\xaf\x3b\xcd\x66\xde\x9e\x81\xff\xbc",
    // "EVP_DigestUpdate" / M(Rot) / S(104) / L(16)
    "\xad\xbe\xb8\xc7\xac\xd1\xcf\xcd\xdb\xdc\xbd\xd8\xcc\xc9\xdc\xcd\x68",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(89) / L(37)
    "\x1a\x1f\x0c\x0b\x15\x1a\x2b\x3c\x38\x2d\x3c\x1a\x36\x29\x20\x18\x29\x29\x3c\x37\x3d\x30\x37\x3e\x09\x38\x2d\x31\x1a\x36\x34\x29\x36\x37\x3c\x37\x2d\x59",
    // "kSecMatchLimitAll" / M(Xor3) / S(255) / L(17)
    "\x7a\x42\x74\x72\x5c\x70\x65\x72\x79\x5d\x78\x7c\x78\x65\x50\x7d\x7d\x11",
    // "receipt" / M(Xor3) / S(245) / L(7)
    "\x77\x60\x66\x60\x6c\x75\x71\x05\xfc\x7c\xd1\x28\x05\xce\x1b\x0c",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(47) / L(54)
    "\x36\x4a\x60\x6a\x6d\x7c\x74\x36\x55\x70\x7b\x6b\x78\x6b\x60\x36\x5f\x6b\x78\x74\x7c\x6e\x76\x6b\x72\x6a\x36\x4a\x7c\x7a\x6c\x6b\x70\x6d\x60\x37\x7f\x6b\x78\x74\x7c\x6e\x76\x6b\x72\x36\x4a\x7c\x7a\x6c\x6b\x70\x6d\x60\x19",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(186) / L(25)
    "\x12\xef\xea\xf3\x19\x08\xfb\x07\xff\x19\x21\x1f\x2e\x19\x2e\x1f\x32\x2e\x19\x1c\x33\x19\x08\x03\xfe\xba\x2c\xb2\x56\x68\xff\x4d\x83\x51",
    // "EVP_get_digestbyname" / M(Xor2) / S(123) / L(20)
    "\x2b\x38\x3e\x31\x09\x0b\x1a\x31\x0a\x07\x09\x0b\x1d\x1a\x0c\x17\x00\x0f\x03\x0b\x6e",
    // "" / M(None) / S(0) / L(0)
    "\x22\xb2\xe6\x0b\xa3\xce\xf7\x79\x54\xd8\xa5\xea\x31\xb5\x98\x17\x49\x00\x9c\xc3\xf2\x12\x09\x36\xa0\x2e\xa4\x17\xb1\xbe\x9f\xae",
    // "EVP_DigestUpdate" / M(Rot) / S(83) / L(16)
    "\x98\xa9\xa3\xb2\x97\xbc\xba\xb8\xc6\xc7\xa8\xc3\xb7\xb4\xc7\xb8\x53",
    // "" / M(None) / S(0) / L(0)
    "\x80\x34\x57\x83\x50\x8f\x01\x71\x75\x59\x10\x00\x97\x2a\x1e\xd5\x2b\x14\x6c\x2d\x9e\xca\x8b\x74\x32\xb2\xb3\x1f\x7d\x67\x78\xe2",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(250) / L(24)
    "\x15\x4f\x49\x48\x15\x56\x53\x58\x15\x56\x53\x58\x69\x43\x49\x4e\x5f\x57\x14\x5e\x43\x56\x53\x58\x3a\x31\x96\x66\x47\x03\x0c\x40\x6a",
    // "IORegistryEntryGetParentEntry" / M(Xor2) / S(207) / L(29)
    "\xa0\xa6\xbb\x8c\x8e\x80\x9a\x9d\x9b\x90\xac\x87\x9d\x9b\x90\xae\x8c\x9d\xb9\x88\x9b\x8c\x87\x9d\xac\x87\x9d\x9b\x90\xe9\x7c\x12\x40\x30\x1e\x8b\x16\x6e",
    // "IOObjectRelease" / M(Xor3) / S(152) / L(15)
    "\xe1\xe7\xe7\xca\xc2\xcd\xcb\xdc\xfa\xcd\xc4\xcd\xc9\xdb\xcd\xa8",
    // "CFStringGetFileSystemRepresentation" / M(Rot) / S(228) / L(35)
    "\x27\x2a\x37\x58\x56\x4d\x52\x4b\x2b\x49\x58\x2a\x4d\x50\x49\x37\x5d\x57\x58\x49\x51\x36\x49\x54\x56\x49\x57\x49\x52\x58\x45\x58\x4d\x53\x52\xe4",
    // "X509_STORE_new" / M(Rot) / S(59) / L(14)
    "\x93\x70\x6b\x74\x9a\x8e\x8f\x8a\x8d\x80\x9a\xa9\xa0\xb2\x3b\xd5",
    // "X509_digest" / M(Rot) / S(168) / L(11)
    "\x00\xdd\xd8\xe1\x07\x0c\x11\x0f\x0d\x1b\x1c\xa8\x89\xba\xfa\xa6",
    // "" / M(None) / S(0) / L(0)
    "\x63\x4b\xda\x31\x1e\x6d\xf8\x74\xd5\x88\x57\xc5\x74\x3f\xab\x2c\xfc\xf2\x63\x91\x41\x37\x35\x9e\xd1\x0c\xa9\x1f\x71\x93\x79\x01",
    // "dlopen" / M(Rot) / S(45) / L(6)
    "\x91\x99\x9c\x9d\x92\x9b\x2d\xf6\xb6\x92\xb4\x21\x6e\x8d\x4a\x47",
    // "" / M(None) / S(0) / L(0)
    "\x84\x87\xa8\xd1\xb6\xdf\x29\xfe\x17\x79\xc9\x0c\x89\x53\x3e\x93\xe0\xa7\x75\x5e\xf6\xe4\x68\x62\xc7\x52\x88\x4c\xb7\x19\x4a\xd6",
    // "SecItemCopyMatching" / M(Xor2) / S(43) / L(19)
    "\x6c\x5a\x5c\x76\x4b\x5a\x52\x7c\x50\x4f\x46\x72\x5e\x4b\x5c\x57\x56\x51\x58\x3f",
    // "CFDataCreate" / M(Xor3) / S(242) / L(12)
    "\x41\x44\x46\x63\x76\x63\x41\x70\x67\x63\x76\x67\x02\x24\x7e\x71",
    // "SHA1_Update" / M(Xor2) / S(104) / L(11)
    "\x2b\x30\x39\x49\x27\x2d\x08\x1c\x19\x0c\x1d\x78\x5e\xa8\x04\x32",
    // "" / M(None) / S(0) / L(0)
    "\x71\xde\xfc\x68\xb6\x57\xee\x68\x12\xbc\x1c\xe2\x40\x50\x35\x6f\x44\x57\x97\x24\xdc\x60\xb6\xae\x16\xca\xd5\x4d\x29\xd2\x10\xae",
    // "SKReceiptRefreshRequest" / M(Xor4) / S(138) / L(23)
    "\x13\x0b\x12\x25\x23\x25\x29\x30\x34\x12\x25\x26\x32\x25\x33\x28\x12\x25\x31\x35\x25\x33\x34\x40\xc0\x39\x50\x0e\x90\x35\xe3\x7c",
    // "exit" / M(Xor3) / S(64) / L(4)
    "\x35\x28\x39\x24\x50\x66\xe7\xc2\x66\x69\x77\xe0\xb7\x22\x3c\xb8",
    // "CFReadStreamCreateWithFile" / M(Xor2) / S(167) / L(26)
    "\xc7\xc2\xd6\xe1\xe5\xe0\xd7\xf0\xf6\xe1\xe5\xe9\xc7\xf6\xe1\xe5\xf0\xe1\xd3\xed\xf0\xec\xc2\xed\xe8\xe1\x84\x9d\xea\xa6\xdd\x51\x82\xc6\x5e",
    // "" / M(None) / S(0) / L(0)
    "\x67\x0c\xef\xa6\x12\xed\x5d\x70\x62\x1e\xc6\xd2\x08\x08\xab\x19\x3c\xbd\x77\x69\xef\x78\xc6\xc2\x76\xef\x78\x0f\x44\x00\x0a\xa1",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(154) / L(66)
    "\xc9\xed\x13\x0d\x0e\xff\x07\xc9\xe6\x03\xfc\x0c\xfb\x0c\x13\xc9\xe0\x0c\xfb\x07\xff\x11\x09\x0c\x05\x0d\xc9\xdd\x09\x0c\xff\xe0\x09\x0f\x08\xfe\xfb\x0e\x03\x09\x08\xc8\x00\x0c\xfb\x07\xff\x11\x09\x0c\x05\xc9\xdd\x09\x0c\xff\xe0\x09\x0f\x08\xfe\xfb\x0e\x03\x09\x08\x9a",
    // "glob" / M(Xor2) / S(181) / L(4)
    "\xc2\xc9\xca\xc7\xa5\x2b\x87\xd4\x3c\x0c\x90\x63\x96\xae\xae\x79",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(167) / L(48)
    "\xb9\xc5\xef\xe5\xe2\xf3\xfb\xb9\xda\xff\xf4\xe4\xf7\xe4\xef\xb9\xd0\xe4\xf7\xfb\xf3\xe1\xf9\xe4\xfd\xe5\xb9\xdf\xd9\xdd\xff\xe2\xb8\xf0\xe4\xf7\xfb\xf3\xe1\xf9\xe4\xfd\xb9\xdf\xd9\xdd\xff\xe2\x96",
    // "SecKeychainOpen" / M(Xor2) / S(118) / L(15)
    "\x35\x03\x05\x2d\x03\x1f\x05\x0e\x07\x0f\x08\x29\x16\x03\x08\x66",
    // "SHA1" / M(Rot) / S(32) / L(4)
    "\x73\x68\x61\x51\x20\x0f\x63\x22\xa7\x02\x3b\xc8\x0e\x50\x91\xd0",
    // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(160) / L(35)
    "\xc3\xc6\xd3\xf4\xf2\xe9\xee\xe7\xc7\xe5\xf4\xc6\xe9\xec\xe5\xd3\xf9\xf3\xf4\xe5\xed\xd2\xe5\xf0\xf2\xe5\xf3\xe5\xee\xf4\xe1\xf4\xe9\xef\xee\x80",
    // "" / M(None) / S(0) / L(0)
    "\x59\xfe\x1c\x6e\x48\x2c\xc3\x2b\x1a\xda\xad\x73\x70\x3d\xe7\x53\x54\xe6\xd5\x19\x8d\x0f\xa3\xc5\xb3\xf1\x8a\xa4\xa5\x31\xac\x37",
    // "" / M(None) / S(0) / L(0)
    "\x03\xec\x24\x94\x98\x6d\x31\xe8\x69\x90\x93\xd6\xeb\xb6\x1f\xb0\x3c\x86\x85\xa0\x5b\xd9\xf4\x22\xfb\x2f\x4a\xb3\x94\x56\xfa\x32",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(140) / L(31)
    "\xc7\xef\xea\xf8\xd5\xdc\xc9\xe8\xc5\xcf\xd8\xc5\xc3\xc2\xcd\xde\xd5\xfa\xcd\xc0\xd9\xc9\xef\xcd\xc0\xc0\xee\xcd\xcf\xc7\xdf\xac",
    // "IOBSDNameMatching" / M(Rot) / S(246) / L(17)
    "\x3f\x45\x38\x49\x3a\x44\x57\x63\x5b\x43\x57\x6a\x59\x5e\x5f\x64\x5d\xf6",
    // "" / M(None) / S(0) / L(0)
    "\x70\x1c\xdf\x99\x52\x31\x34\xa3\xaa\x4f\x94\xed\xb4\xc9\xd1\x90\xf6\x5a\x5a\xf1\x9c\x56\x3d\xd1\x7b\x07\xb4\xfe\x1b\x00\xb4\xc5",
    // "CFRelease" / M(Rot) / S(226) / L(9)
    "\x25\x28\x34\x47\x4e\x47\x43\x55\x47\xe2\x5a\x73\x81\x38\xc4\xc5",
    // "" / M(None) / S(0) / L(0)
    "\xe6\x44\x42\xfe\x02\x55\xdf\xab\x90\x2a\x46\x69\x3d\x9d\xe5\x29\xb3\x42\xfe\x95\x3a\xf9\x7d\xab\x36\x9b\x57\x54\x2e\xdf\xc3\xfe",
    // "BIO_new" / M(Xor2) / S(117) / L(7)
    "\x27\x2c\x2a\x3a\x0b\x00\x12\x65\x0c\xdb\x73\x74\x28\xc8\xbc\xe0",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(16) / L(43)
    "\x67\x62\x71\x76\x68\x67\x56\x41\x45\x50\x41\x73\x4d\x50\x4c\x62\x4d\x48\x41\x77\x5d\x57\x50\x41\x49\x74\x45\x50\x4c\x76\x41\x48\x45\x50\x4d\x52\x41\x70\x4b\x66\x45\x57\x41\x24\xd2\xe8\x29\x43\x1f\x9a\x80\xe8",
    // "X509_get_ext_by_OBJ" / M(Rot) / S(117) / L(19)
    "\xcd\xaa\xa5\xae\xd4\xdc\xda\xe9\xd4\xda\xed\xe9\xd4\xd7\xee\xd4\xc4\xb7\xbf\x75",
    // "" / M(None) / S(0) / L(0)
    "\xbf\x69\xa6\x4a\x8c\x33\xaa\xcc\xa6\x17\xf2\x06\x1b\x43\x53\xd0\xd1\x19\xa6\xc6\xd1\xd5\x02\xe8\x85\xd8\x57\xb8\xc8\xab\x00\xc3",
    // "sha1" / M(Xor1) / S(68) / L(4)
    "\x37\x2c\x25\x75\x44\x34\x8d\x4d\x21\x60\x80\xd0\xe2\x87\x72\xa0",
    // "EVP_DigestInit" / M(Xor3) / S(200) / L(14)
    "\x9d\x8e\x88\x87\x9c\xb1\xbf\xbd\xab\xac\x91\xb6\xb1\xac\xd8\xb7",
    // "CFStringCompare" / M(Xor4) / S(197) / L(15)
    "\x13\x16\x03\x24\x22\x39\x3e\x37\x13\x3f\x3d\x20\x31\x22\x35\x50",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(79) / L(14)
    "\xa2\xa4\xbc\xb4\xaf\xbd\xb1\xb9\xbe\xaf\xbf\xbe\xbc\xa9\xf0\xfd",
    // "CFDictionaryCreateMutable" / M(Xor3) / S(150) / L(25)
    "\xfb\xfe\xfc\xd1\xdb\xcc\xd1\xd7\xd6\xd9\xca\xc1\xfb\xca\xdd\xd9\xcc\xdd\xf5\xcd\xcc\xd9\xda\xd4\xdd\xb8\xe2\xe4\x38\xfb\x23\x9b\xef\x93",
    // "" / M(None) / S(0) / L(0)
    "\x83\x2e\x77\x36\x81\xa2\xd6\xe3\x70\xe5\xef\x74\x28\xa8\xa8\x4d\x16\x7e\xfc\x76\x16\x18\xfd\xfb\xe5\x77\xd2\x56\xb1\x08\xf6\xc3",
    // "sha1" / M(Rot) / S(198) / L(4)
    "\x39\x2e\x27\xf7\xc6\x78\xd0\xf9\xbc\xdd\x07\x39\xf2\x29\x47\xb7",
    // "CFBundleVersion" / M(Xor3) / S(38) / L(15)
    "\x75\x70\x74\x43\x58\x52\x5a\x53\x60\x53\x44\x45\x5f\x59\x58\x36",
    // "kSecClass" / M(Xor4) / S(25) / L(9)
    "\xfb\xc3\xf5\xf3\xd3\xfc\xf1\xe3\xe3\x90\xcf\xe4\x72\x10\x21\xe0",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x0d\x17\xa7\x1b\xaa\x27\x84\x03\x27\xc9\x5b\xbf\xe9\xeb\x89\xf3\xdf\xe5\x72\xf9\xf8\xcd\xc0\x86\x69\x1f\xda\x86\x2b\xbb\xec",
    // "longjmp" / M(Xor3) / S(154) / L(7)
    "\xc6\xc5\xc4\xcd\xc0\xc7\xda\xaa\x8b\xde\xcb\x15\x95\xc5\xc8\x1d",
    // "" / M(None) / S(0) / L(0)
    "\xe2\xc7\xaa\xcd\xe9\xbe\x62\x8c\x8b\x1d\x91\xa3\x1e\x05\x2e\x25\xf1\x69\x37\xd7\x81\xca\x08\xbb\x2b\x4f\xfd\x4e\xc1\x68\x21\x76",
    // "OpenSSL_add_all_digests" / M(Xor1) / S(34) / L(23)
    "\x6d\x52\x47\x4c\x71\x71\x6e\x7d\x43\x46\x46\x7d\x43\x4e\x4e\x7d\x46\x4b\x45\x47\x51\x56\x51\x22\xfc\x69\x91\xbe\xf2\x3d\xfc\x1c",
    // "init" / M(Xor4) / S(64) / L(4)
    "\x69\x6e\x69\x74\x00\x95\xa1\x3c\x4d\xb5\x89\x7c\x89\xbc\x2e\xee",
    // "CFReadStreamCreateWithFile" / M(Xor2) / S(113) / L(26)
    "\x11\x14\x00\x37\x33\x36\x01\x26\x20\x37\x33\x3f\x11\x20\x37\x33\x26\x37\x05\x3b\x26\x3a\x14\x3b\x3e\x37\x52\x95\xb3\x25\x03\x16\xf8\xc3\x10",
    // "X509_get_ext_by_OBJ" / M(Xor3) / S(43) / L(19)
    "\x67\x0a\x0f\x06\x60\x58\x5a\x4b\x60\x5a\x47\x4b\x60\x5d\x46\x60\x70\x7d\x75\x3f",
    // "ASN1_get_object" / M(Xor4) / S(44) / L(15)
    "\x81\x93\x8e\xf1\x9f\xa7\xa5\xb4\x9f\xaf\xa2\xaa\xa5\xa3\xb4\xc0",
    // "BIO_free" / M(Rot) / S(132) / L(8)
    "\xc6\xcd\xd3\xe3\xea\xf6\xe9\xe9\x84\xf4\x55\x9e\xbd\x6c\x51\x4a",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(245) / L(59)
    "\x87\x80\x8b\x80\xf4\x8b\x84\xf3\x8b\x87\x87\x8b\x83\xf2\x8b\x84\x88\x8b\x82\xf0\x8b\x81\x89\x8b\xf7\xf7\x8b\x84\x89\x8b\xf5\x80\x8b\x85\xf0\x8b\xf4\x83\x8b\x83\x85\x8b\x84\x83\x8b\xf5\x80\x8b\x88\x89\x8b\xf5\xf7\x8b\x87\xf2\x8b\x87\x81\xb1\x73\x63\x58\x10\x9e\x47\x5e\xd4",
    // "PKCS7_verify" / M(Rot) / S(244) / L(12)
    "\x44\x3f\x37\x47\x2b\x53\x6a\x59\x66\x5d\x5a\x6d\xf4\xb8\x81\xf8",
    // "" / M(None) / S(0) / L(0)
    "\x9c\xac\xc9\x1b\xcb\xe6\x5b\xcd\xee\x7c\x3b\x22\x76\x03\xb8\xcb\x3e\xcf\xdd\x38\x6a\x52\xca\x6b\x2b\xfe\x03\xcd\xf3\x7c\x31\xbd",
    // "PKCS7_free" / M(Xor2) / S(98) / L(10)
    "\x22\x39\x31\x21\x45\x2d\x14\x00\x17\x17\x72\x00\x9d\xf1\x36\x24",
    // "" / M(None) / S(0) / L(0)
    "\x2e\x15\x68\xfc\x8f\x2b\x6d\x25\x2a\x68\xfa\x49\x60\xb5\xf1\xbf\x24\xfe\x4a\xf3\x75\xa5\x45\xde\x7d\xb4\xb3\xcf\x57\x2f\x60\xc8",
    // "d2i_X509_bio" / M(Xor1) / S(26) / L(12)
    "\x7e\x28\x73\x45\x42\x2f\x2a\x23\x45\x78\x73\x75\x1a\x24\x74\x89",
    // "X509_free" / M(Xor1) / S(148) / L(9)
    "\xcc\xa1\xa4\xad\xcb\xf2\xe6\xf1\xf1\x94\x52\xc2\x3e\x60\x48\x06",
    // "PKCS7_get0_signers" / M(Xor2) / S(197) / L(18)
    "\x86\x9d\x95\x85\xe1\x89\xb1\xb3\xa2\xe6\x89\xa5\xbf\xb1\xb8\xb3\xa4\xa5\xd6",
    // "NSApplicationMain" / M(Rot) / S(8) / L(17)
    "\x56\x5b\x49\x78\x78\x74\x71\x6b\x69\x7c\x71\x77\x76\x55\x69\x71\x76\x08",
    // "CFBundleGetMainBundle" / M(Xor2) / S(110) / L(21)
    "\x3b\x3e\x3a\x0d\x16\x1c\x14\x1d\x3f\x1d\x0c\x35\x19\x11\x16\x3a\x0d\x16\x1c\x14\x1d\x78",
    // "SHA1_Update" / M(Rot) / S(161) / L(11)
    "\xf4\xe9\xe2\xd2\x00\xf6\x11\x05\x02\x15\x06\xa1\xf0\x40\x13\x6e",
    // "%02x:" / M(Xor4) / S(102) / L(5)
    "\x45\x50\x52\x18\x5a\x60\x00\xef\x6c\x92\x2e\x11\x20\x49\x2a\x75",
    // "" / M(None) / S(0) / L(0)
    "\x51\xd3\x27\x2d\xa2\x02\xda\x7e\xaa\xde\xee\x76\xdd\x24\x26\x4c\x81\x4e\x1a\x24\x25\x01\x5c\x65\xc3\x94\xd4\x61\x88\x6a\x4b\xac",
    // "kSecMatchSubjectContains" / M(Xor1) / S(172) / L(24)
    "\xc7\xff\xc9\xcf\xe1\xcd\xd8\xcf\xc4\xff\xd9\xce\xc6\xc9\xcf\xd8\xef\xc3\xc2\xd8\xcd\xc5\xc2\xdf\xac\x4e\xa2\x6f\x2e\x62\x4e\x5d\x72",
    // "CFNumberCreate" / M(Xor4) / S(139) / L(14)
    "\xf3\xf6\xfe\xc5\xdd\xd2\xd5\xc2\xf3\xc2\xd5\xd1\xc4\xd5\xb0\x9e",
    // "en0" / M(Rot) / S(88) / L(3)
    "\xbd\xc6\x88\x58\xa7\x8e\xa6\xca\x9e\x52\x4a\x1d\x90\xa5\xd9\xc8",
    // "" / M(None) / S(0) / L(0)
    "\xbd\x1c\x5a\xe9\xd8\xcc\x99\xd7\x7d\xfc\xd8\x51\x80\x43\x81\x17\xf0\x1e\xfa\xf5\xa7\xf6\x7d\xa5\x15\x0b\xd2\xb9\x2a\x0e\xe5\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x60\xf2\x9d\x8b\xa4\xe2\xcb\x69\x5d\xfc\x29\x30\x59\x66\xe8\x1e\x7e\xc9\x8f\xce\x40\x3c\xc6\xea\xbb\x68\x4b\x4c\x27\xb6\x0c\x13",
    // "objc_msgSend" / M(Xor3) / S(14) / L(12)
    "\x71\x7c\x74\x7d\x41\x73\x6d\x79\x4d\x7b\x70\x7a\x1e\xc3\xb3\x5d",
    // "PKCS7_get0_signers" / M(Xor1) / S(71) / L(18)
    "\x17\x0c\x04\x14\x70\x18\x20\x22\x33\x77\x18\x34\x2e\x20\x29\x22\x35\x34\x47",
    // "" / M(None) / S(0) / L(0)
    "\x9e\xdc\x27\x4f\xe9\x1a\x2f\xd2\x9f\x30\x65\xd8\xb5\x41\xde\x2b\x50\x69\x6d\xdd\xe6\x2f\xc6\x4c\x53\xc1\x63\x54\xf9\xb0\x3a\x8b",
    // "CFDictionaryCreateMutable" / M(Xor1) / S(246) / L(25)
    "\xb5\xb0\xb2\x9f\x95\x82\x9f\x99\x98\x97\x84\x8f\xb5\x84\x93\x97\x82\x93\xbb\x83\x82\x97\x94\x9a\x93\xf6\x82\x3c\xbb\xac\xfc\xb6\x8d\xd8",
    // "" / M(None) / S(0) / L(0)
    "\x5d\xf9\xcb\x81\xb0\xa6\x40\x53\x79\x26\x61\x62\x55\x97\x23\x6e\x15\x8a\xe9\xd2\xbd\x5b\xd9\x12\x7f\x2e\x84\x68\x69\x88\x92\x4b",
    // "" / M(None) / S(0) / L(0)
    "\xb6\x3e\x77\x53\xeb\x47\x07\xe1\x53\xe2\xf4\x14\x72\x6b\x73\x40\x41\x35\xd0\x90\x46\xb1\xf9\x11\x42\x8c\x09\x5d\xbb\xf8\x4b\x97",
    // "CFBundleIdentifier" / M(Xor3) / S(37) / L(18)
    "\x7b\x7e\x7a\x4d\x56\x5c\x54\x5d\x71\x5c\x5d\x56\x4c\x51\x5e\x51\x5d\x4a\x38",
    // "CFBundleIdentifier" / M(Xor1) / S(240) / L(18)
    "\xb3\xb6\xb2\x85\x9e\x94\x9c\x95\xb9\x94\x95\x9e\x84\x99\x96\x99\x95\x82\xf0",
    // "CFStringCreateWithBytes" / M(Xor4) / S(114) / L(23)
    "\x03\x06\x13\x34\x32\x29\x2e\x27\x03\x32\x25\x21\x34\x25\x17\x29\x34\x28\x02\x39\x34\x25\x33\x40\xee\xe0\x0d\x99\xaf\xd2\x53\x58",
    // "kCFBundleIdentifierKey" / M(Rot) / S(159) / L(22)
    "\x0a\xe2\xe5\xe1\x14\x0d\x03\x0b\x04\xe8\x03\x04\x0d\x13\x08\x05\x08\x04\x11\xea\x04\x18\x9f",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(191) / L(37)
    "\xa6\xa3\xb0\xb7\xa9\xa6\x97\x80\x84\x91\x80\xa6\x8a\x95\x9c\xa4\x95\x95\x80\x8b\x81\x8c\x8b\x82\xb5\x84\x91\x8d\xa6\x8a\x88\x95\x8a\x8b\x80\x8b\x91\xe5",
    // "" / M(None) / S(0) / L(0)
    "\xd2\x7e\x6e\x41\x25\xb8\xfb\xd4\x49\xb3\x02\x2c\x15\x28\x19\x6e\xec\xf8\x5f\x0c\xcc\x99\x00\x1e\x6b\xf9\xe5\xa9\x22\x4f\xe6\x7f",
    // "dlopen" / M(Xor4) / S(156) / L(6)
    "\xa4\xac\xaf\xb0\xa5\xae\xc0\x45\x51\x24\x30\x8d\x08\xca\x23\x6b",
    // "objc_getClass" / M(Xor2) / S(42) / L(13)
    "\x55\x58\x50\x59\x65\x5d\x5f\x4e\x79\x56\x5b\x49\x49\x3a\x76\x50",
    // "" / M(None) / S(0) / L(0)
    "\x99\x40\x12\x45\x55\x4b\x27\xd3\x48\xd7\x31\x3a\xe5\x60\x11\x23\x20\x10\x78\x12\xd6\xfc\xb1\x53\xe4\x2d\x2f\xdf\x62\xb0\xac\x75",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(249) / L(40)
    "\xcf\xc8\xc8\xbc\xcc\xbb\xcf\xcf\xcb\xba\xcc\xc0\xca\xb8\xc9\xc1\xbf\xbf\xcc\xc1\xbd\xc8\xcd\xb8\xbc\xcb\xcb\xcd\xcc\xcb\xbd\xc8\xc0\xc1\xbd\xbf\xcf\xba\xcf\xc9\xf9\xde\x32\x57\x42\xd6\xff\xa6\x7c",
    // "glob" / M(Xor4) / S(165) / L(4)
    "\x37\x3c\x3f\x32\x50\xdd\xa5\x76\x4a\x94\xe3\xa4\x9d\x81\xe5\xfc",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(125) / L(50)
    "\xac\xd0\xf6\xf0\xf1\xe2\xea\xac\xc9\xe6\xdf\xef\xde\xef\xf6\xac\xc3\xef\xde\xea\xe2\xf4\xec\xef\xe8\xf0\xac\xbe\xed\xed\xc8\xe6\xf1\xab\xe3\xef\xde\xea\xe2\xf4\xec\xef\xe8\xac\xbe\xed\xed\xc8\xe6\xf1\x7d",
    // "" / M(None) / S(0) / L(0)
    "\x6a\x2a\xfb\xda\x43\xb8\x5c\xc8\xd7\x4e\x94\xba\xc2\x03\x6d\x18\x14\xb7\x7a\x42\xec\x36\xd2\x23\xd5\xe7\x49\x7b\x07\x6e\x76\x80",
    // "objc_getClass" / M(Xor4) / S(98) / L(13)
    "\x4f\x42\x4a\x43\x7f\x47\x45\x54\x63\x4c\x41\x53\x53\x20\x13\xdd",
    // "X509_STORE_free" / M(Xor3) / S(104) / L(15)
    "\x20\x4d\x48\x41\x27\x2b\x2c\x37\x2a\x3d\x27\x1e\x0a\x1d\x1d\x78",
    // "IOServiceGetMatchingServices" / M(Rot) / S(176) / L(28)
    "\xf9\xff\x03\x15\x22\x26\x19\x13\x15\xf7\x15\x24\xfd\x11\x24\x13\x18\x19\x1e\x17\x03\x15\x22\x26\x19\x13\x15\x23\xb0\x46\xb2\x3a\x71\xcc\x91\x44\xc7",
    // "CFArrayGetCount" / M(Xor2) / S(115) / L(15)
    "\x20\x25\x22\x11\x11\x02\x1a\x24\x06\x17\x20\x0c\x16\x0d\x17\x63",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(119) / L(37)
    "\xce\xf8\xfe\xd6\xf8\xe4\xfe\xf5\xfc\xf4\xf3\xce\xf8\xfc\xef\xfe\xf5\xde\xef\xf8\xfc\xe9\xf8\xdb\xef\xf2\xf0\xdc\xe9\xe9\xef\xf4\xff\xe8\xe9\xf8\xee\x9d",
    // "globfree" / M(Xor2) / S(92) / L(8)
    "\x2b\x20\x23\x2e\x2a\x3e\x29\x29\x4c\xf0\x91\x70\x0c\xe5\xf7\xb0",
    // "kSecReturnRef" / M(Xor3) / S(158) / L(13)
    "\xc5\xfd\xcb\xcd\xfc\xcb\xda\xdb\xdc\xc0\xfc\xcb\xc8\xae\xd8\xac",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(222) / L(25)
    "\xef\xf0\xec\xf0\xe6\xea\xee\xf0\xef\xef\xed\xe8\xed\xeb\xf0\xef\xee\xee\xf0\xe8\xf0\xef\xef\xf0\xef\xde\x4a\x8f\x4e\x99\x7a\xdf\xf0\xb3",
    // "dlsym" / M(Rot) / S(238) / L(5)
    "\x52\x5a\x61\x67\x5b\xee\x0a\xa1\x9e\x9c\x43\xc5\x10\xc9\x61\xce",
    // "CFStringGetFileSystemRepresentation" / M(Xor2) / S(187) / L(35)
    "\xdc\xd9\xcc\xeb\xed\xf6\xf1\xf8\xd8\xfa\xeb\xd9\xf6\xf3\xfa\xcc\xe6\xec\xeb\xfa\xf2\xcd\xfa\xef\xed\xfa\xec\xfa\xf1\xeb\xfe\xeb\xf6\xf0\xf1\x9f",
    // "" / M(None) / S(0) / L(0)
    "\x00\xe2\xa6\x2a\x9d\x0d\xb5\x08\xfc\xc0\x97\x93\x10\x7a\x80\xc1\x58\x47\x95\xe7\xa8\x3e\xff\xea\x2a\x19\x34\x18\x1b\x4f\x13\xce",
    // "SKReceiptRefreshRequest" / M(Xor4) / S(239) / L(23)
    "\xb3\xab\xb2\x85\x83\x85\x89\x90\x94\xb2\x85\x86\x92\x85\x93\x88\xb2\x85\x91\x95\x85\x93\x94\xe0\xd8\xad\x5b\xe1\x92\xed\x9a\x68",
    // "longjmp" / M(Xor1) / S(199) / L(7)
    "\xab\xa8\xa9\xa0\xad\xaa\xb7\xc7\x7d\xed\xa8\x96\x23\xb8\x25\x38",
    // "CFNumberCreate" / M(Xor1) / S(35) / L(14)
    "\x60\x65\x6d\x56\x4e\x41\x46\x51\x60\x51\x46\x42\x57\x46\x23\xfa",
    // "sha1" / M(Xor4) / S(125) / L(4)
    "\xa3\xb8\xb1\xe1\xd0\x45\x25\x47\xe9\xf7\x4c\x5a\x04\x94\xa8\xdc",
    // "CFDataCreateMutable" / M(Rot) / S(142) / L(19)
    "\xd1\xd4\xd2\xef\x02\xef\xd1\x00\xf3\xef\x02\xf3\xdb\x03\x02\xef\xf0\xfa\xf3\x8e",
    // "CFDataGetLength" / M(Xor1) / S(41) / L(15)
    "\x6a\x6f\x6d\x48\x5d\x48\x6e\x4c\x5d\x65\x4c\x47\x4e\x5d\x41\x29",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(42) / L(57)
    "\xfb\x87\xad\xa7\xa0\xb1\xb9\xfb\x98\xbd\xb6\xa6\xb5\xa6\xad\xfb\x9f\xb1\xad\xb7\xbc\xb5\xbd\xba\xa7\xfb\x87\xad\xa7\xa0\xb1\xb9\x86\xbb\xbb\xa0\x97\xb1\xa6\xa0\xbd\xb2\xbd\xb7\xb5\xa0\xb1\xa7\xfa\xbf\xb1\xad\xb7\xbc\xb5\xbd\xba\xd4\x2d\x58\xde\xba\xff\x36\x15\x8a",
    // "setjmp" / M(Xor1) / S(192) / L(6)
    "\xb3\xa5\xb4\xaa\xad\xb0\xc0\x68\xbf\xba\xf2\x96\x51\xaa\xb1\x1c",
    // "EVP_DigestFinal" / M(Xor3) / S(160) / L(15)
    "\xf5\xe6\xe0\xef\xf4\xd9\xd7\xd5\xc3\xc4\xf6\xd9\xde\xd1\xdc\xb0",
    // "SHA1_Init" / M(Xor2) / S(181) / L(9)
    "\xf6\xed\xe4\x94\xfa\xec\xcb\xcc\xd1\xa5\x61\x4a\x03\xc3\xf5\x2b",
    // "" / M(None) / S(0) / L(0)
    "\x52\xd3\x22\x2f\xf3\xf2\x97\x53\x5f\x32\xac\x04\x8e\x94\x24\xea\xbd\x30\x46\xef\x53\x26\x6d\x31\x8f\xd2\x08\x6e\x19\xc2\x70\xa8",
    // "IOIteratorNext" / M(Xor4) / S(16) / L(14)
    "\x49\x4f\x49\x74\x65\x72\x61\x74\x6f\x72\x4e\x65\x78\x74\x00\x92",
    // "CC_SHA1" / M(Xor1) / S(208) / L(7)
    "\x93\x93\x8f\x83\x98\x91\xe1\xd0\x7e\x09\x5a\xc3\x62\x6a\x60\x98",
    // "SHA1_Final" / M(Rot) / S(213) / L(10)
    "\x28\x1d\x16\x06\x34\x1b\x3e\x43\x36\x41\xd5\xaf\x04\x88\x14\x08",
    // "glob_b" / M(Rot) / S(5) / L(6)
    "\x6c\x71\x74\x67\x64\x67\x05\x4c\xbd\x2e\xf3\xee\x8e\x0c\x38\x4d",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(172) / L(39)
    "\xdf\xda\xc9\xce\xd0\xdf\xee\xf9\xfd\xe8\xf9\xda\xee\xf3\xf1\xda\xf5\xf0\xf9\xcf\xe5\xef\xe8\xf9\xf1\xce\xf9\xec\xee\xf9\xef\xf9\xf2\xe8\xfd\xe8\xf5\xf3\xf2\x9c\xd6\xa0\x4e\x67\x35\x0e\x65\xc4",
    // "kSecMatchLimit" / M(Rot) / S(27) / L(14)
    "\x86\x6e\x80\x7e\x68\x7c\x8f\x7e\x83\x67\x84\x88\x84\x8f\x1b\x50",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(138) / L(48)
    "\xa5\xd9\xf3\xf9\xfe\xef\xe7\xa5\xc6\xe3\xe8\xf8\xeb\xf8\xf3\xa5\xcc\xf8\xeb\xe7\xef\xfd\xe5\xf8\xe1\xf9\xa5\xc3\xc5\xc1\xe3\xfe\xa4\xec\xf8\xeb\xe7\xef\xfd\xe5\xf8\xe1\xa5\xc3\xc5\xc1\xe3\xfe\x8a",
    // "_MASReceipt" / M(Xor4) / S(119) / L(11)
    "\x2f\x3d\x31\x23\x22\x15\x13\x15\x19\x00\x04\x70\x06\x07\xe2\x0d",
    // "CC_SHA1_Init" / M(Xor2) / S(2) / L(12)
    "\x51\x51\x4d\x41\x5a\x53\x23\x4d\x5b\x7c\x7b\x66\x12\x33\x43\x16",
    // "" / M(None) / S(0) / L(0)
    "\x61\x65\xe6\x0b\xec\xeb\x9c\x6d\x8a\x64\xa0\xb8\xea\xd8\x7d\xf8\x89\x61\x10\xad\x35\x50\x5e\xa9\x72\xbd\x48\xe8\x06\xac\xb6\xf2",
    // "PKCS7_free" / M(Xor3) / S(85) / L(10)
    "\x35\x2e\x26\x36\x52\x3a\x03\x17\x00\x00\x65\x06\xdc\xb1\xc0\xb1",
    // "kSecReturnRef" / M(Xor3) / S(169) / L(13)
    "\xd2\xea\xdc\xda\xeb\xdc\xcd\xcc\xcb\xd7\xeb\xdc\xdf\xb9\x09\x0c",
    // "CFDataAppendBytes" / M(Xor1) / S(194) / L(17)
    "\x81\x84\x86\xa3\xb6\xa3\x83\xb2\xb2\xa7\xac\xa6\x80\xbb\xb6\xa7\xb1\xc2",
    // "CFNumberCreate" / M(Xor3) / S(199) / L(14)
    "\x94\x91\x99\xa2\xba\xb5\xb2\xa5\x94\xa5\xb2\xb6\xa3\xb2\xd7\x73",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x47\x64\xd5\xa9\x4c\x6c\xc4\xa7\xe4\xdf\xa5\xf1\x1c\xd2\xe6\x60\x4a\x25\x31\xbc\xc4\xf1\x6f\xbd\x9e\xa6\x16\x41\x4f\x00\xc5",
    // "SHA1_Final" / M(Xor1) / S(206) / L(10)
    "\x9d\x86\x8f\xff\x91\x88\xa7\xa0\xaf\xa2\xce\x40\x50\xe2\xdb\x7b",
    // "start" / M(Rot) / S(148) / L(5)
    "\x07\x08\xf5\x06\x08\x94\xdf\x75\xa2\x9b\x43\x00\xe3\x0d\x3a\x4c",
    // "EVP_DigestUpdate" / M(Rot) / S(226) / L(16)
    "\x27\x38\x32\x41\x26\x4b\x49\x47\x55\x56\x37\x52\x46\x43\x56\x47\xe2",
    // "SecItemCopyMatching" / M(Xor2) / S(197) / L(19)
    "\x82\xb4\xb2\x98\xa5\xb4\xbc\x92\xbe\xa1\xa8\x9c\xb0\xa5\xb2\xb9\xb8\xbf\xb6\xd1",
    // "d2i_PKCS7_bio" / M(Xor4) / S(121) / L(13)
    "\xf4\xa2\xf9\xcf\xc0\xdb\xd3\xc3\xa7\xcf\xf2\xf9\xff\x90\x1c\xa1",
    // "" / M(None) / S(0) / L(0)
    "\xbd\xbc\xd9\x45\xe6\x61\x25\xa3\x01\xc5\x87\x04\x94\x99\xb7\x02\xff\xa9\x41\xf0\x6a\x67\xf1\xe2\x8a\xa8\xfc\x64\x65\x0b\x9e\x04",
    // "X509_digest" / M(Xor4) / S(34) / L(11)
    "\x78\x15\x10\x19\x7f\x44\x49\x47\x45\x53\x54\x20\x71\x67\x1c\x01",
    // "_MASReceipt/receipt" / M(Xor4) / S(248) / L(19)
    "\x3f\x2d\x21\x33\x32\x05\x03\x05\x09\x10\x14\x4f\x12\x05\x03\x05\x09\x10\x14\x60",
    // "kSecClassCertificate" / M(Xor3) / S(102) / L(20)
    "\x10\x28\x1e\x18\x38\x17\x1a\x08\x08\x38\x1e\x09\x0f\x12\x1d\x12\x18\x1a\x0f\x1e\x7b",
    // "CFDictionaryCreateMutable" / M(Xor2) / S(115) / L(25)
    "\x12\x17\x15\x38\x32\x25\x38\x3e\x3f\x30\x23\x28\x12\x23\x34\x30\x25\x34\x1c\x24\x25\x30\x33\x3d\x34\x51\x54\x4a\x02\xd4\x6a\x70\x86\x30",
    // "" / M(None) / S(0) / L(0)
    "\xe3\x19\x1d\xec\x88\x39\x2e\x5d\x4a\x7b\xef\xcc\x5a\x8a\x7d\xdb\x14\xfe\x1a\xdd\xea\xf4\x27\xb9\xd8\xbf\x27\xfa\xd8\xec\x74\xa3",
    // "CFReadStreamClose" / M(Xor2) / S(39) / L(17)
    "\x76\x73\x67\x50\x54\x51\x66\x41\x47\x50\x54\x58\x76\x59\x5a\x46\x50\x35",
    // "/usr/lib/libobjc.dylib" / M(Xor3) / S(169) / L(22)
    "\xef\xb5\xb3\xb2\xef\xac\xa9\xa2\xef\xac\xa9\xa2\xaf\xa2\xaa\xa3\xee\xa4\xb9\xac\xa9\xa2\xc0",
    // "CFDictionaryGetValue" / M(Xor2) / S(29) / L(20)
    "\x4b\x4e\x4c\x61\x6b\x7c\x61\x67\x66\x69\x7a\x71\x4f\x6d\x7c\x5e\x69\x64\x7d\x6d\x08",
    // "" / M(None) / S(0) / L(0)
    "\x7a\x0c\x14\xc8\x3f\x2d\x84\x24\x95\x42\xd5\x8c\x7d\xfc\xba\xd1\xcf\x3d\x3c\x6b\x32\xb2\x8f\x40\x9f\x11\xd7\xc0\xf9\x01\xd8\x26",
    // "" / M(None) / S(0) / L(0)
    "\xe6\xac\xf6\xcd\x0d\x80\x20\x42\x2f\xdd\xa0\x7e\xc1\x75\x29\x98\x20\x16\x22\x18\xf3\x73\xca\x54\x25\x68\xd2\x71\x1f\x03\x04\x52",
    // "" / M(None) / S(0) / L(0)
    "\x13\xf8\xec\xfe\x3a\x45\xa8\x36\x1c\x26\x49\x19\xbe\x1b\x75\x4a\xeb\x6f\xed\x87\xe1\xd4\x21\x93\x99\xfd\xe1\x0f\x46\xda\x9a\xf8",
    // "kSecClassCertificate" / M(Xor4) / S(211) / L(20)
    "\x24\x1c\x2a\x2c\x0c\x23\x2e\x3c\x3c\x0c\x2a\x3d\x3b\x26\x29\x26\x2c\x2e\x3b\x2a\x4f",
    // "CFReadStreamOpen" / M(Xor4) / S(210) / L(16)
    "\xb1\xb4\xa0\x97\x93\x96\xa1\x86\x80\x97\x93\x9f\xbd\x82\x97\x9c\xf2",
    // "OpenSSL_add_all_digests" / M(Rot) / S(127) / L(23)
    "\xce\xef\xe4\xed\xd2\xd2\xcb\xde\xe0\xe3\xe3\xde\xe0\xeb\xeb\xde\xe3\xe8\xe6\xe4\xf2\xf3\xf2\x7f\xb9\x0a\x0c\xe8\x64\x66\xcd\xb4",
    // "NSApplicationMain" / M(Rot) / S(122) / L(17)
    "\xc8\xcd\xbb\xea\xea\xe6\xe3\xdd\xdb\xee\xe3\xe9\xe8\xc7\xdb\xe3\xe8\x7a",
    // "EVP_MD_CTX_init" / M(Xor3) / S(150) / L(15)
    "\xe3\xf0\xf6\xf9\xeb\xe2\xf9\xe5\xf2\xfe\xf9\xcf\xc8\xcf\xd2\xa6",
    // "ASN1_get_object" / M(Rot) / S(229) / L(15)
    "\x26\x38\x33\x16\x44\x4c\x4a\x59\x44\x54\x47\x4f\x4a\x48\x59\xe5",
    // "CFDataGetBytePtr" / M(Xor4) / S(244) / L(16)
    "\x77\x72\x70\x55\x40\x55\x73\x51\x40\x76\x4d\x40\x51\x64\x40\x46\x34",
    // "SecKeychainOpen" / M(Xor1) / S(200) / L(15)
    "\x9b\xad\xab\x83\xad\xb1\xab\xa0\xa9\xa1\xa6\x87\xb8\xad\xa6\xc8",
    // "init" / M(Xor4) / S(88) / L(4)
    "\xe9\xee\xe9\xf4\x80\xe4\x21\x72\xcd\x2d\xfd\x22\xea\x50\x03\xa8",
    // "" / M(None) / S(0) / L(0)
    "\xc0\x7a\x35\xa7\xb6\x0d\x22\xd5\x2a\xb2\x2a\x6b\x91\xf5\x32\x92\xce\xd4\x90\x10\xbd\x29\xb8\x1a\x38\x71\xc8\x93\x8f\x9a\x13\x47",
    // "" / M(None) / S(0) / L(0)
    "\xfc\x96\xef\x52\x89\x80\x18\x59\xa1\x19\xf7\xd1\x16\xf8\xda\x7e\xc4\x6f\x46\xb3\x4b\x00\xe4\x78\x7d\x9f\xb8\x63\x83\xa2\xbd\xd0",
    // "1.0.2" / M(Xor1) / S(243) / L(5)
    "\xc2\xdd\xc3\xdd\xc1\xf3\x57\xd2\x3c\xc5\x4d\xa4\x47\x92\xc5\x4c",
    // "CFDictionaryAddValue" / M(Xor1) / S(241) / L(20)
    "\xb2\xb7\xb5\x98\x92\x85\x98\x9e\x9f\x90\x83\x88\xb0\x95\x95\xa7\x90\x9d\x84\x94\xf1",
    // "" / M(None) / S(0) / L(0)
    "\x11\x11\x74\xc0\xde\x3a\xb7\x4f\x10\x20\xc9\x0a\xde\xb8\x35\xbf\xf4\x29\xda\x2b\x16\x71\x8a\x2b\x85\xdd\xde\xc9\xa1\xde\xa2\x51",
    // "" / M(None) / S(0) / L(0)
    "\x09\xd6\x07\x0c\x1a\x22\x49\x05\x7b\x1c\xd8\x1f\xe9\x73\xee\x51\x19\xdb\x85\xba\x00\xde\x2d\xbf\x08\x9e\xb8\xd2\x1f\x94\x06\x0b",
    // "" / M(None) / S(0) / L(0)
    "\xa4\xad\x32\xbe\xce\xc2\xd0\xa2\x10\xfe\xa6\x5b\x70\xab\xfe\xc5\xd4\x40\x10\xcf\xbe\x0e\x4b\xfe\x31\x5a\xd9\x5b\x53\x86\x34\xd9",
    // "IOMACAddress" / M(Rot) / S(240) / L(12)
    "\x39\x3f\x3d\x31\x33\x31\x54\x54\x62\x55\x63\x63\xf0\x6c\xe0\x08",
    // "CFDictionarySetValue" / M(Rot) / S(113) / L(20)
    "\xb4\xb7\xb5\xda\xd4\xe5\xda\xe0\xdf\xd2\xe3\xea\xc4\xd6\xe5\xc7\xd2\xdd\xe6\xd6\x71",
    // "/usr/lib/libobjc.dylib" / M(Xor1) / S(135) / L(22)
    "\xa8\xf2\xf4\xf5\xa8\xeb\xee\xe5\xa8\xeb\xee\xe5\xe8\xe5\xed\xe4\xa9\xe3\xfe\xeb\xee\xe5\x87",
    // "BIO_s_mem" / M(Xor4) / S(227) / L(9)
    "\x72\x79\x7f\x6f\x43\x6f\x5d\x55\x5d\x30\x62\xe6\xc8\xb4\x13\xf1",
    // "/usr/lib/libobjc.dylib" / M(Xor2) / S(2) / L(22)
    "\x3a\x60\x66\x67\x3a\x79\x7c\x77\x3a\x79\x7c\x77\x7a\x77\x7f\x76\x3b\x71\x6c\x79\x7c\x77\x15",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(110) / L(24)
    "\xcc\xc9\xcb\xee\xfb\xea\xc9\xe0\xfd\xe2\xee\xfb\xfb\xea\xfd\xdc\xea\xfb\xc9\xe0\xfd\xe2\xee\xfb\x8f\xf3\x9e\xec\xd7\xf8\x4d\x04\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x0c\xd9\x79\x8d\x02\x43\x53\x53\x06\x45\xaa\x31\x20\x1f\x74\x0a\x6c\x5e\xf8\xc3\x40\x7f\xd6\xcb\xa0\x58\x44\x40\xbf\x8d\x4e\xbc",
    // "%02x:" / M(Xor1) / S(87) / L(5)
    "\x72\x67\x65\x2f\x6d\x57\x89\x54\x8c\xe2\x4c\xca\xea\xdd\x1e\xf5",
    // "" / M(None) / S(0) / L(0)
    "\xf8\x60\xb1\x3f\x8b\xde\x51\xca\xd3\xb1\xd6\xfa\xcd\xcb\x27\x66\xb9\x81\x17\x13\xc6\xa6\x8a\x50\xe1\x18\xdb\xc3\xb7\x74\x01\x3c",
    // "" / M(None) / S(0) / L(0)
    "\x71\xf8\x5a\x25\x51\xa8\xe3\x06\xa4\x77\xac\x2d\xb8\x30\x41\x50\x76\x2b\x65\xfc\xd6\xd9\xba\xbc\xee\xb9\xe5\x66\x8c\xa8\xe6\xcd",
    // "Apple Root CA" / M(Xor2) / S(100) / L(13)
    "\x35\x04\x04\x18\x11\x54\x26\x1b\x1b\x00\x54\x37\x35\x74\x29\x6e",
    // "X509_free" / M(Xor1) / S(233) / L(9)
    "\xb1\xdc\xd9\xd0\xb6\x8f\x9b\x8c\x8c\xe9\x71\x6d\xe8\x11\xda\x36",
    // "CFDataCreate" / M(Xor4) / S(207) / L(12)
    "\xb3\xb6\xb4\x91\x84\x91\xb3\x82\x95\x91\x84\x95\xf0\x2e\xb2\x27",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(42) / L(43)
    "\x5d\x58\x4b\x4c\x52\x5d\x6c\x7b\x7f\x6a\x7b\x49\x77\x6a\x76\x58\x77\x72\x7b\x4d\x67\x6d\x6a\x7b\x73\x4e\x7f\x6a\x76\x4c\x7b\x72\x7f\x6a\x77\x68\x7b\x4a\x71\x5c\x7f\x6d\x7b\x1e\x42\xd4\x57\x9b\x08\x04\x97\x9d",
    // "CFDataCreateMutable" / M(Xor3) / S(120) / L(19)
    "\xcf\xca\xc8\xed\xf8\xed\xcf\xfe\xe9\xed\xf8\xe9\xc1\xf9\xf8\xed\xee\xe0\xe9\x8c",
    // "CFArrayGetCount" / M(Xor4) / S(178) / L(15)
    "\x63\x66\x61\x52\x52\x41\x59\x67\x45\x54\x63\x4f\x55\x4e\x54\x20",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor2) / S(204) / L(50)
    "\xd0\xac\x86\x8c\x8b\x9a\x92\xd0\xb3\x96\x9d\x8d\x9e\x8d\x86\xd0\xb9\x8d\x9e\x92\x9a\x88\x90\x8d\x94\x8c\xd0\xbe\x8f\x8f\xb4\x96\x8b\xd1\x99\x8d\x9e\x92\x9a\x88\x90\x8d\x94\xd0\xbe\x8f\x8f\xb4\x96\x8b\xff",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(153) / L(54)
    "\xf0\x8c\xa6\xac\xab\xba\xb2\xf0\x93\xb6\xbd\xad\xbe\xad\xa6\xf0\x99\xad\xbe\xb2\xba\xa8\xb0\xad\xb4\xac\xf0\x8c\xba\xbc\xaa\xad\xb6\xab\xa6\xf1\xb9\xad\xbe\xb2\xba\xa8\xb0\xad\xb4\xf0\x8c\xba\xbc\xaa\xad\xb6\xab\xa6\xdf",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(126) / L(31)
    "\x17\x11\x0c\x3b\x39\x37\x2d\x2a\x2c\x27\x1b\x30\x2a\x2c\x27\x1d\x2c\x3b\x3f\x2a\x3b\x1d\x18\x0e\x2c\x31\x2e\x3b\x2c\x2a\x27\x5e",
    // "OBJ_txt2obj" / M(Xor4) / S(188) / L(11)
    "\x8f\x82\x8a\x9f\xb4\xb8\xb4\xf2\xaf\xa2\xaa\xc0\x4f\x8e\x1a\x10",
    // "" / M(None) / S(0) / L(0)
    "\x0c\x5f\x4e\xa0\x12\xf6\x25\x69\x0a\xeb\xad\xca\xcf\xb0\x95\x25\x29\x22\xdd\x51\xe8\x58\x55\xa4\xeb\xfa\xd7\xb1\x96\xed\xe1\x3b",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(204) / L(59)
    "\xfa\xfd\xf6\xfd\xa9\xf6\xf9\xae\xf6\xfa\xfa\xf6\xfe\xaf\xf6\xf9\xf5\xf6\xff\xad\xf6\xfc\xf4\xf6\xaa\xaa\xf6\xf9\xf4\xf6\xa8\xfd\xf6\xf8\xad\xf6\xa9\xfe\xf6\xfe\xf8\xf6\xf9\xfe\xf6\xa8\xfd\xf6\xf5\xf4\xf6\xa8\xaa\xf6\xfa\xaf\xf6\xfa\xfc\xcc\x50\x48\xbe\x4d\xf3\xc6\x5c\x59",
    // "strncmp" / M(Xor1) / S(7) / L(7)
    "\x74\x73\x75\x69\x64\x6a\x77\x07\xf9\x87\xb6\x65\x85\xe7\xea\x57",
    // "kCFBundleIdentifierKey" / M(Rot) / S(0) / L(22)
    "\x6b\x43\x46\x42\x75\x6e\x64\x6c\x65\x49\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x4b\x65\x79\x00",
    // "globfree" / M(Xor3) / S(92) / L(8)
    "\x0b\x00\x03\x0e\x0a\x1e\x09\x09\x6c\xfc\xfa\xc7\xbf\x0a\x65\x1a",
    // "" / M(None) / S(0) / L(0)
    "\x6c\xc1\x7f\xee\x61\x90\xbb\x51\x01\x42\x1f\x84\xf1\x61\x66\x4a\xce\xeb\x8f\xdb\x12\xf9\xec\xd0\xf3\x8c\x20\x24\x95\x94\xae\xb8",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(90) / L(32)
    "\x02\x02\x02\x02\x5c\x56\x5c\x36\x36\x5c\x56\x5c\x1f\x1f\x5c\x2f\x5c\x33\x33\x5c\x41\x5c\x16\x16\x5c\x41\x5c\x08\x08\x5c\x21\x5c\x7b",
    // "" / M(None) / S(0) / L(0)
    "\xe9\x6b\xab\x4a\xbf\x33\xbe\xdf\x54\xf2\xc2\x0c\x46\x5b\xb7\x1a\x06\x4a\x90\x72\x57\x4c\x8d\xb3\xd7\x14\x43\x16\xd0\x87\x93\x22",
    // "CFArrayAppendValue" / M(Xor4) / S(182) / L(18)
    "\xc1\xc4\xc3\xf0\xf0\xe3\xfb\xc3\xf2\xf2\xe7\xec\xe6\xd4\xe3\xee\xf7\xe7\x82",
    // "" / M(None) / S(0) / L(0)
    "\xee\x2c\xc2\xe4\x1b\x0b\x93\xb3\xe4\x44\x4a\xa0\xa1\xa0\x43\x3f\xb5\x0c\xe0\x7f\xc4\x26\x25\xc6\x7c\x7e\x88\xda\x18\xb3\x4b\xa0",
    // "EVP_DigestInit" / M(Rot) / S(225) / L(14)
    "\x26\x37\x31\x40\x25\x4a\x48\x46\x54\x55\x2a\x4f\x4a\x55\xe1\x24",
    // "" / M(None) / S(0) / L(0)
    "\x0d\x7d\xc1\xa5\xb9\x17\xd7\xc7\x94\x84\x91\xd8\x88\x67\x8d\x11\x98\xc5\x8d\xf6\x6f\xe0\xd7\x4e\x1e\x45\x23\x75\x51\x7b\xdc\x1d",
    // "SecKeychainSearchCopyNext" / M(Xor4) / S(146) / L(25)
    "\x37\x01\x07\x2f\x01\x1d\x07\x0c\x05\x0d\x0a\x37\x01\x05\x16\x07\x0c\x27\x0b\x14\x1d\x2a\x01\x1c\x10\x64\x1b\x2e\xdd\x42\x74\x99\xd3\xe8",
    // "CFDataGetBytePtr" / M(Xor2) / S(116) / L(16)
    "\x26\x23\x21\x04\x11\x04\x22\x00\x11\x27\x1c\x11\x00\x35\x11\x17\x65",
    // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(251) / L(25)
    "\x2c\x33\x2f\x33\x25\x29\x2d\x33\x2c\x2c\x2e\x2b\x2e\x28\x33\x2c\x2d\x2d\x33\x2b\x33\x2c\x2c\x33\x2c\x1d\xae\x37\xf1\x54\xce\x12\x37\xc2",
    // "" / M(None) / S(0) / L(0)
    "\xaf\xc6\x0f\xc8\x17\xdc\xb1\xa4\x74\x1b\xf1\xcd\xb7\x45\xef\x2d\x5f\x42\xb7\xa2\x61\xcf\xc4\xf0\xcd\xfb\x96\xf1\xff\xfb\x15\xf0",
    // "d2i_X509_bio" / M(Xor2) / S(132) / L(12)
    "\xf0\xa6\xfd\xcb\xcc\xa1\xa4\xad\xcb\xf6\xfd\xfb\x94\x54\xde\x9e",
    // "CFBundleGetIdentifier" / M(Xor2) / S(60) / L(21)
    "\x69\x6c\x68\x5f\x44\x4e\x46\x4f\x6d\x4f\x5e\x63\x4e\x4f\x44\x5e\x43\x4c\x43\x4f\x58\x2a",
    // "" / M(None) / S(0) / L(0)
    "\x10\x75\xe7\xba\xaf\x48\x21\x6a\x65\x4b\x3f\xcc\x7e\x07\x8a\x2e\x78\x27\xdf\x60\x7c\xe1\x07\xbf\xb6\x99\xe1\x5d\x2c\x69\x82\x09",
    // "" / M(None) / S(0) / L(0)
    "\xb6\xa5\x8e\xeb\xc6\xe8\xa3\x31\xca\x8f\xc2\x01\x53\xe2\xe9\x0e\x45\xfc\x10\xa2\xce\xac\x6e\x06\xbf\x41\x2c\xc4\x81\x39\xc7\x34",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(198) / L(29)
    "\x8f\x89\x94\xa3\xa1\xaf\xb5\xb2\xb4\xbf\x83\xa8\xb2\xb4\xbf\x81\xa3\xb2\x96\xa7\xb4\xa3\xa8\xb2\x83\xa8\xb2\xb4\xbf\xc6\xd5\xf7\xc0\x2a\xfe\x1a\x2c\xe4",
    // "BIO_s_mem" / M(Xor4) / S(66) / L(9)
    "\x62\x69\x6f\x7f\x53\x7f\x4d\x45\x4d\x20\x91\x4b\x62\x45\xd8\xf2",
    // "dlsym" / M(Xor1) / S(19) / L(5)
    "\x77\x7f\x60\x6a\x7e\x13\x73\x0c\x97\x8f\x00\xbd\x8a\x50\xf0\x09",
    // "IOIteratorNext" / M(Xor2) / S(177) / L(14)
    "\xe8\xee\xe8\xd5\xc4\xd3\xc0\xd5\xce\xd3\xef\xc4\xd9\xd5\xa1\xf0",
    // "Apple Root CA" / M(Rot) / S(157) / L(13)
    "\xde\x0d\x0d\x09\x02\xbd\xef\x0c\x0c\x11\xbd\xe0\xde\x9d\x88\x31",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(25) / L(19)
    "\x55\x38\x3d\x34\x52\x6a\x68\x79\x52\x68\x75\x79\x52\x6f\x74\x52\x42\x4f\x47\x0d",
    // "%02X:" / M(Rot) / S(52) / L(5)
    "\x59\x64\x66\x8c\x6e\x34\x7d\x9b\x9d\xdf\x91\x8b\xc6\x4f\xef\x4b",
    // "SHA1_Init" / M(Xor4) / S(211) / L(9)
    "\x63\x78\x71\x01\x6f\x79\x5e\x59\x44\x30\x98\xc0\x7e\xee\x7c\x22",
    // "Contents/_MASReceipt" / M(Xor3) / S(115) / L(20)
    "\xcb\xe7\xe6\xfc\xed\xe6\xfc\xfb\xa7\xd7\xc5\xc9\xdb\xda\xed\xeb\xed\xe1\xf8\xfc\x88",
    // "CFBundleUnloadExecutable" / M(Rot) / S(209) / L(24)
    "\x14\x17\x13\x46\x3f\x35\x3d\x36\x26\x3f\x3d\x40\x32\x35\x16\x49\x36\x34\x46\x45\x32\x33\x3d\x36\xd1\x09\x0d\xa7\x5d\x6c\x30\x26\x3a",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(37) / L(35)
    "\x68\x6b\x69\x86\x99\x8a\x6b\x94\x97\x92\x86\x99\x99\x8a\x97\x68\x97\x8a\x86\x99\x8a\x69\x86\x99\x8a\x6b\x97\x94\x92\x78\x99\x97\x8e\x93\x8c\x25",
    // "_MASReceipt" / M(Xor3) / S(255) / L(11)
    "\x50\x42\x4e\x5c\x5d\x6a\x6c\x6a\x66\x7f\x7b\x0f\x1e\x68\x96\xa6",
    // "d2i_X509_bio" / M(Xor2) / S(104) / L(12)
    "\x1c\x4a\x11\x27\x20\x4d\x48\x41\x27\x1a\x11\x17\x78\x70\x5f\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x80\xaf\x09\x7c\xb3\xa7\x44\x69\xe2\xe3\x4f\xd9\x12\x5b\x50\xaf\xda\x9f\x30\x68\xe7\x49\x42\x81\x25\xde\xe1\x4a\x34\xfb\xec\x60",
    // "CFEqual" / M(Xor2) / S(219) / L(7)
    "\x88\x8d\x8e\xba\xbe\xaa\xa7\xcb\xf8\x7b\xdb\x54\x8d\xf7\x7f\xff",
    // "CFArrayAppendValue" / M(Xor2) / S(181) / L(18)
    "\xe5\xe0\xe7\xd4\xd4\xc7\xdf\xe7\xd6\xd6\xc3\xc8\xc2\xf0\xc7\xca\xd3\xc3\xa6",
    // "CFReadStreamRead" / M(Xor3) / S(190) / L(16)
    "\x8c\x89\x9d\xaa\xae\xab\x9c\xbb\xbd\xaa\xae\xa2\x9d\xaa\xae\xab\xcf",
    // "receipt" / M(Xor2) / S(219) / L(7)
    "\xb9\xae\xa8\xae\xa2\xbb\xbf\xcb\xfc\x2e\xb9\x20\xc1\xe9\xc8\x0c",
    // "X509_free" / M(Xor3) / S(108) / L(9)
    "\x24\x49\x4c\x45\x23\x1a\x0e\x19\x19\x7c\xa2\xb9\xa5\x45\xe8\x9e",
    // "strlen" / M(Xor1) / S(222) / L(6)
    "\xad\xaa\xac\xb2\xbb\xb0\xde\x5a\x73\x28\x49\x2d\xfa\xca\xcf\x66",
    // "Contents" / M(Rot) / S(137) / L(8)
    "\xcc\xf8\xf7\xfd\xee\xf7\xfd\xfc\x89\x8e\xdb\x94\xea\xdf\xbd\xb2",
    // "CFBundleCopyBundleURL" / M(Xor3) / S(121) / L(21)
    "\xcc\xc9\xcd\xfa\xe1\xeb\xe3\xea\xcc\xe0\xff\xf6\xcd\xfa\xe1\xeb\xe3\xea\xda\xdd\xc3\x8f",
    // "EVP_MD_CTX_init" / M(Xor1) / S(88) / L(15)
    "\x1d\x0e\x08\x07\x15\x1c\x07\x1b\x0c\x00\x07\x31\x36\x31\x2c\x58",
    // "kSecMatchLimit" / M(Xor1) / S(179) / L(14)
    "\xd8\xe0\xd6\xd0\xfe\xd2\xc7\xd0\xdb\xff\xda\xde\xda\xc7\xb3\x6c",
    // "" / M(None) / S(0) / L(0)
    "\xac\xdf\xb1\x7a\xd0\x8d\xbd\x95\x21\x70\x72\x66\xc4\x24\xc4\x3d\x1c\x4e\xe3\x37\x04\xcb\x47\x20\x02\x2a\xca\x39\xd6\xb7\xac\x4c",
    // "CFDataAppendBytes" / M(Xor4) / S(241) / L(17)
    "\xb1\xb4\xb6\x93\x86\x93\xb3\x82\x82\x97\x9c\x96\xb0\x8b\x86\x97\x81\xf2",
    // "CFDateFormatterCreate" / M(Xor1) / S(14) / L(21)
    "\x4d\x48\x4a\x6f\x7a\x6b\x48\x61\x7c\x63\x6f\x7a\x7a\x6b\x7c\x4d\x7c\x6b\x6f\x7a\x6b\x0e",
    // "alloc" / M(Xor4) / S(177) / L(5)
    "\x71\x7c\x7c\x7f\x73\x10\x25\x8b\x90\x10\x2c\x5b\xb8\x7c\x73\xfe",
    // "en0" / M(Xor4) / S(203) / L(3)
    "\xd5\xde\x80\xb0\x71\x2d\xb9\xec\xac\x12\x94\xed\x11\xf9\x5a\x46",
    // "IOObjectRelease" / M(Xor2) / S(2) / L(15)
    "\x5b\x5d\x5d\x70\x78\x77\x71\x66\x40\x77\x7e\x77\x73\x61\x77\x12",
    // "kSecClassCertificate" / M(Xor2) / S(164) / L(20)
    "\xda\xe2\xd4\xd2\xf2\xdd\xd0\xc2\xc2\xf2\xd4\xc3\xc5\xd8\xd7\xd8\xd2\xd0\xc5\xd4\xb1",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(171) / L(37)
    "\x92\x97\x84\x83\x9d\x92\xa3\xb4\xb0\xa5\xb4\x92\xbe\xa1\xa8\x90\xa1\xa1\xb4\xbf\xb5\xb8\xbf\xb6\x81\xb0\xa5\xb9\x92\xbe\xbc\xa1\xbe\xbf\xb4\xbf\xa5\xd1",
    // "sk_free" / M(Rot) / S(164) / L(7)
    "\x17\x0f\x03\x0a\x16\x09\x09\xa4\x41\x60\xe9\xa0\x8b\xa4\x52\xc8",
    // "" / M(None) / S(0) / L(0)
    "\xc2\xde\x67\xab\x96\x2b\xeb\x9d\x82\xe2\x85\xb0\x44\x77\x3a\x05\xdb\xb6\x7f\xfb\x25\x35\xb4\x60\x1d\xd2\x13\x24\xf6\x91\xaa\x83",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(5) / L(66)
    "\x67\x1b\x31\x3b\x3c\x2d\x25\x67\x04\x21\x2a\x3a\x29\x3a\x31\x67\x0e\x3a\x29\x25\x2d\x3f\x27\x3a\x23\x3b\x67\x0b\x27\x3a\x2d\x0e\x27\x3d\x26\x2c\x29\x3c\x21\x27\x26\x66\x2e\x3a\x29\x25\x2d\x3f\x27\x3a\x23\x67\x0b\x27\x3a\x2d\x0e\x27\x3d\x26\x2c\x29\x3c\x21\x27\x26\x48",
    // "SecKeychainOpen" / M(Rot) / S(74) / L(15)
    "\x9d\xaf\xad\x95\xaf\xc3\xad\xb2\xab\xb3\xb8\x99\xba\xaf\xb8\x4a",
    // "sk_num" / M(Xor2) / S(253) / L(6)
    "\x9e\x86\xb2\x83\x98\x80\xed\xb8\x81\xc0\x7c\xdf\x58\xf2\xb4\xeb",
    // "" / M(None) / S(0) / L(0)
    "\xee\x8f\xe1\x14\xdf\x4c\x02\x17\x72\x2c\xb8\x08\xa5\x12\x6b\xa2\x0d\xf8\x25\xb2\xc0\x1b\xa2\x3e\xf0\xd7\xca\x82\x4b\x9e\x9a\x6a",
    // "CFArrayGetValueAtIndex" / M(Xor3) / S(17) / L(22)
    "\x6b\x6e\x69\x5a\x5a\x49\x51\x6f\x4d\x5c\x7e\x49\x44\x5d\x4d\x69\x5c\x61\x46\x4c\x4d\x50\x28",
    // "" / M(None) / S(0) / L(0)
    "\x6f\x58\xf8\x3c\xd1\x28\x99\x39\xa9\x87\xd5\x72\x75\x98\xbe\xde\xe2\x3b\x59\x74\x45\x0c\xe9\x83\x1f\x88\x1c\xa3\x7b\xda\x7e\x39",
    // "CFReadStreamClose" / M(Xor4) / S(30) / L(17)
    "\x5f\x5a\x4e\x79\x7d\x78\x4f\x68\x6e\x79\x7d\x71\x5f\x70\x73\x6f\x79\x1c",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(22) / L(59)
    "\x64\x63\x68\x63\x37\x68\x67\x30\x68\x64\x64\x68\x60\x31\x68\x67\x6b\x68\x61\x33\x68\x62\x6a\x68\x34\x34\x68\x67\x6a\x68\x36\x63\x68\x66\x33\x68\x37\x60\x68\x60\x66\x68\x67\x60\x68\x36\x63\x68\x6b\x6a\x68\x36\x34\x68\x64\x31\x68\x64\x62\x52\xaa\x20\x75\x7d\x03\x8a\xd8\xa3",
    // "SHA1" / M(Xor3) / S(65) / L(4)
    "\x02\x19\x10\x60\x51\x8f\xec\xdb\x93\x17\xa2\x11\xf9\xdf\xfc\x37",
    // "CFStringCreateWithCString" / M(Xor4) / S(108) / L(25)
    "\x1b\x1e\x0b\x2c\x2a\x31\x36\x3f\x1b\x2a\x3d\x39\x2c\x3d\x0f\x31\x2c\x30\x1b\x0b\x2c\x2a\x31\x36\x3f\x58\x9b\x88\x10\xf4\x7d\x86\x8d\x0a",
    // "" / M(None) / S(0) / L(0)
    "\x83\x30\x32\x33\x9c\xd3\xe4\x2e\x15\xe9\x58\x4b\xd5\x96\x54\x6c\xb7\x42\x66\xa8\x23\xbf\xec\x36\xd5\xc7\x09\x9e\x8b\xc6\x54\x7a",
    // "SHA1_Init" / M(Rot) / S(11) / L(9)
    "\x5e\x53\x4c\x3c\x6a\x54\x79\x74\x7f\x0b\x8f\xa7\xf4\x17\x8b\xcc",
    // "CFDataGetLength" / M(Xor1) / S(117) / L(15)
    "\x36\x33\x31\x14\x01\x14\x32\x10\x01\x39\x10\x1b\x12\x01\x1d\x75",
    // "" / M(None) / S(0) / L(0)
    "\x71\xeb\x1a\x29\xc3\x28\x89\x75\x84\x17\x0e\x9d\xe8\x29\x97\xe9\xb2\x54\x9a\xdd\x4f\xb8\xe4\x08\xbf\x46\x19\x73\x0f\xbc\xa4\x9f",
    // "longjmp" / M(Xor1) / S(253) / L(7)
    "\x91\x92\x93\x9a\x97\x90\x8d\xfd\x1f\xf7\x8c\x7a\x2f\x90\xaf\x51",
    // "CFRelease" / M(Xor3) / S(48) / L(9)
    "\x03\x06\x12\x25\x2c\x25\x21\x33\x25\x40\x32\x49\xe4\x86\x1e\x5d",
    // "CFReadStreamOpen" / M(Xor3) / S(12) / L(16)
    "\x5e\x5b\x4f\x78\x7c\x79\x4e\x69\x6f\x78\x7c\x70\x52\x6d\x78\x73\x1d",
    // "CC_SHA1_Final" / M(Xor3) / S(240) / L(13)
    "\x43\x43\x5f\x53\x48\x41\x31\x5f\x46\x69\x6e\x61\x6c\x00\x83\x2e",
    // "BIO_s_mem" / M(Xor4) / S(8) / L(9)
    "\xc2\xc9\xcf\xdf\xf3\xdf\xed\xe5\xed\x80\x6e\xbd\xb8\x69\x28\x48",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor1) / S(66) / L(57)
    "\x6d\x11\x3b\x31\x36\x27\x2f\x6d\x0e\x2b\x20\x30\x23\x30\x3b\x6d\x09\x27\x3b\x21\x2a\x23\x2b\x2c\x31\x6d\x11\x3b\x31\x36\x27\x2f\x10\x2d\x2d\x36\x01\x27\x30\x36\x2b\x24\x2b\x21\x23\x36\x27\x31\x6c\x29\x27\x3b\x21\x2a\x23\x2b\x2c\x42\x6a\x43\xf4\x34\xf8\x05\x93\xb3",
    // "CFStringCreateWithCString" / M(Xor1) / S(135) / L(25)
    "\xc4\xc1\xd4\xf3\xf5\xee\xe9\xe0\xc4\xf5\xe2\xe6\xf3\xe2\xd0\xee\xf3\xef\xc4\xd4\xf3\xf5\xee\xe9\xe0\x87\x45\x9b\x21\x77\xf1\xc5\x43\x31",
    // "X509_STORE_add_cert" / M(Xor4) / S(54) / L(19)
    "\x60\x0d\x08\x01\x67\x6b\x6c\x77\x6a\x7d\x67\x59\x5c\x5c\x67\x5b\x5d\x4a\x4c\x38",
    // "strlen" / M(Xor1) / S(187) / L(6)
    "\xc8\xcf\xc9\xd7\xde\xd5\xbb\x0e\xa5\xf6\x02\x20\x02\xbc\x38\xb7",
    // "" / M(None) / S(0) / L(0)
    "\x65\x41\x3d\x38\xad\x2b\xd4\xce\x90\x11\x0e\x45\x70\x33\x52\xcd\x08\xc2\x84\x17\xb6\x98\xd5\xd1\x86\xd8\xeb\x8a\x7b\x5e\xa1\xb5",
    // "1.0.2" / M(Rot) / S(109) / L(5)
    "\x9e\x9b\x9d\x9b\x9f\x6d\x4f\x40\x44\xe0\x8c\x1b\xd9\x03\x11\xc7",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(203) / L(40)
    "\xed\xea\xea\x9e\xee\x99\xed\xed\xe9\x98\xee\xe2\xe8\x9a\xeb\xe3\x9d\x9d\xee\xe3\x9f\xea\xef\x9a\x9e\xe9\xe9\xef\xee\xe9\x9f\xea\xe2\xe3\x9f\x9d\xed\x98\xed\xeb\xdb\x01\x99\xa4\x77\xd0\x9f\x8b\x47",
    // "." / M(Xor1) / S(171) / L(1)
    "\x85\xab\x20\x83\x92\x0c\xf1\xc3\x56\xf2\xd7\x52\xbd\x86\x63\xac",
    // "" / M(None) / S(0) / L(0)
    "\x87\xfc\x8f\xa3\xb9\x64\x96\xe5\x4c\xd7\x58\x37\x02\x4c\x32\xed\xc0\x40\x88\x84\x41\x46\xfe\xaf\xba\x41\xa9\x0a\x72\x70\x37\xab",
    // "%02X" / M(Xor3) / S(102) / L(4)
    "\x53\x46\x44\x2e\x76\xb3\x6f\x23\x86\x25\x54\xc8\xeb\x22\x42\xb9",
    // "X509_STORE_free" / M(Xor4) / S(24) / L(15)
    "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xe6\xf2\xe5\xe5\x80",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x36\xed\x38\x31\x06\x9a\x1a\x02\x44\x8f\x31\x57\x8f\xd3\xd6\x1e\xaa\xe1\x70\xec\x30\x7e\xdb\x37\x58\xb5\x80\x32\x90\x4a\x31",
    // "CFReadStreamOpen" / M(Xor1) / S(144) / L(16)
    "\xd3\xd6\xc2\xf5\xf1\xf4\xc3\xe4\xe2\xf5\xf1\xfd\xdf\xe0\xf5\xfe\x90",
    // "start" / M(Xor1) / S(223) / L(5)
    "\xac\xab\xbe\xad\xab\xdf\x3c\x04\x15\x00\x94\x93\x60\xf1\xe3\xb6",
    // "globfree" / M(Rot) / S(244) / L(8)
    "\x5b\x60\x63\x56\x5a\x66\x59\x59\xf4\x39\x28\x5f\x72\xcd\x23\x4c",
    // "SecCertificateCopyData" / M(Xor4) / S(173) / L(22)
    "\xd8\xee\xe8\xc8\xee\xf9\xff\xe2\xed\xe2\xe8\xea\xff\xee\xc8\xe4\xfb\xf2\xcf\xea\xff\xea\x8b",
    // "X509_digest" / M(Xor2) / S(135) / L(11)
    "\xcf\xa2\xa7\xae\xc8\xf3\xfe\xf0\xf2\xe4\xe3\x97\xf9\xb3\xde\xa6",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(55) / L(66)
    "\x5b\x27\x0d\x07\x00\x11\x19\x5b\x38\x1d\x16\x06\x15\x06\x0d\x5b\x32\x06\x15\x19\x11\x03\x1b\x06\x1f\x07\x5b\x37\x1b\x06\x11\x32\x1b\x01\x1a\x10\x15\x00\x1d\x1b\x1a\x5a\x12\x06\x15\x19\x11\x03\x1b\x06\x1f\x5b\x37\x1b\x06\x11\x32\x1b\x01\x1a\x10\x15\x00\x1d\x1b\x1a\x74",
    // "sk_num" / M(Xor4) / S(181) / L(6)
    "\x23\x3b\x0f\x3e\x25\x3d\x50\x9d\xb2\xbf\xcb\x64\x47\x93\x6b\x4f",
    // "PKCS7_free" / M(Rot) / S(228) / L(10)
    "\x34\x2f\x27\x37\x1b\x43\x4a\x56\x49\x49\xe4\x2c\xf5\xa7\xef\x7b",
    // "sk_free" / M(Xor4) / S(160) / L(7)
    "\x73\x6b\x5f\x66\x72\x65\x65\x00\x0f\xfa\x58\xca\xb8\x5a\x61\x17",
    // "d2i_PKCS7_bio" / M(Rot) / S(85) / L(13)
    "\xb9\x87\xbe\xb4\xa5\xa0\x98\xa8\x8c\xb4\xb7\xbe\xc4\x55\xa4\xa1",
    // "en0" / M(Xor2) / S(121) / L(3)
    "\x0c\x07\x59\x69\x78\x6b\xee\x39\x7b\x01\xb7\x08\xf2\x03\x51\xfe",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(102) / L(26)
    "\x25\x20\x34\x03\x07\x02\x35\x12\x14\x03\x07\x0b\x25\x14\x03\x07\x12\x03\x31\x0f\x12\x0e\x20\x0f\x0a\x03\x66\xf0\x29\xfa\x76\x48\x92\x2e\x6a",
    // "" / M(None) / S(0) / L(0)
    "\xd5\x13\xa8\xd0\xf4\xa3\x1a\xea\x22\xdd\xa3\xd0\x5a\xce\x31\xde\x09\x50\x54\xf1\x3e\xa6\x60\x93\x60\xda\x90\x61\x11\xf7\x00\x17",
    // "CFDictionaryGetValue" / M(Xor2) / S(175) / L(20)
    "\xf9\xfc\xfe\xd3\xd9\xce\xd3\xd5\xd4\xdb\xc8\xc3\xfd\xdf\xce\xec\xdb\xd6\xcf\xdf\xba",
    // "BIO_new" / M(Rot) / S(243) / L(7)
    "\x35\x3c\x42\x52\x61\x58\x6a\xf3\x0e\xc3\xde\xd1\xde\x8e\xa1\xa5",
    // "" / M(None) / S(0) / L(0)
    "\x22\xb1\x8e\x87\x35\x04\xa4\x3f\xa0\x90\x1c\xfa\xf2\xd7\x7b\xa4\xf7\xdb\xf0\xd1\x7f\x53\x30\xbd\xf1\xf6\x41\x6d\x6d\x15\x45\xe2",
    // "" / M(None) / S(0) / L(0)
    "\x3c\x12\xb4\x5f\xdb\x5a\x62\x65\x58\x79\x01\x6c\x27\x0c\x62\xa3\xe8\x99\x1f\xa3\x89\xeb\xd2\x3f\x74\x7c\xd3\xd5\x29\x4a\xdc\x3b",
    // "" / M(None) / S(0) / L(0)
    "\x38\xa2\xf9\x85\xaf\x6e\x41\x54\xf2\x57\xb2\xdb\xca\x45\xeb\xb2\x81\xc5\x9a\x98\xec\xfb\x05\x01\xda\x11\x66\x56\xaa\xf4\x23\x04",
    // "CFBundleVersion" / M(Xor4) / S(63) / L(15)
    "\xb3\xb6\xb2\x85\x9e\x94\x9c\x95\xa6\x95\x82\x83\x99\x9f\x9e\xf0",
    // "Contents/_MASReceipt/receipt" / M(Xor1) / S(228) / L(28)
    "\xa7\x8b\x8a\x90\x81\x8a\x90\x97\xcb\xbb\xa9\xa5\xb7\xb6\x81\x87\x81\x8d\x94\x90\xcb\x96\x81\x87\x81\x8d\x94\x90\xe4\xa6\x0e\xb0\x44\x77\x78\x51\x63",
    // "" / M(None) / S(0) / L(0)
    "\x86\xa9\xba\x4b\x42\x1d\xb8\x36\x17\x5a\x09\xf0\xff\xd6\x39\x73\xa2\xc1\x6f\xd2\x9f\xe8\x18\x33\x1b\x4f\xcb\x64\x2c\x24\x9c\xbc",
    // "%02x:" / M(Xor2) / S(216) / L(5)
    "\xed\xf8\xfa\xb0\xf2\xc8\x4a\x95\xf1\xc2\x18\x02\xfb\x9e\xd2\x65",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(81) / L(36)
    "\x12\x17\x13\x24\x3f\x35\x3d\x34\x16\x34\x25\x07\x30\x3d\x24\x34\x17\x3e\x23\x18\x3f\x37\x3e\x15\x38\x32\x25\x38\x3e\x3f\x30\x23\x28\x1a\x34\x28\x51",
    // "CFBundleVersion" / M(Xor4) / S(173) / L(15)
    "\x93\x96\x92\xa5\xbe\xb4\xbc\xb5\x86\xb5\xa2\xa3\xb9\xbf\xbe\xd0",
    // "" / M(None) / S(0) / L(0)
    "\x3f\x57\xd2\xd9\x45\x14\x78\x0e\x22\xd9\x28\x19\x5b\x1c\xe9\xa6\xf5\x16\x8a\x46\xc7\xff\x68\xca\x69\x62\x79\x68\xd7\xa3\xbd\x09",
    // "" / M(None) / S(0) / L(0)
    "\x37\x30\xc7\xe6\x7a\x1c\x8a\xfb\xcb\x58\x48\x59\x20\x18\xcb\x51\xe5\x68\xea\xc3\x4c\xf8\xfe\x36\x20\xa2\x11\x5f\x99\x5b\x84\x27",
    // "BIO_write" / M(Rot) / S(188) / L(9)
    "\xfe\x05\x0b\x1b\x33\x2e\x25\x30\x21\xbc\x05\x67\x23\xf0\x49\x52",
    // "setjmp" / M(Xor1) / S(86) / L(6)
    "\x25\x33\x22\x3c\x3b\x26\x56\x5e\x3d\x5a\x14\x09\x6e\x0b\x2c\x9e",
    // "CFArrayGetCount" / M(Xor4) / S(201) / L(15)
    "\xd3\xd6\xd1\xe2\xe2\xf1\xe9\xd7\xf5\xe4\xd3\xff\xe5\xfe\xe4\x90",
    // "kSecClass" / M(Xor4) / S(164) / L(9)
    "\x2b\x13\x25\x23\x03\x2c\x21\x33\x33\x40\x38\x1f\x14\xd3\x24\x4d",
    // "" / M(None) / S(0) / L(0)
    "\x0d\xcf\xd1\x02\xfb\xd0\xdb\xa4\x30\x22\x5b\x04\xb2\x6f\xcb\x33\x42\xd7\x57\x78\x09\x61\x84\x10\x22\xf8\x15\x77\x20\xb9\x20\x27",
    // "X509_STORE_add_cert" / M(Xor4) / S(82) / L(19)
    "\x30\x5d\x58\x51\x37\x3b\x3c\x27\x3a\x2d\x37\x09\x0c\x0c\x37\x0b\x0d\x1a\x1c\x68",
    // "sk_value" / M(Xor3) / S(128) / L(8)
    "\xe3\xfb\xcf\xe6\xf1\xfc\xe5\xf5\x90\xbb\x8b\xbc\xdd\x34\xe7\xbf",
    // "Contents" / M(Xor4) / S(64) / L(8)
    "\x43\x6f\x6e\x74\x65\x6e\x74\x73\x00\xdd\x13\xcb\xe5\xa3\x17\xc3",
    // "CFEqual" / M(Xor2) / S(48) / L(7)
    "\x63\x66\x65\x51\x55\x41\x4c\x20\xb8\xac\x36\x42\x31\xcd\x96\x4d",
    // "CFStringCreateWithCString" / M(Rot) / S(53) / L(25)
    "\x78\x7b\x88\xa9\xa7\x9e\xa3\x9c\x78\xa7\x9a\x96\xa9\x9a\x8c\x9e\xa9\x9d\x78\x88\xa9\xa7\x9e\xa3\x9c\x35\x08\xed\xc9\x2c\x25\x66\x16\x89",
    // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(79) / L(35)
    "\x30\x35\x37\x12\x07\x16\x35\x1c\x01\x1e\x12\x07\x07\x16\x01\x30\x01\x16\x12\x07\x16\x37\x12\x07\x16\x35\x01\x1c\x1e\x20\x07\x01\x1a\x1d\x14\x73",
    // "" / M(None) / S(0) / L(0)
    "\x28\x25\xfd\x1c\x66\x5b\x85\xb2\x26\x13\x6c\xd4\xee\x9d\xb1\x10\x7f\x19\x4a\x21\x3b\xca\x06\xe6\xa7\xab\x05\xdf\x6a\x80\x1e\x7e",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(52) / L(54)
    "\x03\x7f\x55\x5f\x58\x49\x41\x03\x60\x45\x4e\x5e\x4d\x5e\x55\x03\x6a\x5e\x4d\x41\x49\x5b\x43\x5e\x47\x5f\x03\x7f\x49\x4f\x59\x5e\x45\x58\x55\x02\x4a\x5e\x4d\x41\x49\x5b\x43\x5e\x47\x03\x7f\x49\x4f\x59\x5e\x45\x58\x55\x2c",
    // "SecCertificateCopyData" / M(Rot) / S(92) / L(22)
    "\xaf\xc1\xbf\x9f\xc1\xce\xd0\xc5\xc2\xc5\xbf\xbd\xd0\xc1\x9f\xcb\xcc\xd5\xa0\xbd\xd0\xbd\x5c",
    // "kSecMatchSubjectContains" / M(Xor1) / S(226) / L(24)
    "\x89\xb1\x87\x81\xaf\x83\x96\x81\x8a\xb1\x97\x80\x88\x87\x81\x96\xa1\x8d\x8c\x96\x83\x8b\x8c\x91\xe2\x93\xdb\xf0\x25\x98\x0f\x5b\xda",
    // "" / M(None) / S(0) / L(0)
    "\xfb\x48\x98\xde\x81\x2e\x81\x31\x57\x3d\x2e\xe8\x26\xba\x09\x3c\x50\x69\x72\x41\x4f\xa0\x08\xa9\x29\xb4\x84\x87\xda\x57\x31\xf4",
    // "" / M(None) / S(0) / L(0)
    "\xbb\x2e\xa6\x06\x76\xf7\x07\x43\xc9\xe0\xaf\xf9\x7b\x66\xdd\xfd\x81\x51\x5b\xe3\xa5\xc7\x4d\x07\x8c\x6a\x38\x7a\xb8\x89\x2a\x14",
    // "%02x" / M(Xor3) / S(165) / L(4)
    "\x90\x85\x87\xcd\xb5\x26\x9e\xa7\x98\x48\x84\xbe\xe2\x53\x54\x16",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(104) / L(35)
    "\xab\xae\xac\xc9\xdc\xcd\xae\xd7\xda\xd5\xc9\xdc\xdc\xcd\xda\xab\xda\xcd\xc9\xdc\xcd\xac\xc9\xdc\xcd\xae\xda\xd7\xd5\xbb\xdc\xda\xd1\xd6\xcf\x68",
    // "IOMACAddress" / M(Xor1) / S(26) / L(12)
    "\x53\x55\x57\x5b\x59\x5b\x7e\x7e\x68\x7f\x69\x69\x1a\x2e\xd1\x85",
    // "kCFTypeArrayCallBacks" / M(Xor3) / S(154) / L(21)
    "\xdb\xf3\xf6\xe4\xc9\xc0\xd5\xf1\xc2\xc2\xd1\xc9\xf3\xd1\xdc\xdc\xf2\xd1\xd3\xdb\xc3\xb0",
    // "CFDataCreateMutable" / M(Xor3) / S(45) / L(19)
    "\x02\x07\x05\x20\x35\x20\x02\x33\x24\x20\x35\x24\x0c\x34\x35\x20\x23\x2d\x24\x41",
    // "SHA1" / M(Xor2) / S(7) / L(4)
    "\x44\x5f\x56\x26\x17\x00\xa5\xda\xa6\xa1\xfc\x8a\xf6\x92\xf7\x11",
    // "ASN1_OBJECT_free" / M(Xor1) / S(133) / L(16)
    "\xc4\xd6\xcb\xb4\xda\xca\xc7\xcf\xc0\xc6\xd1\xda\xe3\xf7\xe0\xe0\x85",
    // "CFDateFormatterSetFormat" / M(Xor2) / S(107) / L(24)
    "\x09\x0c\x0e\x2b\x3e\x2f\x0c\x25\x38\x27\x2b\x3e\x3e\x2f\x38\x19\x2f\x3e\x0c\x25\x38\x27\x2b\x3e\x4a\x09\xfb\x34\xfc\x04\xf9\xf4\xb6",
    // "CC_SHA1_Init" / M(Xor1) / S(48) / L(12)
    "\x73\x73\x6f\x63\x78\x71\x01\x6f\x79\x5e\x59\x44\x30\xa9\xdc\x15",
    // "Contents" / M(Rot) / S(236) / L(8)
    "\x2f\x5b\x5a\x60\x51\x5a\x60\x5f\xec\x51\xae\x7c\x61\x33\x4b\x11",
    // "IOBSDNameMatching" / M(Xor4) / S(206) / L(17)
    "\x35\x33\x3e\x2f\x38\x32\x1d\x11\x19\x31\x1d\x08\x1f\x14\x15\x12\x1b\x7c",
    // "exit" / M(Xor4) / S(138) / L(4)
    "\xc5\xd8\xc9\xd4\xa0\x10\xc8\x65\xb1\xfa\x68\xcb\x4e\xe5\x86\x5c",
    // "1.0.2" / M(Xor1) / S(209) / L(5)
    "\xe0\xff\xe1\xff\xe3\xd1\xfd\x8c\x06\x3f\x8a\xc4\x7b\x8b\x2c\x54",
    // "IOMasterPort" / M(Xor1) / S(8) / L(12)
    "\x41\x47\x45\x69\x7b\x7c\x6d\x7a\x58\x67\x7a\x7c\x08\x21\xf1\x8d",
    // "" / M(None) / S(0) / L(0)
    "\x74\x4d\x38\x2d\x3e\xa2\x5e\x52\xe8\x21\xe5\x6c\xfa\x41\x5c\x22\x28\x19\x4e\x5f\x9f\xa7\xca\xa7\xb9\x58\xcd\x49\xb9\x64\xe4\x76",
    // "glob_b" / M(Xor2) / S(162) / L(6)
    "\xd5\xde\xdd\xd0\xed\xd0\xb2\x64\x72\x02\x12\x1e\x18\xeb\x71\x7e",
    // "IOMasterPort" / M(Xor4) / S(88) / L(12)
    "\xc9\xcf\xcd\xe1\xf3\xf4\xe5\xf2\xd0\xef\xf2\xf4\x80\x9b\xd9\xa9",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(245) / L(31)
    "\x9c\x9a\x87\xb0\xb2\xbc\xa6\xa1\xa7\xac\x90\xbb\xa1\xa7\xac\x96\xa7\xb0\xb4\xa1\xb0\x96\x93\x85\xa7\xba\xa5\xb0\xa7\xa1\xac\xd5",
    // "PKCS7_verify" / M(Xor4) / S(132) / L(12)
    "\x10\x0b\x03\x13\x77\x1f\x36\x25\x32\x29\x26\x39\x40\x39\xd8\x8c",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x8e\x13\x0f\x6c\x9c\xa0\x5e\x28\x41\x94\x46\x27\xa5\x3c\xe4\xb0\xe0\xad\x6f\xd0\xc5\x2f\xfe\x56\xaa\x19\x2f\x35\xc1\xb1\x89",
    // "kSecMatchLimitAll" / M(Xor2) / S(235) / L(17)
    "\x92\xaa\x9c\x9a\xb4\x98\x8d\x9a\x91\xb5\x90\x94\x90\x8d\xb8\x95\x95\xf9",
    // "" / M(None) / S(0) / L(0)
    "\xf8\xa4\xd7\xb3\x19\xb7\xe5\x43\x68\x6e\xb2\x30\xd7\x04\x78\xba\x02\x23\x2f\x8a\x2e\x23\xc4\x6d\x96\x6f\x37\xb9\x83\xe9\x78\xe5",
    // "Contents/_MASReceipt/receipt" / M(Xor1) / S(84) / L(28)
    "\x17\x3b\x3a\x20\x31\x3a\x20\x27\x7b\x0b\x19\x15\x07\x06\x31\x37\x31\x3d\x24\x20\x7b\x26\x31\x37\x31\x3d\x24\x20\x54\x35\xdc\x69\xb2\x11\xca\xf8\xaf",
    // "CFReadStreamRead" / M(Xor4) / S(91) / L(16)
    "\x48\x4d\x59\x6e\x6a\x6f\x58\x7f\x79\x6e\x6a\x66\x59\x6e\x6a\x6f\x0b",
    // "CFBundleShortVersionString" / M(Xor4) / S(13) / L(26)
    "\x84\x81\x85\xb2\xa9\xa3\xab\xa2\x94\xaf\xa8\xb5\xb3\x91\xa2\xb5\xb4\xae\xa8\xa9\x94\xb3\xb5\xae\xa9\xa0\xc7\xb5\xbe\xda\xb4\x70\x4b\x1c\x60",
    // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(13) / L(25)
    "\x8b\x94\x88\x94\x82\x8e\x8a\x94\x8b\x8b\x89\x8c\x89\x8f\x94\x8b\x8a\x8a\x94\x8c\x94\x8b\x8b\x94\x8b\xba\x7c\xc7\x61\x00\x9c\x05\x01\x00",
    // "EVP_DigestFinal" / M(Xor1) / S(184) / L(15)
    "\xfd\xee\xe8\xe7\xfc\xd1\xdf\xdd\xcb\xcc\xfe\xd1\xd6\xd9\xd4\xb8",
    // "X509_NAME_get_text_by_NID" / M(Xor1) / S(245) / L(25)
    "\xad\xc0\xc5\xcc\xaa\xbb\xb4\xb8\xb0\xaa\x92\x90\x81\xaa\x81\x90\x8d\x81\xaa\x97\x8c\xaa\xbb\xbc\xb1\xf5\x92\x9b\xb0\x6b\x34\xe0\xb0\x70",
    // "" / M(None) / S(0) / L(0)
    "\xd8\x25\x94\xf7\xcd\x38\x6c\xf6\xde\x89\x3f\x45\x97\x0b\x3a\xe8\x13\xa9\xf7\x7c\x3d\xc8\x11\x12\xcb\xb1\x1f\x21\xea\xad\xd7\x72",
    // "" / M(None) / S(0) / L(0)
    "\x8f\x29\xf0\x91\x6d\x6c\x80\x19\x0f\x85\x92\xb2\xe5\xfb\x5c\x83\xa4\x85\x99\x62\xfe\xcb\x0d\x66\x96\x6b\x07\x3b\xcb\xff\x75\xc4",
    // "" / M(None) / S(0) / L(0)
    "\x79\xb9\xb3\xe4\x26\x3e\x8b\x90\x05\x71\xe3\xdb\xc9\x45\x04\x65\x1b\xb4\x1a\xae\xe1\xd7\xfd\xcb\xaf\x37\xde\x88\x46\x42\x8d\x7f",
    // "Contents/_MASReceipt" / M(Xor1) / S(181) / L(20)
    "\xf6\xda\xdb\xc1\xd0\xdb\xc1\xc6\x9a\xea\xf8\xf4\xe6\xe7\xd0\xd6\xd0\xdc\xc5\xc1\xb5",
    // "CFBundleUnloadExecutable" / M(Xor3) / S(84) / L(24)
    "\x36\x33\x37\x00\x1b\x11\x19\x10\x20\x1b\x19\x1a\x14\x11\x30\x0d\x10\x16\x00\x01\x14\x17\x19\x10\x75\x9e\x4a\x53\x42\xda\x27\x2b\x02",
    // "CFBundleIdentifier" / M(Xor3) / S(215) / L(18)
    "\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xa3\x8e\x8f\x84\x9e\x83\x8c\x83\x8f\x98\xea",
    // "CC_SHA1_Init" / M(Rot) / S(57) / L(12)
    "\x7c\x7c\x98\x8c\x81\x7a\x6a\x98\x82\xa7\xa2\xad\x39\xa2\x7d\x9c",
    // "exit" / M(Xor4) / S(98) / L(4)
    "\x45\x58\x49\x54\x20\xf7\xd4\x01\x6e\x3a\xf7\x91\xf0\x80\x1f\xda",
    // "" / M(None) / S(0) / L(0)
    "\x80\x20\xce\x09\x31\x17\x7e\x3e\x6a\xe4\x47\x50\xea\x35\x68\xca\xbb\xcf\x5c\x43\xb9\x32\x36\xfa\x39\x92\x16\x1c\x0c\x74\x12\xc6",
    // "CC_SHA1_Final" / M(Xor1) / S(35) / L(13)
    "\x60\x60\x7c\x70\x6b\x62\x12\x7c\x65\x4a\x4d\x42\x4f\x23\xb8\x9d",
    // "setDelegate:" / M(Xor1) / S(145) / L(12)
    "\xe2\xf4\xe5\xd5\xf4\xfd\xf4\xf6\xf0\xe5\xf4\xab\x91\x6d\x1f\xb2",
    // "objc_msgSend" / M(Xor4) / S(112) / L(12)
    "\x6f\x62\x6a\x63\x5f\x6d\x73\x67\x53\x65\x6e\x64\x00\xe0\x80\xe0",
    // "CFBundleUnloadExecutable" / M(Xor1) / S(127) / L(24)
    "\x3c\x39\x3d\x0a\x11\x1b\x13\x1a\x2a\x11\x13\x10\x1e\x1b\x3a\x07\x1a\x1c\x0a\x0b\x1e\x1d\x13\x1a\x7f\x6b\x0e\x4b\x8e\xc9\xb7\x74\x03",
    // "%02x" / M(Rot) / S(230) / L(4)
    "\x0b\x16\x18\x5e\xe6\x34\x8f\x82\x80\xb4\xf0\xe7\x83\xf3\x02\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x07\xfe\x94\x79\x5b\xce\xfc\x51\xf8\x4a\x52\x9e\x1e\xca\x94\xb4\xfe\x4c\x72\x29\x35\x19\x6c\xb9\x19\xd0\x75\xb8\xbc\xaf\x42\x19",
    // "kSecMatchSubjectContains" / M(Xor3) / S(250) / L(24)
    "\x70\x48\x7e\x78\x56\x7a\x6f\x78\x73\x48\x6e\x79\x71\x7e\x78\x6f\x58\x74\x75\x6f\x7a\x72\x75\x68\x1b\x07\x4e\x03\x30\xb9\x8e\xad\x3c",
    // "IOMACAddress" / M(Xor2) / S(252) / L(12)
    "\xa5\xa3\xa1\xad\xaf\xad\x88\x88\x9e\x89\x9f\x9f\xec\x10\x18\x34",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(32) / L(57)
    "\x6f\x13\x39\x33\x34\x25\x2d\x6f\x0c\x29\x22\x32\x21\x32\x39\x6f\x0b\x25\x39\x23\x28\x21\x29\x2e\x33\x6f\x13\x39\x33\x34\x25\x2d\x12\x2f\x2f\x34\x03\x25\x32\x34\x29\x26\x29\x23\x21\x34\x25\x33\x6e\x2b\x25\x39\x23\x28\x21\x29\x2e\x40\x95\xf4\xcd\xd1\x1c\x44\x16\x55",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(92) / L(59)
    "\x46\x41\x4a\x41\x15\x4a\x45\x12\x4a\x46\x46\x4a\x42\x13\x4a\x45\x49\x4a\x43\x11\x4a\x40\x48\x4a\x16\x16\x4a\x45\x48\x4a\x14\x41\x4a\x44\x11\x4a\x15\x42\x4a\x42\x44\x4a\x45\x42\x4a\x14\x41\x4a\x49\x48\x4a\x14\x16\x4a\x46\x13\x4a\x46\x40\x70\x1b\x5c\xc9\x55\xec\x5c\x1f\x10",
    // "OBJ_txt2obj" / M(Xor3) / S(89) / L(11)
    "\x26\x2b\x23\x36\x1d\x11\x1d\x5b\x06\x0b\x03\x69\xe9\x62\xc3\xcd",
    // "IOMasterPort" / M(Xor3) / S(95) / L(12)
    "\x26\x20\x22\x0e\x1c\x1b\x0a\x1d\x3f\x00\x1d\x1b\x6f\xdd\xaf\x8e",
    // "" / M(None) / S(0) / L(0)
    "\xec\xfd\xfd\x4c\x17\x9e\x36\x06\xd1\x10\xd1\x8f\xfd\x1d\x8d\x7f\x79\x45\xa7\x54\xb8\x62\x84\xee\x12\x97\x7b\x0e\xb7\x5e\x1a\xf2",
    // "CFBundleGetIdentifier" / M(Xor2) / S(67) / L(21)
    "\x16\x13\x17\x20\x3b\x31\x39\x30\x12\x30\x21\x1c\x31\x30\x3b\x21\x3c\x33\x3c\x30\x27\x55",
    // "" / M(None) / S(0) / L(0)
    "\x79\x41\xcc\x8f\xcd\x77\x27\x7e\xd2\x2c\x82\xe1\x60\x0a\x34\x2a\xbe\xde\x3c\xad\xf7\xe3\xfe\xfa\x83\xbc\x7f\x87\xd1\xbf\xdf\x52",
    // "CFReadStreamClose" / M(Rot) / S(32) / L(17)
    "\x63\x66\x72\x85\x81\x84\x73\x94\x92\x85\x81\x8d\x63\x8c\x8f\x93\x85\x20",
    // "X509_STORE_new" / M(Rot) / S(137) / L(14)
    "\xe1\xbe\xb9\xc2\xe8\xdc\xdd\xd8\xdb\xce\xe8\xf7\xee\x00\x89\xe8",
    // "CFDataCreate" / M(Xor3) / S(139) / L(12)
    "\xd8\xdd\xdf\xfa\xef\xfa\xd8\xe9\xfe\xfa\xef\xfe\x9b\x3e\xf0\xd4",
    // "sk_value" / M(Xor1) / S(80) / L(8)
    "\x23\x3b\x0f\x26\x31\x3c\x25\x35\x50\xcb\xea\xb2\x23\xa9\xd8\x7e",
    // "kSecMatchSearchList" / M(Xor3) / S(242) / L(19)
    "\x6d\x55\x63\x65\x4b\x67\x72\x65\x6e\x55\x63\x67\x74\x65\x6e\x4a\x6f\x75\x72\x06",
    // "" / M(None) / S(0) / L(0)
    "\x3d\xa4\x0d\x1b\xbc\x83\x4b\x4e\x87\xc9\x17\x0b\x6b\xa0\xf0\x18\x13\xbf\x8f\x30\x8d\x5b\x12\x26\x03\x28\x82\xb2\xba\xa4\x33\x83",
    // "" / M(None) / S(0) / L(0)
    "\xa5\xb9\xca\x55\x9e\x93\x3a\xa6\xcb\x7d\x1d\xc7\x56\xa2\xe7\x5d\xb8\x56\x05\x1e\x04\x3b\x1f\xb9\xff\x54\x50\x67\xe4\xb7\x14\xe0",
    // "sel_registerName" / M(Xor1) / S(188) / L(16)
    "\xcf\xd9\xd0\xe3\xce\xd9\xdb\xd5\xcf\xc8\xd9\xce\xf2\xdd\xd1\xd9\xbc",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(118) / L(25)
    "\xce\xab\xa6\xaf\xd5\xc4\xb7\xc3\xbb\xd5\xdd\xdb\xea\xd5\xea\xdb\xee\xea\xd5\xd8\xef\xd5\xc4\xbf\xba\x76\x2f\x8f\x18\x06\x9b\x64\x90\x37",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(131) / L(59)
    "\xf1\xf6\xfd\xf6\x82\xfd\xf2\x85\xfd\xf1\xf1\xfd\xf5\x84\xfd\xf2\xfe\xfd\xf4\x86\xfd\xf7\xff\xfd\x81\x81\xfd\xf2\xff\xfd\x83\xf6\xfd\xf3\x86\xfd\x82\xf5\xfd\xf5\xf3\xfd\xf2\xf5\xfd\x83\xf6\xfd\xfe\xff\xfd\x83\x81\xfd\xf1\x84\xfd\xf1\xf7\xc7\xbf\xa4\x74\x96\xfd\x79\x7d\x84",
    // "kCFTypeArrayCallBacks" / M(Xor2) / S(165) / L(21)
    "\xd8\xf0\xf5\xe7\xca\xc3\xd6\xf2\xc1\xc1\xd2\xca\xf0\xd2\xdf\xdf\xf1\xd2\xd0\xd8\xc0\xb3",
    // "" / M(None) / S(0) / L(0)
    "\xfe\x99\xed\xa4\x4a\x4d\x30\xb5\x06\x38\x2b\x6e\x56\xd7\x06\x4a\x29\x2e\x61\x53\xbf\x7c\x6f\xc4\xba\x30\x67\xfa\x49\xec\x75\x15",
    // "" / M(None) / S(0) / L(0)
    "\x77\xe4\x9b\xe8\x4b\x10\x57\x6e\x2d\xd7\xbc\xb1\x7b\xa3\x4a\x3a\x99\x1f\xff\xe9\x6d\x28\x6a\xe8\x22\x08\x08\x61\x01\x20\x5e\x98",
    // "CFDateFormatterCreate" / M(Xor1) / S(227) / L(21)
    "\xa0\xa5\xa7\x82\x97\x86\xa5\x8c\x91\x8e\x82\x97\x97\x86\x91\xa0\x91\x86\x82\x97\x86\xe3",
    // "" / M(None) / S(0) / L(0)
    "\x0b\x54\xb1\xa5\x5b\x63\xff\xee\x94\x42\x53\xd5\x0f\x46\x59\xd2\x0e\x5e\xf2\xe8\xea\x55\xb6\xde\xd9\x47\x36\xa6\xb4\xf3\x6e\x3e",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(66) / L(40)
    "\x74\x73\x73\x27\x77\x20\x74\x74\x70\x21\x77\x7b\x71\x23\x72\x7a\x24\x24\x77\x7a\x26\x73\x76\x23\x27\x70\x70\x76\x77\x70\x26\x73\x7b\x7a\x26\x24\x74\x21\x74\x72\x42\x63\xcb\x47\x52\x6a\xed\xcb\x91",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(197) / L(59)
    "\x62\x65\x6e\x65\x11\x6e\x61\x16\x6e\x62\x62\x6e\x66\x17\x6e\x61\x6d\x6e\x67\x15\x6e\x64\x6c\x6e\x12\x12\x6e\x61\x6c\x6e\x10\x65\x6e\x60\x15\x6e\x11\x66\x6e\x66\x60\x6e\x61\x66\x6e\x10\x65\x6e\x6d\x6c\x6e\x10\x12\x6e\x62\x17\x6e\x62\x64\x54\x8d\x59\x72\x71\x31\x0e\x2c\x7a",
    // "CFBundleCopyBundleURL" / M(Rot) / S(248) / L(21)
    "\x3b\x3e\x3a\x6d\x66\x5c\x64\x5d\x3b\x67\x68\x71\x3a\x6d\x66\x5c\x64\x5d\x4d\x4a\x44\xf8",
    // "SHA1_Update" / M(Xor1) / S(67) / L(11)
    "\x10\x0b\x02\x72\x1c\x16\x33\x27\x22\x37\x26\x43\xf0\xce\x14\x1f",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(178) / L(32)
    "\x8b\x8b\x8b\x8b\xd5\xdf\xd5\xbf\xbf\xd5\xdf\xd5\x96\x96\xd5\xa6\xd5\xba\xba\xd5\xc8\xd5\x9f\x9f\xd5\xc8\xd5\x81\x81\xd5\xa8\xd5\xf2",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(86) / L(28)
    "\x3a\x3c\x20\x16\x01\x05\x1a\x10\x16\x34\x16\x07\x3e\x12\x07\x10\x1b\x1a\x1d\x14\x20\x16\x01\x05\x1a\x10\x16\x00\x73\x13\xa7\x23\xa0\x46\x29\xbc\x6d",
    // "setDelegate:" / M(Rot) / S(51) / L(12)
    "\xa6\x98\xa7\x77\x98\x9f\x98\x9a\x94\xa7\x98\x6d\x33\x20\x12\xf1",
    // "" / M(None) / S(0) / L(0)
    "\x42\x7a\x5e\xa5\x94\x03\xe0\xc7\x11\xa1\xf7\x85\x3d\x15\x31\x43\x2f\xc0\x2a\x5b\x6b\x6a\x29\xcc\x11\x36\x47\xb5\xcf\xfb\x0e\xcd",
    // "strncmp" / M(Xor4) / S(156) / L(7)
    "\xb3\xb4\xb2\xae\xa3\xad\xb0\xc0\xa1\xb2\x0b\x1e\xb6\x7a\xdf\xae",
    // "" / M(None) / S(0) / L(0)
    "\x31\xb2\xde\x89\x09\x44\xa0\xca\x2f\x31\xbd\x8f\xea\x4c\xb5\x0d\x36\xff\x5f\xff\x24\x73\x30\x74\x49\xab\xc7\x0a\xfa\x9b\x26\x46",
    // "SecKeychainSearchCopyNext" / M(Xor4) / S(146) / L(25)
    "\x37\x01\x07\x2f\x01\x1d\x07\x0c\x05\x0d\x0a\x37\x01\x05\x16\x07\x0c\x27\x0b\x14\x1d\x2a\x01\x1c\x10\x64\x30\x85\xfa\x71\xa4\xeb\xd4\x1f",
    // "CFReadStreamRead" / M(Xor2) / S(92) / L(16)
    "\x0e\x0b\x1f\x28\x2c\x29\x1e\x39\x3f\x28\x2c\x20\x1f\x28\x2c\x29\x4d",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(38) / L(40)
    "\x10\x17\x17\x43\x13\x44\x10\x10\x14\x45\x13\x1f\x15\x47\x16\x1e\x40\x40\x13\x1e\x42\x17\x12\x47\x43\x14\x14\x12\x13\x14\x42\x17\x1f\x1e\x42\x40\x10\x45\x10\x16\x26\x11\x7e\xbe\x7e\xe1\xe0\x40\x4f",
    // "CFArrayCreateMutable" / M(Xor2) / S(217) / L(20)
    "\x8f\x8a\x8d\xbe\xbe\xad\xb5\x8f\xbe\xa9\xad\xb8\xa9\x81\xb9\xb8\xad\xae\xa0\xa9\xcc",
    // "CFBundleGetMainBundle" / M(Xor2) / S(239) / L(21)
    "\xba\xbf\xbb\x8c\x97\x9d\x95\x9c\xbe\x9c\x8d\xb4\x98\x90\x97\xbb\x8c\x97\x9d\x95\x9c\xf9",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor3) / S(41) / L(39)
    "\x1a\x1f\x0c\x0b\x15\x1a\x2b\x3c\x38\x2d\x3c\x1f\x2b\x36\x34\x1f\x30\x35\x3c\x0a\x20\x2a\x2d\x3c\x34\x0b\x3c\x29\x2b\x3c\x2a\x3c\x37\x2d\x38\x2d\x30\x36\x37\x59\x66\xca\xa5\x44\x95\xea\xa2\xaf",
    // "" / M(None) / S(0) / L(0)
    "\x71\xc5\xc7\xae\x2a\xe5\x8d\x22\x8a\x2b\xfb\x6c\x46\xb6\x9c\x9d\xed\x9b\xed\xc5\x01\x72\xa7\xea\x40\x18\xc1\x5a\x1a\xba\x3c\x0d",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x92\x93\x7e\x05\xff\x71\x99\x12\xc4\x11\x5f\x71\xbe\xcd\x5f\x6b\xaf\x48\xa0\x81\x6b\x0a\x64\x1e\x35\x1b\xac\xe0\x8d\xb0\xf1",
    // "com.iccir.Embrace" / M(Xor4) / S(131) / L(17)
    "\x55\x59\x5b\x18\x5f\x55\x55\x5f\x44\x18\x73\x5b\x54\x44\x57\x55\x53\x36",
    // "kSecMatchLimit" / M(Xor3) / S(128) / L(14)
    "\xfb\xc3\xf5\xf3\xdd\xf1\xe4\xf3\xf8\xdc\xf9\xfd\xf9\xe4\x90\xa0",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(50) / L(40)
    "\x04\x03\x03\x57\x07\x50\x04\x04\x00\x51\x07\x0b\x01\x53\x02\x0a\x54\x54\x07\x0a\x56\x03\x06\x53\x57\x00\x00\x06\x07\x00\x56\x03\x0b\x0a\x56\x54\x04\x51\x04\x02\x32\xbb\xd2\x65\xd6\x94\x06\xc0\xf2",
    // "" / M(None) / S(0) / L(0)
    "\x18\x37\x5a\xe7\x44\xdd\xcf\x8e\x30\x3e\x7c\x61\xf0\x3b\xe0\xdc\xfa\x8c\x3f\x6d\xda\xae\x5c\xb6\x79\x5c\x23\x1d\xbb\x93\xc9\x84",
    // "CC_SHA1_Final" / M(Xor2) / S(71) / L(13)
    "\x14\x14\x08\x04\x1f\x16\x66\x08\x11\x3e\x39\x36\x3b\x57\x5a\x86",
    // "X509_STORE_add_cert" / M(Xor3) / S(49) / L(19)
    "\x1d\x70\x75\x7c\x1a\x16\x11\x0a\x17\x00\x1a\x24\x21\x21\x1a\x26\x20\x37\x31\x45",
    // "%02X:" / M(Xor2) / S(117) / L(5)
    "\x40\x55\x57\x3d\x5f\x65\xc1\x91\xe1\x78\x58\xf7\x25\xbd\x38\xea",
    // "NSApplicationMain" / M(Xor2) / S(198) / L(17)
    "\x9a\x87\x95\xa4\xa4\xb8\xbd\xb7\xb5\xa0\xbd\xbb\xba\x99\xb5\xbd\xba\xd4",
    // "SecItemCopyMatching" / M(Rot) / S(248) / L(19)
    "\x4b\x5d\x5b\x41\x6c\x5d\x65\x3b\x67\x68\x71\x45\x59\x6c\x5b\x60\x61\x66\x5f\xf8",
    // "CFBundleShortVersionString" / M(Rot) / S(217) / L(26)
    "\x1c\x1f\x1b\x4e\x47\x3d\x45\x3e\x2c\x41\x48\x4b\x4d\x2f\x3e\x4b\x4c\x42\x48\x47\x2c\x4d\x4b\x42\x47\x40\xd9\x86\x08\xb8\x5e\x7f\x20\x6e\xed",
    // "EVP_MD_CTX_init" / M(Xor3) / S(119) / L(15)
    "\xc2\xd1\xd7\xd8\xca\xc3\xd8\xc4\xd3\xdf\xd8\xee\xe9\xee\xf3\x87",
    // "CFDateFormatterCreate" / M(Rot) / S(64) / L(21)
    "\x83\x86\x84\xa1\xb4\xa5\x86\xaf\xb2\xad\xa1\xb4\xb4\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\x40",
    // "" / M(None) / S(0) / L(0)
    "\x94\xd2\xe2\x10\xcd\x91\x7e\x8e\xb4\xbc\x60\x14\x91\x5b\x08\x67\xbc\xbe\x88\xc2\xd2\x1d\x27\x94\xa2\x87\x05\x34\x10\x3d\x0f\xa1",
    // "EVP_get_digestbyname" / M(Xor4) / S(253) / L(20)
    "\x84\x97\x91\x9e\xa6\xa4\xb5\x9e\xa5\xa8\xa6\xa4\xb2\xb5\xa3\xb8\xaf\xa0\xac\xa4\xc1",
    // "CFStringCreateWithBytes" / M(Xor3) / S(97) / L(23)
    "\xc2\xc7\xd2\xf5\xf3\xe8\xef\xe6\xc2\xf3\xe4\xe0\xf5\xe4\xd6\xe8\xf5\xe9\xc3\xf8\xf5\xe4\xf2\x81\x56\x93\x64\xa6\x22\x8b\x37\xe9",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(56) / L(37)
    "\x6b\x5d\x5b\x73\x5d\x41\x5b\x50\x59\x51\x56\x6b\x5d\x59\x4a\x5b\x50\x7b\x4a\x5d\x59\x4c\x5d\x7e\x4a\x57\x55\x79\x4c\x4c\x4a\x51\x5a\x4d\x4c\x5d\x4b\x38",
    // "" / M(None) / S(0) / L(0)
    "\x89\xc0\x00\xdc\xaa\x85\xd4\x92\xcf\x80\xe5\x18\xdc\x3e\x8e\xe4\xb9\x9b\x18\x87\x83\x8b\x74\xf3\x49\x21\x0f\xf1\xe7\xf9\xba\x21",
    // "IOObjectRelease" / M(Xor1) / S(237) / L(15)
    "\xa4\xa2\xa2\x8f\x87\x88\x8e\x99\xbf\x88\x81\x88\x8c\x9e\x88\xed",
    // "EVP_get_digestbyname" / M(Xor1) / S(244) / L(20)
    "\xb1\xa2\xa4\xab\x93\x91\x80\xab\x90\x9d\x93\x91\x87\x80\x96\x8d\x9a\x95\x99\x91\xf4",
    // "IOIteratorNext" / M(Rot) / S(175) / L(14)
    "\xf8\xfe\xf8\x23\x14\x21\x10\x23\x1e\x21\xfd\x14\x27\x23\xaf\xe1",
    // "" / M(None) / S(0) / L(0)
    "\xec\xe0\x2e\x78\x7e\xc9\xd8\xd8\x05\xec\xa9\x4a\x9a\x9c\x1f\xaf\x3e\xe3\x24\x1e\x56\x15\xe6\x67\xd3\x20\xad\x31\x06\x0a\xba\xf7",
    // "CFBundleShortVersionString" / M(Xor4) / S(142) / L(26)
    "\x29\x2c\x28\x1f\x04\x0e\x06\x0f\x39\x02\x05\x18\x1e\x3c\x0f\x18\x19\x03\x05\x04\x39\x1e\x18\x03\x04\x0d\x6a\xc4\x3b\xa1\x2e\x5d\x7c\xfc\x8d",
    // "CFDataGetBytePtr" / M(Xor1) / S(98) / L(16)
    "\x21\x24\x26\x03\x16\x03\x25\x07\x16\x20\x1b\x16\x07\x32\x16\x10\x62",
    // "setjmp" / M(Rot) / S(254) / L(6)
    "\x71\x63\x72\x68\x6b\x6e\xfe\x34\x43\x28\x87\x4b\xb3\x23\xd6\x29",
    // "Contents/_MASReceipt" / M(Rot) / S(68) / L(20)
    "\x87\xb3\xb2\xb8\xa9\xb2\xb8\xb7\x73\xa3\x91\x85\x97\x96\xa9\xa7\xa9\xad\xb4\xb8\x44",
    // "CC_SHA1" / M(Xor3) / S(198) / L(7)
    "\x95\x95\x89\x85\x9e\x97\xe7\xd6\x17\x0a\xeb\xa2\x71\xfb\x96\x06",
    // "kSecMatchSearchList" / M(Rot) / S(180) / L(19)
    "\x1f\x07\x19\x17\x01\x15\x28\x17\x1c\x07\x19\x15\x26\x17\x1c\x00\x1d\x27\x28\xb4",
    // "" / M(None) / S(0) / L(0)
    "\x7b\xf8\x6e\x92\xa4\xf2\xc4\x09\x5d\x34\x63\x64\x34\x5f\x0d\xe1\x4d\xef\x44\xb5\xf2\xb0\x67\xf5\x65\x36\x0a\xec\x25\xe5\x13\xfb",
    // "BIO_free" / M(Xor3) / S(123) / L(8)
    "\xc9\xc2\xc4\xd4\xed\xf9\xee\xee\x8b\xb1\xf7\xa5\xbe\xea\x08\x6e",
    // "%02X" / M(Rot) / S(217) / L(4)
    "\xfe\x09\x0b\x31\xd9\xf3\x20\xa3\xb2\xa8\x6e\xfb\xf2\xd7\xee\x5e",
    // "" / M(None) / S(0) / L(0)
    "\x8f\x75\xe7\x35\x67\xc0\xa2\x5c\x96\x34\xda\xa0\x22\x35\x00\xde\xbb\x76\x27\x1a\xe4\xd4\xe4\x7f\x69\xf8\xaa\x6e\x8b\x04\x67\x00",
    // "" / M(None) / S(0) / L(0)
    "\x9e\x2e\x8a\x93\x3c\xd7\xe1\x6f\x34\xcd\x8e\xd8\xcb\x92\x11\xe5\xcd\x11\x41\xb7\x5a\x0e\x94\x8e\xd6\xb9\xab\xd3\x83\xca\x7a\x26",
    // "" / M(None) / S(0) / L(0)
    "\x00\x0c\x12\x4a\x69\x6d\xcc\xd5\xa9\x15\xd8\x2d\x7a\xd5\xea\xda\x22\xf1\xc2\xb7\x80\x9c\x86\x77\x2d\x7e\x81\xf1\x6d\x74\xa2\x5e",
    // "Apple Root CA" / M(Xor4) / S(156) / L(13)
    "\x81\xb0\xb0\xac\xa5\xe0\x92\xaf\xaf\xb4\xe0\x83\x81\xc0\xb2\xf5",
    // "X509_STORE_new" / M(Xor1) / S(178) / L(14)
    "\xea\x87\x82\x8b\xed\xe1\xe6\xfd\xe0\xf7\xed\xdc\xd7\xc5\xb2\x9f",
    // "alloc" / M(Xor2) / S(30) / L(5)
    "\x6f\x62\x62\x61\x6d\x0e\xd8\x8a\x60\x86\xaf\x25\x31\x35\xa5\x36",
    // "glob_b" / M(Xor2) / S(250) / L(6)
    "\x8d\x86\x85\x88\xb5\x88\xea\xbd\xab\x82\xeb\xd0\xfe\x93\x72\xbd",
    // "" / M(None) / S(0) / L(0)
    "\x24\x79\xff\x9e\x18\x3b\xfb\xf3\xef\x50\xf4\xa3\x8d\xf7\x08\x5f\x8b\x2d\x52\x91\x5c\x06\x84\xa2\xe7\x99\x4b\xcb\x55\x90\xda\xb6",
    // "kSecMatchLimitAll" / M(Xor1) / S(119) / L(17)
    "\x1c\x24\x12\x14\x3a\x16\x03\x14\x1f\x3b\x1e\x1a\x1e\x03\x36\x1b\x1b\x77",
    // "." / M(Xor4) / S(17) / L(1)
    "\x3e\x10\x0a\x63\x01\xae\x3c\x4a\x19\xc5\x7e\x87\xa8\xda\xe9\xf8",
    // "" / M(None) / S(0) / L(0)
    "\x26\x88\x39\xd7\x48\xf3\xd2\xc2\x65\x95\x65\xee\x40\x7f\xf3\x8b\x96\xe8\xa6\xa2\x1e\x11\x84\x6e\x52\x76\x65\x41\xf3\x07\x20\x2c",
    // "IORegistryEntryGetParentEntry" / M(Xor3) / S(140) / L(29)
    "\xfb\xfd\xe0\xd7\xd5\xdb\xc1\xc6\xc0\xcb\xf7\xdc\xc6\xc0\xcb\xf5\xd7\xc6\xe2\xd3\xc0\xd7\xdc\xc6\xf7\xdc\xc6\xc0\xcb\xb2\xde\x45\x1d\x5b\xb0\x5d\xec\xae",
    // "" / M(None) / S(0) / L(0)
    "\xea\x5e\x3e\x9e\xb6\x88\x6b\x00\x96\x6a\xeb\xba\xe7\x72\x1d\x79\x46\xd5\x66\x14\x9d\xd2\x95\xf9\x9e\xda\x98\xa9\x3c\x49\x56\x65",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(173) / L(36)
    "\xee\xeb\xef\xd8\xc3\xc9\xc1\xc8\xea\xc8\xd9\xfb\xcc\xc1\xd8\xc8\xeb\xc2\xdf\xe4\xc3\xcb\xc2\xe9\xc4\xce\xd9\xc4\xc2\xc3\xcc\xdf\xd4\xe6\xc8\xd4\xad",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(239) / L(40)
    "\x89\x8e\x8e\xfa\x8a\xfd\x89\x89\x8d\xfc\x8a\x86\x8c\xfe\x8f\x87\xf9\xf9\x8a\x87\xfb\x8e\x8b\xfe\xfa\x8d\x8d\x8b\x8a\x8d\xfb\x8e\x86\x87\xfb\xf9\x89\xfc\x89\x8f\xbf\x12\x6a\x40\xb5\xef\x3e\x13\x0f",
    // "" / M(None) / S(0) / L(0)
    "\xff\xfa\x03\x86\x97\x81\x6e\x1c\xa1\xd1\x3b\x0a\x74\xb1\xd9\x59\xd7\x8a\xa8\x4a\xca\xd7\xd5\x84\x5f\x43\x9a\x30\xf1\xea\x92\x7a",
    // "" / M(None) / S(0) / L(0)
    "\xc8\x19\x7e\xdd\xfd\x6b\xa0\xec\xfd\xdb\x6b\x52\x07\xbd\x23\x19\x7b\x55\x0e\x0b\x57\x6c\xd3\x85\x32\xe9\x07\xb9\x83\x02\x7c\xb4",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(194) / L(23)
    "\xb1\xa9\xb0\x87\x81\x87\x8b\x92\x96\xb0\x87\x84\x90\x87\x91\x8a\xb0\x87\x93\x97\x87\x91\x96\xe2\x02\x9d\xe7\xf0\xd9\x76\x7d\x5c",
    // "" / M(None) / S(0) / L(0)
    "\xd4\x60\x9e\x21\xa9\x1b\x36\xbd\x0f\x52\x3b\xbf\x80\x69\xb1\xda\x10\xb1\x29\x37\x67\x8f\xfd\x13\x45\x1e\x3e\xdb\xc1\x84\xb6\x3f",
    // "CFBundleGetMainBundle" / M(Xor1) / S(80) / L(21)
    "\x13\x16\x12\x25\x3e\x34\x3c\x35\x17\x35\x24\x1d\x31\x39\x3e\x12\x25\x3e\x34\x3c\x35\x50",
    // "com.iccir.Embrace" / M(Xor3) / S(109) / L(17)
    "\x1c\x10\x12\x51\x16\x1c\x1c\x16\x0d\x51\x3a\x12\x1d\x0d\x1e\x1c\x1a\x7f",
    // "strncmp" / M(Xor2) / S(162) / L(7)
    "\xc1\xc6\xc0\xdc\xd1\xdf\xc2\xb2\xa8\x46\x51\xaa\x1b\xf1\x3a\xa4",
    // "CFArrayCreateMutable" / M(Rot) / S(101) / L(20)
    "\xa8\xab\xa6\xd7\xd7\xc6\xde\xa8\xd7\xca\xc6\xd9\xca\xb2\xda\xd9\xc6\xc7\xd1\xca\x65",
    // "kSecReturnRef" / M(Xor2) / S(121) / L(13)
    "\x02\x3a\x0c\x0a\x3b\x0c\x1d\x1c\x1b\x07\x3b\x0c\x0f\x69\xb7\x34",
    // "" / M(None) / S(0) / L(0)
    "\xcc\x18\x16\x48\x3d\xb9\x68\xa1\x44\x5d\xe2\x1f\x04\x43\x87\x1e\xa4\xe9\x7a\xa7\x40\xf7\xfe\x94\x93\x85\x0a\x61\xde\x7c\x55\x6e",
    // "" / M(None) / S(0) / L(0)
    "\x0e\xde\xdd\x60\x65\x6d\x52\xf2\x0d\x40\xbc\xbf\x4f\x05\x15\xb0\x8a\xb9\xd0\x60\xa5\x3a\xe9\x5e\x0a\x38\x6b\xdc\x54\xfa\x4e\x52",
    // "" / M(None) / S(0) / L(0)
    "\x4f\xa2\x63\x44\xf4\x81\x09\xf3\x5e\xc1\xd6\xdf\x51\xc3\xab\x35\x7b\xd2\xf5\x01\x27\x5a\x20\xbb\x8e\x3a\xfc\x20\x79\xd1\xe8\x19",
    // "sel_registerName" / M(Xor2) / S(226) / L(16)
    "\x80\x96\x9f\xac\x81\x96\x94\x9a\x80\x87\x96\x81\xbd\x92\x9e\x96\xf3",
    // "glob" / M(Xor1) / S(80) / L(4)
    "\x37\x3c\x3f\x32\x50\x4d\x28\xe2\x8a\x3a\x75\x55\x40\x4d\x2b\x62",
    // "OpenSSL_add_all_digests" / M(Rot) / S(171) / L(23)
    "\xfa\x1b\x10\x19\xfe\xfe\xf7\x0a\x0c\x0f\x0f\x0a\x0c\x17\x17\x0a\x0f\x14\x12\x10\x1e\x1f\x1e\xab\x2a\xc8\x43\x0e\x70\x86\x5b\x5b",
    // "kCFTypeArrayCallBacks" / M(Xor1) / S(126) / L(21)
    "\x15\x3d\x38\x2a\x07\x0e\x1b\x3f\x0c\x0c\x1f\x07\x3d\x1f\x12\x12\x3c\x1f\x1d\x15\x0d\x7e",
    // "dlsym" / M(Rot) / S(217) / L(5)
    "\x3d\x45\x4c\x52\x46\xd9\xbf\xb3\xc5\x33\x44\x05\x70\x20\x60\x1d",
    // "CFRelease" / M(Xor2) / S(71) / L(9)
    "\x14\x11\x05\x32\x3b\x32\x36\x24\x32\x57\x02\x1d\x7a\xb2\xd5\xa3",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(237) / L(36)
    "\x02\x07\x03\x34\x2f\x25\x2d\x24\x06\x24\x35\x17\x20\x2d\x34\x24\x07\x2e\x33\x08\x2f\x27\x2e\x05\x28\x22\x35\x28\x2e\x2f\x20\x33\x38\x0a\x24\x38\x41",
    // "SHA1_Final" / M(Xor3) / S(142) / L(10)
    "\xcd\xd6\xdf\xaf\xc1\xd8\xf7\xf0\xff\xf2\x9e\xa9\x8f\x2f\xe8\x36",
    // "BIO_write" / M(Xor3) / S(23) / L(9)
    "\x65\x6e\x68\x78\x50\x55\x4e\x53\x42\x27\xa4\x9e\xe8\xdb\xe4\xa8",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(13) / L(22)
    "\x68\x6d\x6a\x59\x59\x4a\x52\x6c\x4e\x5f\x7d\x4a\x47\x5e\x4e\x6a\x5f\x62\x45\x4f\x4e\x53\x2b",
    // "sk_value" / M(Xor2) / S(226) / L(8)
    "\x81\x99\xad\x84\x93\x9e\x87\x97\xf2\x45\xcf\x36\xbe\x0d\xf6\x1d",
    // "PKCS7_get0_signers" / M(Xor3) / S(90) / L(18)
    "\x3d\x26\x2e\x3e\x5a\x32\x0a\x08\x19\x5d\x32\x1e\x04\x0a\x03\x08\x1f\x1e\x6d",
    // "%02x" / M(Xor3) / S(250) / L(4)
    "\x2f\x3a\x38\x72\x0a\x94\x11\x78\xa0\xe7\x76\x55\x35\x4f\x3e\xfc",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(65) / L(31)
    "\x2a\x02\x07\x15\x38\x31\x24\x05\x28\x22\x35\x28\x2e\x2f\x20\x33\x38\x17\x20\x2d\x34\x24\x02\x20\x2d\x2d\x03\x20\x22\x2a\x32\x41",
    // "objc_msgSend" / M(Rot) / S(25) / L(12)
    "\x88\x7b\x83\x7c\x78\x86\x8c\x80\x6c\x7e\x87\x7d\x19\x27\xdf\x5b",
    // "" / M(None) / S(0) / L(0)
    "\xe1\xfb\xe9\x6f\xb3\x51\x05\x54\x3e\xfe\x6b\xa4\x12\x8f\x3d\x4e\xa9\x30\xdf\x34\x81\x7c\x6a\x35\xc0\x68\x5b\x84\xcd\xb8\xed\x0a",
    // "BIO_free" / M(Xor4) / S(186) / L(8)
    "\xe2\xe9\xef\xff\xc6\xd2\xc5\xc5\xa0\xe1\x6b\xe6\x0c\x4a\x6d\x52",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[573] = {
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) ASN1_OBJECT_free),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) ASN1_get_object),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) X509_free),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) X509_STORE_add_cert),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) PKCS7_free),
    ((void *) sk_free),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_DTYSXHCUAEJP __unused;
static int ReceiptValidation_UVVIPMIXGSXA __unused;
static int ReceiptValidation_HHMOUJYQDCXC __unused;
static int ReceiptValidation_AEGZRQCEXAQC __unused;
static int ReceiptValidation_KAFNPWRMPVUV __unused;
static int ReceiptValidation_HYOAMSNPXVSM __unused;
static int ReceiptValidation_CIRTCBJVRQTZ __unused;
static int ReceiptValidation_BACCPEPKGKHF __unused;


#define ReceiptValidation_ASN1_get_object_00010040 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction006, 64, 163, 16))
#define ReceiptValidation_ASN1_get_object_003700FF ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction004, 255, 229, 16))
#define ReceiptValidation_ASN1_OBJECT_free_00900058 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction003, 88, 7, 17))
#define ReceiptValidation_BIO_free_0037020F ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00A, 527, 123, 16))
#define ReceiptValidation_BIO_free_0037023C ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00C, 572, 186, 16))
#define ReceiptValidation_BIO_free_0090023C ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00C, 572, 186, 16))
#define ReceiptValidation_BIO_new_0037001E ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction007, 30, 170, 16))
#define ReceiptValidation_BIO_new_00370089 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction008, 137, 117, 16))
#define ReceiptValidation_BIO_new_00900181 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction003, 385, 243, 16))
#define ReceiptValidation_BIO_s_mem_00010133 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction00B, 307, 66, 16))
#define ReceiptValidation_BIO_s_mem_00370166 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00B, 358, 8, 16))
#define ReceiptValidation_BIO_s_mem_0090010D ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00B, 269, 227, 16))
#define ReceiptValidation_BIO_write_0090018D ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction003, 397, 188, 16))
#define ReceiptValidation_BIO_write_00900234 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction009, 564, 23, 16))
#define ReceiptValidation_CC_SHA1_000200DB ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction005, 219, 208, 16))
#define ReceiptValidation_CC_SHA1_Final_000201F7 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction007, 503, 71, 16))
#define ReceiptValidation_CC_SHA1_Init_003E00E2 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction008, 226, 2, 16))
#define ReceiptValidation_CFArrayCreateMutable_007C01EE ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction007, 494, 217, 21))
#define ReceiptValidation_CFArrayCreateMutable_01540227 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction004, 551, 101, 21))
#define ReceiptValidation_CFArrayGetCount_007C00C7 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, 199, 115, 16))
#define ReceiptValidation_CFArrayGetCount_017800C7 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction008, 199, 115, 16))
#define ReceiptValidation_CFBundleGetMainBundle_017801EF ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction007, 495, 239, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_007C013B ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction004, 315, 209, 33))
#define ReceiptValidation_CFDataAppendBytes_015400E6 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction006, 230, 194, 18))
#define ReceiptValidation_CFDataAppendBytes_01780012 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00B, 18, 22, 18))
#define ReceiptValidation_CFDataCreate_007C0075 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, 117, 242, 16))
#define ReceiptValidation_CFDataCreate_007C01D4 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction00A, 468, 139, 16))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_007C0197 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, 407, 79, 36))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_007C019F ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction003, 415, 104, 36))
#define ReceiptValidation_CFDictionaryAddValue_007C005E ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction004, 94, 228, 21))
#define ReceiptValidation_CFDictionaryAddValue_01540032 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00A, 50, 81, 21))
#define ReceiptValidation_CFDictionaryAddValue_0154005E ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction004, 94, 228, 21))
#define ReceiptValidation_CFDictionaryAddValue_01540106 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction006, 262, 241, 21))
#define ReceiptValidation_CFDictionaryGetValue_007C0180 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, 384, 175, 21))
#define ReceiptValidation_CFDictionaryGetValue_01540180 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction008, 384, 175, 21))
#define ReceiptValidation_CFEqual_007C0195 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction007, 405, 48, 16))
#define ReceiptValidation_CFNumberCreate_015400AD ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00B, 173, 139, 16))
#define ReceiptValidation_CFNumberCreate_017800AD ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00B, 173, 139, 16))
#define ReceiptValidation_CFReadStreamCreateWithFile_007C009B ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction007, 155, 113, 35))
#define ReceiptValidation_CFReadStreamCreateWithFile_0154009B ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction007, 155, 113, 35))
#define ReceiptValidation_CFReadStreamRead_007C01EC ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, 492, 92, 17))
#define ReceiptValidation_CFReadStreamRead_015401B5 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00C, 437, 91, 17))
#define ReceiptValidation_CFRelease_007C0087 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction003, 135, 226, 16))
#define ReceiptValidation_CFRelease_007C0163 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, 355, 48, 16))
#define ReceiptValidation_CFRelease_007C0231 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction007, 561, 71, 16))
#define ReceiptValidation_CFRelease_01540163 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction009, 355, 48, 16))
#define ReceiptValidation_CFRelease_01540231 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction007, 561, 71, 16))
#define ReceiptValidation_CFRelease_01780087 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction003, 135, 226, 16))
#define ReceiptValidation_CFRelease_01780163 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction009, 355, 48, 16))
#define ReceiptValidation_CFRelease_01780231 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction007, 561, 71, 16))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_01540020 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction006, 32, 151, 48))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_015400DE ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction007, 222, 172, 48))
#define ReceiptValidation_d2i_PKCS7_bio_0037002C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction007, 44, 219, 16))
#define ReceiptValidation_d2i_PKCS7_bio_0090002C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction007, 44, 219, 16))
#define ReceiptValidation_d2i_PKCS7_bio_009000ED ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00C, 237, 121, 16))
#define ReceiptValidation_d2i_X509_bio_0090012E ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction008, 302, 132, 16))
#define ReceiptValidation_EVP_DigestFinal_000101B8 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction006, 440, 184, 16))
#define ReceiptValidation_EVP_DigestInit_00900047 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction008, 71, 15, 16))
#define ReceiptValidation_EVP_DigestUpdate_00370061 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction003, 97, 104, 17))
#define ReceiptValidation_EVP_get_digestbyname_00900067 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction008, 103, 123, 21))
#define ReceiptValidation_EVP_MD_CTX_init_000101FD ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction009, 509, 119, 16))
#define ReceiptValidation_exit_00020079 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction00A, 121, 64, 16))
#define ReceiptValidation_exit_000201A9 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction00C, 425, 138, 16))
#define ReceiptValidation_exit_000201C1 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction00C, 449, 98, 16))
#define ReceiptValidation_exit_003E0079 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction00A, 121, 64, 16))
#define ReceiptValidation_exit_003E01A9 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction00C, 425, 138, 16))
#define ReceiptValidation_exit_006B0079 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 107, 250, 33, ReceiptValidation_ObfuscationFunction00A, 121, 64, 16))
#define ReceiptValidation_exit_006B01C1 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 107, 250, 33, ReceiptValidation_ObfuscationFunction00C, 449, 98, 16))
#define ReceiptValidation_DTYSXHCUAEJP_004D0135 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 77, 82, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_DTYSXHCUAEJP, 177, 16))
#define ReceiptValidation_DTYSXHCUAEJP_007C0045 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_DTYSXHCUAEJP, 185, 21))
#define ReceiptValidation_DTYSXHCUAEJP_007C0160 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_DTYSXHCUAEJP, 117, 16))
#define ReceiptValidation_DTYSXHCUAEJP_011B01EB ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_DTYSXHCUAEJP, 146, 34))
#define ReceiptValidation_DTYSXHCUAEJP_01540029 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_DTYSXHCUAEJP, 71, 16))
#define ReceiptValidation_DTYSXHCUAEJP_01780023 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_DTYSXHCUAEJP, 250, 22))
#define ReceiptValidation_DTYSXHCUAEJP_01780100 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_DTYSXHCUAEJP, 244, 17))
#define ReceiptValidation_DTYSXHCUAEJP_01780232 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_DTYSXHCUAEJP, 237, 37))
#define ReceiptValidation_UVVIPMIXGSXA_007C0141 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_UVVIPMIXGSXA, 181, 19))
#define ReceiptValidation_UVVIPMIXGSXA_007C0173 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_UVVIPMIXGSXA, 144, 17))
#define ReceiptValidation_UVVIPMIXGSXA_00E0000B ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 138, 49, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_UVVIPMIXGSXA, 130, 32))
#define ReceiptValidation_UVVIPMIXGSXA_01540100 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_UVVIPMIXGSXA, 244, 17))
#define ReceiptValidation_UVVIPMIXGSXA_0178014B ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_UVVIPMIXGSXA, 241, 18))
#define ReceiptValidation_HHMOUJYQDCXC_003E0003 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_HHMOUJYQDCXC, 247, 16))
#define ReceiptValidation_HHMOUJYQDCXC_007C01A2 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_HHMOUJYQDCXC, 45, 20))
#define ReceiptValidation_HHMOUJYQDCXC_017801A2 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_HHMOUJYQDCXC, 45, 20))
#define ReceiptValidation_HHMOUJYQDCXC_01780227 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_HHMOUJYQDCXC, 101, 21))
#define ReceiptValidation_AEGZRQCEXAQC_007C0158 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_AEGZRQCEXAQC, 17, 23))
#define ReceiptValidation_AEGZRQCEXAQC_007C01D0 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AEGZRQCEXAQC, 67, 22))
#define ReceiptValidation_AEGZRQCEXAQC_007E006C ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 126, 167, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_AEGZRQCEXAQC, 207, 38))
#define ReceiptValidation_AEGZRQCEXAQC_0154010F ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_AEGZRQCEXAQC, 110, 33))
#define ReceiptValidation_AEGZRQCEXAQC_01540160 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_AEGZRQCEXAQC, 117, 16))
#define ReceiptValidation_AEGZRQCEXAQC_0178014B ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_AEGZRQCEXAQC, 241, 18))
#define ReceiptValidation_AEGZRQCEXAQC_01780232 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_AEGZRQCEXAQC, 237, 37))
#define ReceiptValidation_KAFNPWRMPVUV_007C00AD ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_KAFNPWRMPVUV, 139, 16))
#define ReceiptValidation_KAFNPWRMPVUV_00E00085 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 138, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KAFNPWRMPVUV, 246, 18))
#define ReceiptValidation_KAFNPWRMPVUV_011B019A ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_KAFNPWRMPVUV, 92, 23))
#define ReceiptValidation_KAFNPWRMPVUV_01540180 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_KAFNPWRMPVUV, 175, 21))
#define ReceiptValidation_KAFNPWRMPVUV_01780062 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_KAFNPWRMPVUV, 89, 38))
#define ReceiptValidation_KAFNPWRMPVUV_0178014C ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_KAFNPWRMPVUV, 14, 22))
#define ReceiptValidation_HYOAMSNPXVSM_007C00E7 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_HYOAMSNPXVSM, 199, 16))
#define ReceiptValidation_HYOAMSNPXVSM_007C00F2 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_HYOAMSNPXVSM, 115, 34))
#define ReceiptValidation_HYOAMSNPXVSM_007C00F6 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_HYOAMSNPXVSM, 29, 21))
#define ReceiptValidation_HYOAMSNPXVSM_011B0074 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_HYOAMSNPXVSM, 43, 20))
#define ReceiptValidation_HYOAMSNPXVSM_0154015A ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_HYOAMSNPXVSM, 30, 18))
#define ReceiptValidation_CIRTCBJVRQTZ_007C00AD ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_CIRTCBJVRQTZ, 139, 16))
#define ReceiptValidation_CIRTCBJVRQTZ_00E001AE ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 138, 49, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_CIRTCBJVRQTZ, 88, 16))
#define ReceiptValidation_CIRTCBJVRQTZ_011B0155 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_CIRTCBJVRQTZ, 74, 16))
#define ReceiptValidation_CIRTCBJVRQTZ_01540116 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_CIRTCBJVRQTZ, 207, 16))
#define ReceiptValidation_CIRTCBJVRQTZ_017800CD ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_CIRTCBJVRQTZ, 187, 36))
#define ReceiptValidation_CIRTCBJVRQTZ_017800D4 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_CIRTCBJVRQTZ, 41, 16))
#define ReceiptValidation_CIRTCBJVRQTZ_0178010B ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_CIRTCBJVRQTZ, 113, 21))
#define ReceiptValidation_BACCPEPKGKHF_007C008F ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_BACCPEPKGKHF, 197, 16))
#define ReceiptValidation_BACCPEPKGKHF_00E0004F ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 224, 138, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_BACCPEPKGKHF, 6, 37))
#define ReceiptValidation_BACCPEPKGKHF_011A00FD ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 282, 204, 51, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_BACCPEPKGKHF, 122, 18))
#define ReceiptValidation_BACCPEPKGKHF_01540029 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BACCPEPKGKHF, 71, 16))
#define ReceiptValidation_BACCPEPKGKHF_01540126 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_BACCPEPKGKHF, 182, 19))
#define ReceiptValidation_BACCPEPKGKHF_015401A2 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BACCPEPKGKHF, 45, 20))
#define ReceiptValidation_BACCPEPKGKHF_017800F2 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_BACCPEPKGKHF, 115, 34))
#define ReceiptValidation_BACCPEPKGKHF_01780100 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_BACCPEPKGKHF, 244, 17))
#define ReceiptValidation_BACCPEPKGKHF_01780117 ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_BACCPEPKGKHF, 42, 52))
#define ReceiptValidation_IOObjectRelease_007E006D ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 126, 167, 49, ReceiptValidation_ObfuscationFunction009, 109, 152, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_01780043 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction008, 67, 20, 23))
#define ReceiptValidation_kCFTypeArrayCallBacks_007C01DC ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, 476, 165, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_0154022F ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 340, 5, 67, ReceiptValidation_ObfuscationFunction005, 559, 126, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_017801DC ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction008, 476, 165, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_007C002B ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction003, 43, 41, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01780004 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction006, 4, 220, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01780055 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction004, 85, 160, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_007C0033 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction008, 51, 112, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_007C0239 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 124, 154, 67, ReceiptValidation_ObfuscationFunction005, 569, 65, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_01780239 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 376, 55, 67, ReceiptValidation_ObfuscationFunction005, 569, 65, 32))
#define ReceiptValidation_kSecClass_00650190 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 101, 47, 55, ReceiptValidation_ObfuscationFunction00C, 400, 164, 16))
#define ReceiptValidation_kSecClass_011B0095 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction00C, 149, 25, 16))
#define ReceiptValidation_kSecClassCertificate_006500FA ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 101, 47, 55, ReceiptValidation_ObfuscationFunction00C, 250, 211, 21))
#define ReceiptValidation_kSecClassCertificate_019900F1 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 409, 52, 55, ReceiptValidation_ObfuscationFunction00A, 241, 102, 21))
#define ReceiptValidation_kSecMatchLimit_011B0149 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction006, 329, 179, 16))
#define ReceiptValidation_kSecMatchLimit_019901F4 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 409, 52, 55, ReceiptValidation_ObfuscationFunction009, 500, 128, 16))
#define ReceiptValidation_kSecMatchLimitAll_00650219 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 101, 47, 55, ReceiptValidation_ObfuscationFunction005, 537, 119, 18))
#define ReceiptValidation_kSecMatchLimitAll_011B01B2 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction008, 434, 235, 18))
#define ReceiptValidation_kSecMatchSearchList_0199005F ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 409, 52, 55, ReceiptValidation_ObfuscationFunction006, 95, 62, 20))
#define ReceiptValidation_kSecMatchSearchList_019901D6 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 409, 52, 55, ReceiptValidation_ObfuscationFunction009, 470, 242, 20))
#define ReceiptValidation_kSecMatchSubjectContains_006501C9 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 101, 47, 55, ReceiptValidation_ObfuscationFunction009, 457, 250, 33))
#define ReceiptValidation_kSecMatchSubjectContains_011B019B ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction005, 411, 226, 33))
#define ReceiptValidation_kSecReturnRef_011B00CA ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction009, 202, 158, 16))
#define ReceiptValidation_kSecReturnRef_019900CA ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 409, 52, 55, ReceiptValidation_ObfuscationFunction009, 202, 158, 16))
#define ReceiptValidation_longjmp_00020097 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction009, 151, 154, 16))
#define ReceiptValidation_longjmp_00020162 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction006, 354, 253, 16))
#define ReceiptValidation_longjmp_003E0097 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction009, 151, 154, 16))
#define ReceiptValidation_longjmp_003E00D0 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 62, 2, 33, ReceiptValidation_ObfuscationFunction005, 208, 199, 16))
#define ReceiptValidation_longjmp_006B0097 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 107, 250, 33, ReceiptValidation_ObfuscationFunction009, 151, 154, 16))
#define ReceiptValidation_longjmp_006B00D0 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 107, 250, 33, ReceiptValidation_ObfuscationFunction005, 208, 199, 16))
#define ReceiptValidation_longjmp_006B0162 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 107, 250, 33, ReceiptValidation_ObfuscationFunction006, 354, 253, 16))
#define ReceiptValidation_OBJ_txt2obj_0037011D ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00C, 285, 188, 16))
#define ReceiptValidation_objc_getClass_00F50054 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction00B, 84, 27, 16))
#define ReceiptValidation_objc_getClass_00F500BE ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction007, 190, 42, 16))
#define ReceiptValidation_objc_getClass_00F500C4 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction00B, 196, 98, 16))
#define ReceiptValidation_objc_getClass_010C00BE ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction007, 190, 42, 16))
#define ReceiptValidation_objc_getClass_010C00C4 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction00B, 196, 98, 16))
#define ReceiptValidation_objc_getClass_010E0054 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction00B, 84, 27, 16))
#define ReceiptValidation_objc_getClass_010E00BE ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction007, 190, 42, 16))
#define ReceiptValidation_objc_getClass_010E00C4 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction00B, 196, 98, 16))
#define ReceiptValidation_objc_msgSend_00F500B1 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction00A, 177, 14, 16))
#define ReceiptValidation_objc_msgSend_00F501C5 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction00C, 453, 112, 16))
#define ReceiptValidation_objc_msgSend_00F5023A ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction003, 570, 25, 16))
#define ReceiptValidation_objc_msgSend_010C00B1 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction00A, 177, 14, 16))
#define ReceiptValidation_objc_msgSend_010C01C5 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction00C, 453, 112, 16))
#define ReceiptValidation_objc_msgSend_010C023A ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction003, 570, 25, 16))
#define ReceiptValidation_objc_msgSend_010E00B1 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction00A, 177, 14, 16))
#define ReceiptValidation_objc_msgSend_010E01C5 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction00C, 453, 112, 16))
#define ReceiptValidation_objc_msgSend_010E023A ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction003, 570, 25, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_00370099 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction005, 153, 34, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_009000FC ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction004, 252, 127, 32))
#define ReceiptValidation_PKCS7_free_003700A2 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction008, 162, 98, 16))
#define ReceiptValidation_PKCS7_free_0037017A ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction004, 378, 228, 16))
#define ReceiptValidation_PKCS7_get0_signers_000100B2 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction005, 178, 71, 19))
#define ReceiptValidation_PKCS7_verify_009000A0 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction003, 160, 244, 16))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_00650202 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 101, 47, 55, ReceiptValidation_ObfuscationFunction005, 514, 56, 38))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_011B0202 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 283, 153, 55, ReceiptValidation_ObfuscationFunction005, 514, 56, 38))
#define ReceiptValidation_sel_registerName_00F50049 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction003, 73, 73, 17))
#define ReceiptValidation_sel_registerName_00F501D9 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 245, 169, 23, ReceiptValidation_ObfuscationFunction005, 473, 188, 17))
#define ReceiptValidation_sel_registerName_010C0049 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction003, 73, 73, 17))
#define ReceiptValidation_sel_registerName_010C01D9 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction005, 473, 188, 17))
#define ReceiptValidation_sel_registerName_010C022C ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 268, 135, 23, ReceiptValidation_ObfuscationFunction008, 556, 226, 17))
#define ReceiptValidation_sel_registerName_010E0049 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction003, 73, 73, 17))
#define ReceiptValidation_sel_registerName_010E01D9 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction005, 473, 188, 17))
#define ReceiptValidation_sel_registerName_010E022C ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 270, 2, 23, ReceiptValidation_ObfuscationFunction008, 556, 226, 17))
#define ReceiptValidation_setjmp_0002020A ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 2, 21, 33, ReceiptValidation_ObfuscationFunction004, 522, 254, 16))
#define ReceiptValidation_SHA1_00010080 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction003, 128, 32, 16))
#define ReceiptValidation_SHA1_Final_009000DC ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction004, 220, 213, 16))
#define ReceiptValidation_SHA1_Init_0090015F ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction004, 351, 11, 16))
#define ReceiptValidation_SHA1_Update_009000A9 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction003, 169, 161, 16))
#define ReceiptValidation_sk_free_0001000E ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction00C, 14, 205, 16))
#define ReceiptValidation_sk_num_00370179 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00B, 377, 181, 16))
#define ReceiptValidation_sk_value_000101D5 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction006, 469, 80, 16))
#define ReceiptValidation_X509_digest_00900177 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction007, 375, 135, 16))
#define ReceiptValidation_X509_free_00900144 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00A, 324, 108, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_0037009C ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 55, 142, 16, ReceiptValidation_ObfuscationFunction00A, 156, 43, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_009001B9 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction005, 441, 245, 34))
#define ReceiptValidation_X509_STORE_add_cert_00900169 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00B, 361, 54, 20))
#define ReceiptValidation_X509_STORE_free_009000C5 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 144, 79, 16, ReceiptValidation_ObfuscationFunction00A, 197, 104, 16))
#define ReceiptValidation_X509_STORE_new_0001006F ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 1, 247, 16, ReceiptValidation_ObfuscationFunction004, 111, 59, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[185])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[349])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[185])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[360])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[56])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[406])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[406])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[349])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[573], ReceiptValidation_tmp2[573];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[189])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[308])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#if DEBUG
inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_017801EF();
    if (!ReceiptValidation_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_01780087(ReceiptValidation_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_007C013B((CFBundleRef) ReceiptValidation_bundle);
    }
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
    // Global variables computation
    // Set to 35
    ReceiptValidation_DTYSXHCUAEJP = 35;
    // Set to 371
    ReceiptValidation_UVVIPMIXGSXA = 371;
    // Set to 418
    ReceiptValidation_HHMOUJYQDCXC = 418;
    // Set to 331
    ReceiptValidation_AEGZRQCEXAQC = 331;
    // Set to 98
    ReceiptValidation_KAFNPWRMPVUV = 98;
    // Set to 346
    ReceiptValidation_HYOAMSNPXVSM = 346;
    // Set to 205
    ReceiptValidation_CIRTCBJVRQTZ = 205;
    // Set to 279
    ReceiptValidation_BACCPEPKGKHF = 279;
}
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_017801EF(); \
    if (!ReceiptValidation_bundle) { \
        ReceiptValidation_CFRelease_01780087(ReceiptValidation_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_007C013B((CFBundleRef) ReceiptValidation_bundle); \
    } \
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
    ReceiptValidation_DTYSXHCUAEJP = 35; \
    ReceiptValidation_UVVIPMIXGSXA = 371; \
    ReceiptValidation_HHMOUJYQDCXC = 418; \
    ReceiptValidation_AEGZRQCEXAQC = 331; \
    ReceiptValidation_KAFNPWRMPVUV = 98; \
    ReceiptValidation_HYOAMSNPXVSM = 346; \
    ReceiptValidation_CIRTCBJVRQTZ = 205; \
    ReceiptValidation_BACCPEPKGKHF = 279; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt02C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    volatile int ReceiptValidation_code = 133; ReceiptValidation_code -= 76; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_DTYSXHCUAEJP_01780023((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[423]), 236, 16);
    ReceiptValidation_url2 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[225]), 119, 16);
    ReceiptValidation_url1 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url2);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[28]), 197, 16);
    ReceiptValidation_url2 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_0154009B(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_UVVIPMIXGSXA_007C0173(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1);
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_HHMOUJYQDCXC_007C01A2(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_007C01EC(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_AEGZRQCEXAQC_0178014B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_HYOAMSNPXVSM_0154015A(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 35 to 309
    ReceiptValidation_DTYSXHCUAEJP -= 5; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 9; 
    // From 371 to 11
    ReceiptValidation_UVVIPMIXGSXA += 14; ReceiptValidation_UVVIPMIXGSXA /= 35; 
    // From 331 to 108
    ReceiptValidation_AEGZRQCEXAQC += 209; ReceiptValidation_AEGZRQCEXAQC /= 5; 
    // From 98 to 133
    ReceiptValidation_KAFNPWRMPVUV -= 54; ReceiptValidation_KAFNPWRMPVUV *= 3; ReceiptValidation_KAFNPWRMPVUV += 1; 
    // From 205 to 430
    ReceiptValidation_CIRTCBJVRQTZ -= 98; ReceiptValidation_CIRTCBJVRQTZ *= 4; ReceiptValidation_CIRTCBJVRQTZ += 2; 
    // From 279 to 79
    ReceiptValidation_BACCPEPKGKHF += 116; ReceiptValidation_BACCPEPKGKHF /= 5; 
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt02C(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    volatile int ReceiptValidation_code = 133; ReceiptValidation_code -= 76; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_DTYSXHCUAEJP_01780023((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[423]), 236, 16); \
    ReceiptValidation_url2 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[225]), 119, 16); \
    ReceiptValidation_url1 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url2); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[28]), 197, 16); \
    ReceiptValidation_url2 = ReceiptValidation_KAFNPWRMPVUV_01780062(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1); \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_0154009B(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_UVVIPMIXGSXA_007C0173(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url1); \
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_HHMOUJYQDCXC_007C01A2(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_007C01EC(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_AEGZRQCEXAQC_0178014B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_HYOAMSNPXVSM_0154015A(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_DTYSXHCUAEJP -= 5; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 9;  \
    ReceiptValidation_UVVIPMIXGSXA += 14; ReceiptValidation_UVVIPMIXGSXA /= 35;  \
    ReceiptValidation_AEGZRQCEXAQC += 209; ReceiptValidation_AEGZRQCEXAQC /= 5;  \
    ReceiptValidation_KAFNPWRMPVUV -= 54; ReceiptValidation_KAFNPWRMPVUV *= 3; ReceiptValidation_KAFNPWRMPVUV += 1;  \
    ReceiptValidation_CIRTCBJVRQTZ -= 98; ReceiptValidation_CIRTCBJVRQTZ *= 4; ReceiptValidation_CIRTCBJVRQTZ += 2;  \
    ReceiptValidation_BACCPEPKGKHF += 116; ReceiptValidation_BACCPEPKGKHF /= 5;  \
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_007C0231(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt02C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 93; ReceiptValidation_code -= 36; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[366]), 171, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_CIRTCBJVRQTZ_017800CD(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[221])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[290])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_01540020(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[325])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[290])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_007C009B(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_UVVIPMIXGSXA_007C0173(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_HHMOUJYQDCXC_007C01A2(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_015401B5(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_AEGZRQCEXAQC_0178014B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_HYOAMSNPXVSM_0154015A(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01540231(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 35 to 309
    ReceiptValidation_DTYSXHCUAEJP -= 5; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 9; 
    // From 371 to 11
    ReceiptValidation_UVVIPMIXGSXA += 14; ReceiptValidation_UVVIPMIXGSXA /= 35; 
    // From 331 to 108
    ReceiptValidation_AEGZRQCEXAQC += 209; ReceiptValidation_AEGZRQCEXAQC /= 5; 
    // From 98 to 133
    ReceiptValidation_KAFNPWRMPVUV -= 54; ReceiptValidation_KAFNPWRMPVUV *= 3; ReceiptValidation_KAFNPWRMPVUV += 1; 
    // From 205 to 430
    ReceiptValidation_CIRTCBJVRQTZ -= 98; ReceiptValidation_CIRTCBJVRQTZ *= 4; ReceiptValidation_CIRTCBJVRQTZ += 2; 
    // From 279 to 79
    ReceiptValidation_BACCPEPKGKHF += 116; ReceiptValidation_BACCPEPKGKHF /= 5; 
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01540231(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt02C(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 93; ReceiptValidation_code -= 36; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[366]), 171, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_CIRTCBJVRQTZ_017800CD(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[221])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[290])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_01540020(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[325])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[290])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_007C009B(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_UVVIPMIXGSXA_007C0173(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_HHMOUJYQDCXC_007C01A2(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_015401B5(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_AEGZRQCEXAQC_0178014B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_HYOAMSNPXVSM_0154015A(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01540231(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_DTYSXHCUAEJP -= 5; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 9;  \
    ReceiptValidation_UVVIPMIXGSXA += 14; ReceiptValidation_UVVIPMIXGSXA /= 35;  \
    ReceiptValidation_AEGZRQCEXAQC += 209; ReceiptValidation_AEGZRQCEXAQC /= 5;  \
    ReceiptValidation_KAFNPWRMPVUV -= 54; ReceiptValidation_KAFNPWRMPVUV *= 3; ReceiptValidation_KAFNPWRMPVUV += 1;  \
    ReceiptValidation_CIRTCBJVRQTZ -= 98; ReceiptValidation_CIRTCBJVRQTZ *= 4; ReceiptValidation_CIRTCBJVRQTZ += 2;  \
    ReceiptValidation_BACCPEPKGKHF += 116; ReceiptValidation_BACCPEPKGKHF /= 5;  \
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01540231(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01540231(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#if DEBUG
inline static void ReceiptValidation_GetGUID04C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[266]), 240, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_CIRTCBJVRQTZ_00E001AE(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[334]), ReceiptValidation_str1_, 203, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_KAFNPWRMPVUV_00E00085(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_BACCPEPKGKHF_00E0004F(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_DTYSXHCUAEJP_004D0135(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_AEGZRQCEXAQC_007E006C(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_01540163(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_UVVIPMIXGSXA_00E0000B(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_service);
    }
    // Global variables computation
    // From 309 to 491
    ReceiptValidation_DTYSXHCUAEJP -= 146; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 2; 
    // Set to 321
    ReceiptValidation_UVVIPMIXGSXA = 321;
    // From 418 to 551
    ReceiptValidation_HHMOUJYQDCXC -= 235; ReceiptValidation_HHMOUJYQDCXC *= 3; ReceiptValidation_HHMOUJYQDCXC += 2; 
    // From 108 to 344
    ReceiptValidation_AEGZRQCEXAQC -= 40; ReceiptValidation_AEGZRQCEXAQC *= 5; ReceiptValidation_AEGZRQCEXAQC += 4; 
    // From 133 to 410
    ReceiptValidation_KAFNPWRMPVUV -= 51; ReceiptValidation_KAFNPWRMPVUV *= 5; 
    // Set to 116
    ReceiptValidation_HYOAMSNPXVSM = 116;
    // From 430 to 341
    ReceiptValidation_CIRTCBJVRQTZ += 252; ReceiptValidation_CIRTCBJVRQTZ /= 2; 
    // From 79 to 242
    ReceiptValidation_BACCPEPKGKHF -= 31; ReceiptValidation_BACCPEPKGKHF *= 5; ReceiptValidation_BACCPEPKGKHF += 2; 
ReceiptValidation_GetGUID04C_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID04C(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[266]), 240, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_CIRTCBJVRQTZ_00E001AE(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[334]), ReceiptValidation_str1_, 203, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_KAFNPWRMPVUV_00E00085(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_BACCPEPKGKHF_00E0004F(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID04C_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_DTYSXHCUAEJP_004D0135(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_AEGZRQCEXAQC_007E006C(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_01540163(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_UVVIPMIXGSXA_00E0000B(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_007E006D(ReceiptValidation_service); \
    } \
    ReceiptValidation_DTYSXHCUAEJP -= 146; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 2;  \
    ReceiptValidation_UVVIPMIXGSXA = 321; \
    ReceiptValidation_HHMOUJYQDCXC -= 235; ReceiptValidation_HHMOUJYQDCXC *= 3; ReceiptValidation_HHMOUJYQDCXC += 2;  \
    ReceiptValidation_AEGZRQCEXAQC -= 40; ReceiptValidation_AEGZRQCEXAQC *= 5; ReceiptValidation_AEGZRQCEXAQC += 4;  \
    ReceiptValidation_KAFNPWRMPVUV -= 51; ReceiptValidation_KAFNPWRMPVUV *= 5;  \
    ReceiptValidation_HYOAMSNPXVSM = 116; \
    ReceiptValidation_CIRTCBJVRQTZ += 252; ReceiptValidation_CIRTCBJVRQTZ /= 2;  \
    ReceiptValidation_BACCPEPKGKHF -= 31; ReceiptValidation_BACCPEPKGKHF *= 5; ReceiptValidation_BACCPEPKGKHF += 2;  \
ReceiptValidation_GetGUID04C_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_01540163(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 4; ReceiptValidation_code -= 1; ReceiptValidation_code *= 45; ReceiptValidation_code += 38; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[359]), ReceiptValidation_str1_, 66, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_CIRTCBJVRQTZ_011B0155(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_000201C1(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_007C01DC);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[310]), 157, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00650190;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_006500FA;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_019901D6;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_006501C9;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_019901F4;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00650219;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_011B00CA;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_HYOAMSNPXVSM_011B0074(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_000201C1(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_017800C7((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_AEGZRQCEXAQC_007C0158((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01780087(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_KAFNPWRMPVUV_011B019A(ReceiptValidation_certificate);
    }
    // Global variables computation
    // From 491 to 562
    ReceiptValidation_DTYSXHCUAEJP -= 304; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 1; 
    // From 344 to 464
    ReceiptValidation_AEGZRQCEXAQC -= 190; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 2; 
    // From 242 to 41
    ReceiptValidation_BACCPEPKGKHF += 45; ReceiptValidation_BACCPEPKGKHF /= 7; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_01780087(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_01780087(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_01780087(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01780087(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01780087(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 4; ReceiptValidation_code -= 1; ReceiptValidation_code *= 45; ReceiptValidation_code += 38;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[359]), ReceiptValidation_str1_, 66, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_CIRTCBJVRQTZ_011B0155(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_000201C1(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_007C01DC); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[310]), 157, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00650190; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_006500FA; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_019901D6; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_006501C9; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_019901F4; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00650219; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_011B00CA; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
    ReceiptValidation_status = ReceiptValidation_HYOAMSNPXVSM_011B0074(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_000201C1(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_017800C7((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_AEGZRQCEXAQC_007C0158((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01780087(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_KAFNPWRMPVUV_011B019A(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_DTYSXHCUAEJP -= 304; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 1;  \
    ReceiptValidation_AEGZRQCEXAQC -= 190; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 2;  \
    ReceiptValidation_BACCPEPKGKHF += 45; ReceiptValidation_BACCPEPKGKHF /= 7;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_01780087(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_01780087(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_01780087(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01780087(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01780087(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1; 
    volatile CFIndex ReceiptValidation_count3 = 10; ReceiptValidation_count3 -= 6; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 83; ReceiptValidation_code -= 40; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[213]), ReceiptValidation_str1_, 42, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_CIRTCBJVRQTZ_011B0155(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_007C01DC);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[573];
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[532]), ReceiptValidation_str2_, 156, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_011B0202(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_DTYSXHCUAEJP_011B01EB(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_KAFNPWRMPVUV_011B019A((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // From 491 to 562
    ReceiptValidation_DTYSXHCUAEJP -= 304; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 1; 
    // From 344 to 464
    ReceiptValidation_AEGZRQCEXAQC -= 190; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 2; 
    // From 242 to 41
    ReceiptValidation_BACCPEPKGKHF += 45; ReceiptValidation_BACCPEPKGKHF /= 7; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1;  \
    volatile CFIndex ReceiptValidation_count3 = 10; ReceiptValidation_count3 -= 6; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 83; ReceiptValidation_code -= 40; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[213]), ReceiptValidation_str1_, 42, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_CIRTCBJVRQTZ_011B0155(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_007C01DC); \
    char ReceiptValidation_str2_[573]; \
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[532]), ReceiptValidation_str2_, 156, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_011B0202(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_DTYSXHCUAEJP_011B01EB(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_KAFNPWRMPVUV_011B019A((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_DTYSXHCUAEJP -= 304; ReceiptValidation_DTYSXHCUAEJP *= 3; ReceiptValidation_DTYSXHCUAEJP += 1;  \
    ReceiptValidation_AEGZRQCEXAQC -= 190; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 2;  \
    ReceiptValidation_BACCPEPKGKHF += 45; ReceiptValidation_BACCPEPKGKHF /= 7;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_007C0231(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[549]), 109, 18);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[184]), 240, 19);
    volatile int ReceiptValidation_code = 32; ReceiptValidation_code -= 8; ReceiptValidation_code *= 7; ReceiptValidation_code += 5; 
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_DTYSXHCUAEJP_01780232((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_BACCPEPKGKHF_01540029(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1);
    }
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str2);
    // Global variables computation
    // From 562 to 41
    ReceiptValidation_DTYSXHCUAEJP += 53; ReceiptValidation_DTYSXHCUAEJP /= 15; 
    // From 464 to 562
    ReceiptValidation_AEGZRQCEXAQC -= 277; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1; 
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[549]), 109, 18); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[184]), 240, 19); \
    volatile int ReceiptValidation_code = 32; ReceiptValidation_code -= 8; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_DTYSXHCUAEJP_01780232((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_BACCPEPKGKHF_01540029(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1); \
    } \
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str2); \
    ReceiptValidation_DTYSXHCUAEJP += 53; ReceiptValidation_DTYSXHCUAEJP /= 15;  \
    ReceiptValidation_AEGZRQCEXAQC -= 277; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1;  \
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#if DEBUG
inline static void ReceiptValidation_CheckBundleVersion061(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    volatile int ReceiptValidation_code = 128; ReceiptValidation_code -= 71; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[261]), 243, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[438]), 13, 35);
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_AEGZRQCEXAQC_01780232((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_DTYSXHCUAEJP_01540029(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_006B0079(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2);
    }
    // Global variables computation
    // From 41 to 352
    ReceiptValidation_DTYSXHCUAEJP -= 6; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 2; 
    // From 321 to 256
    ReceiptValidation_UVVIPMIXGSXA += 191; ReceiptValidation_UVVIPMIXGSXA /= 2; 
    // From 551 to 418
    ReceiptValidation_HHMOUJYQDCXC += 285; ReceiptValidation_HHMOUJYQDCXC /= 2; 
    // From 562 to 271
    ReceiptValidation_AEGZRQCEXAQC += 522; ReceiptValidation_AEGZRQCEXAQC /= 4; 
    // From 410 to 332
    ReceiptValidation_KAFNPWRMPVUV += 254; ReceiptValidation_KAFNPWRMPVUV /= 2; 
    // Set to 242
    ReceiptValidation_HYOAMSNPXVSM = 242;
    // From 341 to 267
    ReceiptValidation_CIRTCBJVRQTZ += 193; ReceiptValidation_CIRTCBJVRQTZ /= 2; 
    // From 41 to 294
    ReceiptValidation_BACCPEPKGKHF -= 9; ReceiptValidation_BACCPEPKGKHF *= 9; ReceiptValidation_BACCPEPKGKHF += 6; 
    ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion061(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    volatile int ReceiptValidation_code = 128; ReceiptValidation_code -= 71; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[261]), 243, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[438]), 13, 35); \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_AEGZRQCEXAQC_01780232((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_DTYSXHCUAEJP_01540029(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_006B0079(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2); \
    } \
    ReceiptValidation_DTYSXHCUAEJP -= 6; ReceiptValidation_DTYSXHCUAEJP *= 10; ReceiptValidation_DTYSXHCUAEJP += 2;  \
    ReceiptValidation_UVVIPMIXGSXA += 191; ReceiptValidation_UVVIPMIXGSXA /= 2;  \
    ReceiptValidation_HHMOUJYQDCXC += 285; ReceiptValidation_HHMOUJYQDCXC /= 2;  \
    ReceiptValidation_AEGZRQCEXAQC += 522; ReceiptValidation_AEGZRQCEXAQC /= 4;  \
    ReceiptValidation_KAFNPWRMPVUV += 254; ReceiptValidation_KAFNPWRMPVUV /= 2;  \
    ReceiptValidation_HYOAMSNPXVSM = 242; \
    ReceiptValidation_CIRTCBJVRQTZ += 193; ReceiptValidation_CIRTCBJVRQTZ /= 2;  \
    ReceiptValidation_BACCPEPKGKHF -= 9; ReceiptValidation_BACCPEPKGKHF *= 9; ReceiptValidation_BACCPEPKGKHF += 6;  \
    ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_007C0163(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation065X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) {
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data;
    long ReceiptValidation_size = ReceiptValidation_length;
    *ReceiptValidation_payload = 0;
    do {
        *ReceiptValidation_payload <<= 8;
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++;
    } while(--ReceiptValidation_size > 0);
}
#else
inline static void ReceiptValidation_GetReceiptInformation065X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) { \
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data; \
    long ReceiptValidation_size = ReceiptValidation_length; \
    *ReceiptValidation_payload = 0; \
    do { \
        *ReceiptValidation_payload <<= 8; \
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++; \
    } while(--ReceiptValidation_size > 0); \
}
#endif

#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation065(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    const unsigned char *ReceiptValidation_seq_end;
    int ReceiptValidation_attr_type;
    int ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    int ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00900181(ReceiptValidation_BIO_s_mem_00370166());
    ReceiptValidation_BIO_write_00900234(ReceiptValidation_bio_p7, (void *) ReceiptValidation_UVVIPMIXGSXA_01540100((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_DTYSXHCUAEJP_007C0160((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0037002C(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_KAFNPWRMPVUV_0178014C(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[81]), 166, 33); 
    ReceiptValidation_AEGZRQCEXAQC_0154010F(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_HYOAMSNPXVSM_007C00F2(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_007C002B, ReceiptValidation_kCFTypeDictionaryValueCallBacks_007C0239);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_007C01D4(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_007C0197(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                    }
                    ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number));
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_007C01D4(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_DTYSXHCUAEJP_007C0160((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_CFDictionaryAddValue_0154005E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_CFDictionaryAddValue_0154005E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_007C0180((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01540227(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_0154022F);
                ReceiptValidation_CIRTCBJVRQTZ_0178010B((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1);
            }
            ReceiptValidation_BACCPEPKGKHF_01540126((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_007C0087(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // From 267 to 212
    ReceiptValidation_CIRTCBJVRQTZ += 157; ReceiptValidation_CIRTCBJVRQTZ /= 2; 
    // From 294 to 256
    ReceiptValidation_BACCPEPKGKHF += 218; ReceiptValidation_BACCPEPKGKHF /= 2; 
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_003700A2(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0037020F(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_007C0087(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation065(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    const unsigned char *ReceiptValidation_seq_end; \
    int ReceiptValidation_attr_type; \
    int ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    int ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00900181(ReceiptValidation_BIO_s_mem_00370166()); \
    ReceiptValidation_BIO_write_00900234(ReceiptValidation_bio_p7, (void *) ReceiptValidation_UVVIPMIXGSXA_01540100((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_DTYSXHCUAEJP_007C0160((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0037002C(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_KAFNPWRMPVUV_0178014C(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[81]), 166, 33);  \
    ReceiptValidation_AEGZRQCEXAQC_0154010F(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_HYOAMSNPXVSM_007C00F2(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_007C002B, ReceiptValidation_kCFTypeDictionaryValueCallBacks_007C0239); \
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_007C01D4(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[513])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_007C0197(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_00010040(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        ReceiptValidation_exit_006B01C1(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_GetReceiptInformation065X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number)); \
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_007C01D4(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_DTYSXHCUAEJP_007C0160((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_CFDictionaryAddValue_0154005E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_CFDictionaryAddValue_0154005E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_017800AD(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_007C0180((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01540227(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_0154022F); \
                ReceiptValidation_CIRTCBJVRQTZ_0178010B((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_007C0087(ReceiptValidation_value1); \
            } \
            ReceiptValidation_BACCPEPKGKHF_01540126((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_007C0087(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_CIRTCBJVRQTZ += 157; ReceiptValidation_CIRTCBJVRQTZ /= 2;  \
    ReceiptValidation_BACCPEPKGKHF += 218; ReceiptValidation_BACCPEPKGKHF /= 2;  \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_003700A2(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0037020F(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_007C0087(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#if DEBUG
inline static void ReceiptValidation_CheckReceiptSignature068(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str2;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 69; ReceiptValidation_code -= 26; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_0037001E(ReceiptValidation_BIO_s_mem_00010133());
    ReceiptValidation_BIO_write_0090018D(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BACCPEPKGKHF_01780100((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CIRTCBJVRQTZ_017800D4((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0090002C(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_00370099();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_0037001E(ReceiptValidation_BIO_s_mem_00010133());
        ReceiptValidation_BIO_write_0090018D(ReceiptValidation_bio_apple, (void *) ReceiptValidation_BACCPEPKGKHF_01780100((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_CIRTCBJVRQTZ_017800D4((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_0090012E(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_0001006F();
        ReceiptValidation_X509_STORE_add_cert_00900169(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_009000A0(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 3945;
        if (ReceiptValidation_verify != 3945) {
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_00370179((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000101D5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[573];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_009001B9(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573);
        if (ReceiptValidation_status <= 0) {
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 18; ReceiptValidation_digest_length -= 12; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2; 
        char ReceiptValidation_str2_[573];
        ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[141]), ReceiptValidation_str2_, 68, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00900067(ReceiptValidation_str2);
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_00900177(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3945;
        if (ReceiptValidation_status == 3945 || ReceiptValidation_len > 0) {
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_00900177(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3945;
        if (ReceiptValidation_status != 3945 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[573];
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[573];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[501]), ReceiptValidation_str3_, 50, 49);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[573];
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[532]), ReceiptValidation_str1_, 156, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 5; ReceiptValidation_num -= 2; ReceiptValidation_num *= 4; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[489])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[489])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 3945;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 3945) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[573];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[203]), ReceiptValidation_str4_, 222, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0037011D(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0037009C(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_00900058(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[573];
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[439]), ReceiptValidation_str5_, 13, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_000100B2(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_00370179((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000101D5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0037011D(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0037009C(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_00900058(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 352 to 69
    ReceiptValidation_DTYSXHCUAEJP += 131; ReceiptValidation_DTYSXHCUAEJP /= 7; 
    // From 242 to 231
    ReceiptValidation_HYOAMSNPXVSM += 220; ReceiptValidation_HYOAMSNPXVSM /= 2; 
    // From 256 to 41
    ReceiptValidation_BACCPEPKGKHF += 72; ReceiptValidation_BACCPEPKGKHF /= 8; 
ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0037023C(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_0037017A(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_00900144(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_0037023C(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_009000C5(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature068(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str2; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 69; ReceiptValidation_code -= 26; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_0037001E(ReceiptValidation_BIO_s_mem_00010133()); \
    ReceiptValidation_BIO_write_0090018D(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BACCPEPKGKHF_01780100((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CIRTCBJVRQTZ_017800D4((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0090002C(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_00370099(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_0037001E(ReceiptValidation_BIO_s_mem_00010133()); \
        ReceiptValidation_BIO_write_0090018D(ReceiptValidation_bio_apple, (void *) ReceiptValidation_BACCPEPKGKHF_01780100((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_CIRTCBJVRQTZ_017800D4((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_0090012E(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_0001006F(); \
        ReceiptValidation_X509_STORE_add_cert_00900169(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_009000A0(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 3945; \
        if (ReceiptValidation_verify != 3945) { \
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_00370179((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000101D5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[573]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_009001B9(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573); \
        if (ReceiptValidation_status <= 0) { \
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 18; ReceiptValidation_digest_length -= 12; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
        char ReceiptValidation_str2_[573]; \
        ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[141]), ReceiptValidation_str2_, 68, 16); \
        ReceiptValidation_str2 = ReceiptValidation_str2_; \
        const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00900067(ReceiptValidation_str2); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_00900177(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3945; \
        if (ReceiptValidation_status == 3945 || ReceiptValidation_len > 0) { \
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_00900177(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3945; \
        if (ReceiptValidation_status != 3945 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[573]; \
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[573]; \
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[501]), ReceiptValidation_str3_, 50, 49); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[573]; \
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[532]), ReceiptValidation_str1_, 156, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 5; ReceiptValidation_num -= 2; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[489])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[489])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 3945; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 3945) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[573]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[203]), ReceiptValidation_str4_, 222, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0037011D(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0037009C(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_00900058(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[573]; \
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[439]), ReceiptValidation_str5_, 13, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_000100B2(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_00370179((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_000101D5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0037011D(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0037009C(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_00900058(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        ReceiptValidation_exit_003E01A9(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail; \
    } \
    ReceiptValidation_DTYSXHCUAEJP += 131; ReceiptValidation_DTYSXHCUAEJP /= 7;  \
    ReceiptValidation_HYOAMSNPXVSM += 220; ReceiptValidation_HYOAMSNPXVSM /= 2;  \
    ReceiptValidation_BACCPEPKGKHF += 72; ReceiptValidation_BACCPEPKGKHF /= 8;  \
ReceiptValidation_CheckReceiptSignature068_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0037023C(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_0037017A(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_00900144(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_0037023C(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_009000C5(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    volatile int ReceiptValidation_code = 89; ReceiptValidation_code -= 32; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[499]), 131, 18);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HYOAMSNPXVSM_007C00E7(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DTYSXHCUAEJP_007C0045((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_key);
    if (ReceiptValidation_BACCPEPKGKHF_01540029(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_00020079(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 332 to 384
    ReceiptValidation_KAFNPWRMPVUV -= 204; ReceiptValidation_KAFNPWRMPVUV *= 3; 
    // From 212 to 173
    ReceiptValidation_CIRTCBJVRQTZ += 134; ReceiptValidation_CIRTCBJVRQTZ /= 2; 
    // Set to 143
    ReceiptValidation_BACCPEPKGKHF = 143;
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    volatile int ReceiptValidation_code = 89; ReceiptValidation_code -= 32; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[499]), 131, 18); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HYOAMSNPXVSM_007C00E7(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DTYSXHCUAEJP_007C0045((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_key); \
    if (ReceiptValidation_BACCPEPKGKHF_01540029(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_00020079(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
    } \
    ReceiptValidation_KAFNPWRMPVUV -= 204; ReceiptValidation_KAFNPWRMPVUV *= 3;  \
    ReceiptValidation_CIRTCBJVRQTZ += 134; ReceiptValidation_CIRTCBJVRQTZ /= 2;  \
    ReceiptValidation_BACCPEPKGKHF = 143; \
    ReceiptValidation_CFRelease_01540231(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[364]), 109, 16);
    volatile int ReceiptValidation_code = 134; ReceiptValidation_code -= 77; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_CIRTCBJVRQTZ_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KAFNPWRMPVUV_01540180((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
    if (ReceiptValidation_BACCPEPKGKHF_007C008F(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_000201A9(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1);
    }
    // Global variables computation
    // Set to 256
    ReceiptValidation_DTYSXHCUAEJP = 256;
    // From 256 to 331
    ReceiptValidation_UVVIPMIXGSXA -= 146; ReceiptValidation_UVVIPMIXGSXA *= 3; ReceiptValidation_UVVIPMIXGSXA += 1; 
    // From 418 to 3
    ReceiptValidation_HHMOUJYQDCXC += 5; ReceiptValidation_HHMOUJYQDCXC /= 141; 
    // From 271 to 352
    ReceiptValidation_AEGZRQCEXAQC -= 154; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1; 
    // From 384 to 173
    ReceiptValidation_KAFNPWRMPVUV += 308; ReceiptValidation_KAFNPWRMPVUV /= 4; 
    // From 231 to 246
    ReceiptValidation_HYOAMSNPXVSM -= 149; ReceiptValidation_HYOAMSNPXVSM *= 3; 
    // From 173 to 278
    ReceiptValidation_CIRTCBJVRQTZ -= 81; ReceiptValidation_CIRTCBJVRQTZ *= 3; ReceiptValidation_CIRTCBJVRQTZ += 2; 
    // From 143 to 418
    ReceiptValidation_BACCPEPKGKHF -= 39; ReceiptValidation_BACCPEPKGKHF *= 4; ReceiptValidation_BACCPEPKGKHF += 2; 
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[364]), 109, 16); \
    volatile int ReceiptValidation_code = 134; ReceiptValidation_code -= 77; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_CIRTCBJVRQTZ_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KAFNPWRMPVUV_01540180((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
    if (ReceiptValidation_BACCPEPKGKHF_007C008F(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_000201A9(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1); \
    } \
    ReceiptValidation_DTYSXHCUAEJP = 256; \
    ReceiptValidation_UVVIPMIXGSXA -= 146; ReceiptValidation_UVVIPMIXGSXA *= 3; ReceiptValidation_UVVIPMIXGSXA += 1;  \
    ReceiptValidation_HHMOUJYQDCXC += 5; ReceiptValidation_HHMOUJYQDCXC /= 141;  \
    ReceiptValidation_AEGZRQCEXAQC -= 154; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1;  \
    ReceiptValidation_KAFNPWRMPVUV += 308; ReceiptValidation_KAFNPWRMPVUV /= 4;  \
    ReceiptValidation_HYOAMSNPXVSM -= 149; ReceiptValidation_HYOAMSNPXVSM *= 3;  \
    ReceiptValidation_CIRTCBJVRQTZ -= 81; ReceiptValidation_CIRTCBJVRQTZ *= 3; ReceiptValidation_CIRTCBJVRQTZ += 2;  \
    ReceiptValidation_BACCPEPKGKHF -= 39; ReceiptValidation_BACCPEPKGKHF *= 4; ReceiptValidation_BACCPEPKGKHF += 2;  \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[261]), 243, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_CIRTCBJVRQTZ_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KAFNPWRMPVUV_01540180((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_key);
    if (ReceiptValidation_BACCPEPKGKHF_007C008F(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // Set to 256
    ReceiptValidation_DTYSXHCUAEJP = 256;
    // From 256 to 331
    ReceiptValidation_UVVIPMIXGSXA -= 146; ReceiptValidation_UVVIPMIXGSXA *= 3; ReceiptValidation_UVVIPMIXGSXA += 1; 
    // From 418 to 3
    ReceiptValidation_HHMOUJYQDCXC += 5; ReceiptValidation_HHMOUJYQDCXC /= 141; 
    // From 271 to 352
    ReceiptValidation_AEGZRQCEXAQC -= 154; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1; 
    // From 384 to 173
    ReceiptValidation_KAFNPWRMPVUV += 308; ReceiptValidation_KAFNPWRMPVUV /= 4; 
    // From 231 to 246
    ReceiptValidation_HYOAMSNPXVSM -= 149; ReceiptValidation_HYOAMSNPXVSM *= 3; 
    // From 173 to 278
    ReceiptValidation_CIRTCBJVRQTZ -= 81; ReceiptValidation_CIRTCBJVRQTZ *= 3; ReceiptValidation_CIRTCBJVRQTZ += 2; 
    // From 143 to 418
    ReceiptValidation_BACCPEPKGKHF -= 39; ReceiptValidation_BACCPEPKGKHF *= 4; ReceiptValidation_BACCPEPKGKHF += 2; 
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[261]), 243, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_CIRTCBJVRQTZ_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KAFNPWRMPVUV_01540180((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_key); \
    if (ReceiptValidation_BACCPEPKGKHF_007C008F(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_DTYSXHCUAEJP = 256; \
    ReceiptValidation_UVVIPMIXGSXA -= 146; ReceiptValidation_UVVIPMIXGSXA *= 3; ReceiptValidation_UVVIPMIXGSXA += 1;  \
    ReceiptValidation_HHMOUJYQDCXC += 5; ReceiptValidation_HHMOUJYQDCXC /= 141;  \
    ReceiptValidation_AEGZRQCEXAQC -= 154; ReceiptValidation_AEGZRQCEXAQC *= 3; ReceiptValidation_AEGZRQCEXAQC += 1;  \
    ReceiptValidation_KAFNPWRMPVUV += 308; ReceiptValidation_KAFNPWRMPVUV /= 4;  \
    ReceiptValidation_HYOAMSNPXVSM -= 149; ReceiptValidation_HYOAMSNPXVSM *= 3;  \
    ReceiptValidation_CIRTCBJVRQTZ -= 81; ReceiptValidation_CIRTCBJVRQTZ *= 3; ReceiptValidation_CIRTCBJVRQTZ += 2;  \
    ReceiptValidation_BACCPEPKGKHF -= 39; ReceiptValidation_BACCPEPKGKHF *= 4; ReceiptValidation_BACCPEPKGKHF += 2;  \
    ReceiptValidation_CFRelease_01780231(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#if DEBUG
inline static void ReceiptValidation_CheckReceiptHash090(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[573];
    volatile int ReceiptValidation_counter = 14; ReceiptValidation_counter -= 8; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_BACCPEPKGKHF_015401A2(NULL, 0);
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_AEGZRQCEXAQC_01540160((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data1), ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data1));
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data2), ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data2));
    ReceiptValidation_SHA1_00010080(ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data4), ReceiptValidation_digest);
    ReceiptValidation_OpenSSL_add_all_digests_009000FC();
    EVP_MD_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_EVP_MD_CTX_init_000101FD(&ReceiptValidation_hashctx2);
    const EVP_MD *ReceiptValidation_digester = EVP_sha1();
    ReceiptValidation_EVP_DigestInit_00900047(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data1), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data1));
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data2), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data2));
    ReceiptValidation_EVP_DigestFinal_000101B8(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
    volatile int ReceiptValidation_code = 2; ReceiptValidation_code -= 1; ReceiptValidation_code *= 88; ReceiptValidation_code += 85; 
    const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest;
    const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data3);
    while(--ReceiptValidation_counter >= 0) {
        if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4);
            ReceiptValidation_exit_000201C1(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4);
            goto ReceiptValidation_CheckReceiptHash090_ReceiptValidation_bail;
        }
    }
    // Global variables computation
    // From 418 to 253
    ReceiptValidation_BACCPEPKGKHF += 341; ReceiptValidation_BACCPEPKGKHF /= 3; 
ReceiptValidation_CheckReceiptHash090_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash090(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[573]; \
    volatile int ReceiptValidation_counter = 14; ReceiptValidation_counter -= 8; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_KAFNPWRMPVUV_007C00AD(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_HYOAMSNPXVSM_007C00F6((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_BACCPEPKGKHF_015401A2(NULL, 0); \
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_AEGZRQCEXAQC_01540160((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data1), ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data1)); \
    ReceiptValidation_UVVIPMIXGSXA_0178014B(ReceiptValidation_data4, ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data2), ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data2)); \
    ReceiptValidation_SHA1_00010080(ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data4), ReceiptValidation_digest); \
    ReceiptValidation_OpenSSL_add_all_digests_009000FC(); \
    EVP_MD_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_EVP_MD_CTX_init_000101FD(&ReceiptValidation_hashctx2); \
    const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
    ReceiptValidation_EVP_DigestInit_00900047(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data1), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data1)); \
    ReceiptValidation_EVP_DigestUpdate_00370061(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data2), (size_t) ReceiptValidation_AEGZRQCEXAQC_01540160(ReceiptValidation_data2)); \
    ReceiptValidation_EVP_DigestFinal_000101B8(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
    volatile int ReceiptValidation_code = 2; ReceiptValidation_code -= 1; ReceiptValidation_code *= 88; ReceiptValidation_code += 85;  \
    const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest; \
    const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_DTYSXHCUAEJP_01780100(ReceiptValidation_data3); \
    while(--ReceiptValidation_counter >= 0) { \
        if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4); \
            ReceiptValidation_exit_000201C1(ReceiptValidation_code); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data1); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data2); \
            ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4); \
            goto ReceiptValidation_CheckReceiptHash090_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_BACCPEPKGKHF += 341; ReceiptValidation_BACCPEPKGKHF /= 3;  \
ReceiptValidation_CheckReceiptHash090_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_007C0087(ReceiptValidation_data4); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 253);
#endif

inline static void ReceiptValidation_AppRunner0A6(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_BACCPEPKGKHF))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_BACCPEPKGKHF_011A00FD((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#if DEBUG
inline static void ReceiptValidation_CleanUp0AB(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    int ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) {
        if (ReceiptValidation_references[ReceiptValidation_idx]) {
            ReceiptValidation_CFRelease_01780163(ReceiptValidation_references[ReceiptValidation_idx]);
            ReceiptValidation_references[ReceiptValidation_idx] = NULL;
        }
    }
}
#else
#define ReceiptValidation_CleanUp0AB(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    int ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) { \
        if (ReceiptValidation_references[ReceiptValidation_idx]) { \
            ReceiptValidation_CFRelease_01780163(ReceiptValidation_references[ReceiptValidation_idx]); \
            ReceiptValidation_references[ReceiptValidation_idx] = NULL; \
        } \
    } \
}
#endif




// CodeBlock EntryPoint
#if DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = _argc;
    ReceiptValidation_ctx1.argv = (const char **) _argv;
    // Call each step
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
    ReceiptValidation_LoadReceipt02C((&ReceiptValidation_ctx1));
    ReceiptValidation_GetGUID04C((&ReceiptValidation_ctx1));
    ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1));
    ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptSignature068((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1));
    ReceiptValidation_CheckReceiptHash090((&ReceiptValidation_ctx1));
    ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1));
    ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1));
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
    ReceiptValidation_ctx1.argc = _argc; \
    ReceiptValidation_ctx1.argv = (const char **) _argv; \
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
    ReceiptValidation_LoadReceipt02C((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetGUID04C((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1)); \
    ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptSignature068((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CheckReceiptHash090((&ReceiptValidation_ctx1)); \
    ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1)); \
    ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1)); \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

