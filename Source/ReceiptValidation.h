//  ____                _                  
// |  _ \ ___  ___  ___(_) __ _  ___ _ ___ 
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_  \ 
// |  _ |  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/ 3.3.5.0
//
// This code was generated by Receigen and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.iccir.Embrace
// CFBundleShortVersionString : 1.0.5
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Set DEBUG to 0 if not defined to avoid semantic warnings
#ifndef DEBUG
    #define DEBUG 0
#endif

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if DEBUG && !RECEIGEN_QUIET_DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(args...)    NSLog(@args)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(args...)    fprintf(stderr, args); fprintf(stderr, "\n")
    #endif
#else
    #define __ReceiptValidation_RECEIPT_LOG(args...)
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 1668,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 1),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 1),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 1),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 1),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 1),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 1),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 1),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 1),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 1),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 1),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 1),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 1),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 1),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 1)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    CFTypeRef dummy0003;
    CFTypeRef ca_data;
    const char ** argv;
    CFTypeRef dummy0001;
    long argc;
    CFTypeRef guid_data;
    CFTypeRef dummy0004;
    CFTypeRef receipt_data;
    CFTypeRef dummy0000;
    CFTypeRef receipt_dict;
    CFTypeRef main_bundle;
    CFTypeRef dummy0002;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0001;
    CFTypeRef dummy0007;
    CFTypeRef dictionary;
    const unsigned char * end;
    CFTypeRef dummy0009;
    CFTypeRef dummy0008;
    CFTypeRef dummy0003;
    const unsigned char * ptr;
    CFTypeRef dummy0004;
    CFTypeRef dummy0006;
    CFTypeRef dummy0002;
    CFTypeRef dummy0000;
    CFTypeRef dummy0005;
    struct _ReceiptValidation_ParsingContext * parent;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[573] = {
    // "sel_registerName" / M(Xor3) / S(44) / L(16)
    "\x4e\x58\x51\x62\x4f\x58\x5a\x54\x4e\x49\x58\x4f\x73\x5c\x50\x58\x3d",
    // "" / M(None) / S(0) / L(0)
    "\xf9\xb0\x41\xc5\xa7\xc2\x6f\xe1\x9e\x4a\xd4\x9d\xff\x11\x36\xb4\xd2\xf8\xb8\x84\x2e\x95\xc2\xea\x40\x3b\xb1\xb4\x2c\xa6\xe2\x32",
    // "dlopen" / M(Xor4) / S(130) / L(6)
    "\x44\x4c\x4f\x50\x45\x4e\x20\x0a\x72\x0b\x02\xa1\x02\x52\xf5\x2e",
    // "." / M(Xor2) / S(244) / L(1)
    "\xca\xe4\x1d\x7a\x6d\x63\x3a\x43\xf5\x4e\x12\x5d\xd4\xab\xb1\xde",
    // "CFDataGetBytePtr" / M(Xor3) / S(197) / L(16)
    "\x95\x90\x92\xb7\xa2\xb7\x91\xb3\xa2\x94\xaf\xa2\xb3\x86\xa2\xa4\xd6",
    // "SHA1" / M(Xor2) / S(241) / L(4)
    "\xb2\xa9\xa0\xd0\xe1\x90\xd0\x6f\x01\xf2\xfc\xf9\x82\x74\x95\xf6",
    // "" / M(None) / S(0) / L(0)
    "\x3a\x29\x13\x05\xd2\xe7\xc4\xcb\x07\x40\x4f\xed\x65\x35\x08\xc1\x84\x51\x0b\xd9\x68\xf2\xdc\xc7\x76\x17\xb1\xa1\xef\x88\x1c\xd2",
    // "" / M(None) / S(0) / L(0)
    "\x43\x94\x4e\x11\xac\x00\xab\x11\x74\x66\x78\x54\x2d\xd0\x0d\x78\xc4\x99\x03\x8a\xb6\x5a\x15\x67\xe5\x7f\xb7\xc0\x3a\xc3\x1f\xf5",
    // "receipt" / M(Xor1) / S(216) / L(7)
    "\xaa\xbd\xbb\xbd\xb1\xa8\xac\xd8\x31\x63\xdf\x3b\x9e\xca\x43\xab",
    // "" / M(None) / S(0) / L(0)
    "\xcc\xe8\x74\x10\x08\x38\xb3\x0b\x8d\x71\xd6\xdd\x3b\x82\xb1\x0f\x31\x32\xea\x2f\x4d\x59\xb3\x4d\xc8\x65\x9d\x9b\xf8\x73\x5e\x68",
    // "" / M(None) / S(0) / L(0)
    "\xd9\x07\x7e\x4f\x94\x8b\xc7\xb5\x68\xd1\xa0\x87\x0d\xbb\xb3\x98\xb7\x51\x23\x9e\xcb\xac\x97\x63\x0f\x6d\x92\xb8\xa3\x27\x43\xd7",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor2) / S(240) / L(57)
    "\x9d\xe1\xcb\xc1\xc6\xd7\xdf\x9d\xfe\xdb\xd0\xc0\xd3\xc0\xcb\x9d\xf9\xd7\xcb\xd1\xda\xd3\xdb\xdc\xc1\x9d\xe1\xcb\xc1\xc6\xd7\xdf\xe0\xdd\xdd\xc6\xf1\xd7\xc0\xc6\xdb\xd4\xdb\xd1\xd3\xc6\xd7\xc1\x9c\xd9\xd7\xcb\xd1\xda\xd3\xdb\xdc\xb2\xac\x24\x43\x34\x26\xc8\x05\x72",
    // "CFDataCreateMutable" / M(Xor4) / S(110) / L(19)
    "\xdb\xde\xdc\xf9\xec\xf9\xdb\xea\xfd\xf9\xec\xfd\xd5\xed\xec\xf9\xfa\xf4\xfd\x98",
    // "_MASReceipt" / M(Xor4) / S(95) / L(11)
    "\xaf\xbd\xb1\xa3\xa2\x95\x93\x95\x99\x80\x84\xf0\xac\xe7\xef\x4f",
    // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(149) / L(35)
    "\xb7\xb2\xb0\x95\x80\x91\xb2\x9b\x86\x99\x95\x80\x80\x91\x86\xb7\x86\x91\x95\x80\x91\xb0\x95\x80\x91\xb2\x86\x9b\x99\xa7\x80\x86\x9d\x9a\x93\xf4",
    // "" / M(None) / S(0) / L(0)
    "\x09\x04\x3c\xb4\x74\xf6\x5b\x99\x7a\x98\x0c\xae\x8e\x06\xb6\x65\x56\x2f\x09\x3f\xd0\x36\x24\x01\xfd\x79\x13\xe0\x16\xd0\x5a\xce",
    // "X509_digest" / M(Xor3) / S(78) / L(11)
    "\x06\x6b\x6e\x67\x01\x3a\x37\x39\x3b\x2d\x2a\x5e\xbb\x82\x42\x83",
    // "IOMasterPort" / M(Xor1) / S(253) / L(12)
    "\xb4\xb2\xb0\x9c\x8e\x89\x98\x8f\xad\x92\x8f\x89\xfd\x96\x03\xef",
    // "" / M(None) / S(0) / L(0)
    "\x56\x08\x7a\x5e\x2c\xac\xe1\x52\xfb\xf3\x95\x8b\xdb\x60\x3e\x0d\x6f\x18\xa5\xc2\x10\x73\x7d\x3a\xae\x34\x39\x16\xc9\xae\xb7\x28",
    // "EVP_DigestInit" / M(Rot) / S(93) / L(14)
    "\xa2\xb3\xad\xbc\xa1\xc6\xc4\xc2\xd0\xd1\xa6\xcb\xc6\xd1\x5d\x0f",
    // "kSecClass" / M(Xor4) / S(217) / L(9)
    "\xfb\xc3\xf5\xf3\xd3\xfc\xf1\xe3\xe3\x90\xc7\x71\x49\x9f\xe7\xbc",
    // "CFDateFormatterSetFormat" / M(Xor4) / S(223) / L(24)
    "\xfc\xf9\xfb\xde\xcb\xda\xf9\xd0\xcd\xd2\xde\xcb\xcb\xda\xcd\xec\xda\xcb\xf9\xd0\xcd\xd2\xde\xcb\xbf\x8b\x28\xe2\xce\x06\xbd\xb4\x3b",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(167) / L(22)
    "\xd6\x1c\x1a\x19\xd6\x13\x10\x09\xd6\x13\x10\x09\x16\x09\x11\x0a\xd5\x0b\x20\x13\x10\x09\xa7",
    // "receipt" / M(Rot) / S(82) / L(7)
    "\xc4\xb7\xb5\xb7\xbb\xc2\xc6\x52\xe4\x1f\xe5\x91\x32\x7c\x74\xfd",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(215) / L(57)
    "\x06\x2a\x50\x4a\x4b\x3c\x44\x06\x23\x40\x39\x49\x38\x49\x50\x06\x22\x3c\x50\x3a\x3f\x38\x40\x45\x4a\x06\x2a\x50\x4a\x4b\x3c\x44\x29\x46\x46\x4b\x1a\x3c\x49\x4b\x40\x3d\x40\x3a\x38\x4b\x3c\x4a\x05\x42\x3c\x50\x3a\x3f\x38\x40\x45\xd7\xf6\x27\xa6\x8f\x7b\x13\x27\x8b",
    // "CC_SHA1_Update" / M(Rot) / S(51) / L(14)
    "\x76\x76\x92\x86\x7b\x74\x64\x92\x88\xa3\x97\x94\xa7\x98\x33\x9a",
    // "CFStringCreateWithCString" / M(Xor1) / S(129) / L(25)
    "\xc2\xc7\xd2\xf5\xf3\xe8\xef\xe6\xc2\xf3\xe4\xe0\xf5\xe4\xd6\xe8\xf5\xe9\xc2\xd2\xf5\xf3\xe8\xef\xe6\x81\x03\x78\x89\xbc\x7c\x9f\xd5\x81",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor4) / S(8) / L(37)
    "\x63\x55\x53\x7b\x55\x49\x53\x58\x51\x59\x5e\x63\x55\x51\x42\x53\x58\x73\x42\x55\x51\x44\x55\x76\x42\x5f\x5d\x71\x44\x44\x42\x59\x52\x45\x44\x55\x43\x30",
    // "/usr/lib/libobjc.dylib" / M(Xor4) / S(252) / L(22)
    "\x8b\xd1\xd7\xd6\x8b\xc8\xcd\xc6\x8b\xc8\xcd\xc6\xcb\xc6\xce\xc7\x8a\xc0\xdd\xc8\xcd\xc6\xa4",
    // "IOBSDNameMatching" / M(Xor2) / S(28) / L(17)
    "\x47\x41\x4c\x5d\x4a\x40\x6f\x63\x6b\x43\x6f\x7a\x6d\x66\x67\x60\x69\x0e",
    // "CFBundleIdentifier" / M(Xor1) / S(142) / L(18)
    "\xcd\xc8\xcc\xfb\xe0\xea\xe2\xeb\xc7\xea\xeb\xe0\xfa\xe7\xe8\xe7\xeb\xfc\x8e",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(4) / L(40)
    "\x3a\x35\x35\x69\x39\x66\x3a\x3a\x36\x67\x39\x3d\x37\x65\x34\x3c\x6a\x6a\x39\x3c\x68\x35\x38\x65\x69\x36\x36\x38\x39\x36\x68\x35\x3d\x3c\x68\x6a\x3a\x67\x3a\x34\x04\x40\x7b\x37\x6f\xea\xc2\xce\x77",
    // "_MASReceipt" / M(Xor4) / S(5) / L(11)
    "\x0f\x1d\x11\x03\x02\x35\x33\x35\x39\x20\x24\x50\x0a\x67\x7b\x66",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(31) / L(59)
    "\x0a\x0d\x06\x0d\x59\x06\x09\x5e\x06\x0a\x0a\x06\x0e\x5f\x06\x09\x05\x06\x0f\x5d\x06\x0c\x04\x06\x5a\x5a\x06\x09\x04\x06\x58\x0d\x06\x08\x5d\x06\x59\x0e\x06\x0e\x08\x06\x09\x0e\x06\x58\x0d\x06\x05\x04\x06\x58\x5a\x06\x0a\x5f\x06\x0a\x0c\x3c\x33\xe9\xf5\x25\xab\xb0\xd7\x1a",
    // "CFDateFormatterCreate" / M(Xor1) / S(210) / L(21)
    "\x91\x94\x96\xb3\xa6\xb7\x94\xbd\xa0\xbf\xb3\xa6\xa6\xb7\xa0\x91\xa0\xb7\xb3\xa6\xb7\xd2",
    // "kSecReturnRef" / M(Xor3) / S(246) / L(13)
    "\x6d\x55\x63\x65\x54\x63\x72\x73\x74\x68\x54\x63\x60\x06\xb2\x39",
    // "setDelegate:" / M(Xor1) / S(229) / L(12)
    "\x96\x80\x91\xa1\x80\x89\x80\x82\x84\x91\x80\xdf\xe5\x3d\x4f\xfd",
    // "SecCertificateCopyData" / M(Xor3) / S(21) / L(22)
    "\x7f\x49\x4f\x6f\x49\x5e\x58\x45\x4a\x45\x4f\x4d\x58\x49\x6f\x43\x5c\x55\x68\x4d\x58\x4d\x2c",
    // "" / M(None) / S(0) / L(0)
    "\x9c\x19\x19\x02\x2b\x56\x26\x48\xc0\xf1\x99\x0d\x26\xb1\x84\xc2\xcb\xdf\xa6\x00\x07\xac\x16\x2d\x6b\x60\x45\x2a\x81\x8b\x2b\xb2",
    // "X509_NAME_get_text_by_NID" / M(Xor4) / S(24) / L(25)
    "\x68\x05\x00\x09\x6f\x7e\x71\x7d\x75\x6f\x57\x55\x44\x6f\x44\x55\x48\x44\x6f\x52\x49\x6f\x7e\x79\x74\x30\xc1\xd3\x34\xaa\xbe\x7f\x21\x38",
    // "CFDataCreateMutable" / M(Rot) / S(73) / L(19)
    "\x8c\x8f\x8d\xaa\xbd\xaa\x8c\xbb\xae\xaa\xbd\xae\x96\xbe\xbd\xaa\xab\xb5\xae\x49",
    // "kSecMatchLimitAll" / M(Xor2) / S(69) / L(17)
    "\x3c\x04\x32\x34\x1a\x36\x23\x34\x3f\x1b\x3e\x3a\x3e\x23\x16\x3b\x3b\x57",
    // "SHA1_Update" / M(Rot) / S(239) / L(11)
    "\x42\x37\x30\x20\x4e\x44\x5f\x53\x50\x63\x54\xef\xc0\x21\x03\xe1",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(162) / L(59)
    "\xd8\xd3\xdc\xd3\x07\xdc\xd7\x04\xdc\xd8\xd8\xdc\xd4\x05\xdc\xd7\xdb\xdc\xd5\x03\xdc\xd2\xda\xdc\x08\x08\xdc\xd7\xda\xdc\x06\xd3\xdc\xd6\x03\xdc\x07\xd4\xdc\xd4\xd6\xdc\xd7\xd4\xdc\x06\xd3\xdc\xdb\xda\xdc\x06\x08\xdc\xd8\x05\xdc\xd8\xd2\xa2\x8b\x03\x9a\xe0\x91\xf9\xb7\xfd",
    // "/usr/lib/libSystem.dylib" / M(Xor1) / S(114) / L(24)
    "\x5d\x07\x01\x00\x5d\x1e\x1b\x10\x5d\x1e\x1b\x10\x21\x0b\x01\x06\x17\x1f\x5c\x16\x0b\x1e\x1b\x10\x72\xff\x3d\x1d\x6c\x62\x14\x1a\x62",
    // "" / M(None) / S(0) / L(0)
    "\x32\xa4\xf2\xce\x3a\x8c\x88\xac\x4d\xc6\x1c\x10\x6c\xd0\x24\x80\xc8\xd8\xd0\x9f\x2c\x2c\xfd\xe9\xe6\x75\x10\x5c\x1b\x9a\xc0\x13",
    // "CC_SHA1" / M(Xor3) / S(213) / L(7)
    "\xa6\xa6\xba\xb6\xad\xa4\xd4\xe5\xc0\x58\x62\x17\x9a\x72\x5b\xbb",
    // "" / M(None) / S(0) / L(0)
    "\xa4\xd2\xf1\x15\x45\xb3\x9e\x4b\x16\xcd\x2f\x67\x7f\xea\x30\x81\x7a\xd0\x1a\x24\x6f\x91\xf2\x1f\xff\x20\xdc\x24\x46\xd4\x0d\x01",
    // "SHA1_Final" / M(Xor4) / S(114) / L(10)
    "\x73\x68\x61\x11\x7f\x66\x49\x4e\x41\x4c\x20\xfa\x77\x6b\xa6\x4b",
    // "CC_SHA1_Final" / M(Xor2) / S(115) / L(13)
    "\x20\x20\x3c\x30\x2b\x22\x52\x3c\x25\x0a\x0d\x02\x0f\x63\xe6\x63",
    // "" / M(None) / S(0) / L(0)
    "\xaf\x4e\xe0\x04\x51\x3a\x50\x46\x5e\x00\x85\x07\xbd\x6c\xf7\xc7\x75\xef\x80\xf7\x53\xeb\x05\xa2\x22\xa3\x34\x41\x62\x64\xfb\xd0",
    // "SecItemCopyMatching" / M(Xor4) / S(9) / L(19)
    "\xe7\xd1\xd7\xfd\xc0\xd1\xd9\xf7\xdb\xc4\xcd\xf9\xd5\xc0\xd7\xdc\xdd\xda\xd3\xb4",
    // "kSecClassCertificate" / M(Xor3) / S(253) / L(20)
    "\x79\x41\x77\x71\x51\x7e\x73\x61\x61\x51\x77\x60\x66\x7b\x74\x7b\x71\x73\x66\x77\x12",
    // "X509_NAME_get_text_by_NID" / M(Xor2) / S(217) / L(25)
    "\xa3\xce\xcb\xc2\xa4\xb5\xba\xb6\xbe\xa4\x9c\x9e\x8f\xa4\x8f\x9e\x83\x8f\xa4\x99\x82\xa4\xb5\xb2\xbf\xfb\xb1\x91\x6b\xb5\x08\x50\x7a\x6d",
    // "" / M(None) / S(0) / L(0)
    "\x6f\x2f\xe2\x77\x2c\xc3\x8a\xb3\x5a\x2a\xa4\x78\x3d\x07\x19\x5d\xfd\x39\xef\x05\x72\xa9\x06\xdf\xdf\xb1\x21\xd9\x0d\x8c\xbb\xab",
    // "IOBSDNameMatching" / M(Xor3) / S(85) / L(17)
    "\x2e\x28\x25\x34\x23\x29\x06\x0a\x02\x2a\x06\x13\x04\x0f\x0e\x09\x00\x67",
    // "kSecMatchSearchList" / M(Xor3) / S(114) / L(19)
    "\xed\xd5\xe3\xe5\xcb\xe7\xf2\xe5\xee\xd5\xe3\xe7\xf4\xe5\xee\xca\xef\xf5\xf2\x86",
    // "CFArrayCreateMutable" / M(Xor4) / S(170) / L(20)
    "\xb1\xb4\xb3\x80\x80\x93\x8b\xb1\x80\x97\x93\x86\x97\xbf\x87\x86\x93\x90\x9e\x97\xf2",
    // "CFStringCreateWithBytes" / M(Xor1) / S(203) / L(23)
    "\x88\x8d\x98\xbf\xb9\xa2\xa5\xac\x88\xb9\xae\xaa\xbf\xae\x9c\xa2\xbf\xa3\x89\xb2\xbf\xae\xb8\xcb\xf4\x78\xdb\x85\x15\x0f\x83\xc7",
    // "IOObjectRelease" / M(Rot) / S(83) / L(15)
    "\x9c\xa2\xa2\xb5\xbd\xb8\xb6\xc7\xa5\xb8\xbf\xb8\xb4\xc6\xb8\x53",
    // "CFStringCompare" / M(Rot) / S(240) / L(15)
    "\x33\x36\x43\x64\x62\x59\x5e\x57\x33\x5f\x5d\x60\x51\x62\x55\xf0",
    // "CFDictionaryGetValue" / M(Xor1) / S(48) / L(20)
    "\x73\x76\x74\x59\x53\x44\x59\x5f\x5e\x51\x42\x49\x77\x55\x44\x66\x51\x5c\x45\x55\x30",
    // "" / M(None) / S(0) / L(0)
    "\xa5\x5a\x63\x45\x2e\xf0\xad\x17\xf2\x47\x07\x4d\x79\x5c\x9b\x43\xc3\x83\x20\x88\x57\x6e\x15\xc3\x89\x88\x14\xe7\x95\x9a\x05\x43",
    // "objc_msgSend" / M(Xor2) / S(199) / L(12)
    "\xb8\xb5\xbd\xb4\x88\xba\xa4\xb0\x84\xb2\xb9\xb3\xd7\x18\xb4\x2d",
    // "" / M(None) / S(0) / L(0)
    "\x38\x5d\x70\xf0\x8d\xbc\xc2\xba\x75\x6c\xe5\xe9\x51\x98\xca\x1b\x28\x99\xc5\x25\xf7\x21\xa6\x62\x22\x05\xd4\x3e\x62\xf1\x55\x37",
    // "" / M(None) / S(0) / L(0)
    "\xd1\x9b\x68\x8f\x0a\x03\x78\xa7\x5b\x86\xc3\x31\x77\xf3\x1d\x27\x65\x0e\x13\x56\x38\x14\xed\x00\x8b\xd5\x87\xfd\xb2\xbe\x41\xcd",
    // "glob" / M(Xor2) / S(125) / L(4)
    "\x0a\x01\x02\x0f\x6d\x96\x92\x6a\x07\xfa\x29\x11\xb0\xc5\x27\xc7",
    // "" / M(None) / S(0) / L(0)
    "\x10\x5e\x25\x20\x20\xd6\xfe\x00\x33\xb6\x12\xa0\xe9\x92\x74\x22\x79\xff\xb6\x64\x3f\x96\xf6\x04\x8a\x09\x6a\xea\xe3\xa2\xa9\x5a",
    // "" / M(None) / S(0) / L(0)
    "\x52\x0d\x1f\xd7\x0a\x8a\xb2\x43\x94\x13\xa0\xd3\xd4\x57\x09\x87\x4a\x7e\x93\xc7\xdb\x9e\x24\xb6\x0b\x17\x00\x48\xcb\x73\x4e\xf0",
    // "IOIteratorNext" / M(Rot) / S(37) / L(14)
    "\x6e\x74\x6e\x99\x8a\x97\x86\x99\x94\x97\x73\x8a\x9d\x99\x25\xe5",
    // "" / M(None) / S(0) / L(0)
    "\x21\xfe\x00\x15\xbd\x1c\x18\xf2\xb4\x37\xd0\x77\xba\x57\xdf\xd3\xfd\x52\xea\x9a\xd6\x35\x0c\x62\xec\x21\xd7\xf5\xcd\x95\x2b\xa2",
    // "" / M(None) / S(0) / L(0)
    "\x5f\x68\x03\x5d\x9c\xb2\xa8\x76\x81\x41\xdd\x41\xc7\xee\xaa\xa9\x2b\xde\x71\xd6\xa6\xb8\xc5\x7e\x9e\x97\x12\x5f\x80\x66\x4a\x3d",
    // "CFReadStreamOpen" / M(Xor3) / S(120) / L(16)
    "\xca\xcf\xdb\xec\xe8\xed\xda\xfd\xfb\xec\xe8\xe4\xc6\xf9\xec\xe7\x89",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(161) / L(29)
    "\xe8\xee\xf3\xc4\xc6\xc8\xd2\xd5\xd3\xd8\xe4\xcf\xd5\xd3\xd8\xe6\xc4\xd5\xf1\xc0\xd3\xc4\xcf\xd5\xe4\xcf\xd5\xd3\xd8\xa1\x24\x21\x33\xe1\x9b\x7e\x65\x6a",
    // "CFBundleGetMainBundle" / M(Xor3) / S(232) / L(21)
    "\xbd\xb8\xbc\x8b\x90\x9a\x92\x9b\xb9\x9b\x8a\xb3\x9f\x97\x90\xbc\x8b\x90\x9a\x92\x9b\xfe",
    // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(52) / L(35)
    "\x13\x16\x14\x31\x24\x35\x16\x3f\x22\x3d\x31\x24\x24\x35\x22\x13\x22\x35\x31\x24\x35\x14\x31\x24\x35\x16\x22\x3f\x3d\x03\x24\x22\x39\x3e\x37\x50",
    // "sha1" / M(Xor4) / S(237) / L(4)
    "\xa3\xb8\xb1\xe1\xd0\x4e\xc6\x32\x7c\xd5\x7d\x8b\x0b\x80\x75\x35",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(144) / L(37)
    "\xe5\xd3\xd5\xfd\xd3\xcf\xd5\xde\xd7\xdf\xd8\xe5\xd3\xd7\xc4\xd5\xde\xf5\xc4\xd3\xd7\xc2\xd3\xf0\xc4\xd9\xdb\xf7\xc2\xc2\xc4\xdf\xd4\xc3\xc2\xd3\xc5\xb6",
    // "start" / M(Xor3) / S(170) / L(5)
    "\xc9\xce\xdb\xc8\xce\xba\x80\xee\x37\xfb\x39\x9b\x4c\x00\xa9\x00",
    // "alloc" / M(Rot) / S(159) / L(5)
    "\x00\x0b\x0b\x0e\x02\x9f\xe8\x47\x09\xbc\x8f\x87\xb2\xd6\x7c\xf3",
    // "CFBundleUnloadExecutable" / M(Xor4) / S(100) / L(24)
    "\xa7\xa2\xa6\x91\x8a\x80\x88\x81\xb1\x8a\x88\x8b\x85\x80\xa1\x9c\x81\x87\x91\x90\x85\x86\x88\x81\xe4\x9b\x5d\xb7\xd9\x6b\xb2\xef\x98",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(134) / L(66)
    "\xea\x96\xbc\xb6\xb1\xa0\xa8\xea\x89\xac\xa7\xb7\xa4\xb7\xbc\xea\x83\xb7\xa4\xa8\xa0\xb2\xaa\xb7\xae\xb6\xea\x86\xaa\xb7\xa0\x83\xaa\xb0\xab\xa1\xa4\xb1\xac\xaa\xab\xeb\xa3\xb7\xa4\xa8\xa0\xb2\xaa\xb7\xae\xea\x86\xaa\xb7\xa0\x83\xaa\xb0\xab\xa1\xa4\xb1\xac\xaa\xab\xc5",
    // "CC_SHA1_Update" / M(Xor3) / S(119) / L(14)
    "\xc4\xc4\xd8\xd4\xcf\xc6\xb6\xd8\xd2\xf7\xe3\xe6\xf3\xe2\x87\x0e",
    // "" / M(None) / S(0) / L(0)
    "\xb6\x8f\x99\x79\x8f\xf0\x29\x54\x26\x0b\x28\x00\x8f\x53\x9d\x6d\x82\x3f\xe3\x6d\x15\xc4\x58\x21\xb1\x73\xc3\x23\x22\xb7\x4d\x2c",
    // "EVP_MD_CTX_init" / M(Xor3) / S(1) / L(15)
    "\x54\x47\x41\x4e\x5c\x55\x4e\x52\x45\x49\x4e\x78\x7f\x78\x65\x11",
    // "Contents/_MASReceipt/receipt" / M(Rot) / S(74) / L(28)
    "\x8d\xb9\xb8\xbe\xaf\xb8\xbe\xbd\x79\xa9\x97\x8b\x9d\x9c\xaf\xad\xaf\xb3\xba\xbe\x79\xbc\xaf\xad\xaf\xb3\xba\xbe\x4a\xbb\x13\x58\x02\xab\xcd\x21\xa1",
    // "CFReadStreamRead" / M(Xor2) / S(175) / L(16)
    "\xfd\xf8\xec\xdb\xdf\xda\xed\xca\xcc\xdb\xdf\xd3\xec\xdb\xdf\xda\xbe",
    // "SecKeychainSearchCopyNext" / M(Xor1) / S(188) / L(25)
    "\xef\xd9\xdf\xf7\xd9\xc5\xdf\xd4\xdd\xd5\xd2\xef\xd9\xdd\xce\xdf\xd4\xff\xd3\xcc\xc5\xf2\xd9\xc4\xc8\xbc\x1b\x5a\xd3\x4c\xd9\x27\x14\x69",
    // "SecCertificateCopyData" / M(Xor4) / S(114) / L(22)
    "\x6d\x5b\x5d\x7d\x5b\x4c\x4a\x57\x58\x57\x5d\x5f\x4a\x5b\x7d\x51\x4e\x47\x7a\x5f\x4a\x5f\x3e",
    // "PKCS7_verify" / M(Xor2) / S(175) / L(12)
    "\xef\xf4\xfc\xec\x88\xe0\xc9\xda\xcd\xd6\xd9\xc6\xbf\x54\xff\x09",
    // "CFRelease" / M(Xor3) / S(8) / L(9)
    "\x5b\x5e\x4a\x7d\x74\x7d\x79\x6b\x7d\x18\x4e\x80\x47\x18\x1f\x06",
    // "alloc" / M(Xor1) / S(228) / L(5)
    "\x85\x88\x88\x8b\x87\xe4\x80\x5b\x14\xce\x7b\x89\x49\x7c\x89\x22",
    // "" / M(None) / S(0) / L(0)
    "\x1a\xd2\x18\xc7\x5f\x56\x0c\xbd\x5c\x32\xf2\x38\xa2\x00\x25\x7d\xe6\x9e\x9c\x5d\x43\x92\xef\x89\x74\xc7\x61\xc8\x91\xd2\x48\x69",
    // "BIO_free" / M(Xor4) / S(1) / L(8)
    "\x52\x59\x5f\x4f\x76\x62\x75\x75\x10\x47\x44\x32\x8d\x3e\x3f\xa4",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(172) / L(40)
    "\xab\xac\xac\xd8\xa8\xdf\xab\xab\xaf\xde\xa8\xa4\xae\xdc\xad\xa5\xdb\xdb\xa8\xa5\xd9\xac\xa9\xdc\xd8\xaf\xaf\xa9\xa8\xaf\xd9\xac\xa4\xa5\xd9\xdb\xab\xde\xab\xad\x9d\xf8\x66\x9e\x86\x7e\xc8\x84\x4b",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor2) / S(227) / L(50)
    "\xff\x83\xa9\xa3\xa4\xb5\xbd\xff\x9c\xb9\xb2\xa2\xb1\xa2\xa9\xff\x96\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xa3\xff\x91\xa0\xa0\x9b\xb9\xa4\xfe\xb6\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xff\x91\xa0\xa0\x9b\xb9\xa4\xd0",
    // "IOMACAddress" / M(Xor2) / S(227) / L(12)
    "\xba\xbc\xbe\xb2\xb0\xb2\x97\x97\x81\x96\x80\x80\xf3\x25\xaf\xeb",
    // "CFRelease" / M(Xor3) / S(129) / L(9)
    "\xd2\xd7\xc3\xf4\xfd\xf4\xf0\xe2\xf4\x91\xe0\x91\xdc\x8f\xf1\xf1",
    // "EVP_DigestFinal" / M(Xor3) / S(174) / L(15)
    "\xfb\xe8\xee\xe1\xfa\xd7\xd9\xdb\xcd\xca\xf8\xd7\xd0\xdf\xd2\xbe",
    // "%02x" / M(Xor4) / S(50) / L(4)
    "\x05\x10\x12\x58\x20\xcd\x02\x60\x32\x55\x68\xc0\x79\xc7\xd1\x61",
    // "" / M(None) / S(0) / L(0)
    "\xaf\xf6\x0e\x56\xb1\x9c\x47\x05\x58\x44\xd1\xb8\x81\xc5\x31\x27\xfe\xfb\xc1\x59\x25\x7b\xe4\xb1\x22\x21\xb8\x08\xa5\x6f\x75\x56",
    // "" / M(None) / S(0) / L(0)
    "\xd9\xad\x66\xea\x7e\x60\x4b\xbf\x9f\xa0\x9b\xe9\x6d\x74\xa4\xc3\xa4\x3f\x0f\x88\x2c\xd8\xf3\x58\x1d\x60\xef\xc7\x1d\xe7\xb9\x99",
    // "CFArrayCreateMutable" / M(Xor4) / S(17) / L(20)
    "\x26\x23\x24\x17\x17\x04\x1c\x26\x17\x00\x04\x11\x00\x28\x10\x11\x04\x07\x09\x00\x65",
    // "X509_STORE_new" / M(Xor1) / S(112) / L(14)
    "\x28\x45\x40\x49\x2f\x23\x24\x3f\x22\x35\x2f\x1e\x15\x07\x70\x2f",
    // "CFDictionaryCreateMutable" / M(Rot) / S(58) / L(25)
    "\x7d\x80\x7e\xa3\x9d\xae\xa3\xa9\xa8\x9b\xac\xb3\x7d\xac\x9f\x9b\xae\x9f\x87\xaf\xae\x9b\x9c\xa6\x9f\x3a\x35\xa4\x7a\x41\x52\x1e\xab\xc4",
    // "" / M(None) / S(0) / L(0)
    "\xa4\x30\x1d\x97\x58\xbd\x82\x3b\x56\x82\x49\x9d\x4f\x0c\xbd\xca\x03\x58\x18\xde\x51\x8e\x9d\x3f\x08\x36\xcc\xe7\x08\x8e\x3c\x64",
    // "CFBundleGetMainBundle" / M(Xor4) / S(87) / L(21)
    "\x39\x3c\x38\x0f\x14\x1e\x16\x1f\x3d\x1f\x0e\x37\x1b\x13\x14\x38\x0f\x14\x1e\x16\x1f\x7a",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(75) / L(32)
    "\x13\x13\x13\x13\x4d\x47\x4d\x27\x27\x4d\x47\x4d\x0e\x0e\x4d\x3e\x4d\x22\x22\x4d\x50\x4d\x07\x07\x4d\x50\x4d\x19\x19\x4d\x30\x4d\x6a",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor4) / S(195) / L(50)
    "\xf6\x8a\xa0\xaa\xad\xbc\xb4\xf6\x95\xb0\xbb\xab\xb8\xab\xa0\xf6\x9f\xab\xb8\xb4\xbc\xae\xb6\xab\xb2\xaa\xf6\x98\xa9\xa9\x92\xb0\xad\xf7\xbf\xab\xb8\xb4\xbc\xae\xb6\xab\xb2\xf6\x98\xa9\xa9\x92\xb0\xad\xd9",
    // "CC_SHA1_Init" / M(Xor4) / S(110) / L(12)
    "\xa3\xa3\xbf\xb3\xa8\xa1\xd1\xbf\xa9\x8e\x89\x94\xe0\xc5\x27\x9b",
    // "" / M(None) / S(0) / L(0)
    "\x49\x19\x9f\xd0\x25\x98\x05\xda\x3c\xb7\x70\x4d\x87\x65\xbb\xdd\x57\xb9\xfa\x36\xdf\x2b\x5d\x40\xe7\x04\xf7\x88\x98\xe9\x35\x7c",
    // "CFReadStreamClose" / M(Xor3) / S(30) / L(17)
    "\x73\x76\x62\x55\x51\x54\x63\x44\x42\x55\x51\x5d\x73\x5c\x5f\x43\x55\x30",
    // "CFDataGetLength" / M(Rot) / S(26) / L(15)
    "\x5d\x60\x5e\x7b\x8e\x7b\x61\x7f\x8e\x66\x7f\x88\x81\x8e\x82\x1a",
    // "en0" / M(Xor3) / S(255) / L(3)
    "\x6a\x61\x3f\x0f\xdd\x74\x18\x9e\x85\x23\xb5\x11\x84\x54\x65\x46",
    // "BIO_write" / M(Rot) / S(112) / L(9)
    "\xb2\xb9\xbf\xcf\xe7\xe2\xd9\xe4\xd5\x70\xbc\x14\xac\xda\x7c\xf7",
    // "ASN1_get_object" / M(Xor2) / S(187) / L(15)
    "\xea\xf8\xe5\x9a\xf4\xcc\xce\xdf\xf4\xc4\xc9\xc1\xce\xc8\xdf\xab",
    // "" / M(None) / S(0) / L(0)
    "\x45\x92\x2c\x01\x84\x58\x0f\x25\x01\x5e\xe4\x1a\xae\x71\xe2\xc8\x4f\xc7\xef\x7f\xf6\x52\x2f\xcd\xd3\x0d\xa3\x24\x13\xad\xcb\x16",
    // "X509_STORE_free" / M(Xor3) / S(177) / L(15)
    "\x99\xf4\xf1\xf8\x9e\x92\x95\x8e\x93\x84\x9e\xa7\xb3\xa4\xa4\xc1",
    // "" / M(None) / S(0) / L(0)
    "\xb6\x11\x69\x6c\xb6\x49\xfb\x8e\x6a\x32\x46\x5f\x34\x0a\x10\x19\x31\xea\xe5\x73\xd5\x87\xb1\x2f\xdc\x1b\x97\x18\xa1\xc5\x2a\x72",
    // "" / M(None) / S(0) / L(0)
    "\xf4\xb1\xd3\x4e\x3d\xd8\xb7\x35\x96\x04\x9a\x82\x7c\xa7\x1c\xa3\x30\x87\x8c\xfb\x0c\x05\xeb\x43\x1d\xb8\x98\x68\x0c\x23\xd7\x35",
    // "" / M(None) / S(0) / L(0)
    "\x9c\x42\xc5\xb2\x8d\x69\xfd\x8e\xba\x5d\xe7\xda\x7b\xab\x44\x99\xfe\xde\x7f\x39\xb9\x07\x9b\xbe\x15\x91\x89\x8a\x4a\x4e\x37\x08",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x3c\x9b\xa2\x2c\x70\x5f\x97\x88\xad\x7b\xd2\x4b\xe4\xa8\x5e\xa3\x06\xde\x81\xd8\x88\xfd\x93\xf7\x88\x16\xeb\x3c\x8d\x2e\x23",
    // "setDelegate:" / M(Xor1) / S(99) / L(12)
    "\x10\x06\x17\x27\x06\x0f\x06\x04\x02\x17\x06\x59\x63\x3c\x50\xf3",
    // "" / M(None) / S(0) / L(0)
    "\xd5\x39\x5e\xa8\x5f\x5f\xf0\xa0\x3b\x79\x5a\x38\x2e\x12\xc1\x81\x9a\x00\x74\x5f\x11\xaa\xd9\x27\x67\x62\x43\x83\x10\xff\xa6\xe8",
    // "init" / M(Xor4) / S(42) / L(4)
    "\xc9\xce\xc9\xd4\xa0\x28\x39\x10\x73\x04\x06\x2c\xf9\x28\xcb\x3a",
    // "en0" / M(Xor2) / S(210) / L(3)
    "\xa7\xac\xf2\xc2\xe2\xb5\xd4\x4d\x4b\x6b\xa7\xd4\xcd\x91\xe9\x82",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(181) / L(25)
    "\x84\x9b\x87\x9b\x8d\x81\x85\x9b\x84\x84\x86\x83\x86\x80\x9b\x84\x85\x85\x9b\x83\x9b\x84\x84\x9b\x84\xb5\xc8\x96\x33\x5a\x0f\xfb\xec\x8b",
    // "CFReadStreamRead" / M(Xor2) / S(233) / L(16)
    "\xbb\xbe\xaa\x9d\x99\x9c\xab\x8c\x8a\x9d\x99\x95\xaa\x9d\x99\x9c\xf8",
    // "BIO_write" / M(Xor3) / S(172) / L(9)
    "\xfe\xf5\xf3\xe3\xcb\xce\xd5\xc8\xd9\xbc\xaa\x4f\x7e\x7d\xe7\x70",
    // "" / M(None) / S(0) / L(0)
    "\x72\x02\x78\x13\xb5\x95\x9d\x21\x6c\xde\x0d\x78\x77\x52\xb9\xd0\x21\xb4\xa7\xb9\x7c\x2f\x7c\xec\xc7\x5c\x30\x4c\xa9\x5a\x03\x1a",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(22) / L(54)
    "\x0e\x72\x58\x52\x55\x44\x4c\x0e\x6d\x48\x43\x53\x40\x53\x58\x0e\x67\x53\x40\x4c\x44\x56\x4e\x53\x4a\x52\x0e\x72\x44\x42\x54\x53\x48\x55\x58\x0f\x47\x53\x40\x4c\x44\x56\x4e\x53\x4a\x0e\x72\x44\x42\x54\x53\x48\x55\x58\x21",
    // "kCFTypeArrayCallBacks" / M(Rot) / S(83) / L(21)
    "\xbe\x96\x99\xa7\xcc\xc3\xb8\x94\xc5\xc5\xb4\xcc\x96\xb4\xbf\xbf\x95\xb4\xb6\xbe\xc6\x53",
    // "CFStringCompare" / M(Rot) / S(162) / L(15)
    "\xe5\xe8\xf5\x16\x14\x0b\x10\x09\xe5\x11\x0f\x12\x03\x14\x07\xa2",
    // "" / M(None) / S(0) / L(0)
    "\x0c\x7b\x2b\xb5\x9b\x6e\xc7\xc9\xdf\xbf\xb8\x58\x2d\xaa\xaa\x7a\x9b\xe7\x53\xc4\x56\x4b\xe5\x57\xf6\xfc\xe8\x00\xfa\x2e\x59\xa2",
    // "CFNumberCreate" / M(Xor1) / S(192) / L(14)
    "\x83\x86\x8e\xb5\xad\xa2\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\xc0\x50",
    // "" / M(None) / S(0) / L(0)
    "\xff\x4d\xc0\x1e\x25\x0f\x25\xa6\x19\xbf\x66\xb8\xd9\x30\x07\x6f\x65\x33\x64\xa9\x60\xd4\xc1\x69\x7c\xdd\xf5\x7c\x49\xb8\xa4\x38",
    // "_MASReceipt/receipt" / M(Xor2) / S(8) / L(19)
    "\x43\x51\x5d\x4f\x4e\x79\x7f\x79\x75\x6c\x68\x33\x6e\x79\x7f\x79\x75\x6c\x68\x1c",
    // "CFReadStreamCreateWithFile" / M(Xor3) / S(127) / L(26)
    "\xe1\xe4\xf0\xc7\xc3\xc6\xf1\xd6\xd0\xc7\xc3\xcf\xe1\xd0\xc7\xc3\xd6\xc7\xf5\xcb\xd6\xca\xe4\xcb\xce\xc7\xa2\xf0\x2e\x0c\x63\x7f\x09\x38\x38",
    // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(118) / L(35)
    "\x35\x30\x25\x02\x04\x1f\x18\x11\x31\x13\x02\x30\x1f\x1a\x13\x25\x0f\x05\x02\x13\x1b\x24\x13\x06\x04\x13\x05\x13\x18\x02\x17\x02\x1f\x19\x18\x76",
    // "" / M(None) / S(0) / L(0)
    "\xa6\xf8\xf1\x75\xd1\x79\x73\x2b\x81\x1f\x5f\xac\xea\x10\x96\x8c\x7f\x0a\x0b\x7d\xe5\xa0\xfe\xc6\xa6\xc8\x2d\xaf\x3d\xab\x33\xed",
    // "" / M(None) / S(0) / L(0)
    "\x3e\x46\x58\x2c\x46\xf6\xd9\xd9\xb3\x59\x9e\xe3\xef\x20\x6b\xb5\x37\x2c\x4f\x99\x7a\xf9\x05\xb9\xb9\xab\x1c\xa4\x33\x7c\x51\xa8",
    // "CFReadStreamRead" / M(Xor3) / S(4) / L(16)
    "\x56\x53\x47\x70\x74\x71\x46\x61\x67\x70\x74\x78\x47\x70\x74\x71\x15",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(247) / L(43)
    "\x6f\x6a\x79\x7e\x60\x6f\x5e\x49\x4d\x58\x49\x7b\x45\x58\x44\x6a\x45\x40\x49\x7f\x55\x5f\x58\x49\x41\x7c\x4d\x58\x44\x7e\x49\x40\x4d\x58\x45\x5a\x49\x78\x43\x6e\x4d\x5f\x49\x2c\x9c\xd6\x10\x04\x87\x26\x0d\x73",
    // "" / M(None) / S(0) / L(0)
    "\x6b\x05\x0e\x07\x21\x75\x21\xca\xd2\xde\x2e\x4b\x25\x04\xc1\xed\x0e\x81\x93\x98\x77\xb6\x9b\x96\xda\x52\x1e\x3e\xd5\x64\xb7\xe9",
    // "BIO_new" / M(Xor4) / S(190) / L(7)
    "\xa2\xa9\xaf\xbf\x8e\x85\x97\xe0\x74\xfc\xe1\xb8\xc6\x44\xee\xe5",
    // "kSecClassCertificate" / M(Xor4) / S(1) / L(20)
    "\x7e\x46\x70\x76\x56\x79\x74\x66\x66\x56\x70\x67\x61\x7c\x73\x7c\x76\x74\x61\x70\x15",
    // "" / M(None) / S(0) / L(0)
    "\x87\xc0\xb5\xa3\xfa\x66\xf3\x49\x1e\xcd\x06\xe2\x82\x4e\x1d\x23\xd0\xc9\x86\xf5\xa6\xed\xf0\x82\x7e\x4e\x52\x7e\x7a\xba\xd6\x89",
    // "1.0.5" / M(Xor1) / S(134) / L(5)
    "\xb7\xa8\xb6\xa8\xb3\x86\x5b\x0c\xae\x31\x22\x5c\x1b\xae\xbf\x43",
    // "" / M(None) / S(0) / L(0)
    "\xbf\x60\x45\x43\x82\x73\xcf\xea\xb1\xc9\x11\x82\x10\xad\xa5\x58\xd4\xd0\xec\x57\xe9\xfd\x12\xfd\x00\x54\x5d\xb7\xe4\x80\x7a\x33",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(1) / L(59)
    "\x37\x32\x3b\x32\x66\x3b\x36\x63\x3b\x37\x37\x3b\x33\x64\x3b\x36\x3a\x3b\x34\x62\x3b\x31\x39\x3b\x67\x67\x3b\x36\x39\x3b\x65\x32\x3b\x35\x62\x3b\x66\x33\x3b\x33\x35\x3b\x36\x33\x3b\x65\x32\x3b\x3a\x39\x3b\x65\x67\x3b\x37\x64\x3b\x37\x31\x01\xdb\x64\x84\xe6\x34\xda\x7f\xd4",
    // "longjmp" / M(Xor3) / S(246) / L(7)
    "\x6a\x69\x68\x61\x6c\x6b\x76\x06\x32\xc4\x02\xd7\xab\xda\xe4\x38",
    // "CFReadStreamClose" / M(Xor2) / S(233) / L(17)
    "\xb8\xbd\xa9\x9e\x9a\x9f\xa8\x8f\x89\x9e\x9a\x96\xb8\x97\x94\x88\x9e\xfb",
    // "CFDictionaryGetValue" / M(Xor4) / S(169) / L(20)
    "\x9e\x9b\x99\xb4\xbe\xa9\xb4\xb2\xb3\xbc\xaf\xa4\x9a\xb8\xa9\x8b\xbc\xb1\xa8\xb8\xdd",
    // "IOBSDNameMatching" / M(Xor1) / S(241) / L(17)
    "\xb8\xbe\xb3\xa2\xb5\xbf\x90\x9c\x94\xbc\x90\x85\x92\x99\x98\x9f\x96\xf1",
    // "sk_num" / M(Xor1) / S(161) / L(6)
    "\xd2\xca\xfe\xcf\xd4\xcc\xa1\x05\x93\x18\x4c\x2c\xf5\xd3\x7a\x50",
    // "exit" / M(Xor3) / S(213) / L(4)
    "\x80\x9d\x8c\x91\xe5\x52\xf5\x4f\xb0\xf9\x88\xf3\xcf\x85\x0b\x5a",
    // "ASN1_OBJECT_free" / M(Xor4) / S(191) / L(16)
    "\xee\xfc\xe1\x9e\xf0\xe0\xed\xe5\xea\xec\xfb\xf0\xc9\xdd\xca\xca\xaf",
    // "CFBundleVersion" / M(Xor1) / S(224) / L(15)
    "\xa3\xa6\xa2\x95\x8e\x84\x8c\x85\xb6\x85\x92\x93\x89\x8f\x8e\xe0",
    // "" / M(None) / S(0) / L(0)
    "\x1b\x3d\xd0\x00\x3e\x6f\x7d\x77\xf5\xb6\x09\x4f\x03\xf2\x6f\x80\x4d\xfd\x20\xc3\xd6\x56\x0e\x8b\x44\x08\x73\x82\x35\x5f\x6c\x39",
    // "" / M(None) / S(0) / L(0)
    "\xd3\x5b\x78\xc0\xaa\xb3\xe8\x53\x82\xee\x36\x26\x27\xbc\xee\x75\x10\x55\x43\x61\x4b\x1a\xc6\xe1\x69\x74\x87\x7e\xc5\xca\x8e\xa2",
    // "kCFTypeArrayCallBacks" / M(Rot) / S(192) / L(21)
    "\x2b\x03\x06\x14\x39\x30\x25\x01\x32\x32\x21\x39\x03\x21\x2c\x2c\x02\x21\x23\x2b\x33\xc0",
    // "ASN1_OBJECT_free" / M(Xor1) / S(0) / L(16)
    "\x41\x53\x4e\x31\x5f\x4f\x42\x4a\x45\x43\x54\x5f\x66\x72\x65\x65\x00",
    // "init" / M(Xor3) / S(79) / L(4)
    "\x36\x31\x36\x2b\x5f\x39\xe9\xcf\x27\xbc\xc3\x0a\xc1\x74\x21\xca",
    // "SecItemCopyMatching" / M(Xor3) / S(3) / L(19)
    "\x44\x72\x74\x5e\x63\x72\x7a\x54\x78\x67\x6e\x5a\x76\x63\x74\x7f\x7e\x79\x70\x17",
    // "strncmp" / M(Xor4) / S(98) / L(7)
    "\x53\x54\x52\x4e\x43\x4d\x50\x20\xea\xe6\x74\x40\xda\x2b\xc0\xc2",
    // "" / M(None) / S(0) / L(0)
    "\x34\x1a\x19\xdd\xcb\xb2\x91\xd8\xed\xcb\x7f\x74\x0a\xf4\xc4\x62\x9f\xfe\xfb\xb7\x9a\xa2\xab\x31\x27\x5e\xa6\xcd\xe8\x36\xc1\xaa",
    // "" / M(None) / S(0) / L(0)
    "\x01\x6a\xa7\xb3\xb2\xfa\xb0\xad\xb6\x44\x66\x94\x80\x24\x36\x37\x4d\x28\xd7\xf8\xe2\x58\xe0\x89\x18\xae\x35\x17\x00\x97\x28\x3f",
    // "" / M(None) / S(0) / L(0)
    "\x15\x3b\x0d\x76\x74\xa0\x2b\x67\xb1\xd2\xdf\xa1\xbf\x52\x50\x9d\x45\xf8\x97\xd0\x35\x29\x82\xc2\x55\x6b\xa5\x3b\x85\x10\x82\x4e",
    // "EVP_DigestInit" / M(Xor1) / S(171) / L(14)
    "\xee\xfd\xfb\xf4\xef\xc2\xcc\xce\xd8\xdf\xe2\xc5\xc2\xdf\xab\x70",
    // "X509_get_ext_by_OBJ" / M(Xor1) / S(120) / L(19)
    "\x20\x4d\x48\x41\x27\x1f\x1d\x0c\x27\x1d\x00\x0c\x27\x1a\x01\x27\x37\x3a\x32\x78",
    // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(244) / L(35)
    "\xb7\xb2\xb0\x95\x80\x91\xb2\x9b\x86\x99\x95\x80\x80\x91\x86\xb7\x86\x91\x95\x80\x91\xb0\x95\x80\x91\xb2\x86\x9b\x99\xa7\x80\x86\x9d\x9a\x93\xf4",
    // "CFReadStreamClose" / M(Xor3) / S(201) / L(17)
    "\x98\x9d\x89\xbe\xba\xbf\x88\xaf\xa9\xbe\xba\xb6\x98\xb7\xb4\xa8\xbe\xdb",
    // "CFBundleShortVersionString" / M(Xor4) / S(139) / L(26)
    "\x42\x47\x43\x74\x6f\x65\x6d\x64\x52\x69\x6e\x73\x75\x57\x64\x73\x72\x68\x6e\x6f\x52\x75\x73\x68\x6f\x66\x01\xf1\x72\x03\x17\x97\x8c\xe7\x40",
    // "CFArrayGetValueAtIndex" / M(Xor1) / S(244) / L(22)
    "\xb7\xb2\xb5\x86\x86\x95\x8d\xb3\x91\x80\xa2\x95\x98\x81\x91\xb5\x80\xbd\x9a\x90\x91\x8c\xf4",
    // "PKCS7_free" / M(Xor2) / S(30) / L(10)
    "\x5e\x45\x4d\x5d\x39\x51\x68\x7c\x6b\x6b\x0e\x8f\xe4\x69\x14\xab",
    // "CFDateFormatterSetFormat" / M(Xor1) / S(224) / L(24)
    "\xa3\xa6\xa4\x81\x94\x85\xa6\x8f\x92\x8d\x81\x94\x94\x85\x92\xb3\x85\x94\xa6\x8f\x92\x8d\x81\x94\xe0\x9b\xf8\x8e\x5a\x9b\x0e\x14\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x93\x93\xb4\xde\x64\xe4\xe6\xb0\xe3\xdf\x61\x12\x23\xb7\x07\x56\x59\xc9\x72\xc4\x11\x17\xbd\xc6\xa7\x7a\xc1\x95\x3b\x47\x80\x01",
    // "receipt" / M(Rot) / S(163) / L(7)
    "\x15\x08\x06\x08\x0c\x13\x17\xa3\x82\xd5\x8e\x8c\x89\xd3\x09\xe1",
    // "CFStringGetFileSystemRepresentation" / M(Rot) / S(181) / L(35)
    "\xf8\xfb\x08\x29\x27\x1e\x23\x1c\xfc\x1a\x29\xfb\x1e\x21\x1a\x08\x2e\x28\x29\x1a\x22\x07\x1a\x25\x27\x1a\x28\x1a\x23\x29\x16\x29\x1e\x24\x23\xb5",
    // "longjmp" / M(Xor1) / S(59) / L(7)
    "\x57\x54\x55\x5c\x51\x56\x4b\x3b\x71\xf0\x24\x86\xdb\x4f\x80\xcb",
    // "IORegistryEntryCreateCFProperty" / M(Xor4) / S(43) / L(31)
    "\x29\x2f\x32\x05\x07\x09\x13\x14\x12\x19\x25\x0e\x14\x12\x19\x23\x12\x05\x01\x14\x05\x23\x26\x30\x12\x0f\x10\x05\x12\x14\x19\x60",
    // "" / M(None) / S(0) / L(0)
    "\xee\x00\x3f\xad\x2e\x99\x96\xee\x9f\xcd\x5d\x70\x18\x6a\x04\x8e\xc4\x2b\x79\xf0\xd5\x3a\xcd\x92\xa5\xb3\x9e\xb7\xb5\x4c\x1a\xf5",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(142) / L(22)
    "\x81\x84\x83\xb0\xb0\xa3\xbb\x85\xa7\xb6\x94\xa3\xae\xb7\xa7\x83\xb6\x8b\xac\xa6\xa7\xba\xc2",
    // "CFBundleCopyBundleURL" / M(Xor1) / S(243) / L(21)
    "\xb0\xb5\xb1\x86\x9d\x97\x9f\x96\xb0\x9c\x83\x8a\xb1\x86\x9d\x97\x9f\x96\xa6\xa1\xbf\xf3",
    // "Apple Root CA" / M(Xor1) / S(233) / L(13)
    "\xa8\x99\x99\x85\x8c\xc9\xbb\x86\x86\x9d\xc9\xaa\xa8\xe9\x5a\xe8",
    // "%02X" / M(Xor4) / S(181) / L(4)
    "\x75\x60\x62\x08\x50\x10\xd3\xa6\x12\xa9\x8d\x78\x51\xc3\x7b\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x40\x94\xb5\xb3\x9e\x9c\x51\xca\x05\x47\x4b\x21\x42\x82\xf9\x15\xd4\x0e\xf6\x83\x92\x33\xe7\xf9\xc0\xab\xf8\x7b\xfb\xf9\x9c\xd4",
    // "" / M(None) / S(0) / L(0)
    "\xc7\x15\x25\xf6\x27\x82\x95\xae\x56\x6b\xf9\x51\xa8\x99\xab\xab\xf3\xf3\xbf\x39\x51\x20\x58\x6b\xcc\x9f\x8d\xa7\x74\xcf\x35\x57",
    // "com.iccir.Embrace" / M(Xor3) / S(65) / L(17)
    "\x30\x3c\x3e\x7d\x3a\x30\x30\x3a\x21\x7d\x16\x3e\x31\x21\x32\x30\x36\x53",
    // "CFEqual" / M(Xor1) / S(235) / L(7)
    "\xa8\xad\xae\x9a\x9e\x8a\x87\xeb\x25\x93\xd0\x19\x53\x70\xff\x93",
    // "CFBundleGetIdentifier" / M(Xor1) / S(99) / L(21)
    "\x20\x25\x21\x16\x0d\x07\x0f\x06\x24\x06\x17\x2a\x07\x06\x0d\x17\x0a\x05\x0a\x06\x11\x63",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor2) / S(183) / L(37)
    "\xc2\xf4\xf2\xda\xf4\xe8\xf2\xf9\xf0\xf8\xff\xc2\xf4\xf0\xe3\xf2\xf9\xd2\xe3\xf4\xf0\xe5\xf4\xd7\xe3\xfe\xfc\xd0\xe5\xe5\xe3\xf8\xf3\xe4\xe5\xf4\xe2\x91",
    // "" / M(None) / S(0) / L(0)
    "\xf1\xdf\x27\xf1\xda\x5f\x6a\x29\x1a\x03\xc3\x58\xe1\xc6\xa1\x54\xde\x58\xed\x53\x84\xcd\x9f\x6f\x24\x45\xcf\x36\xa7\x35\x43\x2c",
    // "init" / M(Xor2) / S(152) / L(4)
    "\xe1\xe6\xe1\xfc\x88\x14\x3f\x26\xf6\xfa\x7b\x3e\x4e\x3c\xee\xb1",
    // "SHA1" / M(Xor3) / S(89) / L(4)
    "\x3a\x21\x28\x58\x69\x44\x7e\x16\x14\xea\x3e\x11\x01\xa0\x8c\x73",
    // "_MASReceipt/receipt" / M(Xor1) / S(35) / L(19)
    "\x7c\x6e\x62\x70\x71\x46\x40\x46\x4a\x53\x57\x0c\x51\x46\x40\x46\x4a\x53\x57\x23",
    // "sha1" / M(Rot) / S(74) / L(4)
    "\xbd\xb2\xab\x7b\x4a\x24\x6e\x96\xe1\x6c\x6a\x80\x7b\x38\x8d\xae",
    // "EVP_DigestFinal" / M(Xor4) / S(138) / L(15)
    "\xe5\xf6\xf0\xff\xe4\xc9\xc7\xc5\xd3\xd4\xe6\xc9\xce\xc1\xcc\xa0",
    // "CFDictionarySetValue" / M(Xor2) / S(2) / L(20)
    "\x54\x51\x53\x7e\x74\x63\x7e\x78\x79\x76\x65\x6e\x44\x72\x63\x41\x76\x7b\x62\x72\x17",
    // "" / M(None) / S(0) / L(0)
    "\x50\xf6\x8d\x4f\xb7\xe4\x09\x9e\x14\x66\x4b\xfe\x9c\x8a\xcc\x5d\x7a\x48\xd8\x3e\x27\xff\x13\xc4\x8f\x31\x63\x8a\xa8\x86\x1f\x7c",
    // "glob_b" / M(Xor4) / S(133) / L(6)
    "\x37\x3c\x3f\x32\x0f\x32\x50\xc8\x7b\xbe\x81\x5a\xc6\xdc\x58\x00",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(212) / L(43)
    "\x17\x1a\x29\x26\x20\x17\x46\x39\x35\x48\x39\x2b\x3d\x48\x3c\x1a\x3d\x40\x39\x27\x4d\x47\x48\x39\x41\x24\x35\x48\x3c\x26\x39\x40\x35\x48\x3d\x4a\x39\x28\x43\x16\x35\x47\x39\xd4\x41\xff\xad\x33\x73\x4a\x1c\x07",
    // "PKCS7_verify" / M(Xor1) / S(137) / L(12)
    "\xd9\xc2\xca\xda\xbe\xd6\xff\xec\xfb\xe0\xef\xf0\x89\xaf\x30\x02",
    // "%02x:" / M(Xor4) / S(12) / L(5)
    "\xe5\xf0\xf2\xb8\xfa\xc0\x54\xbd\x0e\xa4\xa5\x15\x03\x2b\x40\x1a",
    // "CFDataGetBytePtr" / M(Xor3) / S(157) / L(16)
    "\xed\xe8\xea\xcf\xda\xcf\xe9\xcb\xda\xec\xd7\xda\xcb\xfe\xda\xdc\xae",
    // "CFStringGetFileSystemRepresentation" / M(Rot) / S(67) / L(35)
    "\x86\x89\x96\xb7\xb5\xac\xb1\xaa\x8a\xa8\xb7\x89\xac\xaf\xa8\x96\xbc\xb6\xb7\xa8\xb0\x95\xa8\xb3\xb5\xa8\xb6\xa8\xb1\xb7\xa4\xb7\xac\xb2\xb1\x43",
    // "d2i_PKCS7_bio" / M(Xor2) / S(221) / L(13)
    "\xa9\xff\xa4\x92\x9d\x86\x8e\x9e\xfa\x92\xaf\xa4\xa2\xcd\x4f\xfa",
    // "" / M(None) / S(0) / L(0)
    "\xee\x5d\x0d\xe3\x2a\x16\x88\x81\xde\xa5\x7a\x45\xa5\x9f\x5b\x60\xb6\x9e\xd2\x1d\x8d\xbd\x0d\xd4\x08\x30\x42\xd4\xba\xf2\x16\x93",
    // "" / M(None) / S(0) / L(0)
    "\x88\xa6\x84\x56\xe4\x2d\x01\x1a\x92\x3a\x6b\x0a\x72\x56\xb6\xbb\x28\x33\x48\xd3\xcb\x2c\x66\x5a\xd5\x67\x5f\xd3\x32\x5a\x80\xc4",
    // "EVP_MD_CTX_init" / M(Xor4) / S(105) / L(15)
    "\xd5\xc6\xc0\xcf\xdd\xd4\xcf\xd3\xc4\xc8\xcf\xf9\xfe\xf9\xe4\x90",
    // "" / M(None) / S(0) / L(0)
    "\x12\x40\xda\x9b\x2c\x05\xa9\xfb\x75\x9f\xd5\xb9\xf2\xe0\x6d\xad\x5a\xdb\x75\xe7\xc0\xbb\x13\xc3\x93\x43\x7c\x49\x01\xfb\x70\x97",
    // "1.0.5" / M(Xor1) / S(188) / L(5)
    "\x8d\x92\x8c\x92\x89\xbc\x3d\x40\x30\x81\x6c\xd1\x27\x7d\x83\xc3",
    // "strlen" / M(Xor2) / S(62) / L(6)
    "\x5d\x5a\x5c\x42\x4b\x40\x2e\x45\x71\xde\x7d\xd3\xe3\x4c\x59\xf5",
    // "BIO_new" / M(Xor2) / S(32) / L(7)
    "\x72\x79\x7f\x6f\x5e\x55\x47\x30\xd3\x5c\x86\xf0\xdf\x4a\x08\x3f",
    // "" / M(None) / S(0) / L(0)
    "\xc4\xcc\x34\xb9\x64\xd6\x4d\x7b\xd8\x6c\x5e\xe4\x6b\xaa\x47\x11\xd3\x1b\x57\xe9\x59\x84\x53\x7b\x7b\x0d\x66\x72\xa1\xd3\xae\xfa",
    // "EVP_MD_CTX_init" / M(Xor2) / S(235) / L(15)
    "\xbe\xad\xab\xa4\xb6\xbf\xa4\xb8\xaf\xa3\xa4\x92\x95\x92\x8f\xfb",
    // "CFDictionaryAddValue" / M(Rot) / S(69) / L(20)
    "\x88\x8b\x89\xae\xa8\xb9\xae\xb4\xb3\xa6\xb7\xbe\x86\xa9\xa9\x9b\xa6\xb1\xba\xaa\x45",
    // "" / M(None) / S(0) / L(0)
    "\xc6\x68\x5a\x0e\x75\xc2\x66\x49\x07\x59\x90\xd7\x61\x8e\x70\x17\xc7\x6f\xe2\x8e\x5a\x9d\xe9\xca\x06\xcc\x5f\x55\x61\x8a\x14\x8f",
    // "CFDataAppendBytes" / M(Xor1) / S(244) / L(17)
    "\xb7\xb2\xb0\x95\x80\x95\xb5\x84\x84\x91\x9a\x90\xb6\x8d\x80\x91\x87\xf4",
    // "" / M(None) / S(0) / L(0)
    "\x64\x05\x54\x93\x49\xb8\xa1\xbb\x53\xe7\x07\xcb\x2a\xb6\x92\xb0\x06\x9a\x13\x4b\x72\x23\xe5\x37\x03\x55\xb9\xe1\x79\xae\xa8\x4b",
    // "" / M(None) / S(0) / L(0)
    "\x05\xa8\xd0\x96\x64\xb9\x85\x17\x68\x47\x7b\x0e\x2b\xc5\xe5\xcf\xc8\x0a\x9c\x7f\x10\x66\xe6\x19\xff\xac\xc3\xb3\x53\xe7\x36\x3c",
    // "kSecClass" / M(Xor3) / S(34) / L(9)
    "\x59\x61\x57\x51\x71\x5e\x53\x41\x41\x32\xe0\x13\xd8\x05\x05\x0b",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(102) / L(28)
    "\x0a\x0c\x10\x26\x31\x35\x2a\x20\x26\x04\x26\x37\x0e\x22\x37\x20\x2b\x2a\x2d\x24\x10\x26\x31\x35\x2a\x20\x26\x30\x43\xcc\xd8\x78\xce\xb3\xa7\x8c\xf0",
    // "IOIteratorNext" / M(Xor3) / S(237) / L(14)
    "\xb4\xb2\xb4\x89\x98\x8f\x9c\x89\x92\x8f\xb3\x98\x85\x89\xfd\x79",
    // "X509_STORE_add_cert" / M(Xor4) / S(83) / L(19)
    "\x24\x49\x4c\x45\x23\x2f\x28\x33\x2e\x39\x23\x1d\x18\x18\x23\x1f\x19\x0e\x08\x7c",
    // "CC_SHA1_Init" / M(Rot) / S(104) / L(12)
    "\xab\xab\xc7\xbb\xb0\xa9\x99\xc7\xb1\xd6\xd1\xdc\x68\x9e\xfb\xbb",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(208) / L(66)
    "\xff\x83\xa9\xa3\xa4\xb5\xbd\xff\x9c\xb9\xb2\xa2\xb1\xa2\xa9\xff\x96\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xa3\xff\x93\xbf\xa2\xb5\x96\xbf\xa5\xbe\xb4\xb1\xa4\xb9\xbf\xbe\xfe\xb6\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xff\x93\xbf\xa2\xb5\x96\xbf\xa5\xbe\xb4\xb1\xa4\xb9\xbf\xbe\xd0",
    // "" / M(None) / S(0) / L(0)
    "\x7f\xbf\x50\x1c\x8a\xcc\xcb\x37\xd2\x09\xaf\xf2\x13\x7e\x50\xea\x55\x0d\x1e\xc5\x5a\xc0\x15\xc9\x29\x10\x45\x48\x2f\xb9\x4c\x31",
    // "IOIteratorNext" / M(Xor1) / S(59) / L(14)
    "\x72\x74\x72\x4f\x5e\x49\x5a\x4f\x54\x49\x75\x5e\x43\x4f\x3b\x77",
    // "CFBundleCopyBundleURL" / M(Xor1) / S(246) / L(21)
    "\xb5\xb0\xb4\x83\x98\x92\x9a\x93\xb5\x99\x86\x8f\xb4\x83\x98\x92\x9a\x93\xa3\xa4\xba\xf6",
    // "kSecMatchLimitAll" / M(Rot) / S(197) / L(17)
    "\x30\x18\x2a\x28\x12\x26\x39\x28\x2d\x11\x2e\x32\x2e\x39\x06\x31\x31\xc5",
    // "" / M(None) / S(0) / L(0)
    "\x74\x71\x5e\x38\xb2\x66\x7e\xdd\xb4\x8e\x61\x4a\x0c\x26\x03\x35\x82\xb2\x6d\x0b\xb8\x7c\xf0\x4d\x4b\xde\xbd\x51\x1a\x64\xb8\xf4",
    // "longjmp" / M(Xor2) / S(89) / L(7)
    "\x25\x26\x27\x2e\x23\x24\x39\x49\x56\xeb\x61\x6c\x1a\x79\xe3\x2d",
    // "" / M(None) / S(0) / L(0)
    "\x55\x21\x90\xc8\x72\x2a\xe6\x1f\x8a\x6b\x58\x4e\x08\x98\xd9\xdb\xc5\x67\x8a\xdd\x9e\xe7\x78\x7f\x1c\x3d\xa8\xe9\xf4\x54\xf7\x94",
    // "NSApplicationMain" / M(Xor1) / S(219) / L(17)
    "\x95\x88\x9a\xab\xab\xb7\xb2\xb8\xba\xaf\xb2\xb4\xb5\x96\xba\xb2\xb5\xdb",
    // "CFDictionaryAddValue" / M(Xor2) / S(120) / L(20)
    "\x2e\x2b\x29\x04\x0e\x19\x04\x02\x03\x0c\x1f\x14\x2c\x09\x09\x3b\x0c\x01\x18\x08\x6d",
    // "" / M(None) / S(0) / L(0)
    "\x03\xf5\xf2\xbd\x1d\x6b\x5c\xa7\xec\x05\x80\xdb\xde\x08\xd4\xcb\xc1\x7f\xa9\x31\x6f\x63\xfd\xc0\x1e\x9b\xd6\xb4\x0c\x7b\xc3\xe3",
    // "EVP_DigestUpdate" / M(Xor1) / S(182) / L(16)
    "\xf3\xe0\xe6\xe9\xf2\xdf\xd1\xd3\xc5\xc2\xe3\xc6\xd2\xd7\xc2\xd3\xb6",
    // "exit" / M(Xor2) / S(153) / L(4)
    "\xec\xf1\xe0\xfd\x89\x05\x62\xe7\x36\x34\x38\x8b\x14\x6b\x23\x8e",
    // "SKReceiptRefreshRequest" / M(Rot) / S(105) / L(23)
    "\xbc\xb4\xbb\xce\xcc\xce\xd2\xd9\xdd\xbb\xce\xcf\xdb\xce\xdc\xd1\xbb\xce\xda\xde\xce\xdc\xdd\x69\x92\x8a\x14\xbc\x6e\x25\xf9\x6c",
    // "glob" / M(Xor3) / S(95) / L(4)
    "\x08\x03\x00\x0d\x6f\x2c\xbb\x2b\xd4\x4d\x8d\xa7\x7f\x81\xba\x0e",
    // "EVP_DigestUpdate" / M(Xor4) / S(167) / L(16)
    "\x52\x41\x47\x48\x53\x7e\x70\x72\x64\x63\x42\x67\x73\x76\x63\x72\x17",
    // "BIO_free" / M(Xor3) / S(13) / L(8)
    "\x5f\x54\x52\x42\x7b\x6f\x78\x78\x1d\x4b\xfb\x89\x3b\x51\xdf\x01",
    // "" / M(None) / S(0) / L(0)
    "\x7f\x52\xcd\x2d\xba\xd0\x06\xf9\xa6\x0a\x33\x6d\x78\x15\x81\x5c\x1f\x0c\x13\x40\x47\x7c\xd1\x20\x76\x9f\xf0\xf0\xb1\x8c\xa1\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x5e\x75\xa8\x71\x90\xbf\x4a\x64\x60\x9d\x1d\x2f\x1b\x81\xef\xfd\x24\x36\xc4\x1c\xc9\x36\x41\x8b\xf3\x57\x85\x49\x3f\x46\xaf\x41",
    // "SecCertificateCopyData" / M(Xor1) / S(192) / L(22)
    "\x93\xa5\xa3\x83\xa5\xb2\xb4\xa9\xa6\xa9\xa3\xa1\xb4\xa5\x83\xaf\xb0\xb9\x84\xa1\xb4\xa1\xc0",
    // "%02X" / M(Xor3) / S(36) / L(4)
    "\x11\x04\x06\x6c\x34\x9b\x58\xbc\xb8\x05\xd0\x78\x68\x38\xbc\x32",
    // "CFArrayGetCount" / M(Xor2) / S(0) / L(15)
    "\x53\x56\x51\x62\x62\x71\x69\x57\x75\x64\x53\x7f\x65\x7e\x64\x10",
    // "CFDictionaryGetValue" / M(Xor2) / S(120) / L(20)
    "\x2e\x2b\x29\x04\x0e\x19\x04\x02\x03\x0c\x1f\x14\x2a\x08\x19\x3b\x0c\x01\x18\x08\x6d",
    // "" / M(None) / S(0) / L(0)
    "\xaa\x95\x4f\x49\xf9\x00\x6c\x21\xe8\xdc\x7c\x2b\xb2\x9a\xde\xeb\xab\x98\x6b\x68\x4c\x5a\x44\x1c\xcb\x12\x21\x47\xc6\x49\xf7\x3e",
    // "kCFBundleIdentifierKey" / M(Rot) / S(92) / L(22)
    "\xc7\x9f\xa2\x9e\xd1\xca\xc0\xc8\xc1\xa5\xc0\xc1\xca\xd0\xc5\xc2\xc5\xc1\xce\xa7\xc1\xd5\x5c",
    // "" / M(None) / S(0) / L(0)
    "\xb5\x41\xb2\xf0\xcf\x54\x1f\x39\x8a\x2b\xb1\x61\xe9\xe7\x47\xd6\x8c\x72\x27\xf8\x80\x65\x4a\x6b\xe0\x0e\x96\x09\x31\x18\x01\xae",
    // "" / M(None) / S(0) / L(0)
    "\x52\x50\x7a\x50\xb0\xf7\xa3\xd4\x0c\xf8\x40\x53\xda\xde\xd2\x60\x31\x13\xb0\xbd\x18\xdf\x3d\x06\xef\x62\x75\x7e\xa3\x28\x95\xb5",
    // "start" / M(Rot) / S(100) / L(5)
    "\xd7\xd8\xc5\xd6\xd8\x64\x4d\x6d\x43\x36\x54\x4f\xdd\xd2\xab\x80",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(229) / L(37)
    "\xa6\xa3\xb0\xb7\xa9\xa6\x97\x80\x84\x91\x80\xa6\x8a\x95\x9c\xa4\x95\x95\x80\x8b\x81\x8c\x8b\x82\xb5\x84\x91\x8d\xa6\x8a\x88\x95\x8a\x8b\x80\x8b\x91\xe5",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(167) / L(36)
    "\x8f\x8a\x8e\xb9\xa2\xa8\xa0\xa9\x8b\xa9\xb8\x9a\xad\xa0\xb9\xa9\x8a\xa3\xbe\x85\xa2\xaa\xa3\x88\xa5\xaf\xb8\xa5\xa3\xa2\xad\xbe\xb5\x87\xa9\xb5\xcc",
    // "" / M(None) / S(0) / L(0)
    "\x1f\xb8\x21\x96\x0c\x68\x04\x2c\x41\x13\x47\xc2\x4d\x6a\x2e\xd9\x1e\x34\x93\xb2\x74\xd9\x18\x9c\x31\xc1\x2f\x1a\xea\x3b\xd0\xe0",
    // "" / M(None) / S(0) / L(0)
    "\xb6\x2c\x0b\x17\x90\x68\x31\x57\xf4\x7c\x29\x65\x6a\x63\xee\x53\x31\xb3\x4f\x88\x3e\x5a\xe5\x3f\x01\xf4\x8a\xf5\xd7\x9c\xfa\xe9",
    // "CFReadStreamOpen" / M(Xor2) / S(29) / L(16)
    "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x43\x7c\x69\x62\x0c",
    // "PKCS7_verify" / M(Xor1) / S(98) / L(12)
    "\x32\x29\x21\x31\x55\x3d\x14\x07\x10\x0b\x04\x1b\x62\x8d\x05\x6b",
    // "sk_free" / M(Xor4) / S(233) / L(7)
    "\xe3\xfb\xcf\xf6\xe2\xf5\xf5\x90\xd3\x57\x0c\x59\x48\xee\x08\xf9",
    // "" / M(None) / S(0) / L(0)
    "\x1f\xcb\x99\xe8\x00\xca\xeb\xcb\x02\xdf\x63\xec\x9b\xbd\xb7\xf1\xc0\x3a\x90\xf5\x63\x34\xe5\xcd\x0d\x40\x7e\xa8\x67\x67\x6b\x29",
    // "" / M(None) / S(0) / L(0)
    "\x79\x4a\x01\x7e\xc8\x30\x9b\x3f\xf3\x14\xf7\x48\xf7\xb0\x59\x34\xe7\x49\x76\x2f\x34\x93\x7d\xf6\x51\x4e\xe6\x81\x02\xba\x2f\xc3",
    // "%02x:" / M(Xor1) / S(78) / L(5)
    "\x6b\x7e\x7c\x36\x74\x4e\xd5\x7e\x15\x8b\x6b\x41\x07\xaa\x84\x09",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(80) / L(31)
    "\x39\x3f\x22\x15\x17\x19\x03\x04\x02\x09\x35\x1e\x04\x02\x09\x33\x02\x15\x11\x04\x15\x33\x36\x20\x02\x1f\x00\x15\x02\x04\x09\x70",
    // "IOMACAddress" / M(Rot) / S(218) / L(12)
    "\x23\x29\x27\x1b\x1d\x1b\x3e\x3e\x4c\x3f\x4d\x4d\xda\x18\x70\x07",
    // "CC_SHA1_Update" / M(Xor3) / S(78) / L(14)
    "\x1d\x1d\x01\x0d\x16\x1f\x6f\x01\x0b\x2e\x3a\x3f\x2a\x3b\x5e\x1a",
    // "" / M(None) / S(0) / L(0)
    "\xeb\x4f\xf4\x52\xc5\x06\x98\x8b\x53\x47\x7e\x34\x00\x52\x4f\x17\xee\x2f\xc1\xe6\x64\xb1\xf9\xb6\x5e\xb2\x89\x75\x6b\x94\xa7\x68",
    // "d2i_X509_bio" / M(Xor3) / S(120) / L(12)
    "\xec\xba\xe1\xd7\xd0\xbd\xb8\xb1\xd7\xea\xe1\xe7\x88\x19\xa5\x97",
    // "d2i_X509_bio" / M(Xor2) / S(101) / L(12)
    "\x11\x47\x1c\x2a\x2d\x40\x45\x4c\x2a\x17\x1c\x1a\x75\xc5\xcf\x5a",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(217) / L(26)
    "\x9a\x9f\x8b\xbc\xb8\xbd\x8a\xad\xab\xbc\xb8\xb4\x9a\xab\xbc\xb8\xad\xbc\x8e\xb0\xad\xb1\x9f\xb0\xb5\xbc\xd9\x68\x6e\x1a\x40\x6f\x9d\xa9\x14",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(51) / L(31)
    "\x5a\x5c\x41\x76\x74\x7a\x60\x67\x61\x6a\x56\x7d\x67\x61\x6a\x50\x61\x76\x72\x67\x76\x50\x55\x43\x61\x7c\x63\x76\x61\x67\x6a\x13",
    // "CFDateFormatterCreate" / M(Xor2) / S(29) / L(21)
    "\x48\x4d\x4f\x6a\x7f\x6e\x4d\x64\x79\x66\x6a\x7f\x7f\x6e\x79\x48\x79\x6e\x6a\x7f\x6e\x0b",
    // "SHA1_Init" / M(Rot) / S(63) / L(9)
    "\x92\x87\x80\x70\x9e\x88\xad\xa8\xb3\x3f\x0f\x32\xe8\x8f\x55\x96",
    // "CFBundleIdentifier" / M(Xor4) / S(168) / L(18)
    "\x3b\x3e\x3a\x0d\x16\x1c\x14\x1d\x31\x1c\x1d\x16\x0c\x11\x1e\x11\x1d\x0a\x78",
    // "" / M(None) / S(0) / L(0)
    "\xc1\xb0\xc9\xc3\xb0\x06\xe5\xcf\x5a\x46\x6d\x4e\x2e\xcc\xfc\x9b\xef\x34\xf7\x8c\x4f\x9a\x1c\x83\x8e\x44\x89\x02\x56\x91\xa5\x83",
    // "d2i_X509_bio" / M(Xor2) / S(127) / L(12)
    "\x0b\x5d\x06\x30\x37\x5a\x5f\x56\x30\x0d\x06\x00\x6f\x7d\xfe\x40",
    // "CFRelease" / M(Xor3) / S(40) / L(9)
    "\x7b\x7e\x6a\x5d\x54\x5d\x59\x4b\x5d\x38\x92\x9e\xbf\xe6\x2b\x4e",
    // "CFDataAppendBytes" / M(Xor4) / S(194) / L(17)
    "\xe7\xe2\xe0\xc5\xd0\xc5\xe5\xd4\xd4\xc1\xca\xc0\xe6\xdd\xd0\xc1\xd7\xa4",
    // "" / M(None) / S(0) / L(0)
    "\xec\x37\xc6\xb2\x24\x82\x1a\x53\x3f\x8d\xee\xd8\x62\x5e\x9a\xdb\x24\x45\xec\x68\x3e\x15\xc2\x3d\xc3\x91\xfc\xfd\xe2\x62\xb5\x06",
    // "OpenSSL_add_all_digests" / M(Xor3) / S(146) / L(23)
    "\xfd\xc2\xd7\xdc\xe1\xe1\xfe\xed\xd3\xd6\xd6\xed\xd3\xde\xde\xed\xd6\xdb\xd5\xd7\xc1\xc6\xc1\xb2\x52\xc6\xd1\x96\xcc\xde\x4e\x8f",
    // "" / M(None) / S(0) / L(0)
    "\x07\xdf\x60\x56\x6a\x9e\x01\x14\x0f\xb2\xa0\xe6\x5c\x06\xc1\x50\x80\xf7\x05\x58\xae\x43\xcd\xe5\x30\xe7\x52\xcd\x18\x7b\x52\x2a",
    // "Contents/_MASReceipt" / M(Xor2) / S(201) / L(20)
    "\x9f\xb3\xb2\xa8\xb9\xb2\xa8\xaf\xf3\x83\x91\x9d\x8f\x8e\xb9\xbf\xb9\xb5\xac\xa8\xdc",
    // "" / M(None) / S(0) / L(0)
    "\x7d\x3b\x38\x7b\x01\x93\x19\xd3\xc5\xf5\x62\xe5\x66\x7f\x6f\xdd\x60\x15\xab\x14\x4a\x39\xb4\xdc\x62\x24\x1e\xef\x9d\x6d\xfa\x3c",
    // "CFDictionarySetValue" / M(Xor2) / S(154) / L(20)
    "\xcc\xc9\xcb\xe6\xec\xfb\xe6\xe0\xe1\xee\xfd\xf6\xdc\xea\xfb\xd9\xee\xe3\xfa\xea\x8f",
    // "strlen" / M(Xor4) / S(254) / L(6)
    "\x93\x94\x92\x8c\x85\x8e\xe0\xaa\xd5\x30\x28\xfb\xbf\x3a\x15\xd4",
    // "" / M(None) / S(0) / L(0)
    "\xed\xab\x83\x77\xa0\x42\xe0\xa3\x96\xf0\xad\x9a\xf8\x93\x31\x54\x85\x2e\xaf\x29\xde\xe4\x2f\x41\x4e\x8c\xf7\x8a\xf3\xd7\xf3\x21",
    // "" / M(None) / S(0) / L(0)
    "\x5e\x72\x38\xcc\x86\xdb\xac\x0c\x90\x7d\x64\x21\x5b\xd0\xac\x20\xd5\x91\xf7\x12\x7a\x23\x48\xcb\x4c\x11\x3f\xd3\xbb\x05\xf6\x8a",
    // "kSecReturnRef" / M(Xor2) / S(76) / L(13)
    "\x37\x0f\x39\x3f\x0e\x39\x28\x29\x2e\x32\x0e\x39\x3a\x5c\x2a\x3a",
    // "NSApplicationMain" / M(Xor4) / S(171) / L(17)
    "\x48\x55\x47\x76\x76\x6a\x6f\x65\x67\x72\x6f\x69\x68\x4b\x67\x6f\x68\x06",
    // "IOMasterPort" / M(Rot) / S(35) / L(12)
    "\x6c\x72\x70\x84\x96\x97\x88\x95\x73\x92\x95\x97\x23\xde\x81\x1e",
    // "X509_STORE_new" / M(Rot) / S(253) / L(14)
    "\x55\x32\x2d\x36\x5c\x50\x51\x4c\x4f\x42\x5c\x6b\x62\x74\xfd\x9a",
    // "BIO_s_mem" / M(Xor3) / S(73) / L(9)
    "\x1b\x10\x16\x06\x2a\x06\x34\x3c\x34\x59\x85\xce\xf0\x52\x0b\x2a",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor3) / S(200) / L(39)
    "\xbb\xbe\xad\xaa\xb4\xbb\x8a\x9d\x99\x8c\x9d\xbe\x8a\x97\x95\xbe\x91\x94\x9d\xab\x81\x8b\x8c\x9d\x95\xaa\x9d\x88\x8a\x9d\x8b\x9d\x96\x8c\x99\x8c\x91\x97\x96\xf8\xb3\x44\xb5\xe8\x85\xd8\x9c\xca",
    // "" / M(None) / S(0) / L(0)
    "\x60\x2f\x35\xd6\x38\x61\xa8\x64\x58\x1e\x31\xcb\x69\x0c\xf8\x83\x40\xe5\x4b\x1f\x1c\xee\x2b\xd3\x11\x08\x96\xb0\xa3\x4b\x63\x2b",
    // "kCFBundleIdentifierKey" / M(Xor4) / S(72) / L(22)
    "\x13\x3b\x3e\x3a\x0d\x16\x1c\x14\x1d\x31\x1c\x1d\x16\x0c\x11\x1e\x11\x1d\x0a\x33\x1d\x01\x78",
    // "CFBundleShortVersionString" / M(Xor4) / S(93) / L(26)
    "\xf4\xf1\xf5\xc2\xd9\xd3\xdb\xd2\xe4\xdf\xd8\xc5\xc3\xe1\xd2\xc5\xc4\xde\xd8\xd9\xe4\xc3\xc5\xde\xd9\xd0\xb7\x52\xe4\x3e\x62\xb0\x00\x7f\xf6",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(184) / L(31)
    "\xb3\x9b\x9e\x8c\xa1\xa8\xbd\x9c\xb1\xbb\xac\xb1\xb7\xb6\xb9\xaa\xa1\x8e\xb9\xb4\xad\xbd\x9b\xb9\xb4\xb4\x9a\xb9\xbb\xb3\xab\xd8",
    // "strncmp" / M(Xor4) / S(183) / L(7)
    "\x03\x04\x02\x1e\x13\x1d\x00\x70\x86\x4e\x40\x6c\x65\x8b\xb6\xc6",
    // "/usr/lib/libSystem.dylib" / M(Xor2) / S(75) / L(24)
    "\x45\x1f\x19\x18\x45\x06\x03\x08\x45\x06\x03\x08\x39\x13\x19\x1e\x0f\x07\x44\x0e\x13\x06\x03\x08\x6a\x5d\xda\x42\x92\xe1\xe8\xbd\x11",
    // "CFBundleVersion" / M(Xor1) / S(65) / L(15)
    "\x02\x07\x03\x34\x2f\x25\x2d\x24\x17\x24\x33\x32\x28\x2e\x2f\x41",
    // "CFBundleUnloadExecutable" / M(Rot) / S(37) / L(24)
    "\x68\x6b\x67\x9a\x93\x89\x91\x8a\x7a\x93\x91\x94\x86\x89\x6a\x9d\x8a\x88\x9a\x99\x86\x87\x91\x8a\x25\xfe\xa0\xd9\x0f\x09\x7e\xb6\xd9",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(43) / L(43)
    "\xff\xfa\xe9\xee\xf0\xff\xce\xd9\xdd\xc8\xd9\xeb\xd5\xc8\xd4\xfa\xd5\xd0\xd9\xef\xc5\xcf\xc8\xd9\xd1\xec\xdd\xc8\xd4\xee\xd9\xd0\xdd\xc8\xd5\xca\xd9\xe8\xd3\xfe\xdd\xcf\xd9\xbc\x20\x6c\x87\x90\x18\x21\xb5\x00",
    // "NSApplicationMain" / M(Xor1) / S(51) / L(17)
    "\x7d\x60\x72\x43\x43\x5f\x5a\x50\x52\x47\x5a\x5c\x5d\x7e\x52\x5a\x5d\x33",
    // "CFDataCreateMutable" / M(Xor2) / S(86) / L(19)
    "\x01\x04\x06\x23\x36\x23\x01\x30\x27\x23\x36\x27\x0f\x37\x36\x23\x20\x2e\x27\x42",
    // "." / M(Xor2) / S(82) / L(1)
    "\x6c\x42\x4d\x8f\x74\x18\x3c\x13\xc0\xb5\x22\xaf\xae\x52\x4a\x49",
    // "" / M(None) / S(0) / L(0)
    "\x25\x45\xf0\x8f\x66\x9f\x27\x52\x50\x12\xc7\x5b\x06\x5a\xa0\x78\x00\x36\x3d\x0b\x61\xab\x27\x35\x0a\xef\xe6\xa8\xfa\x08\x3c\x06",
    // "CFEqual" / M(Xor1) / S(131) / L(7)
    "\xc0\xc5\xc6\xf2\xf6\xe2\xef\x83\x09\x0b\xe3\x17\x55\xe2\x84\x20",
    // "/usr/lib/libobjc.dylib" / M(Xor3) / S(207) / L(22)
    "\xc9\x93\x95\x94\xc9\x8a\x8f\x84\xc9\x8a\x8f\x84\x89\x84\x8c\x85\xc8\x82\x9f\x8a\x8f\x84\xe6",
    // "EVP_get_digestbyname" / M(Xor3) / S(132) / L(20)
    "\xdc\xcf\xc9\xc6\xfe\xfc\xed\xc6\xfd\xf0\xfe\xfc\xea\xed\xfb\xe0\xf7\xf8\xf4\xfc\x99",
    // "exit" / M(Rot) / S(59) / L(4)
    "\xa0\xb3\xa4\xaf\x3b\x58\x4e\xc2\x0d\xf3\x94\x13\x8f\x02\x45\x32",
    // "kSecMatchLimit" / M(Xor3) / S(199) / L(14)
    "\xbc\x84\xb2\xb4\x9a\xb6\xa3\xb4\xbf\x9b\xbe\xba\xbe\xa3\xd7\x2f",
    // "X509_STORE_add_cert" / M(Xor1) / S(225) / L(19)
    "\xb9\xd4\xd1\xd8\xbe\xb2\xb5\xae\xb3\xa4\xbe\x80\x85\x85\xbe\x82\x84\x93\x95\xe1",
    // "en0" / M(Xor1) / S(61) / L(3)
    "\x58\x53\x0d\x3d\xd9\xb0\xfc\xa8\xa9\x0d\x9d\xa9\x7c\x40\x79\x23",
    // "BIO_new" / M(Xor4) / S(112) / L(7)
    "\x42\x49\x4f\x5f\x6e\x65\x77\x00\x6d\x22\xff\x76\x83\xf6\xee\x93",
    // "X509_NAME_get_text_by_NID" / M(Rot) / S(188) / L(25)
    "\x14\xf1\xec\xf5\x1b\x0a\xfd\x09\x01\x1b\x23\x21\x30\x1b\x30\x21\x34\x30\x1b\x1e\x35\x1b\x0a\x05\x00\xbc\x87\x04\xb3\x14\x54\x36\x57\xc4",
    // "CFDictionaryAddValue" / M(Rot) / S(174) / L(20)
    "\xf1\xf4\xf2\x17\x11\x22\x17\x1d\x1c\x0f\x20\x27\xef\x12\x12\x04\x0f\x1a\x23\x13\xae",
    // "strlen" / M(Xor1) / S(96) / L(6)
    "\x13\x14\x12\x0c\x05\x0e\x60\xd0\x0e\x0e\x13\xef\xe3\x1d\x28\x06",
    // "CFDataGetBytePtr" / M(Rot) / S(153) / L(16)
    "\xdc\xdf\xdd\xfa\x0d\xfa\xe0\xfe\x0d\xdb\x12\x0d\xfe\xe9\x0d\x0b\x99",
    // "X509_STORE_add_cert" / M(Xor2) / S(69) / L(19)
    "\x09\x64\x61\x68\x0e\x02\x05\x1e\x03\x14\x0e\x30\x35\x35\x0e\x32\x34\x23\x25\x51",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x1f\x04\x0e\x05\x9d\xe3\xc7\xe4\x15\xe2\x11\x8c\x7f\xac\xdc\xfe\xa6\xc9\xfa\x50\x5a\xee\x1e\x77\xd0\x8b\x57\x99\x89\x6f\x89",
    // "" / M(None) / S(0) / L(0)
    "\x2d\xb2\x78\xf5\xce\x20\xcc\x24\x37\x96\x41\x67\x5b\xcc\x46\xeb\x77\x15\x1d\xa2\x6f\xb3\x97\x44\xf1\x51\x96\x10\xcf\xc2\xfb\xc0",
    // "Contents/_MASReceipt" / M(Xor3) / S(249) / L(20)
    "\x4d\x61\x60\x7a\x6b\x60\x7a\x7d\x21\x51\x43\x4f\x5d\x5c\x6b\x6d\x6b\x67\x7e\x7a\x0e",
    // "CFArrayGetValueAtIndex" / M(Xor4) / S(170) / L(22)
    "\x05\x00\x07\x34\x34\x27\x3f\x01\x23\x32\x10\x27\x2a\x33\x23\x07\x32\x0f\x28\x22\x23\x3e\x46",
    // "CFDataGetLength" / M(Xor1) / S(22) / L(15)
    "\x55\x50\x52\x77\x62\x77\x51\x73\x62\x5a\x73\x78\x71\x62\x7e\x16",
    // "glob" / M(Rot) / S(247) / L(4)
    "\x5e\x63\x66\x59\xf7\x8a\x7f\xb6\x0f\x4d\x10\xb3\xe5\x17\x9b\xc7",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(183) / L(14)
    "\x22\x24\x3c\x34\x2f\x3d\x31\x39\x3e\x2f\x3f\x3e\x3c\x29\x70\xbd",
    // "" / M(None) / S(0) / L(0)
    "\xdd\x4c\xcf\x24\x24\xe0\x95\x12\x2e\xb3\xdc\xad\xeb\x3b\x87\x33\xdf\x39\xc1\x88\xba\xac\x8e\x6d\xd5\x2c\x25\xa9\xfc\xec\x8f\x24",
    // "CFArrayAppendValue" / M(Xor1) / S(162) / L(18)
    "\xe1\xe4\xe3\xd0\xd0\xc3\xdb\xe3\xd2\xd2\xc7\xcc\xc6\xf4\xc3\xce\xd7\xc7\xa2",
    // "X509_free" / M(Xor4) / S(216) / L(9)
    "\xd8\xb5\xb0\xb9\xdf\xe6\xf2\xe5\xe5\x80\xe7\xd5\xf4\x1e\xed\xff",
    // "kSecMatchSubjectContains" / M(Xor4) / S(174) / L(24)
    "\x05\x3d\x0b\x0d\x23\x0f\x1a\x0d\x06\x3d\x1b\x0c\x04\x0b\x0d\x1a\x2d\x01\x00\x1a\x0f\x07\x00\x1d\x6e\x8d\x31\xaf\x22\x97\xde\x42\xeb",
    // "dlopen" / M(Xor1) / S(158) / L(6)
    "\xfa\xf2\xf1\xee\xfb\xf0\x9e\x26\xad\xf9\xd1\x4f\x5c\x36\xf2\x83",
    // "IOServiceGetMatchingServices" / M(Xor4) / S(209) / L(28)
    "\x7c\x7a\x66\x50\x47\x43\x5c\x56\x50\x72\x50\x41\x78\x54\x41\x56\x5d\x5c\x5b\x52\x66\x50\x47\x43\x5c\x56\x50\x46\x35\x72\x52\x2d\x23\xa6\xb0\xc2\xc3",
    // "" / M(None) / S(0) / L(0)
    "\x67\x8d\x8b\xad\xe1\x0b\x63\x44\x36\xe4\xe1\xe6\xf8\xea\xb6\x84\x7c\x69\xeb\x25\xc5\x0f\x31\xb8\xe4\x41\x99\x76\xfe\x89\xaf\xea",
    // "sk_free" / M(Xor3) / S(92) / L(7)
    "\x1f\x07\x33\x0a\x1e\x09\x09\x6c\x5a\xa2\x3d\x3e\xdd\xdb\xf4\xb8",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(233) / L(54)
    "\x18\x3c\x62\x5c\x5d\x4e\x56\x18\x35\x52\x4b\x5b\x4a\x5b\x62\x18\x2f\x5b\x4a\x56\x4e\x60\x58\x5b\x54\x5c\x18\x3c\x4e\x4c\x5e\x5b\x52\x5d\x62\x17\x4f\x5b\x4a\x56\x4e\x60\x58\x5b\x54\x18\x3c\x4e\x4c\x5e\x5b\x52\x5d\x62\xe9",
    // "CFDataCreate" / M(Xor2) / S(244) / L(12)
    "\xa7\xa2\xa0\x85\x90\x85\xa7\x96\x81\x85\x90\x81\xe4\x95\x3f\xf0",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(55) / L(29)
    "\x41\x69\x6c\x7e\x53\x5a\x4f\x6e\x43\x49\x5e\x43\x45\x44\x4b\x58\x53\x61\x4f\x53\x69\x4b\x46\x46\x68\x4b\x49\x41\x59\x2a\xf3\x5d\x13\x73\x14\xee\x08\xf7",
    // "sel_registerName" / M(Xor2) / S(244) / L(16)
    "\x96\x80\x89\xba\x97\x80\x82\x8c\x96\x91\x80\x97\xab\x84\x88\x80\xe5",
    // "EVP_get_digestbyname" / M(Xor3) / S(14) / L(20)
    "\x66\x75\x73\x7c\x44\x46\x57\x7c\x47\x4a\x44\x46\x50\x57\x41\x5a\x4d\x42\x4e\x46\x23",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(151) / L(40)
    "\x90\x97\x97\xe3\x93\xe4\x90\x90\x94\xe5\x93\x9f\x95\xe7\x96\x9e\xe0\xe0\x93\x9e\xe2\x97\x92\xe7\xe3\x94\x94\x92\x93\x94\xe2\x97\x9f\x9e\xe2\xe0\x90\xe5\x90\x96\xa6\x8f\x45\x43\x65\x6f\x71\x96\xd2",
    // "CFBundleGetIdentifier" / M(Xor2) / S(121) / L(21)
    "\x2c\x29\x2d\x1a\x01\x0b\x03\x0a\x28\x0a\x1b\x26\x0b\x0a\x01\x1b\x06\x09\x06\x0a\x1d\x6f",
    // "X509_STORE_free" / M(Xor2) / S(19) / L(15)
    "\x5b\x36\x33\x3a\x5c\x50\x57\x4c\x51\x46\x5c\x65\x71\x66\x66\x03",
    // "start" / M(Rot) / S(253) / L(5)
    "\x70\x71\x5e\x6f\x71\xfd\x49\x2e\x95\xeb\x41\x7f\xd6\x63\x77\x4e",
    // "SHA1_Init" / M(Rot) / S(5) / L(9)
    "\x58\x4d\x46\x36\x64\x4e\x73\x6e\x79\x05\xba\x5d\xe8\x01\x2f\x1a",
    // "CC_SHA1_Init" / M(Rot) / S(99) / L(12)
    "\xa6\xa6\xc2\xb6\xab\xa4\x94\xc2\xac\xd1\xcc\xd7\x63\xdd\x06\xcc",
    // "CFStringCreateWithBytes" / M(Xor3) / S(172) / L(23)
    "\x8f\x8a\x9f\xb8\xbe\xa5\xa2\xab\x8f\xbe\xa9\xad\xb8\xa9\x9b\xa5\xb8\xa4\x8e\xb5\xb8\xa9\xbf\xcc\x4c\x21\x0c\x53\x08\xb7\x32\x58",
    // "CFBundleVersion" / M(Rot) / S(239) / L(15)
    "\x32\x35\x31\x64\x5d\x53\x5b\x54\x45\x54\x61\x62\x58\x5e\x5d\xef",
    // "" / M(None) / S(0) / L(0)
    "\x7c\xf7\xcc\x04\x42\x9d\x7d\x5a\xbc\x57\x9d\x95\xe6\x7f\x3c\x1d\x47\xe3\x10\x85\xed\x05\x75\x7c\x11\x93\xe1\xdc\xc8\xc6\xc7\xdc",
    // "IOObjectRelease" / M(Xor1) / S(194) / L(15)
    "\x8b\x8d\x8d\xa0\xa8\xa7\xa1\xb6\x90\xa7\xae\xa7\xa3\xb1\xa7\xc2",
    // "IOMasterPort" / M(Xor3) / S(105) / L(12)
    "\x30\x36\x34\x18\x0a\x0d\x1c\x0b\x29\x16\x0b\x0d\x79\x4f\xd9\x65",
    // "" / M(None) / S(0) / L(0)
    "\x27\x89\x49\x63\x03\x36\x48\x5f\x21\x07\x14\x40\x22\x2b\x42\x67\x30\x05\x95\x22\xc1\xe9\x23\xa0\xcf\x43\xbb\xdf\x99\x46\x11\x5d",
    // "Contents" / M(Xor4) / S(9) / L(8)
    "\xd3\xff\xfe\xe4\xf5\xfe\xe4\xe3\x90\x9d\xcc\xe8\x71\x40\x88\xfe",
    // "CFEqual" / M(Xor1) / S(195) / L(7)
    "\x80\x85\x86\xb2\xb6\xa2\xaf\xc3\x4c\x2c\xdf\x48\x76\x9e\x96\x56",
    // "SecKeychainSearchCopyNext" / M(Xor3) / S(34) / L(25)
    "\x17\x21\x27\x0f\x21\x3d\x27\x2c\x25\x2d\x2a\x17\x21\x25\x36\x27\x2c\x07\x2b\x34\x3d\x0a\x21\x3c\x30\x44\xbd\xb9\x0d\x22\x7a\xc1\x89\xb4",
    // "kCFBundleIdentifierKey" / M(Rot) / S(179) / L(22)
    "\x1e\xf6\xf9\xf5\x28\x21\x17\x1f\x18\xfc\x17\x18\x21\x27\x1c\x19\x1c\x18\x25\xfe\x18\x2c\xb3",
    // "sk_value" / M(Xor4) / S(189) / L(8)
    "\xa3\xbb\x8f\xa6\xb1\xbc\xa5\xb5\xd0\x91\x4b\x51\x4c\xdd\x69\x4c",
    // "setDelegate:" / M(Rot) / S(241) / L(12)
    "\x64\x56\x65\x35\x56\x5d\x56\x58\x52\x65\x56\x2b\xf1\x83\x85\xe8",
    // "setjmp" / M(Xor2) / S(98) / L(6)
    "\x01\x17\x06\x18\x1f\x02\x72\x79\xea\x15\xb7\x44\x0b\x4a\x51\x16",
    // "" / M(None) / S(0) / L(0)
    "\x36\x95\x80\xa6\x5d\x10\xda\xe0\xb2\x0a\xef\xca\x44\x8c\x59\x70\xc3\x9d\x21\xe8\x2c\x81\xca\xca\x53\xb3\xe2\x5c\xd9\x37\x84\x41",
    // "CFDateFormatterCreate" / M(Xor4) / S(1) / L(21)
    "\x55\x50\x52\x77\x62\x73\x50\x79\x64\x7b\x77\x62\x62\x73\x64\x55\x64\x73\x77\x62\x73\x16",
    // "kSecMatchSubjectContains" / M(Xor4) / S(49) / L(24)
    "\x3a\x02\x34\x32\x1c\x30\x25\x32\x39\x02\x24\x33\x3b\x34\x32\x25\x12\x3e\x3f\x25\x30\x38\x3f\x22\x51\x72\x2d\x02\x32\x3e\x2d\x0e\x3b",
    // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(31) / L(31)
    "\x8a\x62\x65\x73\x98\x8f\x84\x63\x88\x82\x93\x88\x8e\x8d\x80\x91\x98\x75\x80\x8b\x94\x84\x62\x80\x8b\x8b\x61\x80\x82\x8a\x92\x1f",
    // "%02X" / M(Xor3) / S(206) / L(4)
    "\xfb\xee\xec\x86\xde\x11\x3c\xb3\x2c\x96\xdd\xac\x73\x89\xb0\x72",
    // "IORegistryEntryGetParentEntry" / M(Xor4) / S(156) / L(29)
    "\x61\x67\x7a\x4d\x4f\x41\x5b\x5c\x5a\x51\x6d\x46\x5c\x5a\x51\x6f\x4d\x5c\x78\x49\x5a\x4d\x46\x5c\x6d\x46\x5c\x5a\x51\x28\x82\xc3\xf0\xfe\x9e\xb9\x91\xc0",
    // "Contents/_MASReceipt/receipt" / M(Xor2) / S(214) / L(28)
    "\xb0\x9c\x9d\x87\x96\x9d\x87\x80\xdc\xac\xbe\xb2\xa0\xa1\x96\x90\x96\x9a\x83\x87\xdc\x81\x96\x90\x96\x9a\x83\x87\xf3\x2e\x50\xd9\x01\x42\xad\xf7\x90",
    // "sk_num" / M(Xor3) / S(151) / L(6)
    "\xd4\xcc\xf8\xc9\xd2\xca\xa7\x5e\xc1\x8a\x76\x80\x23\x66\x7e\xd2",
    // "CFStringCreateWithBytes" / M(Xor3) / S(56) / L(23)
    "\x1b\x1e\x0b\x2c\x2a\x31\x36\x3f\x1b\x2a\x3d\x39\x2c\x3d\x0f\x31\x2c\x30\x1a\x21\x2c\x3d\x2b\x58\x57\x42\x80\x43\x5c\x1a\x65\xd5",
    // "setjmp" / M(Xor3) / S(165) / L(6)
    "\xc6\xd0\xc1\xdf\xd8\xc5\xb5\xe3\x08\x64\xf5\x27\x51\x70\xba\xf7",
    // "dlsym" / M(Rot) / S(43) / L(5)
    "\x8f\x97\x9e\xa4\x98\x2b\x38\x01\xbc\x9c\x38\xa9\x51\xe1\x11\xfe",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(134) / L(48)
    "\x98\xe4\xce\xc4\xc3\xd2\xda\x98\xfb\xde\xd5\xc5\xd6\xc5\xce\x98\xf1\xc5\xd6\xda\xd2\xc0\xd8\xc5\xdc\xc4\x98\xfe\xf8\xfc\xde\xc3\x99\xd1\xc5\xd6\xda\xd2\xc0\xd8\xc5\xdc\x98\xfe\xf8\xfc\xde\xc3\xb7",
    // "" / M(None) / S(0) / L(0)
    "\x55\x0a\x50\x57\xe6\xb5\x0d\xc0\x42\xf7\x01\xd8\xbc\xa2\xd5\x05\xef\x08\xfd\x3d\x6c\xda\xd8\xf4\x40\x76\x56\x05\x29\x24\xd2\xf2",
    // "%02X:" / M(Xor1) / S(37) / L(5)
    "\x00\x15\x17\x7d\x1f\x25\xce\x61\x79\x1d\x51\x27\xce\x22\x66\xaa",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(61) / L(32)
    "\x65\x65\x65\x65\x3b\x31\x3b\x51\x51\x3b\x31\x3b\x78\x78\x3b\x48\x3b\x54\x54\x3b\x26\x3b\x71\x71\x3b\x26\x3b\x6f\x6f\x3b\x46\x3b\x1c",
    // "CFArrayAppendValue" / M(Xor4) / S(253) / L(18)
    "\x84\x81\x86\xb5\xb5\xa6\xbe\x86\xb7\xb7\xa2\xa9\xa3\x91\xa6\xab\xb2\xa2\xc7",
    // "" / M(None) / S(0) / L(0)
    "\xc8\xf8\xc9\x6b\xd0\xb7\x9a\xbe\xae\x18\xeb\xef\x14\xf0\xf2\x5e\x73\x6b\x06\xd3\x0e\x5f\x6f\x62\x41\x58\x8d\x7b\xe5\x56\x25\x84",
    // "SecItemCopyMatching" / M(Xor3) / S(200) / L(19)
    "\x8f\xb9\xbf\x95\xa8\xb9\xb1\x9f\xb3\xac\xa5\x91\xbd\xa8\xbf\xb4\xb5\xb2\xbb\xdc",
    // "CFStringCompare" / M(Xor3) / S(72) / L(15)
    "\x1b\x1e\x0b\x2c\x2a\x31\x36\x3f\x1b\x37\x35\x28\x39\x2a\x3d\x58",
    // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(99) / L(31)
    "\xce\xa6\xa9\xb7\xdc\xd3\xc8\xa7\xcc\xc6\xd7\xcc\xd2\xd1\xc4\xd5\xdc\xb9\xc4\xcf\xd8\xc8\xa6\xc4\xcf\xcf\xa5\xc4\xc6\xce\xd6\x63",
    // "CFBundleGetMainBundle" / M(Rot) / S(219) / L(21)
    "\x1e\x21\x1d\x50\x49\x3f\x47\x40\x22\x40\x4f\x28\x3c\x44\x49\x1d\x50\x49\x3f\x47\x40\xdb",
    // "SHA1_Update" / M(Xor3) / S(247) / L(11)
    "\x54\x4f\x46\x36\x58\x52\x77\x63\x66\x73\x62\x07\x2b\x60\xf9\xbf",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(186) / L(37)
    "\xf9\xfc\xef\xe8\xf6\xf9\xc8\xdf\xdb\xce\xdf\xf9\xd5\xca\xc3\xfb\xca\xca\xdf\xd4\xde\xd3\xd4\xdd\xea\xdb\xce\xd2\xf9\xd5\xd7\xca\xd5\xd4\xdf\xd4\xce\xba",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(71) / L(40)
    "\x4e\x49\x49\x1d\x4d\x1a\x4e\x4e\x4a\x1b\x4d\x41\x4b\x19\x48\x40\x1e\x1e\x4d\x40\x1c\x49\x4c\x19\x1d\x4a\x4a\x4c\x4d\x4a\x1c\x49\x41\x40\x1c\x1e\x4e\x1b\x4e\x48\x78\xdb\xdc\x3d\xd5\x7e\x1b\x38\x42",
    // "kSecMatchLimit" / M(Xor4) / S(51) / L(14)
    "\x5b\x63\x55\x53\x7d\x51\x44\x53\x58\x7c\x59\x5d\x59\x44\x30\x14",
    // "OpenSSL_add_all_digests" / M(Rot) / S(123) / L(23)
    "\xca\xeb\xe0\xe9\xce\xce\xc7\xda\xdc\xdf\xdf\xda\xdc\xe7\xe7\xda\xdf\xe4\xe2\xe0\xee\xef\xee\x7b\x0a\xa1\xfe\x8d\xbf\x5a\x31\xaf",
    // "" / M(None) / S(0) / L(0)
    "\x49\xe8\xed\xcd\x8d\xe5\x13\x90\x95\x91\x36\x98\xcb\x78\x85\xdd\x34\xfe\x78\xae\x3f\x7c\xcc\x43\xae\xe1\x7e\x03\x2a\xb5\xab\x1d",
    // "CFBundleCopyBundleURL" / M(Xor2) / S(156) / L(21)
    "\xc9\xcc\xc8\xff\xe4\xee\xe6\xef\xc9\xe5\xfa\xf3\xc8\xff\xe4\xee\xe6\xef\xdf\xd8\xc6\x8a",
    // "CFArrayAppendValue" / M(Rot) / S(160) / L(18)
    "\xe3\xe6\xe1\x12\x12\x01\x19\xe1\x10\x10\x05\x0e\x04\xf6\x01\x0c\x15\x05\xa0",
    // "sel_registerName" / M(Xor4) / S(204) / L(16)
    "\xff\xe9\xe0\xd3\xfe\xe9\xeb\xe5\xff\xf8\xe9\xfe\xc2\xed\xe1\xe9\x8c",
    // "Contents" / M(Rot) / S(131) / L(8)
    "\xc6\xf2\xf1\xf7\xe8\xf1\xf7\xf6\x83\xee\xe5\xe5\x06\x46\x03\xfc",
    // "SHA1" / M(Xor4) / S(37) / L(4)
    "\x03\x18\x11\x61\x50\x30\x10\x8b\x8e\xad\x91\xb5\xaa\xaa\x55\xb0",
    // "_MASReceipt/receipt" / M(Xor1) / S(138) / L(19)
    "\xd5\xc7\xcb\xd9\xd8\xef\xe9\xef\xe3\xfa\xfe\xa5\xf8\xef\xe9\xef\xe3\xfa\xfe\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x83\x59\xb8\x7c\x24\x79\xd9\x95\x37\x07\x5b\x5f\x20\xf3\x96\xfe\xa9\xac\xfc\xe2\x2b\x70\xd9\x2c\x64\x94\x14\x11\xc0\x99\xb7\xff",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor3) / S(21) / L(39)
    "\x06\x03\x10\x17\x09\x06\x37\x20\x24\x31\x20\x03\x37\x2a\x28\x03\x2c\x29\x20\x16\x3c\x36\x31\x20\x28\x17\x20\x35\x37\x20\x36\x20\x2b\x31\x24\x31\x2c\x2a\x2b\x45\x37\x09\x1b\x34\xf3\xf9\x4e\x4a",
    // "CFBundleShortVersionString" / M(Xor2) / S(87) / L(26)
    "\x37\x32\x36\x01\x1a\x10\x18\x11\x27\x1c\x1b\x06\x00\x22\x11\x06\x07\x1d\x1b\x1a\x27\x00\x06\x1d\x1a\x13\x74\xe6\x5f\xe7\x80\x2c\x97\xd2\x99",
    // "" / M(None) / S(0) / L(0)
    "\x5a\x2e\x3c\x6c\x58\x91\x47\x36\x54\xcb\xb1\x5c\x50\x5c\x6a\x82\x7c\xea\xee\x19\xf4\x11\x65\x84\xfe\x89\x3f\xb8\x20\x48\x4e\x00",
    // "CFDictionaryCreateMutable" / M(Rot) / S(57) / L(25)
    "\x7c\x7f\x7d\xa2\x9c\xad\xa2\xa8\xa7\x9a\xab\xb2\x7c\xab\x9e\x9a\xad\x9e\x86\xae\xad\x9a\x9b\xa5\x9e\x39\xc2\x18\xf0\x82\x75\xe3\xfd\x9a",
    // "" / M(None) / S(0) / L(0)
    "\xb3\x90\xad\xc3\xa2\x39\x93\x27\x30\x12\xf3\x12\x7b\xc7\xc6\xe0\x95\x8a\xd1\x08\x79\x6f\xb1\x59\x7b\xac\xbe\x94\xee\x0d\xa3\x2d",
    // "SecKeychainSearchCopyNext" / M(Xor2) / S(11) / L(25)
    "\x7a\x4c\x4a\x62\x4c\x50\x4a\x41\x48\x40\x47\x7a\x4c\x48\x5b\x4a\x41\x6a\x46\x59\x50\x67\x4c\x51\x5d\x29\x1b\x14\x7d\xe3\xad\x02\xa6\xd7",
    // "SecKeychainOpen" / M(Xor2) / S(23) / L(15)
    "\x54\x62\x64\x4c\x62\x7e\x64\x6f\x66\x6e\x69\x48\x77\x62\x69\x07",
    // "IORegistryEntryGetParentEntry" / M(Xor2) / S(183) / L(29)
    "\xd8\xde\xc3\xf4\xf6\xf8\xe2\xe5\xe3\xe8\xd4\xff\xe5\xe3\xe8\xd6\xf4\xe5\xc1\xf0\xe3\xf4\xff\xe5\xd4\xff\xe5\xe3\xe8\x91\x80\x2c\xbf\x4d\x5e\xb2\x86\x64",
    // "" / M(None) / S(0) / L(0)
    "\x9a\x9f\x69\x3e\xe0\xa2\xbb\x9b\x54\x64\x47\xeb\x97\xf6\xd2\xa4\x0d\x93\xf9\x8b\x59\x40\x5d\x85\xf5\x0e\x5a\x64\x58\xf0\x6c\x95",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x8f\xca\x90\x30\xcf\x0e\xf0\x7c\x3e\x0f\xed\x15\x70\xfc\xf5\xb6\xaf\x3a\x8a\xb5\xb2\xc1\x05\xe1\xd9\x73\x50\x72\xeb\x8d\x63",
    // "" / M(None) / S(0) / L(0)
    "\xe7\x09\xdc\xaa\xe0\x62\xa8\x18\xdc\x49\x51\xcf\x8b\xab\xc4\xf0\x2d\x80\xf0\x08\x7d\x80\x08\x5a\xa7\xc0\xb3\x85\xee\xab\x48\x64",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(38) / L(19)
    "\x6a\x07\x02\x0b\x6d\x55\x57\x46\x6d\x57\x4a\x46\x6d\x50\x4b\x6d\x7d\x70\x78\x32",
    // "CFDataGetLength" / M(Xor3) / S(205) / L(15)
    "\x9e\x9b\x99\xbc\xa9\xbc\x9a\xb8\xa9\x91\xb8\xb3\xba\xa9\xb5\xdd",
    // "BIO_s_mem" / M(Rot) / S(154) / L(9)
    "\xdc\xe3\xe9\xf9\x0d\xf9\x07\xff\x07\x9a\x1c\xa3\x0c\x57\x0e\x10",
    // "BIO_write" / M(Xor3) / S(39) / L(9)
    "\x75\x7e\x78\x68\x40\x45\x5e\x43\x52\x37\x9d\x0f\xa6\x97\x93\x19",
    // "glob_b" / M(Xor1) / S(253) / L(6)
    "\x9a\x91\x92\x9f\xa2\x9f\xfd\xf7\x4b\x55\x7e\x9d\x67\x6e\xf3\x8b",
    // "" / M(None) / S(0) / L(0)
    "\x61\xc5\x9c\x46\xe5\x51\x30\xc6\x82\xba\x99\xad\x34\x40\xfc\x86\x32\xb3\x9c\xed\xfc\xe1\x1b\x83\xa8\x16\x0e\x99\x7c\x57\xe7\x16",
    // "CFDataCreate" / M(Xor3) / S(206) / L(12)
    "\x9d\x98\x9a\xbf\xaa\xbf\x9d\xac\xbb\xbf\xaa\xbb\xde\xad\x3e\x0a",
    // "1.0.5" / M(Xor3) / S(190) / L(5)
    "\xff\xe0\xfe\xe0\xfb\xce\x06\xbe\x92\x4e\x18\xd1\x21\x14\xc2\xa7",
    // "glob_b" / M(Xor3) / S(96) / L(6)
    "\x17\x1c\x1f\x12\x2f\x12\x70\xdc\x4b\x52\x6c\xa5\x0b\x37\x95\x1b",
    // "OBJ_txt2obj" / M(Xor4) / S(160) / L(11)
    "\x4f\x42\x4a\x5f\x74\x78\x74\x32\x6f\x62\x6a\x00\xfe\x45\x76\x99",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(35) / L(29)
    "\x59\x71\x74\x66\x4b\x42\x57\x76\x5b\x51\x46\x5b\x5d\x5c\x53\x40\x4b\x79\x57\x4b\x71\x53\x5e\x5e\x70\x53\x51\x59\x41\x32\xb6\x6f\x78\xae\xde\x8d\x55\x4a",
    // "BIO_s_mem" / M(Rot) / S(179) / L(9)
    "\xf5\xfc\x02\x12\x26\x12\x20\x18\x20\xb3\x4a\xe8\xb6\x6f\x45\x4f",
    // "RTLD_MAIN_ONLY" / M(Xor1) / S(28) / L(14)
    "\x4e\x48\x50\x58\x43\x51\x5d\x55\x52\x43\x53\x52\x50\x45\x1c\x52",
    // "PKCS7_get0_signers" / M(Xor3) / S(134) / L(18)
    "\xc9\xd2\xda\xca\xae\xc6\xfe\xfc\xed\xa9\xc6\xea\xf0\xfe\xf7\xfc\xeb\xea\x99",
    // "X509_STORE_free" / M(Rot) / S(240) / L(15)
    "\x48\x25\x20\x29\x4f\x43\x44\x3f\x42\x35\x4f\x56\x62\x55\x55\xf0",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(131) / L(24)
    "\xe1\xe4\xe0\xd7\xcc\xc6\xce\xc7\xf7\xcc\xce\xcd\xc3\xc6\xe7\xda\xc7\xc1\xd7\xd6\xc3\xc0\xce\xc7\xa2\x08\xc6\xbb\x5e\x6a\x0e\xce\xcc",
    // "" / M(None) / S(0) / L(0)
    "\xc7\x97\x35\xdd\x76\x83\xf3\xa6\x4e\x3d\x6b\x90\x83\x27\x3e\x24\x18\x9d\x77\x55\x2f\xf1\x7d\x4a\xfe\x05\x11\x07\xda\xac\xd2\xdb",
    // "SHA1_Final" / M(Xor1) / S(202) / L(10)
    "\x99\x82\x8b\xfb\x95\x8c\xa3\xa4\xab\xa6\xca\x17\x77\x1b\x8e\x39",
    // "_MASReceipt" / M(Xor4) / S(55) / L(11)
    "\x2f\x3d\x31\x23\x22\x15\x13\x15\x19\x00\x04\x70\x58\x28\x50\x8f",
    // "PKCS7_free" / M(Xor1) / S(76) / L(10)
    "\x1c\x07\x0f\x1f\x7b\x13\x2a\x3e\x29\x29\x4c\x7f\x76\xac\x94\xf7",
    // "objc_getClass" / M(Xor4) / S(127) / L(13)
    "\x9f\x92\x9a\x93\xaf\x97\x95\x84\xb3\x9c\x91\x83\x83\xf0\xdd\xb3",
    // "" / M(None) / S(0) / L(0)
    "\x6b\x5b\x41\xa3\xbd\xd5\x48\x0e\x9a\xff\x76\xa7\xb1\x2a\x06\x5d\x18\x09\x88\x74\x7c\x3a\x44\xeb\x2b\xd9\x9c\xd2\xc6\x1e\x5e\x3f",
    // "Contents" / M(Rot) / S(126) / L(8)
    "\xc1\xed\xec\xf2\xe3\xec\xf2\xf1\x7e\x66\xa5\x2c\x38\xaf\x62\xcb",
    // "X509_STORE_new" / M(Xor4) / S(123) / L(14)
    "\xe8\x85\x80\x89\xef\xe3\xe4\xff\xe2\xf5\xef\xde\xd5\xc7\xb0\xf3",
    // "Apple Root CA" / M(Xor4) / S(15) / L(13)
    "\xb1\x80\x80\x9c\x95\xd0\xa2\x9f\x9f\x84\xd0\xb3\xb1\xf0\x92\xed",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(133) / L(48)
    "\xaa\xd6\xfc\xf6\xf1\xe0\xe8\xaa\xc9\xec\xe7\xf7\xe4\xf7\xfc\xaa\xc3\xf7\xe4\xe8\xe0\xf2\xea\xf7\xee\xf6\xaa\xcc\xca\xce\xec\xf1\xab\xe3\xf7\xe4\xe8\xe0\xf2\xea\xf7\xee\xaa\xcc\xca\xce\xec\xf1\x85",
    // "" / M(None) / S(0) / L(0)
    "\xa2\x6c\x1a\xdb\x75\x13\x1e\xbb\x84\x6d\xcc\xba\x74\x43\x06\x12\xda\x37\x6b\x07\xe6\xb3\x7d\x2c\xb9\xd4\x89\xe2\x5f\x34\xf0\xdf",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(167) / L(39)
    "\xe4\xe1\xf2\xf5\xeb\xe4\xd5\xc2\xc6\xd3\xc2\xe1\xd5\xc8\xca\xe1\xce\xcb\xc2\xf4\xde\xd4\xd3\xc2\xca\xf5\xc2\xd7\xd5\xc2\xd4\xc2\xc9\xd3\xc6\xd3\xce\xc8\xc9\xa7\x47\xbd\x95\xcd\xfb\xbb\xe0\x37",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(227) / L(24)
    "\x6c\x36\x30\x31\x6c\x2f\x2a\x21\x6c\x2f\x2a\x21\x10\x3a\x30\x37\x26\x2e\x6d\x27\x3a\x2f\x2a\x21\x43\xea\xc0\xed\x08\xa7\xc1\x5e\xeb",
    // "" / M(None) / S(0) / L(0)
    "\x7a\x08\xdb\xf6\xb6\xc3\x56\x05\x2f\x51\x09\x74\x53\x91\x6e\xff\x20\xc7\x49\xe3\xbf\x2a\x4f\xc3\xf2\x12\xff\x7f\x5d\x5a\x64\x7f",
    // "kSecClassCertificate" / M(Xor3) / S(80) / L(20)
    "\x0e\x36\x00\x06\x26\x09\x04\x16\x16\x26\x00\x17\x11\x0c\x03\x0c\x06\x04\x11\x00\x65",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(103) / L(23)
    "\x14\x0c\x15\x22\x24\x22\x2e\x37\x33\x15\x22\x21\x35\x22\x34\x2f\x15\x22\x36\x32\x22\x34\x33\x47\x09\xd3\x92\x2d\x7e\x1b\xd3\x24",
    // "" / M(None) / S(0) / L(0)
    "\x3e\x7a\xb1\xff\xef\x75\xa4\xda\x16\xa3\xbd\x02\xf3\x53\xdc\xf6\xe2\x76\xe2\xe0\xd6\x95\x7b\xfb\xc9\x60\x45\xb6\xd3\xe1\x61\x54",
    // "d2i_PKCS7_bio" / M(Xor3) / S(121) / L(13)
    "\xed\xbb\xe0\xd6\xd9\xc2\xca\xda\xbe\xd6\xeb\xe0\xe6\x89\x69\xc3",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(149) / L(54)
    "\xba\xc6\xec\xe6\xe1\xf0\xf8\xba\xd9\xfc\xf7\xe7\xf4\xe7\xec\xba\xd3\xe7\xf4\xf8\xf0\xe2\xfa\xe7\xfe\xe6\xba\xc6\xf0\xf6\xe0\xe7\xfc\xe1\xec\xbb\xf3\xe7\xf4\xf8\xf0\xe2\xfa\xe7\xfe\xba\xc6\xf0\xf6\xe0\xe7\xfc\xe1\xec\x95",
    // "IOMACAddress" / M(Xor2) / S(73) / L(12)
    "\x10\x16\x14\x18\x1a\x18\x3d\x3d\x2b\x3c\x2a\x2a\x59\xbb\x34\x3a",
    // "" / M(None) / S(0) / L(0)
    "\x3b\x65\xb6\x50\x9d\x1b\x22\x2a\xe4\xd3\x01\xdf\x53\xba\x47\xf7\x48\x9f\x39\xa7\x87\x82\x1d\xea\x3f\x4b\x49\x9e\xd7\x88\xb8\xeb",
    // "kSecClass" / M(Xor3) / S(255) / L(9)
    "\x64\x5c\x6a\x6c\x4c\x63\x6e\x7c\x7c\x0f\x62\x86\xa9\x04\x79\xd5",
    // "CFBundleIdentifier" / M(Xor4) / S(172) / L(18)
    "\x87\x82\x86\xb1\xaa\xa0\xa8\xa1\x8d\xa0\xa1\xaa\xb0\xad\xa2\xad\xa1\xb6\xc4",
    // "ASN1_get_object" / M(Xor1) / S(185) / L(15)
    "\xf8\xea\xf7\x88\xe6\xde\xdc\xcd\xe6\xd6\xdb\xd3\xdc\xda\xcd\xb9",
    // "alloc" / M(Rot) / S(229) / L(5)
    "\x46\x51\x51\x54\x48\xe5\xe4\x64\xe3\x21\x4b\x9d\xb1\x9b\xda\x76",
    // "" / M(None) / S(0) / L(0)
    "\xbf\xea\x01\x13\xff\x21\xae\xeb\x2d\x43\xa6\x2f\x0d\xf8\xdd\xdf\x20\xf9\x6d\x34\x0a\xd8\x9c\x4f\xa6\xcb\x4f\x89\x1b\x01\x7c\xf9",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(131) / L(29)
    "\xc2\xea\xef\xfd\xd0\xd9\xcc\xed\xc0\xca\xdd\xc0\xc6\xc7\xc8\xdb\xd0\xe2\xcc\xd0\xea\xc8\xc5\xc5\xeb\xc8\xca\xc2\xda\xa9\xe3\x7c\x9c\x97\xab\xd6\x29\x30",
    // "" / M(None) / S(0) / L(0)
    "\xa5\xbd\x39\x24\xac\x4e\x19\x69\x7e\x40\x3a\x52\x78\x45\x4e\xef\xa5\x7d\x4f\x4d\x6c\xb6\x6e\xc5\x45\x43\xda\xdb\x75\x5f\xd1\xc3",
    // "CFDictionarySetValue" / M(Xor2) / S(37) / L(20)
    "\x73\x76\x74\x59\x53\x44\x59\x5f\x5e\x51\x42\x49\x63\x55\x44\x66\x51\x5c\x45\x55\x30",
    // "CC_SHA1_Final" / M(Xor2) / S(65) / L(13)
    "\x12\x12\x0e\x02\x19\x10\x60\x0e\x17\x38\x3f\x30\x3d\x51\x9c\xc9",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x65\xf5\xbb\x80\x98\x90\x30\x53\xf0\xe5\xbc\x6c\xe5\xe0\xe0\x86\x0b\xaf\x40\x8c\x1c\x27\xe1\xf9\xd3\x2e\xf1\xce\x81\xd9\x4d",
    // "" / M(None) / S(0) / L(0)
    "\xec\x4a\x6d\xbc\xd8\x68\x0e\xc5\xf6\x44\x9e\x2c\x2a\x52\x9e\x63\x4a\x07\xac\x83\x91\x4f\xea\x77\x79\xaa\x4d\xc4\xbf\x27\x21\x8e",
    // "X509_digest" / M(Xor1) / S(56) / L(11)
    "\x60\x0d\x08\x01\x67\x5c\x51\x5f\x5d\x4b\x4c\x38\x05\x92\x46\x5b",
    // "SHA1_Update" / M(Xor4) / S(90) / L(11)
    "\xf3\xe8\xe1\x91\xff\xf5\xd0\xc4\xc1\xd4\xc5\xa0\x7d\x41\xb9\x5a",
    // "X509_get_ext_by_OBJ" / M(Rot) / S(26) / L(19)
    "\x72\x4f\x4a\x53\x79\x81\x7f\x8e\x79\x7f\x92\x8e\x79\x7c\x93\x79\x69\x5c\x64\x1a",
    // "BIO_free" / M(Xor4) / S(46) / L(8)
    "\xa2\xa9\xaf\xbf\x86\x92\x85\x85\xe0\x11\x27\x33\xd7\x36\x29\x21",
    // "%02X:" / M(Xor4) / S(52) / L(5)
    "\x65\x70\x72\x18\x7a\x40\x1e\x9f\xb4\x20\xb2\x27\x32\x07\x8a\xb3",
    // "CFArrayCreateMutable" / M(Xor1) / S(123) / L(20)
    "\x38\x3d\x3a\x09\x09\x1a\x02\x38\x09\x1e\x1a\x0f\x1e\x36\x0e\x0f\x1a\x19\x17\x1e\x7b",
    // "SHA1_Final" / M(Xor4) / S(174) / L(10)
    "\xb3\xa8\xa1\xd1\xbf\xa6\x89\x8e\x81\x8c\xe0\x86\xa5\x01\xdb\x7f",
    // "setjmp" / M(Xor3) / S(75) / L(6)
    "\x28\x3e\x2f\x31\x36\x2b\x5b\x01\x5d\x80\x6d\xa8\x29\x18\xf8\xca",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(19) / L(36)
    "\x50\x55\x51\x66\x7d\x77\x7f\x76\x54\x76\x67\x45\x72\x7f\x66\x76\x55\x7c\x61\x5a\x7d\x75\x7c\x57\x7a\x70\x67\x7a\x7c\x7d\x72\x61\x6a\x58\x76\x6a\x13",
    // "%02x" / M(Xor3) / S(225) / L(4)
    "\xd4\xc1\xc3\x89\xf1\xb3\x8f\xbe\x3f\x33\xde\xec\x64\x27\xb9\x2c",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(118) / L(40)
    "\xa0\xa7\xa7\xd3\xa3\xd4\xa0\xa0\xa4\xd5\xa3\xaf\xa5\xd7\xa6\xae\xd0\xd0\xa3\xae\xd2\xa7\xa2\xd7\xd3\xa4\xa4\xa2\xa3\xa4\xd2\xa7\xaf\xae\xd2\xd0\xa0\xd5\xa0\xa6\x96\x14\xb4\x66\x6f\x7e\xa3\x0a\x65",
    // "kSecMatchSearchList" / M(Xor4) / S(103) / L(19)
    "\x67\x5f\x69\x6f\x41\x6d\x78\x6f\x64\x5f\x69\x6d\x7e\x6f\x64\x40\x65\x7f\x78\x0c",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(174) / L(50)
    "\xce\xb2\x98\x92\x95\x84\x8c\xce\xad\x88\x83\x93\x80\x93\x98\xce\xa7\x93\x80\x8c\x84\x96\x8e\x93\x8a\x92\xce\xa0\x91\x91\xaa\x88\x95\xcf\x87\x93\x80\x8c\x84\x96\x8e\x93\x8a\xce\xa0\x91\x91\xaa\x88\x95\xe1",
    // "PKCS7_free" / M(Xor4) / S(163) / L(10)
    "\x60\x7b\x73\x63\x07\x6f\x56\x42\x55\x55\x30\x2a\xf0\x9f\xf0\x2b",
    // "" / M(None) / S(0) / L(0)
    "\xf9\xa0\x1d\x3f\xba\x8e\x42\x23\xc1\xa8\x93\x08\x8b\xd8\xf7\x82\x5a\x84\xa3\x0a\xc2\xb1\x2b\x5e\x50\xcc\x9e\x99\xae\x80\x83\xd2",
    // "sk_num" / M(Xor3) / S(126) / L(6)
    "\xfd\xe5\xd1\xe0\xfb\xe3\x8e\x5e\x0c\x8c\xad\x66\x0c\x7e\xb2\xc4",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(109) / L(59)
    "\xc2\xc5\xce\xc5\xb1\xce\xc1\xb6\xce\xc2\xc2\xce\xc6\xb7\xce\xc1\xcd\xce\xc7\xb5\xce\xc4\xcc\xce\xb2\xb2\xce\xc1\xcc\xce\xb0\xc5\xce\xc0\xb5\xce\xb1\xc6\xce\xc6\xc0\xce\xc1\xc6\xce\xb0\xc5\xce\xcd\xcc\xce\xb0\xb2\xce\xc2\xb7\xce\xc2\xc4\xf4\xe1\x52\xe2\xc9\x46\xf7\xd4\x37",
    // "sk_value" / M(Xor1) / S(52) / L(8)
    "\x47\x5f\x6b\x42\x55\x58\x41\x51\x34\x89\x1d\xd7\x43\xfc\x3d\xc5",
    // "CFDataAppendBytes" / M(Xor2) / S(181) / L(17)
    "\xe4\xe1\xe3\xc6\xd3\xc6\xe6\xd7\xd7\xc2\xc9\xc3\xe5\xde\xd3\xc2\xd4\xa7",
    // "" / M(None) / S(0) / L(0)
    "\x83\xf6\x98\x22\xc6\xc6\x6b\xc8\xac\x28\xe0\x87\x8d\x39\x4b\x1b\x5a\x80\x25\x25\x79\xa1\x0b\x27\x1d\x27\xa7\x97\xc8\x7b\xb8\xf8",
    // "CFNumberCreate" / M(Xor2) / S(232) / L(14)
    "\xbb\xbe\xb6\x8d\x95\x9a\x9d\x8a\xbb\x8a\x9d\x99\x8c\x9d\xf8\xbd",
    // "IOObjectRelease" / M(Xor4) / S(79) / L(15)
    "\xb9\xbf\xbf\x92\x9a\x95\x93\x84\xa2\x95\x9c\x95\x91\x83\x95\xf0",
    // "CFDateFormatterSetFormat" / M(Xor1) / S(136) / L(24)
    "\xcb\xce\xcc\xe9\xfc\xed\xce\xe7\xfa\xe5\xe9\xfc\xfc\xed\xfa\xdb\xed\xfc\xce\xe7\xfa\xe5\xe9\xfc\x88\xb1\x27\x59\x04\x88\xf5\xe5\xc5",
    // "CC_SHA1" / M(Xor4) / S(203) / L(7)
    "\xf3\xf3\xef\xe3\xf8\xf1\x81\xb0\x42\xf8\x60\x25\xd1\x02\x76\x2a",
    // "%02X:" / M(Xor2) / S(208) / L(5)
    "\xe5\xf0\xf2\x98\xfa\xc0\x2e\x6c\x52\xa2\x18\xcc\x9a\x33\xb4\x70",
    // "" / M(None) / S(0) / L(0)
    "\xfb\x6b\x27\x04\x4a\xbd\x36\x3e\x29\x22\xe4\x9c\x37\x8a\x52\x29\xaf\x76\xf2\x16\xb7\x07\x1a\x8a\xfa\x2d\xfa\xc2\x7b\xad\x91\x6e",
    // "X509_digest" / M(Rot) / S(6) / L(11)
    "\x5e\x3b\x36\x3f\x65\x6a\x6f\x6d\x6b\x79\x7a\x06\x2e\x38\x06\xef",
    // "" / M(None) / S(0) / L(0)
    "\xfe\xbd\xa3\xf0\x02\xc1\xc8\x31\xd1\xaf\x33\x63\xe9\x04\x0d\x93\x2c\x79\x9d\x05\x00\x0a\x67\x8d\x6c\x6a\x61\x5a\xbb\x75\x76\xf8",
    // "" / M(None) / S(0) / L(0)
    "\x50\x34\x69\xd4\xa0\x4e\x1c\x1c\x4a\x78\x79\xb2\x06\x0f\x23\x6d\xc0\x90\x61\x20\xf1\x1c\xf7\x06\x6c\x6e\x87\x2d\x21\x7a\x15\xb5",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(139) / L(14)
    "\xc9\xcf\xd7\xdf\xc4\xd6\xda\xd2\xd5\xc4\xd4\xd5\xd7\xc2\x9b\x4f",
    // "%02x" / M(Xor4) / S(150) / L(4)
    "\x45\x50\x52\x18\x60\x98\x91\xbb\x68\xe2\xc6\xc3\xe5\x50\xef\xc4",
    // "ASN1_OBJECT_free" / M(Xor3) / S(189) / L(16)
    "\x8f\x9d\x80\xff\x91\x81\x8c\x84\x8b\x8d\x9a\x91\xa8\xbc\xab\xab\xce",
    // "" / M(None) / S(0) / L(0)
    "\x65\xbb\xea\x37\xfd\xfd\x6f\xbf\xb8\x0c\xa4\xe0\x18\x4a\x95\x66\xfd\xf2\xd3\x8e\x54\xfb\xe3\x9b\xcf\xad\xea\x68\x50\x1e\xac\x8b",
    // "sha1" / M(Xor1) / S(133) / L(4)
    "\xf6\xed\xe4\xb4\x85\x4e\xc0\x36\x1f\x0d\x90\x3a\xd2\x4a\x54\x88",
    // "dlsym" / M(Xor3) / S(226) / L(5)
    "\x96\x9e\x81\x8b\x9f\xf2\x5a\xaf\xc3\x25\x1c\x65\x21\x30\x8b\x1c",
    // "strncmp" / M(Xor4) / S(180) / L(7)
    "\x33\x34\x32\x2e\x23\x2d\x30\x40\xc1\xae\x43\x1b\x6e\x9a\xfb\x17",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(190) / L(32)
    "\x07\x07\x07\x07\x59\x53\x59\x33\x33\x59\x53\x59\x1a\x1a\x59\x2a\x59\x36\x36\x59\x44\x59\x13\x13\x59\x44\x59\x0d\x0d\x59\x24\x59\x7e",
    // "" / M(None) / S(0) / L(0)
    "\xbf\x6c\x0d\x26\xf7\xd8\xd8\x5a\x93\x6e\x4c\x63\xc7\xfc\x23\xd1\x9e\xd9\x43\xb9\x29\xf6\x09\xda\xfb\x7d\x2a\xd7\x05\x97\xe6\x5e",
    // "" / M(None) / S(0) / L(0)
    "\x79\x35\x93\xb4\x83\x99\x42\x2b\x54\xfa\x4a\x9b\xd1\xec\x91\xf5\xb2\x6c\x3e\x79\x19\x15\xa4\x61\xf2\xd8\x93\x43\x55\x3e\x17\x67",
    // "PKCS7_get0_signers" / M(Xor2) / S(116) / L(18)
    "\x37\x2c\x24\x34\x50\x38\x00\x02\x13\x57\x38\x14\x0e\x00\x09\x02\x15\x14\x67",
    // "CFBundleGetIdentifier" / M(Xor2) / S(162) / L(21)
    "\xf7\xf2\xf6\xc1\xda\xd0\xd8\xd1\xf3\xd1\xc0\xfd\xd0\xd1\xda\xc0\xdd\xd2\xdd\xd1\xc6\xb4",
    // "d2i_PKCS7_bio" / M(Xor3) / S(244) / L(13)
    "\x60\x36\x6d\x5b\x54\x4f\x47\x57\x33\x5b\x66\x6d\x6b\x04\x2b\xcd",
    // "X509_free" / M(Xor4) / S(92) / L(9)
    "\x98\xf5\xf0\xf9\x9f\xa6\xb2\xa5\xa5\xc0\xe6\x65\x37\xe7\xa7\xa9",
    // "SecKeychainOpen" / M(Xor1) / S(98) / L(15)
    "\x31\x07\x01\x29\x07\x1b\x01\x0a\x03\x0b\x0c\x2d\x12\x07\x0c\x62",
    // "EVP_get_digestbyname" / M(Xor3) / S(96) / L(20)
    "\x30\x23\x25\x2a\x12\x10\x01\x2a\x11\x1c\x12\x10\x06\x01\x17\x0c\x1b\x14\x18\x10\x75",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(30) / L(48)
    "\x91\xed\xc7\xcd\xca\xdb\xd3\x91\xf2\xd7\xdc\xcc\xdf\xcc\xc7\x91\xf8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\xcd\x91\xf7\xf1\xf5\xd7\xca\x90\xd8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\x91\xf7\xf1\xf5\xd7\xca\xbe",
    // "CFReadStreamOpen" / M(Xor4) / S(92) / L(16)
    "\x5f\x5a\x4e\x79\x7d\x78\x4f\x68\x6e\x79\x7d\x71\x53\x6c\x79\x72\x1c",
    // "kSecReturnRef" / M(Xor2) / S(179) / L(13)
    "\xc8\xf0\xc6\xc0\xf1\xc6\xd7\xd6\xd1\xcd\xf1\xc6\xc5\xa3\xdd\xb6",
    // "" / M(None) / S(0) / L(0)
    "\x1a\x52\x19\x2c\x2a\x36\x40\xa8\x26\xd6\x7b\xb0\xdd\xf3\x36\x99\x8b\x51\x44\xc2\x41\xa8\x46\x12\x1b\x40\x9b\x56\x6f\x0c\xeb\xab",
    // "" / M(None) / S(0) / L(0)
    "\xd3\x73\x20\x21\x0f\x9d\xbf\x18\xe0\xec\x34\x56\xd3\xfb\x1b\xe0\xbd\x52\xa7\xff\xcf\x0b\x7c\x6e\x7e\xa5\x0c\x08\x26\xa2\xe9\x0d",
    // "objc_msgSend" / M(Xor3) / S(165) / L(12)
    "\xda\xd7\xdf\xd6\xea\xd8\xc6\xd2\xe6\xd0\xdb\xd1\xb5\xa8\xf2\x83",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(111) / L(40)
    "\x96\x91\x91\xc5\x95\xc2\x96\x96\x92\xc3\x95\x99\x93\xc1\x90\x98\xc6\xc6\x95\x98\xc4\x91\x94\xc1\xc5\x92\x92\x94\x95\x92\xc4\x91\x99\x98\xc4\xc6\x96\xc3\x96\x90\xa0\x3c\x8f\x37\xaf\xea\xa6\xe6\x36",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(97) / L(25)
    "\x50\x4f\x53\x4f\x59\x55\x51\x4f\x50\x50\x52\x57\x52\x54\x4f\x50\x51\x51\x4f\x57\x4f\x50\x50\x4f\x50\x61\xa7\x91\xce\xcc\x77\xb9\xbf\xee",
    // "kSecMatchLimitAll" / M(Xor1) / S(232) / L(17)
    "\x83\xbb\x8d\x8b\xa5\x89\x9c\x8b\x80\xa4\x81\x85\x81\x9c\xa9\x84\x84\xe8",
    // "" / M(None) / S(0) / L(0)
    "\xf6\x8e\x7b\x86\x20\x3a\x7e\xab\x94\xf1\x1b\x42\xd8\x3a\x95\xac\xc2\xf6\x49\x66\xe5\x49\xc2\xc6\x7d\x91\xa5\x89\x7d\x85\x9a\x35",
    // "ASN1_get_object" / M(Xor4) / S(105) / L(15)
    "\xd1\xc3\xde\xa1\xcf\xf7\xf5\xe4\xcf\xff\xf2\xfa\xf5\xf3\xe4\x90",
    // "SecKeychainOpen" / M(Xor4) / S(224) / L(15)
    "\x53\x65\x63\x4b\x65\x79\x63\x68\x61\x69\x6e\x4f\x70\x65\x6e\x00",
    // "globfree" / M(Rot) / S(67) / L(8)
    "\xaa\xaf\xb2\xa5\xa9\xb5\xa8\xa8\x43\x9b\x22\x6d\x79\x62\x77\x16",
    // "Contents/_MASReceipt" / M(Rot) / S(163) / L(20)
    "\xe6\x12\x11\x17\x08\x11\x17\x16\xd2\x02\xf0\xe4\xf6\xf5\x08\x06\x08\x0c\x13\x17\xa3",
    // "dlsym" / M(Xor3) / S(229) / L(5)
    "\x91\x99\x86\x8c\x98\xf5\x74\xde\x01\x27\xd6\xe2\x27\x9e\xd0\xb9",
    // "" / M(None) / S(0) / L(0)
    "\x57\x43\x3b\x90\x23\xe1\x4a\x11\x90\xb1\xb5\x69\x26\x33\xac\xb8\x27\x7b\x62\x9d\x24\x63\x73\xc1\x37\x38\x4a\x8f\x16\x9d\x61\x83",
    // "CFReadStreamCreateWithFile" / M(Rot) / S(4) / L(26)
    "\x47\x4a\x56\x69\x65\x68\x57\x78\x76\x69\x65\x71\x47\x76\x69\x65\x78\x69\x5b\x6d\x78\x6c\x4a\x6d\x70\x69\x04\x03\xdc\x8a\xc9\x0c\xb0\x7d\xd9",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(154) / L(23)
    "\xe9\xf1\xe8\xdf\xd9\xdf\xd3\xca\xce\xe8\xdf\xdc\xc8\xdf\xc9\xd2\xe8\xdf\xcb\xcf\xdf\xc9\xce\xba\x20\xa9\xad\x81\x5c\x00\x42\xd0",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(44) / L(59)
    "\x46\x41\x4a\x41\x35\x4a\x45\x32\x4a\x46\x46\x4a\x42\x33\x4a\x45\x49\x4a\x43\x31\x4a\x40\x48\x4a\x36\x36\x4a\x45\x48\x4a\x34\x41\x4a\x44\x31\x4a\x35\x42\x4a\x42\x44\x4a\x45\x42\x4a\x34\x41\x4a\x49\x48\x4a\x34\x36\x4a\x46\x33\x4a\x46\x40\x70\x47\xe4\x96\xd2\x22\xbe\xfc\x3c",
    // "" / M(None) / S(0) / L(0)
    "\x61\x69\x8d\x6e\x14\x62\xff\x09\xce\xce\x03\x47\x25\x5e\x52\xbc\x5a\x6d\x3e\xee\x6f\xfd\xd4\xd4\xe1\xd1\x03\xb5\xcc\xe7\x11\x86",
    // "CFStringCreateWithCString" / M(Xor3) / S(165) / L(25)
    "\x84\x81\x94\xb3\xb5\xae\xa9\xa0\x84\xb5\xa2\xa6\xb3\xa2\x90\xae\xb3\xaf\x84\x94\xb3\xb5\xae\xa9\xa0\xc7\x50\xe3\x58\x19\x4c\x0a\xd5\xc2",
    // "CFArrayGetCount" / M(Xor1) / S(152) / L(15)
    "\xdb\xde\xd9\xea\xea\xf9\xe1\xdf\xfd\xec\xdb\xf7\xed\xf6\xec\x98",
    // "%02x:" / M(Xor3) / S(131) / L(5)
    "\xb6\xa3\xa1\xeb\xa9\x93\x09\xcf\x28\xd0\xc0\x36\x14\x28\x06\x42",
    // "Apple Root CA" / M(Xor4) / S(69) / L(13)
    "\x11\x20\x20\x3c\x35\x70\x02\x3f\x3f\x24\x70\x13\x11\x50\x28\x55",
    // "objc_msgSend" / M(Rot) / S(68) / L(12)
    "\xb3\xa6\xae\xa7\xa3\xb1\xb7\xab\x97\xa9\xb2\xa8\x44\xf5\x1e\x36",
    // "globfree" / M(Xor3) / S(44) / L(8)
    "\x5b\x50\x53\x5e\x5a\x4e\x59\x59\x3c\xb5\x21\xa9\x2e\x1a\xcc\xe7",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(40) / L(66)
    "\x44\x38\x12\x18\x1f\x0e\x06\x44\x27\x02\x09\x19\x0a\x19\x12\x44\x2d\x19\x0a\x06\x0e\x1c\x04\x19\x00\x18\x44\x28\x04\x19\x0e\x2d\x04\x1e\x05\x0f\x0a\x1f\x02\x04\x05\x45\x0d\x19\x0a\x06\x0e\x1c\x04\x19\x00\x44\x28\x04\x19\x0e\x2d\x04\x1e\x05\x0f\x0a\x1f\x02\x04\x05\x6b",
    // "" / M(None) / S(0) / L(0)
    "\xe2\xe7\x66\xde\x0e\x4e\x65\x6b\x21\xf5\x5f\x35\xf4\x75\xed\x62\x57\x79\x8b\x61\xd0\x79\x71\xdb\x86\xa6\x08\x36\x54\xb1\xa4\x63",
    // "CFNumberCreate" / M(Xor2) / S(160) / L(14)
    "\xf3\xf6\xfe\xc5\xdd\xd2\xd5\xc2\xf3\xc2\xd5\xd1\xc4\xd5\xb0\x1d",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(190) / L(37)
    "\x77\x72\x61\x66\x78\x77\x46\x51\x55\x40\x51\x77\x5b\x44\x4d\x75\x44\x44\x51\x5a\x50\x5d\x5a\x53\x64\x55\x40\x5c\x77\x5b\x59\x44\x5b\x5a\x51\x5a\x40\x34",
    // "com.iccir.Embrace" / M(Xor4) / S(84) / L(17)
    "\x8b\x87\x85\xc6\x81\x8b\x8b\x81\x9a\xc6\xad\x85\x8a\x9a\x89\x8b\x8d\xe8",
    // "" / M(None) / S(0) / L(0)
    "\xad\x0d\xe8\xef\x6a\xdd\xcf\xf7\x15\xc4\x62\x0e\x2d\x5a\x62\x06\x4a\x5d\xac\x96\x93\x60\xe2\x7f\x3a\x58\xf5\x1f\xe3\x88\x9c\x29",
    // "dlopen" / M(Xor2) / S(20) / L(6)
    "\x60\x68\x6b\x74\x61\x6a\x04\xb8\xec\xdc\x53\xc9\xe4\x86\x0f\x2e",
    // "X509_free" / M(Xor1) / S(139) / L(9)
    "\xd3\xbe\xbb\xb2\xd4\xed\xf9\xee\xee\x8b\x2e\xfb\x9e\x41\xdb\xb5",
    // "CFStringCreateWithCString" / M(Xor3) / S(204) / L(25)
    "\xad\xa8\xbd\x9a\x9c\x87\x80\x89\xad\x9c\x8b\x8f\x9a\x8b\xb9\x87\x9a\x86\xad\xbd\x9a\x9c\x87\x80\x89\xee\x7f\x69\x04\x5f\x30\x89\x1d\x28",
    // "" / M(None) / S(0) / L(0)
    "\xdf\x9a\xd3\xe6\x48\x92\xff\x51\x2e\x2d\xb4\x3a\xe5\x11\xf8\x07\x6b\xb0\x40\x35\xcd\x1c\xc7\x83\x2e\x4d\x1b\x83\x95\x3d\xf7\xc4",
    // "" / M(None) / S(0) / L(0)
    "\x96\x34\x59\xf3\x75\x51\x0d\x43\xf1\xfb\x55\x5e\x92\xc6\xb8\xb6\x29\xa7\x03\x5f\xf2\x5e\x32\x1a\x03\x9e\x8d\x54\x1c\xae\x43\xea",
    // "" / M(None) / S(0) / L(0)
    "\x3c\xb8\xe4\x87\x7e\x31\x4e\xb4\x86\x99\x32\x6d\x29\x68\x50\x13\x49\x7d\xf6\x40\x20\x49\x81\xab\xf8\xa0\x0e\xee\xd3\xdb\xf4\x3c",
    // "SHA1_Init" / M(Rot) / S(220) / L(9)
    "\x2f\x24\x1d\x0d\x3b\x25\x4a\x45\x50\xdc\xd2\x15\x77\x43\x98\x45",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(44) / L(57)
    "\x41\x3d\x17\x1d\x1a\x0b\x03\x41\x22\x07\x0c\x1c\x0f\x1c\x17\x41\x25\x0b\x17\x0d\x06\x0f\x07\x00\x1d\x41\x3d\x17\x1d\x1a\x0b\x03\x3c\x01\x01\x1a\x2d\x0b\x1c\x1a\x07\x08\x07\x0d\x0f\x1a\x0b\x1d\x40\x05\x0b\x17\x0d\x06\x0f\x07\x00\x6e\x95\xfb\x91\xee\xc5\x2a\xce\x9f",
    // "OpenSSL_add_all_digests" / M(Xor4) / S(84) / L(23)
    "\xcf\xf0\xe5\xee\xd3\xd3\xcc\xdf\xe1\xe4\xe4\xdf\xe1\xec\xec\xdf\xe4\xe9\xe7\xe5\xf3\xf4\xf3\x80\xd9\x32\x20\x93\xf4\x19\x15\x02",
    // "sk_value" / M(Xor2) / S(135) / L(8)
    "\xe4\xfc\xc8\xe1\xf6\xfb\xe2\xf2\x97\xd5\xe0\x89\xcb\xa1\xd5\x9e",
    // "globfree" / M(Xor1) / S(24) / L(8)
    "\x7f\x74\x77\x7a\x7e\x6a\x7d\x7d\x18\x6c\xaa\x93\x65\x56\x5a\x59",
    // "kCFTypeArrayCallBacks" / M(Xor3) / S(25) / L(21)
    "\x44\x6c\x69\x7b\x56\x5f\x4a\x6e\x5d\x5d\x4e\x56\x6c\x4e\x43\x43\x6d\x4e\x4c\x44\x5c\x2f",
    // "PKCS7_get0_signers" / M(Xor1) / S(123) / L(18)
    "\x2b\x30\x38\x28\x4c\x24\x1c\x1e\x0f\x4b\x24\x08\x12\x1c\x15\x1e\x09\x08\x7b",
    // "OBJ_txt2obj" / M(Xor1) / S(117) / L(11)
    "\x3a\x37\x3f\x2a\x01\x0d\x01\x47\x1a\x17\x1f\x75\x64\x68\xa9\xfa",
    // "" / M(None) / S(0) / L(0)
    "\x75\xbc\x2c\x25\x9d\x50\x66\x16\x5d\x85\x69\xb2\x3e\xe9\x99\x58\xa5\xec\x46\x2e\xda\x67\xf6\xff\x43\x28\x5b\x58\x94\xfe\x4e\x70",
    // "com.iccir.Embrace" / M(Xor3) / S(139) / L(17)
    "\xfe\xf2\xf0\xb3\xf4\xfe\xfe\xf4\xef\xb3\xd8\xf0\xff\xef\xfc\xfe\xf8\x9d",
    // "" / M(None) / S(0) / L(0)
    "\x3b\xac\x04\x77\x29\x67\x7a\xf1\xd7\x09\xfa\xf1\x6e\x19\xb5\xf9\x5c\xe6\x93\x7a\x46\xf5\xee\x04\x81\x7f\x20\x25\x26\xfe\x9c\x6c",
    // "" / M(None) / S(0) / L(0)
    "\xad\x5f\xb7\x4c\x7a\x7f\xa3\xac\x90\x5f\x9b\x5f\x21\x00\x11\x3e\xa7\xdb\x38\x6e\xd8\x50\xd4\xcf\xfe\xa5\xbf\xdd\xed\xfa\x4e\x2b",
    // "EVP_DigestFinal" / M(Rot) / S(189) / L(15)
    "\x02\x13\x0d\x1c\x01\x26\x24\x22\x30\x31\x03\x26\x2b\x1e\x29\xbd",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(123) / L(36)
    "\x84\x81\x85\xb2\xa9\xa3\xab\xa2\x80\xa2\xb3\x91\xa6\xab\xb2\xa2\x81\xa8\xb5\x8e\xa9\xa1\xa8\x83\xae\xa4\xb3\xae\xa8\xa9\xa6\xb5\xbe\x8c\xa2\xbe\xc7",
    // "kSecMatchSearchList" / M(Xor4) / S(212) / L(19)
    "\xfb\xc3\xf5\xf3\xdd\xf1\xe4\xf3\xf8\xc3\xf5\xf1\xe2\xf3\xf8\xdc\xf9\xe3\xe4\x90",
    // "sk_free" / M(Xor1) / S(82) / L(7)
    "\x21\x39\x0d\x34\x20\x37\x37\x52\xbe\x9c\x8d\xf9\x91\xfa\x94\x58",
    // "kSecMatchLimit" / M(Xor3) / S(101) / L(14)
    "\x1e\x26\x10\x16\x38\x14\x01\x16\x1d\x39\x1c\x18\x1c\x01\x75\x72",
    // "" / M(None) / S(0) / L(0)
    "\x79\x9a\x56\x0e\xf8\xb4\xe8\x1d\x3f\xb7\x42\xd7\x1d\x9d\x30\xb1\x81\x7b\x66\x48\x11\xa1\x1d\x82\xe5\x1d\xf6\x6b\x87\xef\xc3\x72",
    // "kSecMatchSubjectContains" / M(Rot) / S(150) / L(24)
    "\x01\xe9\xfb\xf9\xe3\xf7\x0a\xf9\xfe\xe9\x0b\xf8\x00\xfb\xf9\x0a\xd9\x05\x04\x0a\xf7\xff\x04\x09\x96\xe2\x21\x28\xe6\xd8\xc5\x32\x32",
    // "EVP_DigestUpdate" / M(Rot) / S(215) / L(16)
    "\x1c\x2d\x27\x36\x1b\x40\x3e\x3c\x4a\x4b\x2c\x47\x3b\x38\x4b\x3c\xd7",
    // "CC_SHA1_Final" / M(Rot) / S(247) / L(13)
    "\x3a\x3a\x56\x4a\x3f\x38\x28\x56\x3d\x60\x65\x58\x63\xf7\x7c\x20",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(243) / L(59)
    "\x29\x24\x2d\x24\x38\x2d\x28\x35\x2d\x29\x29\x2d\x25\x36\x2d\x28\x2c\x2d\x26\x34\x2d\x23\x2b\x2d\x39\x39\x2d\x28\x2b\x2d\x37\x24\x2d\x27\x34\x2d\x38\x25\x2d\x25\x27\x2d\x28\x25\x2d\x37\x24\x2d\x2c\x2b\x2d\x37\x39\x2d\x29\x36\x2d\x29\x23\xf3\x86\x15\x47\x59\x4d\x67\xe3\x77",
    // "CFDataCreate" / M(Rot) / S(6) / L(12)
    "\x49\x4c\x4a\x67\x7a\x67\x49\x78\x6b\x67\x7a\x6b\x06\xa3\x48\x1c",
    // "" / M(None) / S(0) / L(0)
    "\x20\xe3\x1c\x49\xe3\x73\x0d\xf5\x5a\xbc\x08\x8f\x3f\x32\xb1\x7c\xc0\xa2\xe7\x81\x73\x5f\x68\x07\x79\x72\xf2\xaf\xd0\x75\x10\x4a",
    // "IOServiceGetMatchingServices" / M(Xor3) / S(70) / L(28)
    "\x22\x24\x38\x0e\x19\x1d\x02\x08\x0e\x2c\x0e\x1f\x26\x0a\x1f\x08\x03\x02\x05\x0c\x38\x0e\x19\x1d\x02\x08\x0e\x18\x6b\xe9\x80\x20\xb9\xbd\x46\x66\x16",
    // "" / M(None) / S(0) / L(0)
    "\x5d\x86\xcf\x8d\x5e\xfe\x00\x04\xba\xc4\x61\x8f\x2e\xbe\x19\xdd\xa3\x83\x79\xd7\x1e\x4e\x62\xd6\x86\x96\x79\x56\x14\x0f\xf4\x55",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(195) / L(28)
    "\xab\x87\x86\x9c\x8d\x86\x9c\x9b\xc7\xb7\xa5\xa9\xbb\xba\x8d\x8b\x8d\x81\x98\x9c\xc7\x9a\x8d\x8b\x8d\x81\x98\x9c\xe8\x4a\x4c\x27\xb6\xb8\x91\x24\x8c",
    // "objc_getClass" / M(Xor2) / S(148) / L(13)
    "\xeb\xe6\xee\xe7\xdb\xe3\xe1\xf0\xc7\xe8\xe5\xf7\xf7\x84\xe9\x43",
    // "." / M(Xor1) / S(16) / L(1)
    "\x3e\x10\x4f\x12\x8c\xef\x46\xdd\xc5\x91\x19\x7e\x1c\xef\xfb\xda",
    // "CC_SHA1" / M(Xor1) / S(110) / L(7)
    "\x2d\x2d\x31\x3d\x26\x2f\x5f\x6e\x73\x4a\x0a\xa0\x4c\x2b\xc8\x7c",
    // "EVP_DigestInit" / M(Xor2) / S(131) / L(14)
    "\xd6\xc5\xc3\xcc\xd7\xfa\xf4\xf6\xe0\xe7\xda\xfd\xfa\xe7\x93\x2b",
    // "objc_getClass" / M(Xor2) / S(151) / L(13)
    "\xe8\xe5\xed\xe4\xd8\xe0\xe2\xf3\xc4\xeb\xe6\xf4\xf4\x87\x18\xf5",
    // "CFDictionaryCreateMutable" / M(Xor4) / S(89) / L(25)
    "\x91\x94\x96\xbb\xb1\xa6\xbb\xbd\xbc\xb3\xa0\xab\x91\xa0\xb7\xb3\xa6\xb7\x9f\xa7\xa6\xb3\xb0\xbe\xb7\xd2\xb5\x98\x54\x4f\x90\x15\xd4\xbf",
    // "CFArrayGetCount" / M(Xor4) / S(237) / L(15)
    "\x93\x96\x91\xa2\xa2\xb1\xa9\x97\xb5\xa4\x93\xbf\xa5\xbe\xa4\xd0",
    // "OBJ_txt2obj" / M(Xor4) / S(9) / L(11)
    "\xdf\xd2\xda\xcf\xe4\xe8\xe4\xa2\xff\xf2\xfa\x90\x49\x0c\x5d\xfe",
    // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(253) / L(25)
    "\x2e\x31\x2d\x31\x27\x2b\x2f\x31\x2e\x2e\x2c\x29\x2c\x2a\x31\x2e\x2f\x2f\x31\x29\x31\x2e\x2e\x31\x2e\x1f\x5c\x9c\x4e\x52\xcd\xe4\x39\xf5",
    // "" / M(None) / S(0) / L(0)
    "\x02\x44\x2d\xaf\x04\xf2\x62\xe2\xfe\x63\x07\x9b\x40\x19\xa5\xa3\xec\x5b\x35\x79\x60\x00\x55\x08\x83\x8a\x5f\xaf\xf9\x0e\xa1\xd7",
    // "" / M(None) / S(0) / L(0)
    "\xc5\xfe\x88\x92\x7e\xff\x38\x00\x97\x1e\xa2\xa4\xed\x61\x80\x7d\x12\xee\xf7\x65\x16\xe5\xb3\x2a\x7e\x2f\x26\x71\x73\x63\xaa\xfe",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[573] = {
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) EVP_DigestUpdate),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) BIO_write),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) PKCS7_get0_signers),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) SHA1_Update),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) X509_free),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) sk_value),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_ISZELLUYTRFB __unused;
static int ReceiptValidation_XWEDIUHPRXQF __unused;
static int ReceiptValidation_IMAQIKPESKUO __unused;
static int ReceiptValidation_HVUGSFTZNZCE __unused;
static int ReceiptValidation_MXXOKCKDZOKW __unused;
static int ReceiptValidation_EYDMZAIXJFBD __unused;
static int ReceiptValidation_HKRCMNVFMLFM __unused;
static int ReceiptValidation_GQBGLTGJMPEP __unused;


#define ReceiptValidation_ASN1_get_object_01E101BB ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction006, 443, 185, 16))
#define ReceiptValidation_ASN1_get_object_01E101FB ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00B, 507, 105, 16))
#define ReceiptValidation_ASN1_OBJECT_free_01E101E3 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00A, 483, 189, 17))
#define ReceiptValidation_BIO_free_014600F2 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction00A, 242, 13, 16))
#define ReceiptValidation_BIO_free_01A0005D ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00C, 93, 1, 16))
#define ReceiptValidation_BIO_free_01A000F2 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00A, 242, 13, 16))
#define ReceiptValidation_BIO_new_01460090 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction00C, 144, 190, 16))
#define ReceiptValidation_BIO_new_014600D5 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction007, 213, 32, 16))
#define ReceiptValidation_BIO_new_01A00090 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00C, 144, 190, 16))
#define ReceiptValidation_BIO_s_mem_0146019F ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction003, 415, 179, 16))
#define ReceiptValidation_BIO_s_mem_01A00196 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction003, 406, 154, 16))
#define ReceiptValidation_BIO_s_mem_01E1019F ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction003, 415, 179, 16))
#define ReceiptValidation_BIO_write_01460080 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction009, 128, 172, 16))
#define ReceiptValidation_BIO_write_01E10072 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction004, 114, 112, 16))
#define ReceiptValidation_BIO_write_01E10197 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00A, 407, 39, 16))
#define ReceiptValidation_CC_SHA1_Final_01B0022B ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction003, 555, 247, 16))
#define ReceiptValidation_CFArrayAppendValue_020B0148 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction005, 328, 162, 19))
#define ReceiptValidation_CFArrayAppendValue_020B0183 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction003, 387, 160, 19))
#define ReceiptValidation_CFArrayCreateMutable_00E20039 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00B, 57, 170, 21))
#define ReceiptValidation_CFArrayCreateMutable_00E201C9 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction006, 457, 123, 21))
#define ReceiptValidation_CFArrayGetCount_00E20206 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction006, 518, 152, 16))
#define ReceiptValidation_CFArrayGetCount_00E20238 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00C, 568, 237, 16))
#define ReceiptValidation_CFBundleGetMainBundle_020B004A ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00A, 74, 232, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_020B0050 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00C, 80, 100, 33))
#define ReceiptValidation_CFDataAppendBytes_00E200DA ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, 218, 244, 18))
#define ReceiptValidation_CFDataCreate_0051022D ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, 557, 6, 16))
#define ReceiptValidation_CFDataCreate_00E2022D ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction004, 557, 6, 16))
#define ReceiptValidation_CFDataCreate_020B0150 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction007, 336, 244, 16))
#define ReceiptValidation_CFDataGetBytePtr_00510004 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction00A, 4, 197, 17))
#define ReceiptValidation_CFDataGetLength_00510070 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, 112, 26, 16))
#define ReceiptValidation_CFDataGetLength_020B0070 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction004, 112, 26, 16))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_005100AA ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction005, 170, 244, 36))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_00E2000E ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00B, 14, 149, 36))
#define ReceiptValidation_CFDictionarySetValue_005101C0 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction008, 448, 37, 21))
#define ReceiptValidation_CFNumberCreate_00510086 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction006, 134, 192, 16))
#define ReceiptValidation_CFNumberCreate_0051020D ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction007, 525, 160, 16))
#define ReceiptValidation_CFReadStreamRead_0051007F ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction007, 127, 233, 17))
#define ReceiptValidation_CFReadStreamRead_00E2008D ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction009, 141, 4, 17))
#define ReceiptValidation_CFRelease_0051005A ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction00A, 90, 8, 16))
#define ReceiptValidation_CFRelease_00510061 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction009, 97, 129, 16))
#define ReceiptValidation_CFRelease_00510115 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction00A, 277, 40, 16))
#define ReceiptValidation_CFRelease_00E2005A ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, 90, 8, 16))
#define ReceiptValidation_CFRelease_00E20115 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, 277, 40, 16))
#define ReceiptValidation_CFRelease_020B005A ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00A, 90, 8, 16))
#define ReceiptValidation_CFRelease_020B0115 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00A, 277, 40, 16))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_00E200B2 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction004, 178, 181, 36))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_00E200CD ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction004, 205, 67, 36))
#define ReceiptValidation_CFURLCreateCopyAppendingPathComponent_005100FE ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction006, 254, 229, 38))
#define ReceiptValidation_CFURLCreateCopyAppendingPathComponent_00E200FE ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction006, 254, 229, 38))
#define ReceiptValidation_d2i_PKCS7_bio_01A001B5 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00A, 437, 121, 16))
#define ReceiptValidation_d2i_PKCS7_bio_01A001ED ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00A, 493, 244, 16))
#define ReceiptValidation_d2i_PKCS7_bio_01E100CE ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction008, 206, 221, 16))
#define ReceiptValidation_d2i_X509_bio_01A0010C ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction009, 268, 120, 16))
#define ReceiptValidation_EVP_DigestFinal_01E10223 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction003, 547, 189, 16))
#define ReceiptValidation_EVP_DigestInit_01E100A8 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction006, 168, 171, 16))
#define ReceiptValidation_EVP_DigestUpdate_01E100ED ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction005, 237, 182, 17))
#define ReceiptValidation_EVP_get_digestbyname_01E10135 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction009, 309, 132, 21))
#define ReceiptValidation_EVP_MD_CTX_init_01E100D7 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction008, 215, 235, 16))
#define ReceiptValidation_exit_002C009B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction009, 155, 213, 16))
#define ReceiptValidation_exit_002C0136 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction003, 310, 59, 16))
#define ReceiptValidation_exit_012B009B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction009, 155, 213, 16))
#define ReceiptValidation_exit_012B00EE ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction008, 238, 153, 16))
#define ReceiptValidation_exit_012B0136 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction003, 310, 59, 16))
#define ReceiptValidation_exit_01B000EE ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction008, 238, 153, 16))
#define ReceiptValidation_exit_01B00136 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction003, 310, 59, 16))
#define ReceiptValidation_ISZELLUYTRFB_0051000C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_ISZELLUYTRFB, 110, 20))
#define ReceiptValidation_ISZELLUYTRFB_00E2000C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_ISZELLUYTRFB, 110, 20))
#define ReceiptValidation_ISZELLUYTRFB_00E201CC ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_ISZELLUYTRFB, 19, 37))
#define ReceiptValidation_ISZELLUYTRFB_01AD00E4 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 429, 133, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ISZELLUYTRFB, 59, 16))
#define ReceiptValidation_ISZELLUYTRFB_020B00AD ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ISZELLUYTRFB, 244, 23))
#define ReceiptValidation_ISZELLUYTRFB_020B0179 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_ISZELLUYTRFB, 72, 16))
#define ReceiptValidation_ISZELLUYTRFB_020B01DA ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_ISZELLUYTRFB, 136, 33))
#define ReceiptValidation_XWEDIUHPRXQF_0051003D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_XWEDIUHPRXQF, 48, 21))
#define ReceiptValidation_XWEDIUHPRXQF_00510084 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XWEDIUHPRXQF, 162, 16))
#define ReceiptValidation_XWEDIUHPRXQF_0051020D ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_XWEDIUHPRXQF, 160, 16))
#define ReceiptValidation_XWEDIUHPRXQF_00E200E5 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_XWEDIUHPRXQF, 246, 22))
#define ReceiptValidation_XWEDIUHPRXQF_01F10190 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 497, 30, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_XWEDIUHPRXQF, 183, 38))
#define ReceiptValidation_XWEDIUHPRXQF_020B0068 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XWEDIUHPRXQF, 58, 34))
#define ReceiptValidation_IMAQIKPESKUO_00820162 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_IMAQIKPESKUO, 34, 34))
#define ReceiptValidation_IMAQIKPESKUO_00E2008E ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_IMAQIKPESKUO, 247, 52))
#define ReceiptValidation_IMAQIKPESKUO_00E200CC ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_IMAQIKPESKUO, 157, 17))
#define ReceiptValidation_IMAQIKPESKUO_00E200D8 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_IMAQIKPESKUO, 69, 21))
#define ReceiptValidation_IMAQIKPESKUO_012B0234 ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_IMAQIKPESKUO, 110, 16))
#define ReceiptValidation_IMAQIKPESKUO_01F1015E ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 497, 30, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_IMAQIKPESKUO, 105, 16))
#define ReceiptValidation_HVUGSFTZNZCE_00510022 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_HVUGSFTZNZCE, 210, 22))
#define ReceiptValidation_HVUGSFTZNZCE_00510048 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_HVUGSFTZNZCE, 120, 17))
#define ReceiptValidation_HVUGSFTZNZCE_00510183 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_HVUGSFTZNZCE, 160, 19))
#define ReceiptValidation_HVUGSFTZNZCE_01AD0099 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 429, 133, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_HVUGSFTZNZCE, 241, 18))
#define ReceiptValidation_HVUGSFTZNZCE_020B003C ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_HVUGSFTZNZCE, 240, 16))
#define ReceiptValidation_HVUGSFTZNZCE_020B0161 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_HVUGSFTZNZCE, 195, 16))
#define ReceiptValidation_MXXOKCKDZOKW_00510070 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MXXOKCKDZOKW, 26, 16))
#define ReceiptValidation_MXXOKCKDZOKW_008201EF ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MXXOKCKDZOKW, 98, 16))
#define ReceiptValidation_MXXOKCKDZOKW_00E20068 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MXXOKCKDZOKW, 58, 34))
#define ReceiptValidation_MXXOKCKDZOKW_00E2006F ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_MXXOKCKDZOKW, 30, 18))
#define ReceiptValidation_MXXOKCKDZOKW_020B0144 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_MXXOKCKDZOKW, 22, 16))
#define ReceiptValidation_MXXOKCKDZOKW_020B0155 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_MXXOKCKDZOKW, 121, 22))
#define ReceiptValidation_EYDMZAIXJFBD_00E2003D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_EYDMZAIXJFBD, 48, 21))
#define ReceiptValidation_EYDMZAIXJFBD_00E20189 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_EYDMZAIXJFBD, 21, 48))
#define ReceiptValidation_EYDMZAIXJFBD_00E201CC ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_EYDMZAIXJFBD, 19, 37))
#define ReceiptValidation_EYDMZAIXJFBD_012B0052 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_EYDMZAIXJFBD, 119, 16))
#define ReceiptValidation_EYDMZAIXJFBD_017200B4 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 370, 134, 49, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_EYDMZAIXJFBD, 43, 32))
#define ReceiptValidation_EYDMZAIXJFBD_01B60058 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 438, 149, 55, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_EYDMZAIXJFBD, 114, 23))
#define ReceiptValidation_EYDMZAIXJFBD_020B0004 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_EYDMZAIXJFBD, 197, 17))
#define ReceiptValidation_EYDMZAIXJFBD_020B003D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_EYDMZAIXJFBD, 48, 21))
#define ReceiptValidation_HKRCMNVFMLFM_0051020D ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_HKRCMNVFMLFM, 160, 16))
#define ReceiptValidation_HKRCMNVFMLFM_006C0121 ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 108, 195, 51, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_HKRCMNVFMLFM, 171, 18))
#define ReceiptValidation_HKRCMNVFMLFM_0082001B ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_HKRCMNVFMLFM, 8, 38))
#define ReceiptValidation_HKRCMNVFMLFM_020B00DA ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_HKRCMNVFMLFM, 244, 18))
#define ReceiptValidation_HKRCMNVFMLFM_020B00F8 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_HKRCMNVFMLFM, 120, 21))
#define ReceiptValidation_HKRCMNVFMLFM_020B010E ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_HKRCMNVFMLFM, 217, 35))
#define ReceiptValidation_GQBGLTGJMPEP_002C006D ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_GQBGLTGJMPEP, 110, 16))
#define ReceiptValidation_GQBGLTGJMPEP_0051003C ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_GQBGLTGJMPEP, 240, 16))
#define ReceiptValidation_GQBGLTGJMPEP_00510086 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_GQBGLTGJMPEP, 192, 16))
#define ReceiptValidation_GQBGLTGJMPEP_005100D8 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_GQBGLTGJMPEP, 69, 21))
#define ReceiptValidation_GQBGLTGJMPEP_00E200DA ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_GQBGLTGJMPEP, 244, 18))
#define ReceiptValidation_GQBGLTGJMPEP_01F1014C ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 497, 30, 49, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_GQBGLTGJMPEP, 209, 37))
#define ReceiptValidation_GQBGLTGJMPEP_020B0028 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_GQBGLTGJMPEP, 73, 20))
#define ReceiptValidation_IOObjectRelease_017201D9 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 370, 134, 49, ReceiptValidation_ObfuscationFunction00C, 473, 79, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_020B00FA ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction004, 250, 92, 23))
#define ReceiptValidation_kCFTypeArrayCallBacks_00510083 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction003, 131, 83, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_005100A0 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, 160, 192, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_00E20083 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction003, 131, 83, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_00E2021C ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00A, 540, 25, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0051019E ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction00C, 414, 35, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00E20151 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00C, 337, 55, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00E2019E ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 208, 67, ReceiptValidation_ObfuscationFunction00C, 414, 35, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00510129 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction009, 297, 184, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_0051016A ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction004, 362, 31, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_0051017A ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 81, 134, 67, ReceiptValidation_ObfuscationFunction003, 378, 99, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_020B017A ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 523, 40, 67, ReceiptValidation_ObfuscationFunction003, 378, 99, 32))
#define ReceiptValidation_kSecClass_014F0014 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction00B, 20, 217, 16))
#define ReceiptValidation_kSecClass_01B601B9 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 438, 149, 55, ReceiptValidation_ObfuscationFunction00A, 441, 255, 16))
#define ReceiptValidation_kSecClassCertificate_008201B2 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction009, 434, 80, 21))
#define ReceiptValidation_kSecClassCertificate_01B601B2 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 438, 149, 55, ReceiptValidation_ObfuscationFunction009, 434, 80, 21))
#define ReceiptValidation_kSecMatchLimit_00820137 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction00A, 311, 199, 16))
#define ReceiptValidation_kSecMatchLimit_0082017F ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction00B, 383, 51, 16))
#define ReceiptValidation_kSecMatchLimitAll_008201F9 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction006, 505, 232, 18))
#define ReceiptValidation_kSecMatchLimitAll_01B600E6 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 438, 149, 55, ReceiptValidation_ObfuscationFunction003, 230, 197, 18))
#define ReceiptValidation_kSecMatchSearchList_014F01CF ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction00C, 463, 103, 20))
#define ReceiptValidation_kSecMatchSearchList_014F0225 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction00B, 549, 212, 20))
#define ReceiptValidation_kSecMatchSubjectContains_014F014A ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction00C, 330, 174, 33))
#define ReceiptValidation_kSecMatchSubjectContains_014F0229 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction003, 553, 150, 33))
#define ReceiptValidation_kSecReturnRef_00820120 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction007, 288, 76, 16))
#define ReceiptValidation_kSecReturnRef_008201F3 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 130, 22, 55, ReceiptValidation_ObfuscationFunction008, 499, 179, 16))
#define ReceiptValidation_longjmp_002C0096 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction00A, 150, 246, 16))
#define ReceiptValidation_longjmp_002C00B3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction005, 179, 59, 16))
#define ReceiptValidation_longjmp_002C00E8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction007, 232, 89, 16))
#define ReceiptValidation_longjmp_012B0096 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction00A, 150, 246, 16))
#define ReceiptValidation_longjmp_012B00B3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 299, 75, 33, ReceiptValidation_ObfuscationFunction005, 179, 59, 16))
#define ReceiptValidation_longjmp_01B00096 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction00A, 150, 246, 16))
#define ReceiptValidation_longjmp_01B000B3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction005, 179, 59, 16))
#define ReceiptValidation_longjmp_01B000E8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 432, 227, 33, ReceiptValidation_ObfuscationFunction007, 232, 89, 16))
#define ReceiptValidation_OBJ_txt2obj_01460239 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction00B, 569, 9, 16))
#define ReceiptValidation_objc_getClass_001601A8 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction00B, 424, 127, 16))
#define ReceiptValidation_objc_getClass_00160232 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction007, 562, 148, 16))
#define ReceiptValidation_objc_getClass_00160236 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction007, 566, 151, 16))
#define ReceiptValidation_objc_getClass_001C01A8 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction00B, 424, 127, 16))
#define ReceiptValidation_objc_getClass_001C0232 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction007, 562, 148, 16))
#define ReceiptValidation_objc_getClass_001C0236 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction007, 566, 151, 16))
#define ReceiptValidation_objc_getClass_013401A8 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction00B, 424, 127, 16))
#define ReceiptValidation_objc_getClass_01340236 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction007, 566, 151, 16))
#define ReceiptValidation_objc_msgSend_0016003F ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction008, 63, 199, 16))
#define ReceiptValidation_objc_msgSend_00160209 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction004, 521, 68, 16))
#define ReceiptValidation_objc_msgSend_001C003F ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction008, 63, 199, 16))
#define ReceiptValidation_objc_msgSend_001C01F6 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction009, 502, 165, 16))
#define ReceiptValidation_objc_msgSend_001C0209 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction004, 521, 68, 16))
#define ReceiptValidation_objc_msgSend_0134003F ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction008, 63, 199, 16))
#define ReceiptValidation_objc_msgSend_013401F6 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction009, 502, 165, 16))
#define ReceiptValidation_objc_msgSend_01340209 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction004, 521, 68, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_01E10219 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00B, 537, 84, 32))
#define ReceiptValidation_PKCS7_free_01A000AE ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction008, 174, 30, 16))
#define ReceiptValidation_PKCS7_free_01E101A7 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction006, 423, 76, 16))
#define ReceiptValidation_PKCS7_get0_signers_01E101A1 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction009, 417, 134, 19))
#define ReceiptValidation_PKCS7_verify_01A00059 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction008, 89, 175, 16))
#define ReceiptValidation_SecItemCopyMatching_014F00A3 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 335, 233, 55, ReceiptValidation_ObfuscationFunction009, 163, 3, 20))
#define ReceiptValidation_SecItemCopyMatching_01B60033 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 438, 149, 55, ReceiptValidation_ObfuscationFunction00B, 51, 9, 20))
#define ReceiptValidation_sel_registerName_00160000 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction009, 0, 44, 17))
#define ReceiptValidation_sel_registerName_00160152 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction008, 338, 244, 17))
#define ReceiptValidation_sel_registerName_00160184 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 22, 167, 23, ReceiptValidation_ObfuscationFunction00C, 388, 204, 17))
#define ReceiptValidation_sel_registerName_001C0000 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction009, 0, 44, 17))
#define ReceiptValidation_sel_registerName_001C0152 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction008, 338, 244, 17))
#define ReceiptValidation_sel_registerName_001C0184 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 28, 252, 23, ReceiptValidation_ObfuscationFunction00C, 388, 204, 17))
#define ReceiptValidation_sel_registerName_01340000 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction009, 0, 44, 17))
#define ReceiptValidation_sel_registerName_01340152 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction008, 338, 244, 17))
#define ReceiptValidation_sel_registerName_01340184 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 308, 207, 23, ReceiptValidation_ObfuscationFunction00C, 388, 204, 17))
#define ReceiptValidation_setjmp_002C0170 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 44, 114, 33, ReceiptValidation_ObfuscationFunction00A, 368, 165, 16))
#define ReceiptValidation_SHA1_01E100C2 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00A, 194, 89, 16))
#define ReceiptValidation_SHA1_Final_01E101A5 ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction005, 421, 202, 16))
#define ReceiptValidation_SHA1_Init_01460217 ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction003, 535, 220, 16))
#define ReceiptValidation_SHA1_Update_01A0002A ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction004, 42, 239, 16))
#define ReceiptValidation_sk_free_01A0014E ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction009, 334, 92, 16))
#define ReceiptValidation_sk_num_01E101D3 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction009, 467, 126, 16))
#define ReceiptValidation_sk_value_01A00164 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00B, 356, 189, 16))
#define ReceiptValidation_X509_digest_01A00010 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00A, 16, 78, 16))
#define ReceiptValidation_X509_free_014601EE ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction00C, 494, 92, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_01A001C6 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction004, 454, 26, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_01A00027 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction00B, 39, 24, 34))
#define ReceiptValidation_X509_STORE_add_cert_014600E0 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 183, 16, ReceiptValidation_ObfuscationFunction00B, 224, 83, 20))
#define ReceiptValidation_X509_STORE_free_01E10075 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 481, 139, 16, ReceiptValidation_ObfuscationFunction00A, 117, 177, 16))
#define ReceiptValidation_X509_STORE_new_01A00067 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 416, 28, 16, ReceiptValidation_ObfuscationFunction005, 103, 112, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[58])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[517])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[517])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[531])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[517])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[58])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[573];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[531])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[573], ReceiptValidation_tmp2[573];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[529])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[486])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#if DEBUG
inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_020B004A();
    if (!ReceiptValidation_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_00510061(ReceiptValidation_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_020B0050((CFBundleRef) ReceiptValidation_bundle);
    }
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
    // Global variables computation
    // Set to 12
    ReceiptValidation_ISZELLUYTRFB = 12;
    // Set to 229
    ReceiptValidation_XWEDIUHPRXQF = 229;
    // Set to 142
    ReceiptValidation_IMAQIKPESKUO = 142;
    // Set to 72
    ReceiptValidation_HVUGSFTZNZCE = 72;
    // Set to 111
    ReceiptValidation_MXXOKCKDZOKW = 111;
    // Set to 393
    ReceiptValidation_EYDMZAIXJFBD = 393;
    // Set to 270
    ReceiptValidation_HKRCMNVFMLFM = 270;
    // Set to 218
    ReceiptValidation_GQBGLTGJMPEP = 218;
}
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_020B004A(); \
    if (!ReceiptValidation_bundle) { \
        ReceiptValidation_CFRelease_00510061(ReceiptValidation_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_020B0050((CFBundleRef) ReceiptValidation_bundle); \
    } \
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
    ReceiptValidation_ISZELLUYTRFB = 12; \
    ReceiptValidation_XWEDIUHPRXQF = 229; \
    ReceiptValidation_IMAQIKPESKUO = 142; \
    ReceiptValidation_HVUGSFTZNZCE = 72; \
    ReceiptValidation_MXXOKCKDZOKW = 111; \
    ReceiptValidation_EYDMZAIXJFBD = 393; \
    ReceiptValidation_HKRCMNVFMLFM = 270; \
    ReceiptValidation_GQBGLTGJMPEP = 218; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt01E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    volatile int ReceiptValidation_code = 87; ReceiptValidation_code -= 30; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_XWEDIUHPRXQF_00E200E5((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[561]), 195, 37);
    ReceiptValidation_url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_00E200FE(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false);
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_HKRCMNVFMLFM_020B010E(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_HVUGSFTZNZCE_00510048(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_002C0136(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1);
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_ISZELLUYTRFB_0051000C(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00E2008D(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_GQBGLTGJMPEP_00E200DA(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_MXXOKCKDZOKW_00E2006F(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_020B0115(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 12 to 228
    ReceiptValidation_ISZELLUYTRFB -= 2; ReceiptValidation_ISZELLUYTRFB *= 21; ReceiptValidation_ISZELLUYTRFB += 18; 
    // Set to 400
    ReceiptValidation_XWEDIUHPRXQF = 400;
    // Set to 350
    ReceiptValidation_IMAQIKPESKUO = 350;
    // Set to 153
    ReceiptValidation_HVUGSFTZNZCE = 153;
    // From 393 to 180
    ReceiptValidation_EYDMZAIXJFBD += 327; ReceiptValidation_EYDMZAIXJFBD /= 4; 
    // From 218 to 332
    ReceiptValidation_GQBGLTGJMPEP -= 108; ReceiptValidation_GQBGLTGJMPEP *= 3; ReceiptValidation_GQBGLTGJMPEP += 2; 
ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_020B0115(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt01E(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    volatile int ReceiptValidation_code = 87; ReceiptValidation_code -= 30; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_XWEDIUHPRXQF_00E200E5((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[561]), 195, 37); \
    ReceiptValidation_url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_00E200FE(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false); \
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1); \
    ReceiptValidation_stream = ReceiptValidation_HKRCMNVFMLFM_020B010E(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_HVUGSFTZNZCE_00510048(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_002C0136(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url1); \
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_ISZELLUYTRFB_0051000C(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00E2008D(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_GQBGLTGJMPEP_00E200DA(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_MXXOKCKDZOKW_00E2006F(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_020B0115(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_ISZELLUYTRFB -= 2; ReceiptValidation_ISZELLUYTRFB *= 21; ReceiptValidation_ISZELLUYTRFB += 18;  \
    ReceiptValidation_XWEDIUHPRXQF = 400; \
    ReceiptValidation_IMAQIKPESKUO = 350; \
    ReceiptValidation_HVUGSFTZNZCE = 153; \
    ReceiptValidation_EYDMZAIXJFBD += 327; ReceiptValidation_EYDMZAIXJFBD /= 4;  \
    ReceiptValidation_GQBGLTGJMPEP -= 108; ReceiptValidation_GQBGLTGJMPEP *= 3; ReceiptValidation_GQBGLTGJMPEP += 2;  \
ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_020B0115(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_020B0115(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt01E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[573];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 113; ReceiptValidation_code -= 56; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[563]), 16, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_00E200B2(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        ReceiptValidation_exit_002C009B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[412])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[509])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        ReceiptValidation_exit_002C009B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1);
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_EYDMZAIXJFBD_00E20189(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[317])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[509])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_HKRCMNVFMLFM_020B010E(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_HVUGSFTZNZCE_00510048(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_002C009B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_ISZELLUYTRFB_0051000C(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0051007F(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_GQBGLTGJMPEP_00E200DA(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_MXXOKCKDZOKW_00E2006F(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 12 to 228
    ReceiptValidation_ISZELLUYTRFB -= 2; ReceiptValidation_ISZELLUYTRFB *= 21; ReceiptValidation_ISZELLUYTRFB += 18; 
    // Set to 400
    ReceiptValidation_XWEDIUHPRXQF = 400;
    // Set to 350
    ReceiptValidation_IMAQIKPESKUO = 350;
    // Set to 153
    ReceiptValidation_HVUGSFTZNZCE = 153;
    // From 393 to 180
    ReceiptValidation_EYDMZAIXJFBD += 327; ReceiptValidation_EYDMZAIXJFBD /= 4; 
    // From 218 to 332
    ReceiptValidation_GQBGLTGJMPEP -= 108; ReceiptValidation_GQBGLTGJMPEP *= 3; ReceiptValidation_GQBGLTGJMPEP += 2; 
ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00510115(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt01E(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[573]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 113; ReceiptValidation_code -= 56; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[563]), 16, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_00E200B2(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        ReceiptValidation_exit_002C009B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[412])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[509])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        ReceiptValidation_exit_002C009B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1); \
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_EYDMZAIXJFBD_00E20189(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[317])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[509])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_HKRCMNVFMLFM_020B010E(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_HVUGSFTZNZCE_00510048(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_002C009B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_ISZELLUYTRFB_0051000C(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0051007F(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 573); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_GQBGLTGJMPEP_00E200DA(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_MXXOKCKDZOKW_00E2006F(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_ISZELLUYTRFB -= 2; ReceiptValidation_ISZELLUYTRFB *= 21; ReceiptValidation_ISZELLUYTRFB += 18;  \
    ReceiptValidation_XWEDIUHPRXQF = 400; \
    ReceiptValidation_IMAQIKPESKUO = 350; \
    ReceiptValidation_HVUGSFTZNZCE = 153; \
    ReceiptValidation_EYDMZAIXJFBD += 327; ReceiptValidation_EYDMZAIXJFBD /= 4;  \
    ReceiptValidation_GQBGLTGJMPEP -= 108; ReceiptValidation_GQBGLTGJMPEP *= 3; ReceiptValidation_GQBGLTGJMPEP += 2;  \
ReceiptValidation_LoadReceipt01E_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00510115(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00510115(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#if DEBUG
inline static void ReceiptValidation_GetGUID046(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[439]), 73, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_IMAQIKPESKUO_01F1015E(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[125]), ReceiptValidation_str1_, 210, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_HVUGSFTZNZCE_01AD0099(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_GQBGLTGJMPEP_01F1014C(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2);
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_ISZELLUYTRFB_01AD00E4(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_XWEDIUHPRXQF_01F10190(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_EYDMZAIXJFBD_017200B4(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_service);
    }
    // Global variables computation
    // From 228 to 173
    ReceiptValidation_ISZELLUYTRFB += 118; ReceiptValidation_ISZELLUYTRFB /= 2; 
    // From 400 to 104
    ReceiptValidation_XWEDIUHPRXQF += 120; ReceiptValidation_XWEDIUHPRXQF /= 5; 
    // From 350 to 354
    ReceiptValidation_IMAQIKPESKUO -= 232; ReceiptValidation_IMAQIKPESKUO *= 3; 
    // From 153 to 387
    ReceiptValidation_HVUGSFTZNZCE -= 57; ReceiptValidation_HVUGSFTZNZCE *= 4; ReceiptValidation_HVUGSFTZNZCE += 3; 
    // From 111 to 495
    ReceiptValidation_MXXOKCKDZOKW -= 29; ReceiptValidation_MXXOKCKDZOKW *= 6; ReceiptValidation_MXXOKCKDZOKW += 3; 
    // From 180 to 88
    ReceiptValidation_EYDMZAIXJFBD += 172; ReceiptValidation_EYDMZAIXJFBD /= 4; 
    // From 270 to 27
    ReceiptValidation_HKRCMNVFMLFM += 54; ReceiptValidation_HKRCMNVFMLFM /= 12; 
    // From 332 to 216
    ReceiptValidation_GQBGLTGJMPEP += 316; ReceiptValidation_GQBGLTGJMPEP /= 3; 
ReceiptValidation_GetGUID046_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID046(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[439]), 73, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_IMAQIKPESKUO_01F1015E(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[125]), ReceiptValidation_str1_, 210, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_HVUGSFTZNZCE_01AD0099(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_GQBGLTGJMPEP_01F1014C(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2); \
        goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_ISZELLUYTRFB_01AD00E4(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_XWEDIUHPRXQF_01F10190(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_EYDMZAIXJFBD_017200B4(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_017201D9(ReceiptValidation_service); \
    } \
    ReceiptValidation_ISZELLUYTRFB += 118; ReceiptValidation_ISZELLUYTRFB /= 2;  \
    ReceiptValidation_XWEDIUHPRXQF += 120; ReceiptValidation_XWEDIUHPRXQF /= 5;  \
    ReceiptValidation_IMAQIKPESKUO -= 232; ReceiptValidation_IMAQIKPESKUO *= 3;  \
    ReceiptValidation_HVUGSFTZNZCE -= 57; ReceiptValidation_HVUGSFTZNZCE *= 4; ReceiptValidation_HVUGSFTZNZCE += 3;  \
    ReceiptValidation_MXXOKCKDZOKW -= 29; ReceiptValidation_MXXOKCKDZOKW *= 6; ReceiptValidation_MXXOKCKDZOKW += 3;  \
    ReceiptValidation_EYDMZAIXJFBD += 172; ReceiptValidation_EYDMZAIXJFBD /= 4;  \
    ReceiptValidation_HKRCMNVFMLFM += 54; ReceiptValidation_HKRCMNVFMLFM /= 12;  \
    ReceiptValidation_GQBGLTGJMPEP += 316; ReceiptValidation_GQBGLTGJMPEP /= 3;  \
ReceiptValidation_GetGUID046_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 98; ReceiptValidation_code -= 41; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[24]), ReceiptValidation_str1_, 215, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_MXXOKCKDZOKW_008201EF(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_012B009B(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_005100A0);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[184]), 233, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_01B601B9;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_008201B2;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_014F01CF;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_014F0229;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_0082017F;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01B600E6;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_008201F3;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_014F00A3(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_012B009B(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_00E20238((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_ISZELLUYTRFB_020B00AD((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00510061(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_EYDMZAIXJFBD_01B60058(ReceiptValidation_certificate);
    }
    // Global variables computation
    // From 495 to 341
    ReceiptValidation_MXXOKCKDZOKW += 187; ReceiptValidation_MXXOKCKDZOKW /= 2; 
    // From 88 to 460
    ReceiptValidation_EYDMZAIXJFBD -= 23; ReceiptValidation_EYDMZAIXJFBD *= 7; ReceiptValidation_EYDMZAIXJFBD += 5; 
    // From 216 to 60
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 5; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00510061(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_00510061(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00510061(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00510061(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00510061(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 98; ReceiptValidation_code -= 41; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[24]), ReceiptValidation_str1_, 215, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_MXXOKCKDZOKW_008201EF(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_012B009B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_005100A0); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[184]), 233, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_01B601B9; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_008201B2; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_014F01CF; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_014F0229; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_0082017F; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01B600E6; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_008201F3; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_014F00A3(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_012B009B(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_00E20238((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_ISZELLUYTRFB_020B00AD((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00510061(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_EYDMZAIXJFBD_01B60058(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_MXXOKCKDZOKW += 187; ReceiptValidation_MXXOKCKDZOKW /= 2;  \
    ReceiptValidation_EYDMZAIXJFBD -= 23; ReceiptValidation_EYDMZAIXJFBD *= 7; ReceiptValidation_EYDMZAIXJFBD += 5;  \
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 5;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00510061(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_00510061(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00510061(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00510061(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00510061(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA04F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    volatile CFIndex ReceiptValidation_count3 = 12; ReceiptValidation_count3 -= 8; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 31; ReceiptValidation_code -= 7; ReceiptValidation_code *= 7; ReceiptValidation_code += 5; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[11]), ReceiptValidation_str1_, 240, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_MXXOKCKDZOKW_008201EF(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00510083);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[573];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[520]), ReceiptValidation_str2_, 69, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_HKRCMNVFMLFM_0082001B(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_IMAQIKPESKUO_00820162(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_EYDMZAIXJFBD_01B60058((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // From 495 to 341
    ReceiptValidation_MXXOKCKDZOKW += 187; ReceiptValidation_MXXOKCKDZOKW /= 2; 
    // From 88 to 460
    ReceiptValidation_EYDMZAIXJFBD -= 23; ReceiptValidation_EYDMZAIXJFBD *= 7; ReceiptValidation_EYDMZAIXJFBD += 5; 
    // From 216 to 60
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 5; 
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA04F(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    volatile CFIndex ReceiptValidation_count3 = 12; ReceiptValidation_count3 -= 8; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 31; ReceiptValidation_code -= 7; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[11]), ReceiptValidation_str1_, 240, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_MXXOKCKDZOKW_008201EF(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00510083); \
    char ReceiptValidation_str2_[573]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[520]), ReceiptValidation_str2_, 69, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_HKRCMNVFMLFM_0082001B(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA04F_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_IMAQIKPESKUO_00820162(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_EYDMZAIXJFBD_01B60058((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_MXXOKCKDZOKW += 187; ReceiptValidation_MXXOKCKDZOKW /= 2;  \
    ReceiptValidation_EYDMZAIXJFBD -= 23; ReceiptValidation_EYDMZAIXJFBD *= 7; ReceiptValidation_EYDMZAIXJFBD += 5;  \
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 5;  \
ReceiptValidation_GetRootCA04F_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_0051005A(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[527]), 84, 18);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_00E201CC((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_020B00FA);
    if (ReceiptValidation_GQBGLTGJMPEP_0051003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        volatile int ReceiptValidation_code = 20; ReceiptValidation_code -= 3; ReceiptValidation_code *= 10; ReceiptValidation_code += 3; 
        ReceiptValidation_exit_012B009B(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 173 to 460
    ReceiptValidation_ISZELLUYTRFB -= 58; ReceiptValidation_ISZELLUYTRFB *= 4; 
    // From 104 to 132
    ReceiptValidation_XWEDIUHPRXQF -= 60; ReceiptValidation_XWEDIUHPRXQF *= 3; 
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[527]), 84, 18); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_00E201CC((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_020B00FA); \
    if (ReceiptValidation_GQBGLTGJMPEP_0051003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        volatile int ReceiptValidation_code = 20; ReceiptValidation_code -= 3; ReceiptValidation_code *= 10; ReceiptValidation_code += 3;  \
        ReceiptValidation_exit_012B009B(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
    } \
    ReceiptValidation_ISZELLUYTRFB -= 58; ReceiptValidation_ISZELLUYTRFB *= 4;  \
    ReceiptValidation_XWEDIUHPRXQF -= 60; ReceiptValidation_XWEDIUHPRXQF *= 3;  \
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#if DEBUG
inline static void ReceiptValidation_CheckBundleVersion05E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[147]), 134, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[296]), 93, 35);
    volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_ISZELLUYTRFB_00E201CC((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_XWEDIUHPRXQF_00510084(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 460 to 474
    ReceiptValidation_ISZELLUYTRFB -= 302; ReceiptValidation_ISZELLUYTRFB *= 3; 
    // From 132 to 61
    ReceiptValidation_XWEDIUHPRXQF += 112; ReceiptValidation_XWEDIUHPRXQF /= 4; 
    // Set to 216
    ReceiptValidation_IMAQIKPESKUO = 216;
    // From 387 to 34
    ReceiptValidation_HVUGSFTZNZCE += 55; ReceiptValidation_HVUGSFTZNZCE /= 13; 
    // From 341 to 104
    ReceiptValidation_MXXOKCKDZOKW += 179; ReceiptValidation_MXXOKCKDZOKW /= 5; 
    // From 460 to 4
    ReceiptValidation_EYDMZAIXJFBD += 8; ReceiptValidation_EYDMZAIXJFBD /= 117; 
    // Set to 218
    ReceiptValidation_HKRCMNVFMLFM = 218;
    // From 60 to 40
    ReceiptValidation_GQBGLTGJMPEP += 20; ReceiptValidation_GQBGLTGJMPEP /= 2; 
    ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion05E(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[147]), 134, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[296]), 93, 35); \
    volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_ISZELLUYTRFB_00E201CC((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_XWEDIUHPRXQF_00510084(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_01B000EE(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1); \
    } \
    ReceiptValidation_ISZELLUYTRFB -= 302; ReceiptValidation_ISZELLUYTRFB *= 3;  \
    ReceiptValidation_XWEDIUHPRXQF += 112; ReceiptValidation_XWEDIUHPRXQF /= 4;  \
    ReceiptValidation_IMAQIKPESKUO = 216; \
    ReceiptValidation_HVUGSFTZNZCE += 55; ReceiptValidation_HVUGSFTZNZCE /= 13;  \
    ReceiptValidation_MXXOKCKDZOKW += 179; ReceiptValidation_MXXOKCKDZOKW /= 5;  \
    ReceiptValidation_EYDMZAIXJFBD += 8; ReceiptValidation_EYDMZAIXJFBD /= 117;  \
    ReceiptValidation_HKRCMNVFMLFM = 218; \
    ReceiptValidation_GQBGLTGJMPEP += 20; ReceiptValidation_GQBGLTGJMPEP /= 2;  \
    ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_00E2005A(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation063X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) {
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data;
    long ReceiptValidation_size = ReceiptValidation_length;
    *ReceiptValidation_payload = 0;
    do {
        *ReceiptValidation_payload <<= 8;
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++;
    } while(--ReceiptValidation_size > 0);
}
#else
inline static void ReceiptValidation_GetReceiptInformation063X(const unsigned char *ReceiptValidation_data, long ReceiptValidation_length, int *ReceiptValidation_payload) { \
    const unsigned char *ReceiptValidation_ptr = ReceiptValidation_data; \
    long ReceiptValidation_size = ReceiptValidation_length; \
    *ReceiptValidation_payload = 0; \
    do { \
        *ReceiptValidation_payload <<= 8; \
        *ReceiptValidation_payload += (uint8_t) *ReceiptValidation_ptr++; \
    } while(--ReceiptValidation_size > 0); \
}
#endif

#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    const unsigned char *ReceiptValidation_seq_end;
    int ReceiptValidation_attr_type;
    int ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 3; ReceiptValidation_code -= 1; ReceiptValidation_code *= 59; ReceiptValidation_code += 55; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    int ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01A00090(ReceiptValidation_BIO_s_mem_0146019F());
    ReceiptValidation_BIO_write_01460080(ReceiptValidation_bio_p7, (void *) ReceiptValidation_EYDMZAIXJFBD_020B0004((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_00510070((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01A001ED(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_HVUGSFTZNZCE_00510022(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[488]), 190, 33); 
    ReceiptValidation_ISZELLUYTRFB_020B01DA(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_MXXOKCKDZOKW_00E20068(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0051019E, ReceiptValidation_kCFTypeDictionaryValueCallBacks_0051016A);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version));
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_0051022D(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_00E2000E(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                    }
                    ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number));
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_0051022D(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_00510070((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_IMAQIKPESKUO_00E200D8((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_IMAQIKPESKUO_00E200D8((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_XWEDIUHPRXQF_0051003D((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_00E20039(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00E20083);
                ReceiptValidation_CFDictionarySetValue_005101C0((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1);
            }
            ReceiptValidation_CFArrayAppendValue_020B0148((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00510115(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // From 216 to 204
    ReceiptValidation_IMAQIKPESKUO += 192; ReceiptValidation_IMAQIKPESKUO /= 2; 
    // From 104 to 324
    ReceiptValidation_MXXOKCKDZOKW -= 40; ReceiptValidation_MXXOKCKDZOKW *= 5; ReceiptValidation_MXXOKCKDZOKW += 4; 
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01E101A7(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_014600F2(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00510115(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    const unsigned char *ReceiptValidation_seq_end; \
    int ReceiptValidation_attr_type; \
    int ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 3; ReceiptValidation_code -= 1; ReceiptValidation_code *= 59; ReceiptValidation_code += 55;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    int ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01A00090(ReceiptValidation_BIO_s_mem_0146019F()); \
    ReceiptValidation_BIO_write_01460080(ReceiptValidation_bio_p7, (void *) ReceiptValidation_EYDMZAIXJFBD_020B0004((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_00510070((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01A001ED(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_HVUGSFTZNZCE_00510022(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[488]), 190, 33);  \
    ReceiptValidation_ISZELLUYTRFB_020B01DA(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_MXXOKCKDZOKW_00E20068(kCFAllocatorDefault, (CFIndex) 573, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0051019E, ReceiptValidation_kCFTypeDictionaryValueCallBacks_0051016A); \
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_type)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_current_context->ptr), (ReceiptValidation_length), (&ReceiptValidation_attr_version)); \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
            ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_0051022D(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[367])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_00E2000E(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01E101FB(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_GetReceiptInformation063X((ReceiptValidation_num_ptr), (ReceiptValidation_num_length), (&ReceiptValidation_number)); \
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_0051022D(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_00510070((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_IMAQIKPESKUO_00E200D8((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_IMAQIKPESKUO_00E200D8((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_XWEDIUHPRXQF_0051003D((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_00E20039(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00E20083); \
                ReceiptValidation_CFDictionarySetValue_005101C0((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_00510115(ReceiptValidation_value1); \
            } \
            ReceiptValidation_CFArrayAppendValue_020B0148((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00510115(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_00510115(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_IMAQIKPESKUO += 192; ReceiptValidation_IMAQIKPESKUO /= 2;  \
    ReceiptValidation_MXXOKCKDZOKW -= 40; ReceiptValidation_MXXOKCKDZOKW *= 5; ReceiptValidation_MXXOKCKDZOKW += 4;  \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01E101A7(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_014600F2(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_00510115(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#if DEBUG
inline static void ReceiptValidation_CheckReceiptSignature072(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 16; ReceiptValidation_code -= 2; ReceiptValidation_code *= 12; ReceiptValidation_code += 5; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_014600D5(ReceiptValidation_BIO_s_mem_01E1019F());
    ReceiptValidation_BIO_write_01E10072(ReceiptValidation_bio_p7, (void *) ReceiptValidation_IMAQIKPESKUO_00E200CC((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_MXXOKCKDZOKW_020B0144((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01A001B5(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_01E10219();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_014600D5(ReceiptValidation_BIO_s_mem_01E1019F());
        ReceiptValidation_BIO_write_01E10072(ReceiptValidation_bio_apple, (void *) ReceiptValidation_IMAQIKPESKUO_00E200CC((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_MXXOKCKDZOKW_020B0144((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01A0010C(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01A00067();
        ReceiptValidation_X509_STORE_add_cert_014600E0(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01A00059(NULL, NULL, NULL, NULL, NULL, 0) * 1668;
        if (ReceiptValidation_verify == 1668) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01A00059(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1668;
        if (ReceiptValidation_verify != 1668) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_01E101D3((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_01A00164((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[573];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01A00027(NULL, NID_commonName, ReceiptValidation_common_name, 420);
        if (ReceiptValidation_status > 0) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01A00027(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573);
        if (ReceiptValidation_status <= 0) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 14; ReceiptValidation_digest_length -= 8; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2; 
        const EVP_MD *ReceiptValidation_digester = EVP_sha1();
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_01A00010(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1668;
        if (ReceiptValidation_status == 1668 || ReceiptValidation_len > 0) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_01A00010(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1668;
        if (ReceiptValidation_status != 1668 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            ReceiptValidation_exit_01B00136(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[573];
        volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x:", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[573];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[33]), ReceiptValidation_str3_, 31, 68);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[573];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[520]), ReceiptValidation_str1_, 69, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 11; ReceiptValidation_num -= 7; ReceiptValidation_num *= 3; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[298])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[298])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 1668;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 1668) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[573];
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[126]), ReceiptValidation_str4_, 181, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01460239(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01A001C6(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_01E101E3(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[573];
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[126]), ReceiptValidation_str5_, 181, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01E101A1(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_01E101D3((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_01A00164((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01460239(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01A001C6(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_01E101E3(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        ReceiptValidation_exit_01B00136(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 474 to 377
    ReceiptValidation_ISZELLUYTRFB += 280; ReceiptValidation_ISZELLUYTRFB /= 2; 
    // From 4 to 61
    ReceiptValidation_EYDMZAIXJFBD -= 1; ReceiptValidation_EYDMZAIXJFBD *= 17; ReceiptValidation_EYDMZAIXJFBD += 10; 
    // From 40 to 134
    ReceiptValidation_GQBGLTGJMPEP -= 14; ReceiptValidation_GQBGLTGJMPEP *= 5; ReceiptValidation_GQBGLTGJMPEP += 4; 
ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01A000F2(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01A000AE(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_014601EE(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01A000F2(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01E10075(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature072(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 16; ReceiptValidation_code -= 2; ReceiptValidation_code *= 12; ReceiptValidation_code += 5;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_014600D5(ReceiptValidation_BIO_s_mem_01E1019F()); \
    ReceiptValidation_BIO_write_01E10072(ReceiptValidation_bio_p7, (void *) ReceiptValidation_IMAQIKPESKUO_00E200CC((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_MXXOKCKDZOKW_020B0144((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01A001B5(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_01E10219(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_014600D5(ReceiptValidation_BIO_s_mem_01E1019F()); \
        ReceiptValidation_BIO_write_01E10072(ReceiptValidation_bio_apple, (void *) ReceiptValidation_IMAQIKPESKUO_00E200CC((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_MXXOKCKDZOKW_020B0144((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01A0010C(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01A00067(); \
        ReceiptValidation_X509_STORE_add_cert_014600E0(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01A00059(NULL, NULL, NULL, NULL, NULL, 0) * 1668; \
        if (ReceiptValidation_verify == 1668) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_01A00059(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 1668; \
        if (ReceiptValidation_verify != 1668) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_01E101D3((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_01A00164((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[573]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01A00027(NULL, NID_commonName, ReceiptValidation_common_name, 420); \
        if (ReceiptValidation_status > 0) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01A00027(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 573); \
        if (ReceiptValidation_status <= 0) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 14; ReceiptValidation_digest_length -= 8; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
        const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_01A00010(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1668; \
        if (ReceiptValidation_status == 1668 || ReceiptValidation_len > 0) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_01A00010(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 1668; \
        if (ReceiptValidation_status != 1668 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[573]; \
        volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x:", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[573]; \
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[33]), ReceiptValidation_str3_, 31, 68); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[573]; \
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[520]), ReceiptValidation_str1_, 69, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 11; ReceiptValidation_num -= 7; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[298])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[298])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 1668; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 1668) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[573]; \
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[126]), ReceiptValidation_str4_, 181, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01460239(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01A001C6(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_01E101E3(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[573]; \
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[126]), ReceiptValidation_str5_, 181, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01E101A1(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_01E101D3((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_01A00164((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01460239(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01A001C6(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_01E101E3(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        ReceiptValidation_exit_01B00136(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail; \
    } \
    ReceiptValidation_ISZELLUYTRFB += 280; ReceiptValidation_ISZELLUYTRFB /= 2;  \
    ReceiptValidation_EYDMZAIXJFBD -= 1; ReceiptValidation_EYDMZAIXJFBD *= 17; ReceiptValidation_EYDMZAIXJFBD += 10;  \
    ReceiptValidation_GQBGLTGJMPEP -= 14; ReceiptValidation_GQBGLTGJMPEP *= 5; ReceiptValidation_GQBGLTGJMPEP += 4;  \
ReceiptValidation_CheckReceiptSignature072_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01A000F2(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01A000AE(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_014601EE(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01A000F2(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01E10075(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    volatile int ReceiptValidation_code = 96; ReceiptValidation_code -= 39; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[544]), 139, 18);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GQBGLTGJMPEP_00510086(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_00E2003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key);
    if (ReceiptValidation_ISZELLUYTRFB_020B0179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key);
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key);
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 34 to 60
    ReceiptValidation_HVUGSFTZNZCE -= 14; ReceiptValidation_HVUGSFTZNZCE *= 3; 
    // From 61 to 61
    ReceiptValidation_EYDMZAIXJFBD /= 1; 
    // From 218 to 525
    ReceiptValidation_HKRCMNVFMLFM -= 87; ReceiptValidation_HKRCMNVFMLFM *= 4; ReceiptValidation_HKRCMNVFMLFM += 1; 
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    volatile int ReceiptValidation_code = 96; ReceiptValidation_code -= 39; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[544]), 139, 18); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_GQBGLTGJMPEP_00510086(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_00E2003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key); \
    if (ReceiptValidation_ISZELLUYTRFB_020B0179(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_012B00EE(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
    } \
    ReceiptValidation_HVUGSFTZNZCE -= 14; ReceiptValidation_HVUGSFTZNZCE *= 3;  \
    ReceiptValidation_EYDMZAIXJFBD /= 1;  \
    ReceiptValidation_HKRCMNVFMLFM -= 87; ReceiptValidation_HKRCMNVFMLFM *= 4; ReceiptValidation_HKRCMNVFMLFM += 1;  \
    ReceiptValidation_CFRelease_020B005A(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    volatile int ReceiptValidation_code = 33; ReceiptValidation_code -= 9; ReceiptValidation_code *= 7; ReceiptValidation_code += 5; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[411]), 190, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HKRCMNVFMLFM_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_020B003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key);
    if (ReceiptValidation_HVUGSFTZNZCE_020B003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_002C0136(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key);
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1);
    }
    // Global variables computation
    // Set to 12
    ReceiptValidation_ISZELLUYTRFB = 12;
    // From 61 to 525
    ReceiptValidation_XWEDIUHPRXQF -= 9; ReceiptValidation_XWEDIUHPRXQF *= 10; ReceiptValidation_XWEDIUHPRXQF += 5; 
    // From 204 to 564
    ReceiptValidation_IMAQIKPESKUO -= 63; ReceiptValidation_IMAQIKPESKUO *= 4; 
    // Set to 353
    ReceiptValidation_HVUGSFTZNZCE = 353;
    // From 324 to 112
    ReceiptValidation_MXXOKCKDZOKW += 124; ReceiptValidation_MXXOKCKDZOKW /= 4; 
    // From 61 to 82
    ReceiptValidation_EYDMZAIXJFBD -= 34; ReceiptValidation_EYDMZAIXJFBD *= 3; ReceiptValidation_EYDMZAIXJFBD += 1; 
    // From 525 to 248
    ReceiptValidation_HKRCMNVFMLFM += 467; ReceiptValidation_HKRCMNVFMLFM /= 4; 
    // From 134 to 109
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 2; 
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    volatile int ReceiptValidation_code = 33; ReceiptValidation_code -= 9; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[411]), 190, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HKRCMNVFMLFM_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_020B003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key); \
    if (ReceiptValidation_HVUGSFTZNZCE_020B003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_002C0136(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1); \
    } \
    ReceiptValidation_ISZELLUYTRFB = 12; \
    ReceiptValidation_XWEDIUHPRXQF -= 9; ReceiptValidation_XWEDIUHPRXQF *= 10; ReceiptValidation_XWEDIUHPRXQF += 5;  \
    ReceiptValidation_IMAQIKPESKUO -= 63; ReceiptValidation_IMAQIKPESKUO *= 4;  \
    ReceiptValidation_HVUGSFTZNZCE = 353; \
    ReceiptValidation_MXXOKCKDZOKW += 124; ReceiptValidation_MXXOKCKDZOKW /= 4;  \
    ReceiptValidation_EYDMZAIXJFBD -= 34; ReceiptValidation_EYDMZAIXJFBD *= 3; ReceiptValidation_EYDMZAIXJFBD += 1;  \
    ReceiptValidation_HKRCMNVFMLFM += 467; ReceiptValidation_HKRCMNVFMLFM /= 4;  \
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 2;  \
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[411]), 190, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HKRCMNVFMLFM_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_020B003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key);
    if (ReceiptValidation_HVUGSFTZNZCE_020B003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // Set to 12
    ReceiptValidation_ISZELLUYTRFB = 12;
    // From 61 to 525
    ReceiptValidation_XWEDIUHPRXQF -= 9; ReceiptValidation_XWEDIUHPRXQF *= 10; ReceiptValidation_XWEDIUHPRXQF += 5; 
    // From 204 to 564
    ReceiptValidation_IMAQIKPESKUO -= 63; ReceiptValidation_IMAQIKPESKUO *= 4; 
    // Set to 353
    ReceiptValidation_HVUGSFTZNZCE = 353;
    // From 324 to 112
    ReceiptValidation_MXXOKCKDZOKW += 124; ReceiptValidation_MXXOKCKDZOKW /= 4; 
    // From 61 to 82
    ReceiptValidation_EYDMZAIXJFBD -= 34; ReceiptValidation_EYDMZAIXJFBD *= 3; ReceiptValidation_EYDMZAIXJFBD += 1; 
    // From 525 to 248
    ReceiptValidation_HKRCMNVFMLFM += 467; ReceiptValidation_HKRCMNVFMLFM /= 4; 
    // From 134 to 109
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 2; 
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[411]), 190, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_HKRCMNVFMLFM_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_EYDMZAIXJFBD_020B003D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_key); \
    if (ReceiptValidation_HVUGSFTZNZCE_020B003C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_ISZELLUYTRFB = 12; \
    ReceiptValidation_XWEDIUHPRXQF -= 9; ReceiptValidation_XWEDIUHPRXQF *= 10; ReceiptValidation_XWEDIUHPRXQF += 5;  \
    ReceiptValidation_IMAQIKPESKUO -= 63; ReceiptValidation_IMAQIKPESKUO *= 4;  \
    ReceiptValidation_HVUGSFTZNZCE = 353; \
    ReceiptValidation_MXXOKCKDZOKW += 124; ReceiptValidation_MXXOKCKDZOKW /= 4;  \
    ReceiptValidation_EYDMZAIXJFBD -= 34; ReceiptValidation_EYDMZAIXJFBD *= 3; ReceiptValidation_EYDMZAIXJFBD += 1;  \
    ReceiptValidation_HKRCMNVFMLFM += 467; ReceiptValidation_HKRCMNVFMLFM /= 4;  \
    ReceiptValidation_GQBGLTGJMPEP += 84; ReceiptValidation_GQBGLTGJMPEP /= 2;  \
    ReceiptValidation_CFRelease_0051005A(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#if DEBUG
inline static void ReceiptValidation_CheckReceiptHash0A5(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[573];
    volatile int ReceiptValidation_counter = 7; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 4; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    char *ReceiptValidation_str1;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_ISZELLUYTRFB_00E2000C(NULL, ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1) + ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2));
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data1), ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1));
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data2), ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2));
    ReceiptValidation_SHA1_01E100C2(ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data4), ReceiptValidation_digest);
    ReceiptValidation_OpenSSL_add_all_digests_01E10219();
    EVP_MD_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_EVP_MD_CTX_init_01E100D7(&ReceiptValidation_hashctx2);
    char ReceiptValidation_str1_[573];
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[76]), ReceiptValidation_str1_, 237, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1);
    ReceiptValidation_EVP_DigestInit_01E100A8(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data1), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1));
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data2), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2));
    ReceiptValidation_EVP_DigestFinal_01E10223(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_020B0150(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
    if (!ReceiptValidation_HVUGSFTZNZCE_020B0161(ReceiptValidation_data3, ReceiptValidation_data5)) {
        volatile int ReceiptValidation_code = 85; ReceiptValidation_code -= 42; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5);
        ReceiptValidation_exit_002C0136(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data1);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data2);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data4);
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5);
        goto ReceiptValidation_CheckReceiptHash0A5_ReceiptValidation_bail;
    }
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5);
    // Global variables computation
    // Set to 289
    ReceiptValidation_HKRCMNVFMLFM = 289;
ReceiptValidation_CheckReceiptHash0A5_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash0A5(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[573]; \
    volatile int ReceiptValidation_counter = 7; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 4;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    char *ReceiptValidation_str1; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_XWEDIUHPRXQF_0051020D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_HKRCMNVFMLFM_020B00F8((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_ISZELLUYTRFB_00E2000C(NULL, ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1) + ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2)); \
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data1), ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1)); \
    ReceiptValidation_CFDataAppendBytes_00E200DA(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data2), ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2)); \
    ReceiptValidation_SHA1_01E100C2(ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data4), ReceiptValidation_digest); \
    ReceiptValidation_OpenSSL_add_all_digests_01E10219(); \
    EVP_MD_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_EVP_MD_CTX_init_01E100D7(&ReceiptValidation_hashctx2); \
    char ReceiptValidation_str1_[573]; \
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[76]), ReceiptValidation_str1_, 237, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1); \
    ReceiptValidation_EVP_DigestInit_01E100A8(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data1), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data1)); \
    ReceiptValidation_EVP_DigestUpdate_01E100ED(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_00510004(ReceiptValidation_data2), (size_t) ReceiptValidation_MXXOKCKDZOKW_00510070(ReceiptValidation_data2)); \
    ReceiptValidation_EVP_DigestFinal_01E10223(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_020B0150(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
    if (!ReceiptValidation_HVUGSFTZNZCE_020B0161(ReceiptValidation_data3, ReceiptValidation_data5)) { \
        volatile int ReceiptValidation_code = 85; ReceiptValidation_code -= 42; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5); \
        ReceiptValidation_exit_002C0136(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data1); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data2); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data4); \
        ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5); \
        goto ReceiptValidation_CheckReceiptHash0A5_ReceiptValidation_bail; \
    } \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_data5); \
    ReceiptValidation_HKRCMNVFMLFM = 289; \
ReceiptValidation_CheckReceiptHash0A5_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00510115(ReceiptValidation_data4); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 289);
#endif

inline static void ReceiptValidation_AppRunner0A6(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_HKRCMNVFMLFM))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_HKRCMNVFMLFM_006C0121((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#if DEBUG
inline static void ReceiptValidation_CleanUp0AB(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    int ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) {
        if (ReceiptValidation_references[ReceiptValidation_idx]) {
            ReceiptValidation_CFRelease_020B005A(ReceiptValidation_references[ReceiptValidation_idx]);
            ReceiptValidation_references[ReceiptValidation_idx] = NULL;
        }
    }
}
#else
#define ReceiptValidation_CleanUp0AB(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    int ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) { \
        if (ReceiptValidation_references[ReceiptValidation_idx]) { \
            ReceiptValidation_CFRelease_020B005A(ReceiptValidation_references[ReceiptValidation_idx]); \
            ReceiptValidation_references[ReceiptValidation_idx] = NULL; \
        } \
    } \
}
#endif




// CodeBlock EntryPoint
#if DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = _argc;
    ReceiptValidation_ctx1.argv = (const char **) _argv;
    // Initial value
    int ReceiptValidation_index = 596;
    // While loop
    while(ReceiptValidation_index != 1687) {
        switch(ReceiptValidation_index) {
        case 2550:
            ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2032; ReceiptValidation_index /= 2; 
            break;
        case 3031:
            ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 1792; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 2913:
            ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2148; ReceiptValidation_index /= 3; 
            break;
        case 452:
            ReceiptValidation_CheckReceiptHash0A5((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 137; ReceiptValidation_index *= 5; ReceiptValidation_index += 3; 
            break;
        case 1057:
            ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 436; ReceiptValidation_index *= 4; ReceiptValidation_index += 2; 
            break;
        case 1578:
            ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 607; ReceiptValidation_index *= 3; 
            break;
        case 3493:
            ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 575; ReceiptValidation_index /= 9; 
            break;
        case 2486:
            ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 1636; ReceiptValidation_index *= 3; 
            break;
        case 3021:
            ReceiptValidation_LoadReceipt01E((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 1207; ReceiptValidation_index /= 4; 
            break;
        case 1979:
            ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 815; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 3718:
            ReceiptValidation_CheckReceiptSignature072((&ReceiptValidation_ctx1));
            ReceiptValidation_index += 2219; ReceiptValidation_index /= 3; 
            break;
        case 2291:
            ReceiptValidation_CheckBundleVersion05E((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 1281; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
            break;
        case 596:
            ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
            ReceiptValidation_index -= 165; ReceiptValidation_index *= 7; ReceiptValidation_index += 4; 
            break;
        }
    }
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
    ReceiptValidation_ctx1.argc = _argc; \
    ReceiptValidation_ctx1.argv = (const char **) _argv; \
    int ReceiptValidation_index = 596; \
    while(ReceiptValidation_index != 1687) { \
        switch(ReceiptValidation_index) { \
        case 2550: \
            ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2032; ReceiptValidation_index /= 2;  \
            break; \
        case 3031: \
            ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 1792; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 2913: \
            ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2148; ReceiptValidation_index /= 3;  \
            break; \
        case 452: \
            ReceiptValidation_CheckReceiptHash0A5((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 137; ReceiptValidation_index *= 5; ReceiptValidation_index += 3;  \
            break; \
        case 1057: \
            ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 436; ReceiptValidation_index *= 4; ReceiptValidation_index += 2;  \
            break; \
        case 1578: \
            ReceiptValidation_AppRunner0A6((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 607; ReceiptValidation_index *= 3;  \
            break; \
        case 3493: \
            ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 575; ReceiptValidation_index /= 9;  \
            break; \
        case 2486: \
            ReceiptValidation_GetRootCA04F((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 1636; ReceiptValidation_index *= 3;  \
            break; \
        case 3021: \
            ReceiptValidation_LoadReceipt01E((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 1207; ReceiptValidation_index /= 4;  \
            break; \
        case 1979: \
            ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 815; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 3718: \
            ReceiptValidation_CheckReceiptSignature072((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index += 2219; ReceiptValidation_index /= 3;  \
            break; \
        case 2291: \
            ReceiptValidation_CheckBundleVersion05E((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 1281; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
            break; \
        case 596: \
            ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
            ReceiptValidation_index -= 165; ReceiptValidation_index *= 7; ReceiptValidation_index += 4;  \
            break; \
        } \
    } \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

