//  ____                _                  
// |  _ \ ___  ___  ___(_) __ _  ___ _ ___ 
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_  \ 
// |  _ |  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/            
//
// This code was generated by Receigen and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.iccir.Embrace
// CFBundleShortVersionString : 1.0
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if DEBUG && !RECEIGEN_QUIET_DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(args...)    NSLog(@args)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(args...)    fprintf(stderr, args); fprintf(stderr, "\n")
    #endif
#else
    #define __ReceiptValidation_RECEIPT_LOG(args...)
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 2378,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 1),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 1),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 1),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 1),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 1),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 1),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 1),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 1),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 1),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 1),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 1),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 1),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 1),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 1),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 1),

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Global variables
static int ReceiptValidation_XVPZIBJOLJRF __unused;
static int ReceiptValidation_IJWCVSFUONND __unused;
static int ReceiptValidation_YKAWXJHTMVXT __unused;
static int ReceiptValidation_LVYZKPYDFEKB __unused;
static int ReceiptValidation_XWDBOORDJTCP __unused;
static int ReceiptValidation_PNPLYCHEESST __unused;
static int ReceiptValidation_VIQMZYLVBGUH __unused;
static int ReceiptValidation_UTDAXUMGRGHQ __unused;


// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    CFTypeRef guid_data;
    CFTypeRef dummy0003;
    const char ** argv;
    CFTypeRef dummy0000;
    CFTypeRef ca_data;
    CFTypeRef dummy000A;
    CFTypeRef dummy000B;
    CFTypeRef receipt_data;
    CFTypeRef dummy0009;
    CFTypeRef dummy0007;
    CFTypeRef receipt_dict;
    CFTypeRef dummy0001;
    CFTypeRef dummy0004;
    CFTypeRef main_bundle;
    CFTypeRef dummy0002;
    CFTypeRef dummy0005;
    CFTypeRef dummy0008;
    CFTypeRef dummy0006;
    int argc;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    const unsigned char * end;
    CFTypeRef dummy0006;
    CFTypeRef dummy0002;
    CFTypeRef dummy0005;
    CFTypeRef dummy0001;
    CFTypeRef dummy0009;
    const unsigned char * ptr;
    CFTypeRef dummy000A;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy0004;
    CFTypeRef dummy0003;
    CFTypeRef dictionary;
    CFTypeRef dummy0007;
    CFTypeRef dummy0008;
    CFTypeRef dummy0000;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[569] = {
    // "ASN1_get_object" / M(Xor2) / S(244) / L(15)
    "\xa5\xb7\xaa\xd5\xbb\x83\x81\x90\xbb\x8b\x86\x8e\x81\x87\x90\xe4",
    // "" / M(None) / S(0) / L(0)
    "\xcd\xdd\x1d\xc6\xa1\xcf\xf7\x6a\xfd\xc7\x3d\xca\xad\x19\x75\x14\xa8\xa8\xa5\x2a\x1b\xcd\x18\x7a\x98\xbf\x30\xbd\x73\x49\x8b\x37",
    // "glob_b" / M(Xor2) / S(161) / L(6)
    "\xd6\xdd\xde\xd3\xee\xd3\xb1\x7c\x7b\xf5\xbf\x30\x37\x3a\x34\x49",
    // "" / M(None) / S(0) / L(0)
    "\xd9\x83\x40\x45\x02\x16\xbf\xc5\x06\xed\xe1\x10\x49\xce\x4b\xec\xd1\xb7\x60\xe1\xbc\x22\x26\x95\x03\x9a\x86\x5b\xcd\xe1\xaa\x38",
    // "exit" / M(Xor3) / S(232) / L(4)
    "\x9d\x80\x91\x8c\xf8\x27\x6f\xdb\xcf\xb8\x4b\x74\xcc\xc1\x74\xca",
    // "start" / M(Rot) / S(133) / L(5)
    "\xf8\xf9\xe6\xf7\xf9\x85\x8a\x23\x81\xc4\x8b\xa0\xb2\xe6\x71\x93",
    // "kCFBundleIdentifierKey" / M(Xor3) / S(95) / L(22)
    "\x1d\x35\x30\x34\x03\x18\x12\x1a\x13\x3f\x12\x13\x18\x02\x1f\x10\x1f\x13\x04\x3d\x13\x0f\x76",
    // "" / M(None) / S(0) / L(0)
    "\xc1\x4f\xe8\x9c\xcf\xa7\xc9\xbb\xd7\xee\xc9\x39\x10\xf5\x54\x02\xbb\x95\x37\x17\x7b\xaa\x8c\xa1\xc1\xf0\x5d\x65\x47\x18\xfb\x4a",
    // "CFReadStreamCreateWithFile" / M(Xor3) / S(38) / L(26)
    "\x0a\x0f\x1b\x2c\x28\x2d\x1a\x3d\x3b\x2c\x28\x24\x0a\x3b\x2c\x28\x3d\x2c\x1e\x20\x3d\x21\x0f\x20\x25\x2c\x49\xf9\x27\xe7\x93\x48\xd7\xb0\x25",
    // "" / M(None) / S(0) / L(0)
    "\x16\xf3\x47\x0f\xbe\x55\x98\xce\xfb\xcb\xaa\xa5\xa6\x7c\x09\x61\xd9\x95\xfe\x67\x99\x92\x3c\x77\x39\xf5\x54\xbf\xe8\x73\x23\x09",
    // "sk_num" / M(Xor3) / S(165) / L(6)
    "\xc6\xde\xea\xdb\xc0\xd8\xb5\x95\x50\x89\xa2\x74\x75\xb1\x74\x82",
    // "" / M(None) / S(0) / L(0)
    "\xf2\xfe\x8f\x6b\x4f\xd8\xf9\x59\xbc\xa2\x19\x14\x10\xfa\x65\x4a\xb7\x68\x10\x87\x2f\x87\x26\x0d\x00\x49\x80\x53\x05\xc0\xd4\xa1",
    // "CFEqual" / M(Xor4) / S(169) / L(7)
    "\xd3\xd6\xd5\xe1\xe5\xf1\xfc\x90\xf7\x0f\x5d\x64\x1c\x19\xa6\x50",
    // "" / M(None) / S(0) / L(0)
    "\x0e\x07\x8c\x92\x6b\x0e\xfc\x8e\xde\x96\x57\x12\x63\xb4\x50\x2c\xf4\x0b\x3f\x95\x6e\x63\x34\x51\xef\x88\xde\xbc\x6c\xea\x5d\x2d",
    // "IORegistryEntryGetParentEntry" / M(Xor1) / S(191) / L(29)
    "\xf6\xf0\xed\xda\xd8\xd6\xcc\xcb\xcd\xc6\xfa\xd1\xcb\xcd\xc6\xf8\xda\xcb\xef\xde\xcd\xda\xd1\xcb\xfa\xd1\xcb\xcd\xc6\xbf\x5e\xff\x2b\x31\xec\x5f\xc2\xb1",
    // "CFURLCreateFromFileSystemRepresentation" / M(Rot) / S(51) / L(39)
    "\x76\x79\x88\x85\x7f\x76\xa5\x98\x94\xa7\x98\x79\xa5\xa2\xa0\x79\x9c\x9f\x98\x86\xac\xa6\xa7\x98\xa0\x85\x98\xa3\xa5\x98\xa6\x98\xa1\xa7\x94\xa7\x9c\xa2\xa1\x33\x06\xdd\xdd\xf7\x8b\x59\xda\xc7",
    // "Apple Root CA" / M(Xor2) / S(56) / L(13)
    "\x69\x58\x58\x44\x4d\x08\x7a\x47\x47\x5c\x08\x6b\x69\x28\x96\xc8",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(14) / L(59)
    "\x44\x3f\x48\x3f\x73\x48\x43\x70\x48\x44\x44\x48\x40\x71\x48\x43\x47\x48\x41\x6f\x48\x3e\x46\x48\x74\x74\x48\x43\x46\x48\x72\x3f\x48\x42\x6f\x48\x73\x40\x48\x40\x42\x48\x43\x40\x48\x72\x3f\x48\x47\x46\x48\x72\x74\x48\x44\x71\x48\x44\x3e\x0e\x94\x7c\xbe\x17\x81\xbd\xaa\x01",
    // "" / M(None) / S(0) / L(0)
    "\xc4\x82\xbd\xfd\x97\xb1\xf9\x8a\x73\x05\x47\x99\x19\xc3\xd8\xaf\x59\xf7\x74\x49\x53\xe9\x43\xe1\x43\x09\xd5\x6d\x77\x4a\x95\x53",
    // "glob" / M(Xor1) / S(42) / L(4)
    "\x4d\x46\x45\x48\x2a\x30\xf7\xf2\xcf\xbc\x26\x50\x32\x8a\xa7\xf6",
    // "CFDataCreateMutable" / M(Rot) / S(253) / L(19)
    "\x40\x43\x41\x5e\x71\x5e\x40\x6f\x62\x5e\x71\x62\x4a\x72\x71\x5e\x5f\x69\x62\xfd",
    // "d2i_PKCS7_bio" / M(Xor3) / S(215) / L(13)
    "\x83\xd5\x8e\xb8\xb7\xac\xa4\xb4\xd0\xb8\x85\x8e\x88\xe7\xf0\x8a",
    // "BIO_write" / M(Rot) / S(206) / L(9)
    "\x10\x17\x1d\x2d\x45\x40\x37\x42\x33\xce\x31\x81\xd1\x6e\x78\x50",
    // "" / M(None) / S(0) / L(0)
    "\x23\x51\xca\xc9\x9a\x8d\x54\x45\xb2\x47\x21\x25\x0f\x4b\x0d\x0e\x44\xd5\xe7\xfe\x73\x13\x97\x70\x5f\x6b\x32\xcd\x17\x6b\x36\x2d",
    // "" / M(None) / S(0) / L(0)
    "\x53\xff\x78\xf4\xb3\x8d\xa2\x4b\xb3\x9e\x61\x55\x76\x30\x49\xd3\xa9\x6a\x3a\xaa\x32\x29\x1c\xf5\xfe\xcb\x50\xa5\xda\xc6\xa3\x66",
    // "CFDictionaryCreateMutable" / M(Rot) / S(15) / L(25)
    "\x52\x55\x53\x78\x72\x83\x78\x7e\x7d\x70\x81\x88\x52\x81\x74\x70\x83\x74\x5c\x84\x83\x70\x71\x7b\x74\x0f\x01\xc3\xe4\xdf\x06\x1d\x76\x56",
    // "receipt" / M(Xor2) / S(14) / L(7)
    "\x6c\x7b\x7d\x7b\x77\x6e\x6a\x1e\x97\x43\x08\x58\xe6\x58\x7f\x71",
    // "CC_SHA1_Update" / M(Xor4) / S(219) / L(14)
    "\xf3\xf3\xef\xe3\xf8\xf1\x81\xef\xe5\xc0\xd4\xd1\xc4\xd5\xb0\xfe",
    // "" / M(None) / S(0) / L(0)
    "\x94\x82\xc3\xba\xd4\xdd\xc4\x71\x2b\x7c\xc3\xc8\xe0\x6e\x53\x6a\x6c\x67\x7c\x72\x91\x70\x8a\xec\x6b\xf5\x31\xf9\xb8\xc5\x86\x42",
    // "CFArrayGetValueAtIndex" / M(Xor2) / S(107) / L(22)
    "\x3f\x3a\x3d\x0e\x0e\x1d\x05\x3b\x19\x08\x2a\x1d\x10\x09\x19\x3d\x08\x35\x12\x18\x19\x04\x7c",
    // "IORegistryEntryGetParentEntry" / M(Xor3) / S(44) / L(29)
    "\x1b\x1d\x00\x37\x35\x3b\x21\x26\x20\x2b\x17\x3c\x26\x20\x2b\x15\x37\x26\x02\x33\x20\x37\x3c\x26\x17\x3c\x26\x20\x2b\x52\x08\x18\x10\x32\xbb\x96\x29\xe6",
    // "CFArrayAppendValue" / M(Rot) / S(37) / L(18)
    "\x68\x6b\x66\x97\x97\x86\x9e\x66\x95\x95\x8a\x93\x89\x7b\x86\x91\x9a\x8a\x25",
    // "CFReadStreamRead" / M(Xor3) / S(72) / L(16)
    "\x1a\x1f\x0b\x3c\x38\x3d\x0a\x2d\x2b\x3c\x38\x34\x0b\x3c\x38\x3d\x59",
    // "IOObjectRelease" / M(Xor3) / S(230) / L(15)
    "\xbf\xb9\xb9\x94\x9c\x93\x95\x82\xa4\x93\x9a\x93\x97\x85\x93\xf6",
    // "%02x" / M(Rot) / S(92) / L(4)
    "\x81\x8c\x8e\xd4\x5c\x49\xba\x7e\xbe\x97\x09\xba\x48\xf1\x63\x7c",
    // "X509_digest" / M(Xor1) / S(72) / L(11)
    "\x10\x7d\x78\x71\x17\x2c\x21\x2f\x2d\x3b\x3c\x48\xbd\xc8\x68\x59",
    // "EVP_DigestFinal" / M(Xor4) / S(44) / L(15)
    "\x85\x96\x90\x9f\x84\xa9\xa7\xa5\xb3\xb4\x86\xa9\xae\xa1\xac\xc0",
    // "sk_value" / M(Xor1) / S(42) / L(8)
    "\x59\x41\x75\x5c\x4b\x46\x5f\x4f\x2a\x34\x1c\x30\x73\x4a\xb0\x05",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(40) / L(14)
    "\x6a\x6c\x74\x7c\x67\x75\x79\x71\x76\x67\x77\x76\x74\x61\x38\x22",
    // "IOServiceGetMatchingServices" / M(Xor1) / S(157) / L(28)
    "\xd4\xd2\xce\xf8\xef\xeb\xf4\xfe\xf8\xda\xf8\xe9\xd0\xfc\xe9\xfe\xf5\xf4\xf3\xfa\xce\xf8\xef\xeb\xf4\xfe\xf8\xee\x9d\x36\x2f\x17\x4a\x36\x30\x04\xe8",
    // "" / M(None) / S(0) / L(0)
    "\x72\xe4\x91\xad\x4f\xdb\x7f\x3f\xfe\xd3\x2d\xc0\x97\xac\x6a\x12\x5f\x5b\x73\xe0\x0d\xde\xdf\x51\x0f\xde\x28\x26\x8d\xe9\xf1\xec",
    // "RTLD_MAIN_ONLY" / M(Xor1) / S(137) / L(14)
    "\xdb\xdd\xc5\xcd\xd6\xc4\xc8\xc0\xc7\xd6\xc6\xc7\xc5\xd0\x89\x3b",
    // "CFStringGetFileSystemRepresentation" / M(Xor3) / S(127) / L(35)
    "\xe0\xe5\xf0\xd7\xd1\xca\xcd\xc4\xe4\xc6\xd7\xe5\xca\xcf\xc6\xf0\xda\xd0\xd7\xc6\xce\xf1\xc6\xd3\xd1\xc6\xd0\xc6\xcd\xd7\xc2\xd7\xca\xcc\xcd\xa3",
    // "BIO_new" / M(Xor3) / S(69) / L(7)
    "\x17\x1c\x1a\x0a\x3b\x30\x22\x55\xa2\x86\xa2\xf3\xa4\x69\x25\x53",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor2) / S(37) / L(57)
    "\x48\x34\x1e\x14\x13\x02\x0a\x48\x2b\x0e\x05\x15\x06\x15\x1e\x48\x2c\x02\x1e\x04\x0f\x06\x0e\x09\x14\x48\x34\x1e\x14\x13\x02\x0a\x35\x08\x08\x13\x24\x02\x15\x13\x0e\x01\x0e\x04\x06\x13\x02\x14\x49\x0c\x02\x1e\x04\x0f\x06\x0e\x09\x67\xe0\x42\xbf\x93\x3a\xfe\x9b\x9a",
    // "" / M(None) / S(0) / L(0)
    "\x7e\xf0\x9b\x20\xd6\xa6\x00\x5a\x08\x21\xfe\xb0\x62\xac\x0c\x19\xe5\x53\xd0\x92\x37\x9c\x50\x86\x65\xa1\x11\x2f\x04\xd8\x3e\xa3",
    // "" / M(None) / S(0) / L(0)
    "\xcb\x0b\xc2\xe6\x4a\xbd\x05\x46\x75\x20\x10\x7b\xa6\x42\x01\x89\x78\x87\x15\x5d\xe4\x19\xad\xda\x25\x90\x5e\xef\x5c\x42\x54\xc1",
    // "sk_value" / M(Xor4) / S(162) / L(8)
    "\x53\x4b\x7f\x56\x41\x4c\x55\x45\x20\x0e\x41\x04\xc7\xea\xed\x15",
    // "" / M(None) / S(0) / L(0)
    "\xac\xde\xa0\xe6\x05\xc9\x18\x5c\xda\x49\x7c\xd9\xb8\x36\xd8\x8b\x7c\x81\xd1\x15\x7c\xfc\x4f\x09\x5e\xe3\x46\x64\xb7\x3b\x2d\x18",
    // "" / M(None) / S(0) / L(0)
    "\x45\xc7\xfe\xcc\x8a\xca\xb0\xed\x0b\x94\x8c\xcf\x9d\xb0\x8b\x1b\x31\x7a\xa9\xf8\x8a\x18\x94\x93\x98\xd9\xe7\x38\x3f\x4d\xab\xed",
    // "kSecClass" / M(Xor4) / S(174) / L(9)
    "\x8b\xb3\x85\x83\xa3\x8c\x81\x93\x93\xe0\x95\x2f\x86\x34\xfb\xb5",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(57) / L(40)
    "\x0f\x08\x08\x5c\x0c\x5b\x0f\x0f\x0b\x5a\x0c\x00\x0a\x58\x09\x01\x5f\x5f\x0c\x01\x5d\x08\x0d\x58\x5c\x0b\x0b\x0d\x0c\x0b\x5d\x08\x00\x01\x5d\x5f\x0f\x5a\x0f\x09\x39\x21\x56\x5e\xf3\x9f\xa9\xac\xfe",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(29) / L(57)
    "\x55\x29\x03\x09\x0e\x1f\x17\x55\x36\x13\x18\x08\x1b\x08\x03\x55\x31\x1f\x03\x19\x12\x1b\x13\x14\x09\x55\x29\x03\x09\x0e\x1f\x17\x28\x15\x15\x0e\x39\x1f\x08\x0e\x13\x1c\x13\x19\x1b\x0e\x1f\x09\x54\x11\x1f\x03\x19\x12\x1b\x13\x14\x7a\x3f\x2e\x2d\x09\x09\x87\x8e\x65",
    // "" / M(None) / S(0) / L(0)
    "\x3e\xe8\x4d\xe8\x99\x27\xff\x60\x4f\x57\x6c\x83\x72\x36\x75\xcb\x4b\x6c\x7c\x7f\xfc\xe0\x6d\x58\x89\x15\x7f\xa1\x31\x88\xee\xaa",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(34) / L(29)
    "\x67\x4f\x4a\x58\x75\x7c\x69\x48\x65\x6f\x78\x65\x63\x62\x6d\x7e\x75\x47\x69\x75\x4f\x6d\x60\x60\x4e\x6d\x6f\x67\x7f\x0c\xaa\x80\x55\xe6\xaf\x6c\x35\xc3",
    // "EVP_DigestInit" / M(Rot) / S(75) / L(14)
    "\x90\xa1\x9b\xaa\x8f\xb4\xb2\xb0\xbe\xbf\x94\xb9\xb4\xbf\x4b\x05",
    // "strlen" / M(Xor3) / S(213) / L(6)
    "\x96\x91\x97\x89\x80\x8b\xe5\xd8\x73\x0a\x31\xd1\x18\x71\xc1\xe7",
    // "PKCS7_free" / M(Xor4) / S(239) / L(10)
    "\xa0\xbb\xb3\xa3\xc7\xaf\x96\x82\x95\x95\xf0\x67\xa8\x8d\x40\xbd",
    // "" / M(None) / S(0) / L(0)
    "\x44\x35\x62\x19\x3e\x55\xa6\x66\x2e\x3c\x7b\x0b\x1b\xb3\x26\x3f\x50\xd1\xb9\x9d\x1b\x22\xff\x93\xa4\x17\x86\x7f\xe9\xaa\xb9\xe8",
    // "SecKeychainOpen" / M(Xor2) / S(213) / L(15)
    "\x96\xa0\xa6\x8e\xa0\xbc\xa6\xad\xa4\xac\xab\x8a\xb5\xa0\xab\xc5",
    // "IOBSDNameMatching" / M(Xor3) / S(109) / L(17)
    "\x36\x30\x3d\x2c\x3b\x31\x1e\x12\x1a\x32\x1e\x0b\x1c\x17\x16\x11\x18\x7f",
    // "" / M(None) / S(0) / L(0)
    "\x28\x30\x08\x67\x1a\xc1\xa4\x0b\x1c\xaa\xc5\x5f\xc5\x4a\x59\xf5\x71\x68\x1b\xb2\x9f\x44\xf1\x5b\x0c\x32\x11\xd7\x3a\xe4\xc1\x23",
    // "CFEqual" / M(Rot) / S(169) / L(7)
    "\xec\xef\xee\x1a\x1e\x0a\x15\xa9\x33\x5c\xf7\xfb\x1d\x48\x49\x09",
    // "d2i_PKCS7_bio" / M(Rot) / S(66) / L(13)
    "\xa6\x74\xab\xa1\x92\x8d\x85\x95\x79\xa1\xa4\xab\xb1\x42\xd2\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x20\xd0\x45\xbc\xee\xdc\xe6\x5a\x5f\x50\x81\x69\x82\xba\xa2\x48\x0a\x53\x6d\x11\x6f\xd4\x27\x05\x10\x37\x21\x5d\xd3\xc8\x25\xc1",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x74\xdd\x5c\xc7\x9e\x53\x29\x5d\xc8\x45\x8e\xd4\x1c\x34\x07\x22\xda\xb6\xdc\x11\xf8\xfd\x5e\x86\xd0\xde\x92\x14\x47\x07\x36",
    // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(239) / L(25)
    "\xfc\xe3\xff\xe3\xf5\xf9\xfd\xe3\xfc\xfc\xfe\xfb\xfe\xf8\xe3\xfc\xfd\xfd\xe3\xfb\xe3\xfc\xfc\xe3\xfc\xcd\xa6\xe8\x95\x47\xa6\x20\xaa\xe6",
    // "PKCS7_get0_signers" / M(Xor1) / S(108) / L(18)
    "\x3c\x27\x2f\x3f\x5b\x33\x0b\x09\x18\x5c\x33\x1f\x05\x0b\x02\x09\x1e\x1f\x6c",
    // "" / M(None) / S(0) / L(0)
    "\xf3\xb9\x24\xf4\xe6\x86\x13\x03\x30\x92\x5b\x92\xc3\x2e\x07\xb1\xb0\x51\x7f\x41\xb4\xdd\xb9\x14\x81\x24\x38\xd2\xb8\xcd\x15\x59",
    // "" / M(None) / S(0) / L(0)
    "\x97\xb2\x32\x42\x58\x06\xff\x71\x29\x64\x5d\xcf\x44\x1f\xa4\x71\x4f\xba\x5a\x41\x8f\x3a\x21\x99\x22\x71\xc1\xa4\x2d\x0d\x03\xbf",
    // "CFReadStreamClose" / M(Xor1) / S(51) / L(17)
    "\x70\x75\x61\x56\x52\x57\x60\x47\x41\x56\x52\x5e\x70\x5f\x5c\x40\x56\x33",
    // "" / M(None) / S(0) / L(0)
    "\x69\xf6\x35\xf3\xe9\xe8\x0c\x3f\x02\xc4\xe7\x72\x4e\x7f\xf3\xe7\x01\xc6\x11\x14\x9f\x08\x56\xd8\x49\x3c\x0d\x64\x1c\x17\x64\xea",
    // "sel_registerName" / M(Xor1) / S(66) / L(16)
    "\x31\x27\x2e\x1d\x30\x27\x25\x2b\x31\x36\x27\x30\x0c\x23\x2f\x27\x42",
    // "EVP_MD_CTX_init" / M(Rot) / S(237) / L(15)
    "\x32\x43\x3d\x4c\x3a\x31\x4c\x30\x41\x45\x4c\x56\x5b\x56\x61\xed",
    // "sel_registerName" / M(Xor3) / S(96) / L(16)
    "\x02\x14\x1d\x2e\x03\x14\x16\x18\x02\x05\x14\x03\x3f\x10\x1c\x14\x71",
    // "NSApplicationMain" / M(Xor4) / S(90) / L(17)
    "\x1a\x07\x15\x24\x24\x38\x3d\x37\x35\x20\x3d\x3b\x3a\x19\x35\x3d\x3a\x54",
    // "objc_msgSend" / M(Rot) / S(244) / L(12)
    "\x63\x56\x5e\x57\x53\x61\x67\x5b\x47\x59\x62\x58\xf4\x3e\x50\x81",
    // "" / M(None) / S(0) / L(0)
    "\x62\x99\xe8\xd2\xd1\x25\x7e\x67\xb8\x93\x30\x7b\x9a\x19\x43\x4a\x28\x85\x97\xc8\xf0\xec\x5a\x7e\x93\x9b\x0a\x17\x16\xe7\xc0\x9a",
    // "CFBundleIdentifier" / M(Xor4) / S(16) / L(18)
    "\x73\x76\x72\x45\x5e\x54\x5c\x55\x79\x54\x55\x5e\x44\x59\x56\x59\x55\x42\x30",
    // "SHA1" / M(Rot) / S(207) / L(4)
    "\x22\x17\x10\x00\xcf\x98\xb0\xbd\x4c\x46\xec\xfe\x92\x45\x8e\xe9",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(61) / L(59)
    "\x0b\x0c\x07\x0c\x58\x07\x08\x5f\x07\x0b\x0b\x07\x0f\x5e\x07\x08\x04\x07\x0e\x5c\x07\x0d\x05\x07\x5b\x5b\x07\x08\x05\x07\x59\x0c\x07\x09\x5c\x07\x58\x0f\x07\x0f\x09\x07\x08\x0f\x07\x59\x0c\x07\x04\x05\x07\x59\x5b\x07\x0b\x5e\x07\x0b\x0d\x3d\x0e\x39\xaa\x53\xa1\x97\x27\xfe",
    // "" / M(None) / S(0) / L(0)
    "\x0b\x53\x42\xd3\xe4\xda\xa3\xb7\x9d\x8c\x7d\xd7\x17\x6a\x7d\xca\xa8\x71\x5a\x05\x00\x7d\x2a\xc8\x8d\x95\x90\xfd\x40\xa4\xc4\x00",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(8) / L(39)
    "\x7b\x7e\x6d\x6a\x74\x7b\x4a\x5d\x59\x4c\x5d\x7e\x4a\x57\x55\x7e\x51\x54\x5d\x6b\x41\x4b\x4c\x5d\x55\x6a\x5d\x48\x4a\x5d\x4b\x5d\x56\x4c\x59\x4c\x51\x57\x56\x38\x80\x38\x9a\x53\xd4\xaf\x25\x09",
    // "CC_SHA1_Update" / M(Xor1) / S(187) / L(14)
    "\xf8\xf8\xe4\xe8\xf3\xfa\x8a\xe4\xee\xcb\xdf\xda\xcf\xde\xbb\xd0",
    // "%02x:" / M(Xor4) / S(3) / L(5)
    "\x15\x00\x02\x48\x0a\x30\x96\x89\xc6\xa9\x57\x75\xc3\x7c\x89\xdd",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(157) / L(59)
    "\xab\xac\xa7\xac\xf8\xa7\xa8\xff\xa7\xab\xab\xa7\xaf\xfe\xa7\xa8\xa4\xa7\xae\xfc\xa7\xad\xa5\xa7\xfb\xfb\xa7\xa8\xa5\xa7\xf9\xac\xa7\xa9\xfc\xa7\xf8\xaf\xa7\xaf\xa9\xa7\xa8\xaf\xa7\xf9\xac\xa7\xa4\xa5\xa7\xf9\xfb\xa7\xab\xfe\xa7\xab\xad\x9d\xad\x72\x37\x9b\xf2\xa5\xee\xde",
    // "SHA1_Init" / M(Xor1) / S(81) / L(9)
    "\x02\x19\x10\x60\x0e\x18\x3f\x38\x25\x51\xcc\x3a\xaf\xe1\x0d\xff",
    // "CFReadStreamOpen" / M(Rot) / S(58) / L(16)
    "\x7d\x80\x8c\x9f\x9b\x9e\x8d\xae\xac\x9f\x9b\xa7\x89\xaa\x9f\xa8\x3a",
    // "CFStringCreateWithCString" / M(Xor3) / S(2) / L(25)
    "\x67\x62\x77\x50\x56\x4d\x4a\x43\x67\x56\x41\x45\x50\x41\x73\x4d\x50\x4c\x67\x77\x50\x56\x4d\x4a\x43\x24\x98\xa4\xf6\xf1\xa0\xd9\x48\xb4",
    // "kCFTypeArrayCallBacks" / M(Xor2) / S(46) / L(21)
    "\x53\x7b\x7e\x6c\x41\x48\x5d\x79\x4a\x4a\x59\x41\x7b\x59\x54\x54\x7a\x59\x5b\x53\x4b\x38",
    // "kSecMatchSearchList" / M(Xor3) / S(239) / L(19)
    "\x68\x50\x66\x60\x4e\x62\x77\x60\x6b\x50\x66\x62\x71\x60\x6b\x4f\x6a\x70\x77\x03",
    // "CC_SHA1" / M(Xor2) / S(186) / L(7)
    "\xe9\xe9\xf5\xf9\xe2\xeb\x9b\xaa\x20\xac\x07\x68\x9b\x4a\x9f\x82",
    // "kSecClass" / M(Xor2) / S(96) / L(9)
    "\x1b\x23\x15\x13\x33\x1c\x11\x03\x03\x70\x75\x29\x96\xea\xd1\xfe",
    // "CFDataCreateMutable" / M(Xor3) / S(33) / L(19)
    "\x76\x73\x71\x54\x41\x54\x76\x47\x50\x54\x41\x50\x78\x40\x41\x54\x57\x59\x50\x35",
    // "OpenSSL_add_all_digests" / M(Xor4) / S(0) / L(23)
    "\x4f\x70\x65\x6e\x53\x53\x4c\x5f\x61\x64\x64\x5f\x61\x6c\x6c\x5f\x64\x69\x67\x65\x73\x74\x73\x00\xc5\x81\xc9\x9e\x14\x0c\x95\x43",
    // "" / M(None) / S(0) / L(0)
    "\xf6\xa4\xfd\xc3\x01\xd9\xcc\x5e\xdc\x25\x6e\xeb\xeb\xdd\x54\xcb\x0e\x75\x86\x19\xa6\x1b\xd5\x0a\x5c\x9d\xd5\x20\xd8\xc9\xeb\x3f",
    // "sk_num" / M(Rot) / S(237) / L(6)
    "\x60\x58\x4c\x5b\x62\x5a\xed\x99\xc6\xab\xd9\xe7\x9a\x4e\x1e\x2a",
    // "" / M(None) / S(0) / L(0)
    "\xaf\x57\x68\x2b\x7e\xa0\x76\xdd\x62\xe4\x7e\xe7\xd7\x0e\xf2\x82\x38\xf2\x27\x20\xcc\xfa\x15\xb7\xf4\xa6\x5b\xd5\x5b\x2c\xe7\xff",
    // "" / M(None) / S(0) / L(0)
    "\xc3\x89\x6c\x04\x06\x45\xd8\x8b\x3c\x94\xf1\x86\x4f\xdb\xf5\xa5\xa8\x2f\xc5\x02\x6e\xbf\x57\xaf\x93\xde\xbf\x7a\x9a\x30\x04\xd6",
    // "SHA1_Init" / M(Xor1) / S(27) / L(9)
    "\x48\x53\x5a\x2a\x44\x52\x75\x72\x6f\x1b\x27\x67\xb6\x13\x08\x50",
    // "CFEqual" / M(Rot) / S(214) / L(7)
    "\x19\x1c\x1b\x47\x4b\x37\x42\xd6\xa1\x6f\x0f\xfd\x89\x86\x0b\x02",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor3) / S(59) / L(43)
    "\x2c\x29\x3a\x3d\x23\x2c\x1d\x0a\x0e\x1b\x0a\x38\x06\x1b\x07\x29\x06\x03\x0a\x3c\x16\x1c\x1b\x0a\x02\x3f\x0e\x1b\x07\x3d\x0a\x03\x0e\x1b\x06\x19\x0a\x3b\x00\x2d\x0e\x1c\x0a\x6f\xd0\xd5\xe9\x98\xee\xc2\x85\xef",
    // "" / M(None) / S(0) / L(0)
    "\xa7\xea\xf5\x50\xbf\x17\x8d\x93\x49\xf8\x5a\xca\x8c\x56\x5f\x45\x12\x7c\x16\xe1\x92\xb7\xfa\xec\xe1\x82\x0e\xb5\x86\xc0\xfe\xa9",
    // "kSecReturnRef" / M(Xor2) / S(70) / L(13)
    "\x3d\x05\x33\x35\x04\x33\x22\x23\x24\x38\x04\x33\x30\x56\xe9\xef",
    // "alloc" / M(Rot) / S(74) / L(5)
    "\xab\xb6\xb6\xb9\xad\x4a\x9b\xf8\x4d\x5e\x54\x5f\xc9\x6d\x31\x33",
    // "objc_msgSend" / M(Xor1) / S(197) / L(12)
    "\xaa\xa7\xaf\xa6\x9a\xa8\xb6\xa2\x96\xa0\xab\xa1\xc5\xd6\xad\x27",
    // "CFStringCreateWithCString" / M(Xor3) / S(36) / L(25)
    "\x05\x00\x15\x32\x34\x2f\x28\x21\x05\x34\x23\x27\x32\x23\x11\x2f\x32\x2e\x05\x15\x32\x34\x2f\x28\x21\x46\xb8\xc3\xbe\xe0\x7e\x77\x07\x4b",
    // "X509_free" / M(Rot) / S(129) / L(9)
    "\xd9\xb6\xb1\xba\xe0\xe7\xf3\xe6\xe6\x81\x81\x70\x63\xcd\x6f\x65",
    // "kCFBundleIdentifierKey" / M(Xor2) / S(155) / L(22)
    "\xe7\xcf\xca\xce\xf9\xe2\xe8\xe0\xe9\xc5\xe8\xe9\xe2\xf8\xe5\xea\xe5\xe9\xfe\xc7\xe9\xf5\x8c",
    // "CFDataCreate" / M(Xor2) / S(213) / L(12)
    "\x86\x83\x81\xa4\xb1\xa4\x86\xb7\xa0\xa4\xb1\xa0\xc5\x49\x3c\x0d",
    // "ASN1_get_object" / M(Xor1) / S(146) / L(15)
    "\xd3\xc1\xdc\xa3\xcd\xf5\xf7\xe6\xcd\xfd\xf0\xf8\xf7\xf1\xe6\x92",
    // "CFDictionaryGetValue" / M(Xor2) / S(216) / L(20)
    "\x8e\x8b\x89\xa4\xae\xb9\xa4\xa2\xa3\xac\xbf\xb4\x8a\xa8\xb9\x9b\xac\xa1\xb8\xa8\xcd",
    // "X509_NAME_get_text_by_NID" / M(Xor3) / S(159) / L(25)
    "\x99\xf4\xf1\xf8\x9e\x8f\x80\x8c\x84\x9e\xa6\xa4\xb5\x9e\xb5\xa4\xb9\xb5\x9e\xa3\xb8\x9e\x8f\x88\x85\xc1\x12\x78\x6a\x70\x35\xd8\x6d\xfd",
    // "" / M(None) / S(0) / L(0)
    "\x4a\xf9\x2b\x84\x4f\x9e\x46\x63\x1c\x48\xeb\x8d\x2d\xa0\xb4\xa7\xfc\x3c\x6b\xe4\xaa\x44\xd8\xfe\x9f\xfc\x25\x3a\xc8\xee\x4c\xe6",
    // "BIO_write" / M(Xor1) / S(94) / L(9)
    "\x1c\x17\x11\x01\x29\x2c\x37\x2a\x3b\x5e\xff\xb6\x97\x92\x39\x98",
    // "CFArrayCreateMutable" / M(Xor2) / S(25) / L(20)
    "\x4f\x4a\x4d\x7e\x7e\x6d\x75\x4f\x7e\x69\x6d\x78\x69\x41\x79\x78\x6d\x6e\x60\x69\x0c",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(97) / L(59)
    "\x97\x92\x9b\x92\xa6\x9b\x96\xa3\x9b\x97\x97\x9b\x93\xa4\x9b\x96\x9a\x9b\x94\xa2\x9b\x91\x99\x9b\xa7\xa7\x9b\x96\x99\x9b\xa5\x92\x9b\x95\xa2\x9b\xa6\x93\x9b\x93\x95\x9b\x96\x93\x9b\xa5\x92\x9b\x9a\x99\x9b\xa5\xa7\x9b\x97\xa4\x9b\x97\x91\x61\x49\x71\x67\xe7\x03\xc9\xd7\xf8",
    // "X509_get_ext_by_OBJ" / M(Rot) / S(96) / L(19)
    "\xb8\x95\x90\x99\xbf\xc7\xc5\xd4\xbf\xc5\xd8\xd4\xbf\xc2\xd9\xbf\xaf\xa2\xaa\x60",
    // "" / M(None) / S(0) / L(0)
    "\xdc\x12\xde\xfe\x29\xbe\x91\x6b\x80\xd9\x76\xad\x0c\xb6\x14\xe3\xe3\x12\x8f\x4b\xf7\x0f\x5d\x64\x1c\x19\xa6\x50\x75\x87\xd2\xb0",
    // "Contents" / M(Xor1) / S(197) / L(8)
    "\x86\xaa\xab\xb1\xa0\xab\xb1\xb6\xc5\x40\x4b\xe6\x87\x2b\xb6\xb9",
    // "SHA1_Final" / M(Xor1) / S(148) / L(10)
    "\xc7\xdc\xd5\xa5\xcb\xd2\xfd\xfa\xf5\xf8\x94\x3e\xab\xab\xb4\x70",
    // "X509_free" / M(Rot) / S(6) / L(9)
    "\x5e\x3b\x36\x3f\x65\x6c\x78\x6b\x6b\x06\x4c\x9a\x2a\xaa\xf4\x45",
    // "CFNumberCreate" / M(Xor3) / S(133) / L(14)
    "\xd6\xd3\xdb\xe0\xf8\xf7\xf0\xe7\xd6\xe7\xf0\xf4\xe1\xf0\x95\xc2",
    // "CFBundleGetIdentifier" / M(Rot) / S(27) / L(21)
    "\x5e\x61\x5d\x90\x89\x7f\x87\x80\x62\x80\x8f\x64\x7f\x80\x89\x8f\x84\x81\x84\x80\x8d\x1b",
    // "" / M(None) / S(0) / L(0)
    "\xc8\x11\x17\x7f\x94\xfd\x93\x19\x59\x58\x54\x5f\x4c\xc9\xa1\x3a\xdf\x0c\x94\x78\x79\xc4\x13\x2b\x49\xcc\xe7\xa9\x2a\x93\xd8\x66",
    // "d2i_X509_bio" / M(Xor4) / S(189) / L(12)
    "\xb4\xe2\xb9\x8f\x88\xe5\xe0\xe9\x8f\xb2\xb9\xbf\xd0\xe3\x11\xed",
    // "CFBundleUnloadExecutable" / M(Xor4) / S(221) / L(24)
    "\x3e\x3b\x3f\x08\x13\x19\x11\x18\x28\x13\x11\x12\x1c\x19\x38\x05\x18\x1e\x08\x09\x1c\x1f\x11\x18\x7d\xdf\xb3\x76\xfc\x22\x25\xbd\xe7",
    // "X509_STORE_add_cert" / M(Xor1) / S(190) / L(19)
    "\xe6\x8b\x8e\x87\xe1\xed\xea\xf1\xec\xfb\xe1\xdf\xda\xda\xe1\xdd\xdb\xcc\xca\xbe",
    // "OBJ_txt2obj" / M(Xor4) / S(157) / L(11)
    "\x9f\x92\x9a\x8f\xa4\xa8\xa4\xe2\xbf\xb2\xba\xd0\x30\x8b\x97\x96",
    // "CFDataCreate" / M(Xor4) / S(204) / L(12)
    "\x83\x86\x84\xa1\xb4\xa1\x83\xb2\xa5\xa1\xb4\xa5\xc0\xd1\x7c\x92",
    // "CFBundleVersion" / M(Xor3) / S(216) / L(15)
    "\xab\xae\xaa\x9d\x86\x8c\x84\x8d\xbe\x8d\x9a\x9b\x81\x87\x86\xe8",
    // "X509_STORE_add_cert" / M(Rot) / S(51) / L(19)
    "\x8b\x68\x63\x6c\x92\x86\x87\x82\x85\x78\x92\x94\x97\x97\x92\x96\x98\xa5\xa7\x33",
    // "" / M(None) / S(0) / L(0)
    "\x80\x1d\x58\xad\x6a\x4a\x42\xa9\x33\x83\xb7\x7f\x95\x98\x50\xf1\xcf\xd9\x69\xcb\x5d\x3e\xd8\x61\x91\xf9\x27\xe7\x93\x48\xd7\xb0",
    // "X509_STORE_free" / M(Xor1) / S(207) / L(15)
    "\x97\xfa\xff\xf6\x90\x9c\x9b\x80\x9d\x8a\x90\xa9\xbd\xaa\xaa\xcf",
    // "CFDateFormatterCreate" / M(Xor2) / S(156) / L(21)
    "\xc9\xcc\xce\xeb\xfe\xef\xcc\xe5\xf8\xe7\xeb\xfe\xfe\xef\xf8\xc9\xf8\xef\xeb\xfe\xef\x8a",
    // "CFDictionaryAddValue" / M(Rot) / S(146) / L(20)
    "\xd5\xd8\xd6\xfb\xf5\x06\xfb\x01\x00\xf3\x04\x0b\xd3\xf6\xf6\xe8\xf3\xfe\x07\xf7\x92",
    // "kSecMatchLimitAll" / M(Xor4) / S(222) / L(17)
    "\xf7\xcf\xf9\xff\xd1\xfd\xe8\xff\xf4\xd0\xf5\xf1\xf5\xe8\xdd\xf0\xf0\x9c",
    // "IOBSDNameMatching" / M(Xor2) / S(89) / L(17)
    "\x02\x04\x09\x18\x0f\x05\x2a\x26\x2e\x06\x2a\x3f\x28\x23\x22\x25\x2c\x4b",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(44) / L(32)
    "\xd5\xd5\xd5\xd5\x8b\x81\x8b\xe1\xe1\x8b\x81\x8b\xc8\xc8\x8b\xf8\x8b\xe4\xe4\x8b\x96\x8b\xc1\xc1\x8b\x96\x8b\xdf\xdf\x8b\xf6\x8b\xac",
    // "" / M(None) / S(0) / L(0)
    "\x25\xd1\xa8\xcd\x33\x09\xe9\xed\x3c\xba\x0e\xad\x67\xd4\x52\xe8\x3b\xed\x82\x43\xff\x8f\x8f\xd0\xf8\x87\x05\x9d\x17\x39\xbf\x45",
    // "BIO_s_mem" / M(Xor4) / S(37) / L(9)
    "\x12\x19\x1f\x0f\x23\x0f\x3d\x35\x3d\x50\x16\xf3\x47\x0f\xbe\x55",
    // "BIO_new" / M(Xor2) / S(220) / L(7)
    "\x8e\x85\x83\x93\xa2\xa9\xbb\xcc\x8e\x27\x8d\x61\x38\xe9\xc3\x40",
    // "SecKeychainSearchCreateFromAttributes" / M(Rot) / S(75) / L(37)
    "\x9e\xb0\xae\x96\xb0\xc4\xae\xb3\xac\xb4\xb9\x9e\xb0\xac\xbd\xae\xb3\x8e\xbd\xb0\xac\xbf\xb0\x91\xbd\xba\xb8\x8c\xbf\xbf\xbd\xb4\xad\xc0\xbf\xb0\xbe\x4b",
    // "" / M(None) / S(0) / L(0)
    "\x47\xfc\x70\xe7\x30\x7c\x9f\xe7\x9e\x7c\x49\x1a\x3f\x48\xd1\xc1\x01\x9f\xe1\xf6\x31\x9e\xf0\xdf\x89\xab\x5c\x4b\xd8\x6d\x4e\x55",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(68) / L(54)
    "\x73\x97\xbd\xb7\xb8\xa9\xb1\x73\x90\xad\xa6\xb6\xa5\xb6\xbd\x73\x8a\xb6\xa5\xb1\xa9\xbb\xb3\xb6\xaf\xb7\x73\x97\xa9\xa7\xb9\xb6\xad\xb8\xbd\x72\xaa\xb6\xa5\xb1\xa9\xbb\xb3\xb6\xaf\x73\x97\xa9\xa7\xb9\xb6\xad\xb8\xbd\x44",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(233) / L(40)
    "\x1f\x1a\x1a\x4e\x1e\x4b\x1f\x1f\x1b\x4c\x1e\x22\x1c\x4a\x19\x21\x4f\x4f\x1e\x21\x4d\x1a\x1d\x4a\x4e\x1b\x1b\x1d\x1e\x1b\x4d\x1a\x22\x21\x4d\x4f\x1f\x4c\x1f\x19\xe9\xb5\xf7\xa9\x91\x72\xdc\x3c\x58",
    // "CC_SHA1_Update" / M(Xor3) / S(85) / L(14)
    "\x26\x26\x3a\x36\x2d\x24\x54\x3a\x30\x15\x01\x04\x11\x00\x65\xb5",
    // "" / M(None) / S(0) / L(0)
    "\x1b\x92\x64\x4c\x95\x09\x16\x79\xeb\xe2\x61\x08\x5e\xf1\xdf\x19\xfd\x59\x40\xcb\x60\x52\xf7\xf1\xe0\xde\x82\xe4\xe6\x95\xd1\x25",
    // "" / M(None) / S(0) / L(0)
    "\x90\x66\xb9\x36\xea\xe0\xe1\xe8\xa2\x88\xb5\x65\x3d\x9e\xe7\x98\xca\x7e\xc9\xf4\x86\xb9\x83\xf6\x02\xfe\x93\x5f\x1f\x36\x97\x03",
    // "CFDateFormatterSetFormat" / M(Rot) / S(119) / L(24)
    "\xba\xbd\xbb\xd8\xeb\xdc\xbd\xe6\xe9\xe4\xd8\xeb\xeb\xdc\xe9\xca\xdc\xeb\xbd\xe6\xe9\xe4\xd8\xeb\x77\xf2\x4f\xb6\xdd\x36\xbe\xfd\xff",
    // "%02X" / M(Xor4) / S(55) / L(4)
    "\x55\x40\x42\x28\x70\x94\x2c\xf3\x71\xc0\xa2\x92\x9a\x5a\x5f\xb7",
    // "X509_STORE_free" / M(Xor1) / S(82) / L(15)
    "\x0a\x67\x62\x6b\x0d\x01\x06\x1d\x00\x17\x0d\x34\x20\x37\x37\x52",
    // "SHA1_Final" / M(Xor2) / S(255) / L(10)
    "\xbc\xa7\xae\xde\xb0\xa9\x86\x81\x8e\x83\xef\x29\x51\xb2\x50\xa3",
    // "globfree" / M(Rot) / S(225) / L(8)
    "\x48\x4d\x50\x43\x47\x53\x46\x46\xe1\xb0\x15\x60\x81\x7a\x22\xb4",
    // "" / M(None) / S(0) / L(0)
    "\x40\xd8\x52\xf8\xb4\x41\x31\x65\x8f\xc2\x02\x6c\xcb\x3e\x6d\xea\xdb\x84\x50\x87\x75\x9b\x8d\x8c\x25\xe0\xe3\xf1\x2b\xa0\xb6\x3c",
    // "OpenSSL_add_all_digests" / M(Xor4) / S(206) / L(23)
    "\x8f\xb0\xa5\xae\x93\x93\x8c\x9f\xa1\xa4\xa4\x9f\xa1\xac\xac\x9f\xa4\xa9\xa7\xa5\xb3\xb4\xb3\xc0\xd5\xc1\xdd\x9b\x31\x9d\x81\x6f",
    // "CC_SHA1_Final" / M(Xor2) / S(157) / L(13)
    "\xce\xce\xd2\xde\xc5\xcc\xbc\xd2\xcb\xe4\xe3\xec\xe1\x8d\xcc\xbb",
    // "" / M(None) / S(0) / L(0)
    "\xf8\xf3\x63\xd0\xd2\xa9\x2a\xdf\xa2\x44\xa3\xff\x43\xe8\x69\x76\xd9\xb3\x7b\x2e\x0a\xf7\x4d\x04\xe0\x5f\x95\xe4\x6f\x87\x3b\xaf",
    // "CFStringCreateWithCString" / M(Xor2) / S(151) / L(25)
    "\xf6\xf3\xe6\xc1\xc7\xdc\xdb\xd2\xf6\xc7\xd0\xd4\xc1\xd0\xe2\xdc\xc1\xdd\xf6\xe6\xc1\xc7\xdc\xdb\xd2\xb5\x36\x97\x03\x40\xd8\x52\xf8\xb4",
    // "dlsym" / M(Rot) / S(60) / L(5)
    "\xa0\xa8\xaf\xb5\xa9\x3c\xff\x8d\x76\x5d\x47\x20\x6f\xad\xef\x5c",
    // "" / M(None) / S(0) / L(0)
    "\x20\xbd\xc9\xcc\xfa\x85\x81\x65\xaa\x9c\x0b\x47\x90\x95\x3f\x21\x00\x83\x5c\x47\x30\x2f\x01\x49\xd3\xa6\x07\x05\xaf\xa5\x5e\x3d",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(187) / L(54)
    "\xa3\xdf\xf5\xff\xf8\xe9\xe1\xa3\xc0\xe5\xee\xfe\xed\xfe\xf5\xa3\xca\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xff\xa3\xdf\xe9\xef\xf9\xfe\xe5\xf8\xf5\xa2\xea\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xa3\xdf\xe9\xef\xf9\xfe\xe5\xf8\xf5\x8c",
    // "CFBundleIdentifier" / M(Xor4) / S(14) / L(18)
    "\x49\x4c\x48\x7f\x64\x6e\x66\x6f\x43\x6e\x6f\x64\x7e\x63\x6c\x63\x6f\x78\x0a",
    // "dlsym" / M(Xor1) / S(88) / L(5)
    "\x3c\x34\x2b\x21\x35\x58\xe9\xae\xf6\x05\x82\xa4\x38\xb2\xb0\x26",
    // "IOIteratorNext" / M(Xor3) / S(191) / L(14)
    "\x86\x80\x86\xbb\xaa\xbd\xae\xbb\xa0\xbd\x81\xaa\xb7\xbb\xcf\xfe",
    // "" / M(None) / S(0) / L(0)
    "\x9a\x06\xf3\xfc\x57\xd3\x37\xb7\xb3\xf7\xd2\xc3\xc6\x1d\x02\x96\x8c\xee\xdc\x69\xd7\x95\x50\xe3\x23\xc2\xd8\xfd\x2d\xae\x2e\xf2",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(101) / L(66)
    "\x40\x3c\x16\x1c\x1b\x0a\x02\x40\x23\x06\x0d\x1d\x0e\x1d\x16\x40\x29\x1d\x0e\x02\x0a\x18\x00\x1d\x04\x1c\x40\x2c\x00\x1d\x0a\x29\x00\x1a\x01\x0b\x0e\x1b\x06\x00\x01\x41\x09\x1d\x0e\x02\x0a\x18\x00\x1d\x04\x40\x2c\x00\x1d\x0a\x29\x00\x1a\x01\x0b\x0e\x1b\x06\x00\x01\x6f",
    // "CFDictionaryGetValue" / M(Rot) / S(8) / L(20)
    "\x4b\x4e\x4c\x71\x6b\x7c\x71\x77\x76\x69\x7a\x81\x4f\x6d\x7c\x5e\x69\x74\x7d\x6d\x08",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(97) / L(31)
    "\x0a\x22\x27\x35\x18\x11\x04\x25\x08\x02\x15\x08\x0e\x0f\x00\x13\x18\x37\x00\x0d\x14\x04\x22\x00\x0d\x0d\x23\x00\x02\x0a\x12\x61",
    // "" / M(None) / S(0) / L(0)
    "\xe9\x14\x75\xcd\xcf\x21\x1e\x69\xf7\x6d\x6a\xc7\x57\x6b\xf8\xf0\x82\x45\x2c\xb2\x78\xb0\x0e\xa7\x1d\xdf\x87\x8a\x03\x15\x99\x49",
    // "IOBSDNameMatching" / M(Xor2) / S(116) / L(17)
    "\x2f\x29\x24\x35\x22\x28\x07\x0b\x03\x2b\x07\x12\x05\x0e\x0f\x08\x01\x66",
    // "CFStringCreateWithBytes" / M(Xor4) / S(167) / L(23)
    "\xa3\xa6\xb3\x94\x92\x89\x8e\x87\xa3\x92\x85\x81\x94\x85\xb7\x89\x94\x88\xa2\x99\x94\x85\x93\xe0\x71\xd5\xb2\x62\x5e\x40\x03\x74",
    // "" / M(None) / S(0) / L(0)
    "\x00\x64\x58\xfe\xc5\x97\x9e\x9c\x6b\x97\x3c\x25\x1d\xa0\xd4\x7c\xa5\xf9\x76\xa2\xaa\x18\x59\x9f\x14\x10\x75\xd0\x5b\x87\xcb\x5b",
    // "%02X:" / M(Xor4) / S(170) / L(5)
    "\x85\x90\x92\xf8\x9a\xa0\x47\x8b\x4e\x73\x9e\xe3\x1c\xbd\x62\x47",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(180) / L(37)
    "\xd1\xd4\xc7\xc0\xde\xd1\xe0\xf7\xf3\xe6\xf7\xd1\xfd\xe2\xeb\xd3\xe2\xe2\xf7\xfc\xf6\xfb\xfc\xf5\xc2\xf3\xe6\xfa\xd1\xfd\xff\xe2\xfd\xfc\xf7\xfc\xe6\x92",
    // "CFBundleGetIdentifier" / M(Rot) / S(33) / L(21)
    "\x64\x67\x63\x96\x8f\x85\x8d\x86\x68\x86\x95\x6a\x85\x86\x8f\x95\x8a\x87\x8a\x86\x93\x21",
    // "SecKeychainSearchCopyNext" / M(Xor4) / S(83) / L(25)
    "\x55\x63\x65\x4d\x63\x7f\x65\x6e\x67\x6f\x68\x55\x63\x67\x74\x65\x6e\x45\x69\x76\x7f\x48\x63\x7e\x72\x06\xd0\x40\xcc\x71\x1f\xf7\x06\xfe",
    // "CFDataCreateMutable" / M(Rot) / S(41) / L(19)
    "\x6c\x6f\x6d\x8a\x9d\x8a\x6c\x9b\x8e\x8a\x9d\x8e\x76\x9e\x9d\x8a\x8b\x95\x8e\x29",
    // "SecItemCopyMatching" / M(Xor1) / S(9) / L(19)
    "\x5a\x6c\x6a\x40\x7d\x6c\x64\x4a\x66\x79\x70\x44\x68\x7d\x6a\x61\x60\x67\x6e\x09",
    // "X509_digest" / M(Xor2) / S(228) / L(11)
    "\xac\xc1\xc4\xcd\xab\x90\x9d\x93\x91\x87\x80\xf4\x50\x62\x5a\x83",
    // "kSecMatchLimitAll" / M(Xor1) / S(110) / L(17)
    "\x05\x3d\x0b\x0d\x23\x0f\x1a\x0d\x06\x22\x07\x03\x07\x1a\x2f\x02\x02\x6e",
    // "CFReadStreamClose" / M(Xor2) / S(209) / L(17)
    "\x80\x85\x91\xa6\xa2\xa7\x90\xb7\xb1\xa6\xa2\xae\x80\xaf\xac\xb0\xa6\xc3",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(12) / L(37)
    "\x61\x57\x51\x79\x57\x4b\x51\x5a\x53\x5b\x5c\x61\x57\x53\x40\x51\x5a\x71\x40\x57\x53\x46\x57\x74\x40\x5d\x5f\x73\x46\x46\x40\x5b\x50\x47\x46\x57\x41\x32",
    // "" / M(None) / S(0) / L(0)
    "\x01\xd2\x8a\x32\x4d\x58\x1b\x06\x9f\x32\x3c\xd5\x06\xf6\x4d\x7d\xca\x76\x14\x33\xba\x12\x7e\xa4\x62\x85\x74\x93\x49\x46\x80\x65",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x09\xe9\x48\x9a\xdd\x2e\x27\x2e\xff\x8d\x76\x5d\x47\x20\x6f\xad\xef\x5c\xc7\x3e\x85\xda\x9c\xdb\x81\x48\x05\xbd\x3e\xd8\x78",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(157) / L(23)
    "\xee\xf6\xef\xd8\xde\xd8\xd4\xcd\xc9\xef\xd8\xdb\xcf\xd8\xce\xd5\xef\xd8\xcc\xc8\xd8\xce\xc9\xbd\x19\x05\x7f\x0b\x02\xbd\xd3\xec",
    // "CFBundleShortVersionString" / M(Xor2) / S(20) / L(26)
    "\x74\x71\x75\x42\x59\x53\x5b\x52\x64\x5f\x58\x45\x43\x61\x52\x45\x44\x5e\x58\x59\x64\x43\x45\x5e\x59\x50\x37\xc4\x13\xfc\x7c\x3b\xc0\xac\xea",
    // "EVP_get_digestbyname" / M(Xor2) / S(141) / L(20)
    "\xdd\xce\xc8\xc7\xff\xfd\xec\xc7\xfc\xf1\xff\xfd\xeb\xec\xfa\xe1\xf6\xf9\xf5\xfd\x98",
    // "CFBundleGetIdentifier" / M(Xor4) / S(240) / L(21)
    "\xe3\xe6\xe2\xd5\xce\xc4\xcc\xc5\xe7\xc5\xd4\xe9\xc4\xc5\xce\xd4\xc9\xc6\xc9\xc5\xd2\xa0",
    // "" / M(None) / S(0) / L(0)
    "\x04\x3c\x47\x8f\x99\x06\x5c\x5b\xc9\x24\xd7\xf2\xd4\xf9\xca\xc6\xaa\xf2\x4a\x43\x88\x42\x8d\x7f\x05\xac\x00\x0b\x44\x27\xca\xd3",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(66) / L(37)
    "\x8f\x8a\x99\x9e\x80\x8f\xbe\xa9\xad\xb8\xa9\x8f\xa3\xbc\xb5\x8d\xbc\xbc\xa9\xa2\xa8\xa5\xa2\xab\x9c\xad\xb8\xa4\x8f\xa3\xa1\xbc\xa3\xa2\xa9\xa2\xb8\xcc",
    // "" / M(None) / S(0) / L(0)
    "\x36\x68\x9f\x6a\x72\x27\xa4\xe7\x45\x69\x7d\xfa\xfc\x98\x0f\x5b\x7b\x9c\x05\xb2\xfa\xb0\xad\x31\x06\xde\xef\x2e\x93\x35\xb7\xe1",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(159) / L(50)
    "\xce\xf2\x18\x12\x13\x04\x0c\xce\xeb\x08\x01\x11\x00\x11\x18\xce\xe5\x11\x00\x0c\x04\x16\x0e\x11\x0a\x12\xce\xe0\x0f\x0f\xea\x08\x13\xcd\x05\x11\x00\x0c\x04\x16\x0e\x11\x0a\xce\xe0\x0f\x0f\xea\x08\x13\x9f",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(30) / L(23)
    "\x71\x4e\x5b\x50\x6d\x6d\x72\x61\x5f\x5a\x5a\x61\x5f\x52\x52\x61\x5a\x57\x59\x5b\x4d\x4a\x4d\x3e\x72\x66\x99\x01\x60\xbc\xe0\x5c",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(155) / L(28)
    "\x83\xaf\xae\xb4\xa5\xae\xb4\xb3\xef\x9f\x8d\x81\x93\x92\xa5\xa3\xa5\xa9\xb0\xb4\xef\xb2\xa5\xa3\xa5\xa9\xb0\xb4\xc0\x9a\x16\x0a\x76\x87\x3a\xba\xd2",
    // "" / M(None) / S(0) / L(0)
    "\xdf\x6d\x75\xd9\xfd\x32\xb7\x4e\x76\xae\x3e\xd5\x47\xdc\xd1\xd4\xa6\x21\x1b\x15\x94\x95\x1b\x54\x89\x32\xf5\x99\x2a\x72\x30\xf7",
    // "CFReadStreamCreateWithFile" / M(Rot) / S(131) / L(26)
    "\xc6\xc9\xd5\xe8\xe4\xe7\xd6\xf7\xf5\xe8\xe4\xf0\xc6\xf5\xe8\xe4\xf7\xe8\xda\xec\xf7\xeb\xc9\xec\xef\xe8\x83\x18\xff\x83\xa2\xf6\x44\xea\xd1",
    // "X509_STORE_new" / M(Xor4) / S(155) / L(14)
    "\xe8\x85\x80\x89\xef\xe3\xe4\xff\xe2\xf5\xef\xde\xd5\xc7\xb0\xf0",
    // "1.0" / M(Rot) / S(44) / L(3)
    "\x5d\x5a\x5c\x2c\xc0\x40\x11\xb5\xd1\x9c\x56\x5a\x73\xec\xa3\xd2",
    // "Contents/_MASReceipt" / M(Xor3) / S(219) / L(20)
    "\xb3\x9f\x9e\x84\x95\x9e\x84\x83\xdf\xaf\xbd\xb1\xa3\xa2\x95\x93\x95\x99\x80\x84\xf0",
    // "PKCS7_get0_signers" / M(Xor1) / S(82) / L(18)
    "\x02\x19\x11\x01\x65\x0d\x35\x37\x26\x62\x0d\x21\x3b\x35\x3c\x37\x20\x21\x52",
    // "" / M(None) / S(0) / L(0)
    "\xf2\xcf\xbc\x26\x50\x32\x8a\xa7\xf6\xe3\x97\xe4\x1b\x17\x15\xb2\x54\xbd\x38\xfa\x0a\x44\xb1\xe7\x7a\xa6\x1c\xd6\xe1\x84\xc4\xcf",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(14) / L(48)
    "\x10\x6c\x46\x4c\x4b\x5a\x52\x10\x73\x56\x5d\x4d\x5e\x4d\x46\x10\x79\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x4c\x10\x76\x70\x74\x56\x4b\x11\x59\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x10\x76\x70\x74\x56\x4b\x3f",
    // "" / M(None) / S(0) / L(0)
    "\xb8\x5a\x3e\x63\xc1\xb9\xbf\xf3\xcd\x5e\xdd\x9a\x8a\xd7\xa3\xa2\xb7\x4f\x7c\x54\x90\xab\x33\x23\x17\x61\xe8\xec\x71\xd0\xe8\x02",
    // "" / M(None) / S(0) / L(0)
    "\x16\x38\x06\x81\x8d\x3d\x0f\xb2\x05\xe8\x7d\xb6\xb3\x05\xb4\x57\x8e\xbb\xee\xf5\x13\xf3\xe7\xb5\x44\x05\x5d\x3f\x2c\x81\xe4\x1a",
    // "strncmp" / M(Xor1) / S(97) / L(7)
    "\x12\x15\x13\x0f\x02\x0c\x11\x61\x1d\xa1\x67\x42\x59\x79\x9e\xab",
    // "" / M(None) / S(0) / L(0)
    "\x58\xf5\x1c\xd3\x23\x9d\xed\x5f\xc0\xc1\x65\x9b\x98\x3f\x3b\x61\x1d\xe2\x8f\x32\xa3\x66\x1d\xfc\xe0\x11\x65\xb9\x19\x71\xc5\xa6",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(208) / L(26)
    "\x93\x96\x82\xb5\xb1\xb4\x83\xa4\xa2\xb5\xb1\xbd\x93\xa2\xb5\xb1\xa4\xb5\x87\xb9\xa4\xb8\x96\xb9\xbc\xb5\xd0\x8f\x70\x58\xee\x62\x55\x61\xb4",
    // "" / M(None) / S(0) / L(0)
    "\x27\xbc\x51\x17\x6d\x75\x1b\x2d\x9d\x0c\x65\xe1\x50\x81\x97\x48\x25\x4b\xd9\x73\x68\x72\x55\xb2\xcd\x5f\x82\x0c\x2f\x78\x43\x93",
    // "IOMasterPort" / M(Xor2) / S(206) / L(12)
    "\x97\x91\x93\xbf\xad\xaa\xbb\xac\x8e\xb1\xac\xaa\xde\xc8\x59\x7f",
    // "X509_free" / M(Xor2) / S(235) / L(9)
    "\xa3\xce\xcb\xc2\xa4\x9d\x89\x9e\x9e\xfb\xc9\xda\x61\x8a\x08\x25",
    // "kSecMatchSubjectContains" / M(Rot) / S(70) / L(24)
    "\xb1\x99\xab\xa9\x93\xa7\xba\xa9\xae\x99\xbb\xa8\xb0\xab\xa9\xba\x89\xb5\xb4\xba\xa7\xaf\xb4\xb9\x46\x66\x45\x51\x77\x20\x51\xe3\x44",
    // "CFDataGetLength" / M(Rot) / S(111) / L(15)
    "\xb2\xb5\xb3\xd0\xe3\xd0\xb6\xd4\xe3\xbb\xd4\xdd\xd6\xe3\xd7\x6f",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(224) / L(66)
    "\x0f\x33\x59\x53\x54\x45\x4d\x0f\x2c\x49\x42\x52\x41\x52\x59\x0f\x26\x52\x41\x4d\x45\x57\x4f\x52\x4b\x53\x0f\x23\x4f\x52\x45\x26\x4f\x55\x4e\x44\x41\x54\x49\x4f\x4e\x0e\x46\x52\x41\x4d\x45\x57\x4f\x52\x4b\x0f\x23\x4f\x52\x45\x26\x4f\x55\x4e\x44\x41\x54\x49\x4f\x4e\xe0",
    // "PKCS7_verify" / M(Rot) / S(6) / L(12)
    "\x56\x51\x49\x59\x3d\x65\x7c\x6b\x78\x6f\x6c\x7f\x06\xa7\x67\xd6",
    // "PKCS7_verify" / M(Rot) / S(145) / L(12)
    "\xe1\xdc\xd4\xe4\xc8\xf0\x07\xf6\x03\xfa\xf7\x0a\x91\xd8\x0a\xca",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(9) / L(59)
    "\x52\x55\x5e\x55\x21\x5e\x51\x26\x5e\x52\x52\x5e\x56\x27\x5e\x51\x5d\x5e\x57\x25\x5e\x54\x5c\x5e\x22\x22\x5e\x51\x5c\x5e\x20\x55\x5e\x50\x25\x5e\x21\x56\x5e\x56\x50\x5e\x51\x56\x5e\x20\x55\x5e\x5d\x5c\x5e\x20\x22\x5e\x52\x27\x5e\x52\x54\x64\x7c\xb5\x52\xdc\xa8\x6d\xe0\x3a",
    // "kSecClassCertificate" / M(Xor2) / S(167) / L(20)
    "\xd9\xe1\xd7\xd1\xf1\xde\xd3\xc1\xc1\xf1\xd7\xc0\xc6\xdb\xd4\xdb\xd1\xd3\xc6\xd7\xb2",
    // "dlopen" / M(Xor2) / S(127) / L(6)
    "\x0b\x03\x00\x1f\x0a\x01\x6f\x74\x93\x49\x46\x80\x65\xf7\x09\xe9",
    // "CFDataGetBytePtr" / M(Xor1) / S(74) / L(16)
    "\x09\x0c\x0e\x2b\x3e\x2b\x0d\x2f\x3e\x08\x33\x3e\x2f\x1a\x3e\x38\x4a",
    // "kSecMatchLimit" / M(Xor2) / S(230) / L(14)
    "\x9d\xa5\x93\x95\xbb\x97\x82\x95\x9e\xba\x9f\x9b\x9f\x82\xf6\xeb",
    // "X509_STORE_free" / M(Xor4) / S(8) / L(15)
    "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xe6\xf2\xe5\xe5\x80",
    // "EVP_DigestFinal" / M(Xor2) / S(183) / L(15)
    "\xe2\xf1\xf7\xf8\xe3\xce\xc0\xc2\xd4\xd3\xe1\xce\xc9\xc6\xcb\xa7",
    // "OBJ_txt2obj" / M(Xor4) / S(145) / L(11)
    "\x5f\x52\x5a\x4f\x64\x68\x64\x22\x7f\x72\x7a\x10\xf5\xdb\x35\x7a",
    // "EVP_DigestInit" / M(Xor3) / S(69) / L(14)
    "\x10\x03\x05\x0a\x11\x3c\x32\x30\x26\x21\x1c\x3b\x3c\x21\x55\x4a",
    // "CFDataGetLength" / M(Xor3) / S(43) / L(15)
    "\x78\x7d\x7f\x5a\x4f\x5a\x7c\x5e\x4f\x77\x5e\x55\x5c\x4f\x53\x3b",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(221) / L(57)
    "\x0c\x30\x56\x50\x51\x42\x4a\x0c\x29\x46\x3f\x4f\x3e\x4f\x56\x0c\x28\x42\x56\x40\x45\x3e\x46\x4b\x50\x0c\x30\x56\x50\x51\x42\x4a\x2f\x4c\x4c\x51\x20\x42\x4f\x51\x46\x43\x46\x40\x3e\x51\x42\x50\x0b\x48\x42\x56\x40\x45\x3e\x46\x4b\xdd\x50\x1a\xd7\xcb\x4f\x40\xa0\x07",
    // "" / M(None) / S(0) / L(0)
    "\x23\x59\x35\xb7\xef\xba\xc9\xd5\xbc\x43\x58\x30\xfe\xaa\xa6\x2e\x44\x05\x36\x0d\x42\x4c\x62\x94\x98\xf7\xe1\xb6\x86\x61\x63\xc8",
    // "IOServiceGetMatchingServices" / M(Xor4) / S(48) / L(28)
    "\xb9\xbf\xa3\x95\x82\x86\x99\x93\x95\xb7\x95\x84\xbd\x91\x84\x93\x98\x99\x9e\x97\xa3\x95\x82\x86\x99\x93\x95\x83\xf0\x30\x9b\x8f\xd1\x08\x27\xc0\x64",
    // "_MASReceipt" / M(Xor2) / S(14) / L(11)
    "\x41\x53\x5f\x4d\x4c\x7b\x7d\x7b\x77\x6e\x6a\x1e\xcb\x89\x77\xd3",
    // "EVP_DigestUpdate" / M(Xor1) / S(32) / L(16)
    "\x65\x76\x70\x7f\x64\x49\x47\x45\x53\x54\x75\x50\x44\x41\x54\x45\x20",
    // "" / M(None) / S(0) / L(0)
    "\x4f\x22\x88\x1f\x83\xed\xa1\xf6\x07\xd3\x3c\x5a\x30\x08\x4f\x39\xc6\x8b\x2a\x79\xf2\xe2\x2f\x5a\x0a\x13\x2e\xcf\x37\xdc\x33\xc5",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(247) / L(37)
    "\x92\x97\x84\x83\x9d\x92\xa3\xb4\xb0\xa5\xb4\x92\xbe\xa1\xa8\x90\xa1\xa1\xb4\xbf\xb5\xb8\xbf\xb6\x81\xb0\xa5\xb9\x92\xbe\xbc\xa1\xbe\xbf\xb4\xbf\xa5\xd1",
    // "Contents" / M(Rot) / S(138) / L(8)
    "\xcd\xf9\xf8\xfe\xef\xf8\xfe\xfd\x8a\xf3\x3c\xd7\xd7\xb8\x46\xc0",
    // "CFDictionaryCreateMutable" / M(Xor4) / S(38) / L(25)
    "\x4f\x4a\x48\x65\x6f\x78\x65\x63\x62\x6d\x7e\x75\x4f\x7e\x69\x6d\x78\x69\x41\x79\x78\x6d\x6e\x60\x69\x0c\x0e\xb5\x86\xc0\xfe\xa9\x4a\xf9",
    // "CFReadStreamClose" / M(Xor3) / S(33) / L(17)
    "\x70\x75\x61\x56\x52\x57\x60\x47\x41\x56\x52\x5e\x70\x5f\x5c\x40\x56\x33",
    // "" / M(None) / S(0) / L(0)
    "\x3b\x84\xf4\xa3\x79\x9d\xde\x0a\x3e\xab\xe3\xc8\x59\x7f\x64\x3d\xec\xce\x87\xb6\x29\x87\x95\x89\xe6\x03\x2b\xdf\x73\x03\x17\xfd",
    // "" / M(None) / S(0) / L(0)
    "\x95\x90\x77\x68\xaf\xcf\xd5\x89\x9e\x5c\xf2\x3b\xb8\xa8\xc5\x80\x2d\x2b\xa4\x57\x68\x2f\xad\x3e\xef\x63\x2b\x11\xee\x0f\x35\xb5",
    // "setDelegate:" / M(Xor4) / S(151) / L(12)
    "\x03\x15\x04\x34\x15\x1c\x15\x17\x11\x04\x15\x4a\x70\xab\x6c\xe0",
    // "" / M(None) / S(0) / L(0)
    "\x0c\x86\xd5\x1d\xc7\xbc\x78\x6b\xa0\x5c\x12\xd2\x1e\x65\xdb\xa7\x14\xc7\xb4\x61\x14\x08\xc7\xdf\x84\xf1\x92\x91\x08\x18\x10\x32",
    // "/usr/lib/libSystem.dylib" / M(Xor1) / S(104) / L(24)
    "\x47\x1d\x1b\x1a\x47\x04\x01\x0a\x47\x04\x01\x0a\x3b\x11\x1b\x1c\x0d\x05\x46\x0c\x11\x04\x01\x0a\x68\xd5\xe7\xfe\x73\x13\x97\x70\x5f",
    // "" / M(None) / S(0) / L(0)
    "\xbb\x96\x29\xe6\x89\x5f\xa5\x86\x16\xdc\xa2\x06\x1a\xa5\x77\x0f\xdf\x3a\x7e\x5d\x07\x1c\xa5\xd9\xca\x3f\xf4\xe0\x33\x18\xc6\x1a",
    // "" / M(None) / S(0) / L(0)
    "\x45\x36\x2f\x17\x4a\x36\x30\x04\xe8\x7a\xe3\xb7\x01\xaa\x3a\xaa\x26\x53\x9c\x27\xe5\xf8\x6c\xa1\x50\xf2\xb7\x71\x14\x6f\x56\x11",
    // "" / M(None) / S(0) / L(0)
    "\xf3\x28\x23\x63\xa4\xcc\xd5\x34\x13\x2b\xc0\xdf\x36\xad\x6d\x28\xee\x01\x29\xc1\x03\x57\xc4\x33\x42\x06\xf4\xe7\x92\x63\x2f\xb4",
    // "" / M(None) / S(0) / L(0)
    "\x66\xb7\xf6\x21\x74\x8d\x3d\xfd\x64\x9b\xfd\x24\xf4\x14\xdd\x1d\xb0\xb0\x7d\x2d\xdc\xf2\xe2\x3e\xc1\x6c\x6c\x82\x58\x47\xf6\x15",
    // "" / M(None) / S(0) / L(0)
    "\xc7\x25\xe1\x12\xb8\x58\x4b\xd1\x51\x79\x44\xd6\x7a\xd1\x51\x04\x45\x87\x7b\x10\x0b\xe7\xbd\x50\xf0\xd1\x40\x61\xd4\xe4\xb2\x92",
    // "EVP_get_digestbyname" / M(Rot) / S(39) / L(20)
    "\x6c\x7d\x77\x86\x8e\x8c\x9b\x86\x8b\x90\x8e\x8c\x9a\x9b\x89\xa0\x95\x88\x94\x8c\x27",
    // "PKCS7_verify" / M(Rot) / S(105) / L(12)
    "\xb9\xb4\xac\xbc\xa0\xc8\xdf\xce\xdb\xd2\xcf\xe2\x69\xa6\xd0\x63",
    // "sha1" / M(Rot) / S(246) / L(4)
    "\x69\x5e\x57\x27\xf6\x7d\xbb\x3d\xf2\x70\x78\x8e\xe6\x8c\xff\x69",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(167) / L(24)
    "\xa8\xf2\xf4\xf5\xa8\xeb\xee\xe5\xa8\xeb\xee\xe5\xd4\xfe\xf4\xf3\xe2\xea\xa9\xe3\xfe\xeb\xee\xe5\x87\xc4\x82\xbd\xfd\x97\xb1\xf9\x8a",
    // "X509_digest" / M(Rot) / S(198) / L(11)
    "\x1e\xfb\xf6\xff\x25\x2a\x2f\x2d\x2b\x39\x3a\xc6\x30\xd0\xa6\x06",
    // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(232) / L(29)
    "\x53\x2b\x2e\x3c\x61\x58\x4d\x2c\x51\x4b\x5c\x51\x57\x56\x49\x5a\x61\x33\x4d\x61\x2b\x49\x54\x54\x2a\x49\x4b\x53\x5b\xe8\x91\x03\x55\xde\x13\x9a\x3d\xf1",
    // "com.iccir.Embrace" / M(Xor1) / S(122) / L(17)
    "\x19\x15\x17\x54\x13\x19\x19\x13\x08\x54\x3f\x17\x18\x08\x1b\x19\x1f\x7a",
    // "CFDateFormatterCreateDateFromString" / M(Rot) / S(86) / L(35)
    "\x99\x9c\x9a\xb7\xca\xbb\x9c\xc5\xc8\xc3\xb7\xca\xca\xbb\xc8\x99\xc8\xbb\xb7\xca\xbb\x9a\xb7\xca\xbb\x9c\xc8\xc5\xc3\xa9\xca\xc8\xbf\xc4\xbd\x56",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(184) / L(28)
    "\xdb\xf7\xf6\xec\xfd\xf6\xec\xeb\xb7\xc7\xd5\xd9\xcb\xca\xfd\xfb\xfd\xf1\xe8\xec\xb7\xea\xfd\xfb\xfd\xf1\xe8\xec\x98\xe2\x84\x18\x2e\x2f\x69\xb6\x6e",
    // "CFDataGetBytePtr" / M(Xor3) / S(232) / L(16)
    "\xba\xbf\xbd\x98\x8d\x98\xbe\x9c\x8d\xbb\x80\x8d\x9c\xa9\x8d\x8b\xf9",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(142) / L(39)
    "\xfd\xf8\xeb\xec\xf2\xfd\xcc\xdb\xdf\xca\xdb\xf8\xcc\xd1\xd3\xf8\xd7\xd2\xdb\xed\xc7\xcd\xca\xdb\xd3\xec\xdb\xce\xcc\xdb\xcd\xdb\xd0\xca\xdf\xca\xd7\xd1\xd0\xbe\xe3\x23\xc2\xd8\xfd\x2d\xae\x2e",
    // "CFDataAppendBytes" / M(Rot) / S(136) / L(17)
    "\xcb\xce\xcc\xe9\xfc\xe9\xc9\xf8\xf8\xed\xf6\xec\xca\x01\xfc\xed\xfb\x88",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x84\xdf\x1e\x9a\x0b\xcb\xab\x6b\xf5\xb2\xcc\xe6\xfa\x81\x70\x7c\x9a\x41\xf6\x73\x12\x63\x34\xdb\x5c\x32\x9a\xbe\x3f\x05\xa5",
    // "" / M(None) / S(0) / L(0)
    "\x0e\x4e\x24\xad\xeb\x56\x82\xd4\x0b\xe0\xce\x14\x74\xab\xed\xbb\xf6\xe3\x2e\x39\x25\x73\x8d\xa4\x76\x91\xf9\xec\x20\x75\x29\x96",
    // "CFArrayCreateMutable" / M(Xor4) / S(38) / L(20)
    "\x5d\x58\x5f\x6c\x6c\x7f\x67\x5d\x6c\x7b\x7f\x6a\x7b\x53\x6b\x6a\x7f\x7c\x72\x7b\x1e",
    // "" / M(None) / S(0) / L(0)
    "\xea\xd1\xfe\xd1\x86\xd6\x82\xc0\xa4\x5e\xc8\x39\xec\xf0\xa7\x36\xe6\xa1\xa1\xd2\x1e\x90\x7c\x77\x63\x52\xaf\x19\xcf\xac\x51\x4a",
    // "" / M(None) / S(0) / L(0)
    "\x3c\x70\x4c\x3a\xbe\xfd\x14\xc0\xfd\x8d\x98\x53\x54\xfc\x28\xff\x2d\xa6\x3d\x06\xa5\x7c\x44\x9f\x94\x8e\x84\x4b\x17\x85\xab\xe3",
    // "_MASReceipt" / M(Xor3) / S(116) / L(11)
    "\xdb\xc9\xc5\xd7\xd6\xe1\xe7\xe1\xed\xf4\xf0\x84\x24\x67\xea\x59",
    // "kSecMatchSubjectContains" / M(Xor4) / S(98) / L(24)
    "\xc9\xf1\xc7\xc1\xef\xc3\xd6\xc1\xca\xf1\xd7\xc0\xc8\xc7\xc1\xd6\xe1\xcd\xcc\xd6\xc3\xcb\xcc\xd1\xa2\xdc\x65\xb3\x88\x82\x67\x72\xc7",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(142) / L(31)
    "\xe5\xcd\xc8\xda\xf7\xfe\xeb\xca\xe7\xed\xfa\xe7\xe1\xe0\xef\xfc\xf7\xd8\xef\xe2\xfb\xeb\xcd\xef\xe2\xe2\xcc\xef\xed\xe5\xfd\x8e",
    // "globfree" / M(Xor2) / S(214) / L(8)
    "\xa1\xaa\xa9\xa4\xa0\xb4\xa3\xa3\xc6\x3e\x63\xc1\xb9\xbf\xf3\xcd",
    // "CFStringCompare" / M(Rot) / S(133) / L(15)
    "\xc8\xcb\xd8\xf9\xf7\xee\xf3\xec\xc8\xf4\xf2\xf5\xe6\xf7\xea\x85",
    // "setjmp" / M(Xor3) / S(214) / L(6)
    "\x95\x83\x92\x8c\x8b\x96\xe6\x93\x96\x71\xdf\x7e\x5c\x14\xea\xb8",
    // "IORegistryEntryCreateCFProperty" / M(Xor4) / S(124) / L(31)
    "\xc9\xcf\xd2\xe5\xe7\xe9\xf3\xf4\xf2\xf9\xc5\xee\xf4\xf2\xf9\xc3\xf2\xe5\xe1\xf4\xe5\xc3\xc6\xd0\xf2\xef\xf0\xe5\xf2\xf4\xf9\x80",
    // "SHA1" / M(Rot) / S(11) / L(4)
    "\x5e\x53\x4c\x3c\x0b\x86\x78\xb0\xc8\xc1\x51\xf6\x84\x8b\xb6\x67",
    // "" / M(None) / S(0) / L(0)
    "\x60\x3b\xa0\x99\x9b\xaa\x0e\xe6\x73\xfa\x94\x18\xea\x00\x32\xc4\xbe\x20\x95\x84\x95\xcc\x9e\x58\x0f\x11\x9a\x25\x61\x6a\xb1\x16",
    // "/usr/lib/libobjc.dylib" / M(Rot) / S(201) / L(22)
    "\xf8\x3e\x3c\x3b\xf8\x35\x32\x2b\xf8\x35\x32\x2b\x38\x2b\x33\x2c\xf7\x2d\x42\x35\x32\x2b\xc9",
    // "" / M(None) / S(0) / L(0)
    "\x19\x9e\xbe\x3b\x11\x27\xcc\x69\xe8\x1c\x71\x21\xe7\x78\x00\x3c\x7e\x73\xb0\xf2\x23\x41\x32\x49\x21\x01\xda\x60\x98\xe6\x1a\x0a",
    // "" / M(None) / S(0) / L(0)
    "\x11\x78\xa7\xc9\x18\xb9\xc3\x81\xa1\x21\xd3\xa2\xa8\x5d\x26\xc5\xf0\x98\x4a\x01\xd1\xca\xfc\x0f\x8d\x46\x94\x48\x0e\x12\xa5\x66",
    // "/usr/lib/libobjc.dylib" / M(Xor4) / S(235) / L(22)
    "\x32\x68\x6e\x6f\x32\x71\x74\x7f\x32\x71\x74\x7f\x72\x7f\x77\x7e\x33\x79\x64\x71\x74\x7f\x1d",
    // "ASN1_OBJECT_free" / M(Xor3) / S(38) / L(16)
    "\x76\x64\x79\x06\x68\x78\x75\x7d\x72\x74\x63\x68\x51\x45\x52\x52\x37",
    // "" / M(None) / S(0) / L(0)
    "\x7a\x4f\x4d\x44\xd0\xa3\x15\xb8\x83\x18\xa8\x22\x70\x67\x4d\x11\x74\x94\xcb\x50\xd7\x07\x64\xaa\xfd\x57\x7c\xd4\xe9\x20\x6b\xe9",
    // "PKCS7_free" / M(Rot) / S(30) / L(10)
    "\x6e\x69\x61\x71\x55\x7d\x84\x90\x83\x83\x1e\xd8\xf8\x34\xb9\xd0",
    // "CFBundleShortVersionString" / M(Xor4) / S(75) / L(26)
    "\x02\x07\x03\x34\x2f\x25\x2d\x24\x12\x29\x2e\x33\x35\x17\x24\x33\x32\x28\x2e\x2f\x12\x35\x33\x28\x2f\x26\x41\xa3\x37\x25\xcd\xef\x47\xc8\x8f",
    // "strncmp" / M(Xor2) / S(218) / L(7)
    "\xb9\xbe\xb8\xa4\xa9\xa7\xba\xca\x0e\xb4\x41\x5b\x40\x24\x20\xed",
    // "sk_free" / M(Xor3) / S(8) / L(7)
    "\x6b\x73\x47\x7e\x6a\x7d\x7d\x18\x8c\xf7\xa0\x97\x96\x2d\x79\x29",
    // "" / M(None) / S(0) / L(0)
    "\x9e\xbb\xfa\x85\xed\xbe\x78\xde\x23\xb6\x35\x81\xf3\xf5\xab\xe2\x48\x3d\xcb\x3a\x29\x85\xfa\x91\xb1\x92\x4a\x4b\xb6\x57\x40\xa4",
    // "SHA1_Init" / M(Xor1) / S(156) / L(9)
    "\xcf\xd4\xdd\xad\xc3\xd5\xf2\xf5\xe8\x9c\xf5\x00\x06\x06\x52\xd0",
    // "RTLD_MAIN_ONLY" / M(Xor3) / S(217) / L(14)
    "\xbb\xbd\xa5\xad\xb6\xa4\xa8\xa0\xa7\xb6\xa6\xa7\xa5\xb0\xe9\x1b",
    // "" / M(None) / S(0) / L(0)
    "\xf4\xf1\xed\xee\x74\x58\x66\x92\x4b\x8e\x84\x9d\xdd\xdf\xaf\x6b\xa5\xe9\x8a\x9e\x69\x14\xa9\xf9\xc6\x08\x98\xfe\x4a\x20\x78\x91",
    // "exit" / M(Xor2) / S(2) / L(4)
    "\x77\x6a\x7b\x66\x12\xd1\xd4\xa6\x21\x1b\x15\x94\x95\x1b\x54\x89",
    // "CC_SHA1_Init" / M(Xor1) / S(103) / L(12)
    "\x24\x24\x38\x34\x2f\x26\x56\x38\x2e\x09\x0e\x13\x67\x10\xc6\x3e",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(142) / L(40)
    "\xb8\xbf\xbf\xcb\xbb\xcc\xb8\xb8\xbc\xcd\xbb\xb7\xbd\xcf\xbe\xb6\xc8\xc8\xbb\xb6\xca\xbf\xba\xcf\xcb\xbc\xbc\xba\xbb\xbc\xca\xbf\xb7\xb6\xca\xc8\xb8\xcd\xb8\xbe\x8e\xa7\x5e\x1c\x8a\xb3\xc9\x86\xfb",
    // "longjmp" / M(Rot) / S(2) / L(7)
    "\x6e\x71\x70\x69\x6c\x6f\x72\x02\xb0\x6b\x95\xfd\xbc\x88\xaa\x9a",
    // "%02X" / M(Xor3) / S(216) / L(4)
    "\xcd\xd8\xda\xb0\xe8\xc3\x89\xdb\x8e\x1e\xfc\x14\xd7\xbe\x87\x2d",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(64) / L(32)
    "\x39\x39\x39\x39\x67\x6d\x67\x0d\x0d\x67\x6d\x67\x24\x24\x67\x14\x67\x08\x08\x67\x7a\x67\x2d\x2d\x67\x7a\x67\x33\x33\x67\x1a\x67\x40",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(185) / L(28)
    "\xd5\xd3\xcf\xf9\xee\xea\xf5\xff\xf9\xdb\xf9\xe8\xd1\xfd\xe8\xff\xf4\xf5\xf2\xfb\xcf\xf9\xee\xea\xf5\xff\xf9\xef\x9c\xa3\x4c\x5d\x81\x71\xc3\xac\x33",
    // "d2i_PKCS7_bio" / M(Rot) / S(121) / L(13)
    "\xdd\xab\xe2\xd8\xc9\xc4\xbc\xcc\xb0\xd8\xdb\xe2\xe8\x79\x55\xaa",
    // "EVP_DigestFinal" / M(Xor1) / S(241) / L(15)
    "\xb4\xa7\xa1\xae\xb5\x98\x96\x94\x82\x85\xb7\x98\x9f\x90\x9d\xf1",
    // "" / M(None) / S(0) / L(0)
    "\x6a\xa6\xfd\x56\x17\xcc\x32\xdc\x97\xe2\xb0\x8b\x1b\xe6\xe8\xb7\xcb\x41\xb2\xb7\x0c\x1f\x2c\x62\x87\x46\xf1\x1e\x40\x9a\x5f\x6e",
    // "CFBundleGetMainBundle" / M(Xor4) / S(27) / L(21)
    "\x11\x14\x10\x27\x3c\x36\x3e\x37\x15\x37\x26\x1f\x33\x3b\x3c\x10\x27\x3c\x36\x3e\x37\x52",
    // "CFArrayGetValueAtIndex" / M(Xor1) / S(230) / L(22)
    "\xa5\xa0\xa7\x94\x94\x87\x9f\xa1\x83\x92\xb0\x87\x8a\x93\x83\xa7\x92\xaf\x88\x82\x83\x9e\xe6",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(1) / L(28)
    "\x66\x4a\x4b\x51\x40\x4b\x51\x56\x0a\x7a\x68\x64\x76\x77\x40\x46\x40\x4c\x55\x51\x0a\x57\x40\x46\x40\x4c\x55\x51\x25\xf1\x80\xc0\x5d\x4b\x13\xe6\x70",
    // "" / M(None) / S(0) / L(0)
    "\xf7\xa2\xec\x52\xc3\xc9\x83\xee\x1e\x48\xeb\xb2\x07\x89\xcd\x64\x81\x51\x0d\x2b\xdf\xdd\x31\xfb\xae\x5a\x69\xc5\x08\x69\x59\xa8",
    // "CFDictionaryGetValue" / M(Xor4) / S(218) / L(20)
    "\xa1\xa4\xa6\x8b\x81\x96\x8b\x8d\x8c\x83\x90\x9b\xa5\x87\x96\xb4\x83\x8e\x97\x87\xe2",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor2) / S(25) / L(37)
    "\x6c\x5a\x5c\x74\x5a\x46\x5c\x57\x5e\x56\x51\x6c\x5a\x5e\x4d\x5c\x57\x7c\x4d\x5a\x5e\x4b\x5a\x79\x4d\x50\x52\x7e\x4b\x4b\x4d\x56\x5d\x4a\x4b\x5a\x4c\x3f",
    // "kSecMatchLimit" / M(Xor2) / S(135) / L(14)
    "\xfc\xc4\xf2\xf4\xda\xf6\xe3\xf4\xff\xdb\xfe\xfa\xfe\xe3\x97\x72",
    // "dlopen" / M(Xor2) / S(147) / L(6)
    "\xe7\xef\xec\xf3\xe6\xed\x83\xff\x15\x86\xf5\x04\xc8\x4f\x79\xcb",
    // "" / M(None) / S(0) / L(0)
    "\xc3\x68\xa0\x69\xde\x5f\xea\x67\xc0\x61\xaa\xe0\x3f\x4e\x30\x8b\x97\x96\xb4\x7b\x92\xf6\x14\x4e\xde\x84\xb1\x5a\xea\x24\x03\xb7",
    // "sk_value" / M(Xor3) / S(195) / L(8)
    "\xa0\xb8\x8c\xa5\xb2\xbf\xa6\xb6\xd3\x58\x1b\xbc\x62\xdf\x10\x84",
    // "" / M(None) / S(0) / L(0)
    "\x87\x8a\x07\x26\x49\x7e\x33\xf5\xb9\x77\x77\x64\x4b\x3b\xe6\x60\x7c\xe5\x13\xad\x7e\x35\xa5\x0c\xe0\x16\x61\xb7\x15\x6b\x33\xcb",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x33\x69\xdb\x02\xf5\xa5\x37\x19\xcf\x67\xe4\x77\xdf\xa9\xd1\xa3\x9b\xf9\x33\x0e\x98\x83\xbc\xe2\xd4\xbd\x6e\x7c\x3e\x50\x81",
    // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(118) / L(25)
    "\x47\x58\x44\x58\x4e\x42\x46\x58\x47\x47\x45\x40\x45\x43\x58\x47\x46\x46\x58\x40\x58\x47\x47\x58\x47\x76\xcc\xfe\xa5\xac\x78\x06\xa9\x70",
    // "" / M(None) / S(0) / L(0)
    "\x5d\xa8\xfd\x67\xc3\x07\xb6\xaa\x42\x78\xb4\x4b\x27\x0c\x89\x24\x33\x8c\xfa\xa7\xef\xf5\x7b\x25\xd5\xc1\xdd\x9b\x31\x9d\x81\x6f",
    // "CFDataGetLength" / M(Xor4) / S(117) / L(15)
    "\x13\x16\x14\x31\x24\x31\x17\x35\x24\x1c\x35\x3e\x37\x24\x38\x50",
    // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(144) / L(35)
    "\x03\x06\x13\x34\x32\x29\x2e\x27\x07\x25\x34\x06\x29\x2c\x25\x13\x39\x33\x34\x25\x2d\x12\x25\x30\x32\x25\x33\x25\x2e\x34\x21\x34\x29\x2f\x2e\x40",
    // "" / M(None) / S(0) / L(0)
    "\x8c\xef\x2f\x2c\xb8\x9c\x48\x7f\x68\x6c\x38\x67\xa8\x8d\x40\xbd\xff\xfb\x90\xe0\x0d\xb2\x00\xee\x1b\x0d\x37\x97\x4e\x19\x62\xc3",
    // "" / M(None) / S(0) / L(0)
    "\x0f\x47\x13\xbf\x63\xfb\xe3\x75\x8d\xff\x16\x0e\xe7\xc9\x24\xe7\xa6\xd0\x63\x99\x4e\x67\x0c\xc9\xdf\xe7\x18\xf8\x38\x4c\x9b\xf2",
    // "%02x:" / M(Xor3) / S(177) / L(5)
    "\xe4\xf1\xf3\xb9\xfb\xc1\xdc\xaa\xaa\x69\x4b\xdf\x05\xd7\x51\x03",
    // "CFArrayGetCount" / M(Xor2) / S(240) / L(15)
    "\xa3\xa6\xa1\x92\x92\x81\x99\xa7\x85\x94\xa3\x8f\x95\x8e\x94\xe0",
    // "X509_get_ext_by_OBJ" / M(Xor2) / S(26) / L(19)
    "\x56\x3b\x3e\x37\x51\x69\x6b\x7a\x51\x6b\x76\x7a\x51\x6c\x77\x51\x41\x4c\x44\x0e",
    // "alloc" / M(Rot) / S(7) / L(5)
    "\x68\x73\x73\x76\x6a\x07\x37\xdf\x01\x38\x86\x67\xa9\x8b\x13\xff",
    // "" / M(None) / S(0) / L(0)
    "\xdf\x38\x50\x9a\xa5\x77\x98\x17\x55\xc0\x7d\x74\x63\x98\xe1\x51\x2d\x4f\x7e\x56\xe0\x15\x27\x1c\x68\xda\x6e\xc9\x55\x6b\xdc\x76",
    // "objc_getClass" / M(Xor1) / S(87) / L(13)
    "\x38\x35\x3d\x34\x08\x30\x32\x23\x14\x3b\x36\x24\x24\x57\x0c\xe0",
    // "glob_b" / M(Xor2) / S(0) / L(6)
    "\x77\x7c\x7f\x72\x4f\x72\x10\x15\x4f\x57\xfb\xca\x78\x94\x0f\x1f",
    // "setDelegate:" / M(Xor3) / S(136) / L(12)
    "\xeb\xfd\xec\xdc\xfd\xf4\xfd\xff\xf9\xec\xfd\xa2\x98\xf1\xb3\x5e",
    // "X509_NAME_get_text_by_NID" / M(Xor1) / S(90) / L(25)
    "\x02\x6f\x6a\x63\x05\x14\x1b\x17\x1f\x05\x3d\x3f\x2e\x05\x2e\x3f\x22\x2e\x05\x38\x23\x05\x14\x13\x1e\x5a\xe0\x26\x3a\x7e\xd7\xa3\xaa\x8c",
    // "CFArrayGetCount" / M(Xor3) / S(44) / L(15)
    "\x7f\x7a\x7d\x4e\x4e\x5d\x45\x7b\x59\x48\x7f\x53\x49\x52\x48\x3c",
    // "setjmp" / M(Rot) / S(68) / L(6)
    "\xb7\xa9\xb8\xae\xb1\xb4\x44\xda\xaf\xa2\x89\xcf\x04\xb2\x0c\xb6",
    // "CFDateFormatterCreate" / M(Xor3) / S(55) / L(21)
    "\x0e\x0b\x09\x2c\x39\x28\x0b\x22\x3f\x20\x2c\x39\x39\x28\x3f\x0e\x3f\x28\x2c\x39\x28\x4d",
    // "SHA1_Update" / M(Xor2) / S(57) / L(11)
    "\x7a\x61\x68\x18\x76\x7c\x59\x4d\x48\x5d\x4c\x29\x7f\x79\x69\xa9",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(125) / L(66)
    "\x52\x2e\x04\x0e\x09\x18\x10\x52\x31\x14\x1f\x0f\x1c\x0f\x04\x52\x3b\x0f\x1c\x10\x18\x0a\x12\x0f\x16\x0e\x52\x3e\x12\x0f\x18\x3b\x12\x08\x13\x19\x1c\x09\x14\x12\x13\x53\x1b\x0f\x1c\x10\x18\x0a\x12\x0f\x16\x52\x3e\x12\x0f\x18\x3b\x12\x08\x13\x19\x1c\x09\x14\x12\x13\x7d",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(68) / L(40)
    "\x43\x44\x44\x30\x40\x37\x43\x43\x47\x36\x40\x4c\x46\x34\x45\x4d\x33\x33\x40\x4d\x31\x44\x41\x34\x30\x47\x47\x41\x40\x47\x31\x44\x4c\x4d\x31\x33\x43\x36\x43\x45\x75\xce\x4f\xa5\x13\x43\x06\x89\x2e",
    // "EVP_MD_CTX_init" / M(Xor3) / S(29) / L(15)
    "\x68\x7b\x7d\x72\x60\x69\x72\x6e\x79\x75\x72\x44\x43\x44\x59\x2d",
    // "IORegistryEntryGetParentEntry" / M(Xor3) / S(11) / L(29)
    "\x78\x7e\x63\x54\x56\x58\x42\x45\x43\x48\x74\x5f\x45\x43\x48\x76\x54\x45\x61\x50\x43\x54\x5f\x45\x74\x5f\x45\x43\x48\x31\xdf\xac\x04\x14\xf0\x8e\xb1\x80",
    // "" / M(None) / S(0) / L(0)
    "\xaa\x56\x91\x73\x65\x8b\x06\x54\xa2\x13\x1a\xf8\x87\xf7\xa2\xc3\x7f\x3e\x89\x6f\xf6\x30\x16\x69\x8e\xfa\x08\x32\x12\x0c\x10\x00",
    // "receipt" / M(Xor1) / S(165) / L(7)
    "\xd7\xc0\xc6\xc0\xcc\xd5\xd1\xa5\x85\x93\x30\xcb\x51\x28\x3f\x84",
    // "CFReadStreamRead" / M(Rot) / S(140) / L(16)
    "\xcf\xd2\xde\xf1\xed\xf0\xdf\x00\xfe\xf1\xed\xf9\xde\xf1\xed\xf0\x8c",
    // "SecCertificateCopyData" / M(Xor1) / S(7) / L(22)
    "\x54\x62\x64\x44\x62\x75\x73\x6e\x61\x6e\x64\x66\x73\x62\x44\x68\x77\x7e\x43\x66\x73\x66\x07",
    // "kSecReturnRef" / M(Xor1) / S(12) / L(13)
    "\x67\x5f\x69\x6f\x5e\x69\x78\x79\x7e\x62\x5e\x69\x6a\x0c\x9d\xdd",
    // "CFStringCreateWithBytes" / M(Xor3) / S(242) / L(23)
    "\x51\x54\x41\x66\x60\x7b\x7c\x75\x51\x60\x77\x73\x66\x77\x45\x7b\x66\x7a\x50\x6b\x66\x77\x61\x12\x0a\x6c\x4c\x21\xa2\x40\x96\x37",
    // "setDelegate:" / M(Xor4) / S(207) / L(12)
    "\x83\x95\x84\xb4\x95\x9c\x95\x97\x91\x84\x95\xca\xf0\x76\xf0\x92",
    // "CFBundleUnloadExecutable" / M(Rot) / S(225) / L(24)
    "\x24\x27\x23\x56\x4f\x45\x4d\x46\x36\x4f\x4d\x50\x42\x45\x26\x59\x46\x44\x56\x55\x42\x43\x4d\x46\xe1\x9d\x4b\x6f\xd1\x55\x41\x7d\x47",
    // "SecKeychainSearchCopyNext" / M(Xor3) / S(231) / L(25)
    "\x5a\x6c\x6a\x42\x6c\x70\x6a\x61\x68\x60\x67\x5a\x6c\x68\x7b\x6a\x61\x4a\x66\x79\x70\x47\x6c\x71\x7d\x09\x83\x68\x83\xcc\x74\xfc\xdf\xf2",
    // "sel_registerName" / M(Rot) / S(254) / L(16)
    "\x71\x63\x6a\x5d\x70\x63\x65\x67\x71\x72\x63\x70\x4c\x5f\x6b\x63\xfe",
    // "%02x:" / M(Xor1) / S(82) / L(5)
    "\x77\x62\x60\x2a\x68\x52\xab\xe2\x55\xd9\xf5\x80\x7d\x16\x26\xfe",
    // "SecCertificateCopyData" / M(Rot) / S(90) / L(22)
    "\xad\xbf\xbd\x9d\xbf\xcc\xce\xc3\xc0\xc3\xbd\xbb\xce\xbf\x9d\xc9\xca\xd3\x9e\xbb\xce\xbb\x5a",
    // "CFArrayAppendValue" / M(Xor4) / S(61) / L(18)
    "\xc4\xc1\xc6\xf5\xf5\xe6\xfe\xc6\xf7\xf7\xe2\xe9\xe3\xd1\xe6\xeb\xf2\xe2\x87",
    // "1.0" / M(Xor1) / S(220) / L(3)
    "\xed\xf2\xec\xdc\x56\xcd\xda\xaf\xda\x38\x6a\xdb\x2b\xa3\x6e\xef",
    // "glob_b" / M(Xor2) / S(30) / L(6)
    "\x69\x62\x61\x6c\x51\x6c\x0e\x54\xbd\x38\xfa\x0a\x44\xb1\xe7\x7a",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Rot) / S(174) / L(48)
    "\xdd\x01\x27\x21\x22\x13\x1b\xdd\xfa\x17\x10\x20\x0f\x20\x27\xdd\xf4\x20\x0f\x1b\x13\x25\x1d\x20\x19\x21\xdd\xf7\xfd\xf9\x17\x22\xdc\x14\x20\x0f\x1b\x13\x25\x1d\x20\x19\xdd\xf7\xfd\xf9\x17\x22\xae",
    // "CFDataGetBytePtr" / M(Xor2) / S(140) / L(16)
    "\xde\xdb\xd9\xfc\xe9\xfc\xda\xf8\xe9\xdf\xe4\xe9\xf8\xcd\xe9\xef\x9d",
    // "ASN1_OBJECT_free" / M(Xor1) / S(249) / L(16)
    "\xb8\xaa\xb7\xc8\xa6\xb6\xbb\xb3\xbc\xba\xad\xa6\x9f\x8b\x9c\x9c\xf9",
    // "" / M(None) / S(0) / L(0)
    "\x1e\x69\x59\x6b\x11\xea\xae\x6a\xd0\x40\xcc\x71\x1f\xf7\x06\xfe\x4b\x73\xc1\x23\x59\xcf\x65\xa9\x37\x27\x19\xfa\x7a\x1c\xa5\x37",
    // "glob" / M(Xor3) / S(230) / L(4)
    "\x91\x9a\x99\x94\xf6\x81\x97\xd5\x61\x81\x49\xeb\x11\xf6\xdf\x3f",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(188) / L(43)
    "\xcb\xce\xdd\xda\xc4\xcb\xfa\xed\xe9\xfc\xed\xdf\xe1\xfc\xe0\xce\xe1\xe4\xed\xdb\xf1\xfb\xfc\xed\xe5\xd8\xe9\xfc\xe0\xda\xed\xe4\xe9\xfc\xe1\xfe\xed\xdc\xe7\xca\xe9\xfb\xed\x88\x25\x1d\xa0\xd4\x7c\xa5\xf9\x76",
    // "Contents/_MASReceipt" / M(Xor2) / S(25) / L(20)
    "\x4f\x63\x62\x78\x69\x62\x78\x7f\x23\x53\x41\x4d\x5f\x5e\x69\x6f\x69\x65\x7c\x78\x0c",
    // "OBJ_txt2obj" / M(Rot) / S(81) / L(11)
    "\xa0\x93\x9b\xb0\xc5\xc9\xc5\x83\xc0\xb3\xbb\x51\x4d\xe7\x4e\x34",
    // "PKCS7_get0_signers" / M(Xor3) / S(224) / L(18)
    "\xa3\xb8\xb0\xa0\xc4\xac\x94\x96\x87\xc3\xac\x80\x9a\x94\x9d\x96\x81\x80\xf3",
    // "com.iccir.Embrace" / M(Xor3) / S(225) / L(17)
    "\x90\x9c\x9e\xdd\x9a\x90\x90\x9a\x81\xdd\xb6\x9e\x91\x81\x92\x90\x96\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x43\xda\x2c\x15\xd7\xab\xbd\x81\xf2\x16\xad\xd3\xd6\x46\x04\xe5\xc2\xe0\x18\x17\x92\xf4\x5a\xe6\x26\x7f\x3e\xfc\x12\x03\xad\x4f",
    // "/usr/lib/libobjc.dylib" / M(Xor1) / S(7) / L(22)
    "\x28\x72\x74\x75\x28\x6b\x6e\x65\x28\x6b\x6e\x65\x68\x65\x6d\x64\x29\x63\x7e\x6b\x6e\x65\x07",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(66) / L(54)
    "\x6d\x11\x3b\x31\x36\x27\x2f\x6d\x0e\x2b\x20\x30\x23\x30\x3b\x6d\x04\x30\x23\x2f\x27\x35\x2d\x30\x29\x31\x6d\x11\x27\x21\x37\x30\x2b\x36\x3b\x6c\x24\x30\x23\x2f\x27\x35\x2d\x30\x29\x6d\x11\x27\x21\x37\x30\x2b\x36\x3b\x42",
    // "CFStringCompare" / M(Rot) / S(223) / L(15)
    "\x22\x25\x32\x53\x51\x48\x4d\x46\x22\x4e\x4c\x4f\x40\x51\x44\xdf",
    // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(50) / L(31)
    "\x1b\x1d\x00\x37\x35\x3b\x21\x26\x20\x2b\x17\x3c\x26\x20\x2b\x11\x20\x37\x33\x26\x37\x11\x14\x02\x20\x3d\x22\x37\x20\x26\x2b\x52",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(185) / L(50)
    "\x96\xea\xc0\xca\xcd\xdc\xd4\x96\xf5\xd0\xdb\xcb\xd8\xcb\xc0\x96\xff\xcb\xd8\xd4\xdc\xce\xd6\xcb\xd2\xca\x96\xf8\xc9\xc9\xf2\xd0\xcd\x97\xdf\xcb\xd8\xd4\xdc\xce\xd6\xcb\xd2\x96\xf8\xc9\xc9\xf2\xd0\xcd\xb9",
    // "sha1" / M(Xor3) / S(64) / L(4)
    "\x23\x38\x31\x61\x50\xf2\xf1\xa3\x64\x95\xec\x0d\x1e\xdf\xaf\x62",
    // "CFDateFormatterCreate" / M(Xor1) / S(78) / L(21)
    "\x0d\x08\x0a\x2f\x3a\x2b\x08\x21\x3c\x23\x2f\x3a\x3a\x2b\x3c\x0d\x3c\x2b\x2f\x3a\x2b\x4e",
    // "kCFTypeArrayCallBacks" / M(Xor3) / S(214) / L(21)
    "\x87\xaf\xaa\xb8\x95\x9c\x89\xad\x9e\x9e\x8d\x95\xaf\x8d\x80\x80\xae\x8d\x8f\x87\x9f\xec",
    // "%02x" / M(Xor1) / S(208) / L(4)
    "\xf5\xe0\xe2\xa8\xd0\xa8\xf9\x3f\xf2\xba\xce\xb3\x70\xca\x6c\xd2",
    // "init" / M(Xor1) / S(228) / L(4)
    "\x8d\x8a\x8d\x90\xe4\xed\x79\x06\xf1\x10\x66\xc0\xca\x2e\x1b\x30",
    // "" / M(None) / S(0) / L(0)
    "\x4d\xb6\xc3\x4c\x20\xbf\xfa\x66\xb1\xe0\x0b\x41\x3d\x70\x4f\x51\x01\x9a\xbb\x7e\x0a\xa2\x8a\xf4\x8c\x75\x51\x8b\x8a\xfd\x86\x8c",
    // "CFReadStreamOpen" / M(Xor1) / S(240) / L(16)
    "\xb3\xb6\xa2\x95\x91\x94\xa3\x84\x82\x95\x91\x9d\xbf\x80\x95\x9e\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x64\xcd\xc7\x95\x09\x93\x96\x71\xdf\x7e\x5c\x14\xea\xb8\x5c\x32\xf3\xc8\xaa\x86\x78\xb0\xc8\xc1\x51\xf6\x84\x8b\xb6\x67\xd0\x3f",
    // "Apple Root CA" / M(Xor3) / S(13) / L(13)
    "\x5c\x6d\x6d\x71\x78\x3d\x4f\x72\x72\x69\x3d\x5e\x5c\x1d\xf0\x96",
    // "exit" / M(Xor3) / S(35) / L(4)
    "\x56\x4b\x5a\x47\x33\x20\x65\x15\x31\x58\x0d\xfd\xd8\x7f\xc7\xce",
    // "dlopen" / M(Xor2) / S(39) / L(6)
    "\x53\x5b\x58\x47\x52\x59\x37\x23\x01\x16\xe0\xa5\x48\xfb\xd6\xfa",
    // "CFBundleCopyBundleURL" / M(Rot) / S(40) / L(21)
    "\x6b\x6e\x6a\x9d\x96\x8c\x94\x8d\x6b\x97\x98\xa1\x6a\x9d\x96\x8c\x94\x8d\x7d\x7a\x74\x28",
    // "BIO_free" / M(Xor1) / S(212) / L(8)
    "\x96\x9d\x9b\x8b\xb2\xa6\xb1\xb1\xd4\x38\xc1\x4f\xe8\x9c\xcf\xa7",
    // "X509_STORE_new" / M(Xor4) / S(118) / L(14)
    "\x38\x55\x50\x59\x3f\x33\x34\x2f\x32\x25\x3f\x0e\x05\x17\x60\x7b",
    // "" / M(None) / S(0) / L(0)
    "\x00\x8d\xe5\x28\x86\x96\xf5\xce\xa6\xf2\xd3\x83\x29\xda\x2b\xcb\x24\x5b\x07\xff\x47\x1f\xbb\x24\xcc\x3a\xaf\xe1\x0d\xff\x7c\x10",
    // "CFDictionaryAddValue" / M(Rot) / S(180) / L(20)
    "\xf7\xfa\xf8\x1d\x17\x28\x1d\x23\x22\x15\x26\x2d\xf5\x18\x18\x0a\x15\x20\x29\x19\xb4",
    // "CFRelease" / M(Rot) / S(93) / L(9)
    "\xa0\xa3\xaf\xc2\xc9\xc2\xbe\xd0\xc2\x5d\xb1\x1b\x83\x47\x62\xcc",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(227) / L(24)
    "\x47\x42\x40\x65\x70\x61\x42\x6b\x76\x69\x65\x70\x70\x61\x76\x57\x61\x70\x42\x6b\x76\x69\x65\x70\x04\x04\x06\x45\xd8\x8b\x3c\x94\xf1",
    // "ASN1_get_object" / M(Xor3) / S(143) / L(15)
    "\xde\xcc\xd1\xae\xc0\xf8\xfa\xeb\xc0\xf0\xfd\xf5\xfa\xfc\xeb\x9f",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(186) / L(40)
    "\x8c\x8b\x8b\xdf\x8f\xd8\x8c\x8c\x88\xd9\x8f\x83\x89\xdb\x8a\x82\xdc\xdc\x8f\x82\xde\x8b\x8e\xdb\xdf\x88\x88\x8e\x8f\x88\xde\x8b\x83\x82\xde\xdc\x8c\xd9\x8c\x8a\xba\xca\xab\xf9\x07\x80\xdd\x23\x77",
    // "EVP_MD_CTX_init" / M(Rot) / S(171) / L(15)
    "\xf0\x01\xfb\x0a\xf8\xef\x0a\xee\xff\x03\x0a\x14\x19\x14\x1f\xab",
    // "strlen" / M(Xor4) / S(229) / L(6)
    "\x23\x24\x22\x3c\x35\x3e\x50\x38\x8a\xb1\xbe\xc1\x2c\x62\x3e\xde",
    // "" / M(None) / S(0) / L(0)
    "\xd7\x69\x40\x66\x8f\x82\x06\x27\xa4\x4f\x7f\x79\x69\xa9\x05\x2c\x29\x49\xdb\xd5\x5a\xd0\xc3\xef\xb5\x7c\xe7\x1f\x07\x73\xc7\x7e",
    // "" / M(None) / S(0) / L(0)
    "\x4e\x84\x04\xaf\x71\x82\xc6\xf7\x31\xbd\x23\x71\xc5\xea\x61\xdc\x84\x33\xf9\xed\xf8\x08\x49\x58\x1b\xbc\x62\xdf\x10\x84\x61\xac",
    // "" / M(None) / S(0) / L(0)
    "\x1d\xc1\x56\xf7\xe3\x1a\xcb\x4c\xc5\xa8\xdb\x6c\xd8\xbb\xa6\x5d\x60\x2b\xbc\x27\x62\x43\x1d\xa1\x67\x42\x59\x79\x9e\xab\x2c\xe4",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(67) / L(40)
    "\x75\x72\x72\x06\x76\x01\x75\x75\x71\x00\x76\x7a\x70\x02\x73\x7b\x05\x05\x76\x7b\x07\x72\x77\x02\x06\x71\x71\x77\x76\x71\x07\x72\x7a\x7b\x07\x05\x75\x00\x75\x73\x43\xcf\x48\xfe\x3c\x3d\x92\xf1\x6a",
    // "X509_NAME_get_text_by_NID" / M(Xor1) / S(169) / L(25)
    "\xf1\x9c\x99\x90\xf6\xe7\xe8\xe4\xec\xf6\xce\xcc\xdd\xf6\xdd\xcc\xd1\xdd\xf6\xcb\xd0\xf6\xe7\xe0\xed\xa9\x33\xda\x0c\x2e\x60\x67\xd4\xff",
    // "Apple Root CA" / M(Xor4) / S(201) / L(13)
    "\xd1\xe0\xe0\xfc\xf5\xb0\xc2\xff\xff\xe4\xb0\xd3\xd1\x90\xa5\x25",
    // "CFReadStreamOpen" / M(Xor3) / S(250) / L(16)
    "\x48\x4d\x59\x6e\x6a\x6f\x58\x7f\x79\x6e\x6a\x66\x44\x7b\x6e\x65\x0b",
    // "kSecReturnRef" / M(Xor4) / S(152) / L(13)
    "\xeb\xd3\xe5\xe3\xd2\xe5\xf4\xf5\xf2\xee\xd2\xe5\xe6\x80\x28\xd6",
    // "CFRelease" / M(Xor1) / S(166) / L(9)
    "\xe5\xe0\xf4\xc3\xca\xc3\xc7\xd5\xc3\xa6\x3e\xd6\x6f\xfe\x68\xeb",
    // "X509_STORE_new" / M(Xor2) / S(202) / L(14)
    "\x82\xef\xea\xe3\x85\x89\x8e\x95\x88\x9f\x85\xb4\xbf\xad\xda\xb9",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(112) / L(43)
    "\x83\x86\x95\x92\x8c\x83\xb2\xa5\xa1\xb4\xa5\x97\xa9\xb4\xa8\x86\xa9\xac\xa5\x93\xb9\xb3\xb4\xa5\xad\x90\xa1\xb4\xa8\x92\xa5\xac\xa1\xb4\xa9\xb6\xa5\x94\xaf\x82\xa1\xb3\xa5\xc0\x38\x02\x8e\x6a\x3e\x13\xcb\xfa",
    // "IOMACAddress" / M(Xor2) / S(71) / L(12)
    "\x1e\x18\x1a\x16\x14\x16\x33\x33\x25\x32\x24\x24\x57\x25\xd6\xdc",
    // "CFDictionarySetValue" / M(Xor2) / S(99) / L(20)
    "\x35\x30\x32\x1f\x15\x02\x1f\x19\x18\x17\x04\x0f\x25\x13\x02\x20\x17\x1a\x03\x13\x76",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x7b\x96\x58\x12\xa6\x36\x26\xd2\xce\x30\xd0\xa6\x06\x3b\x79\x54\x20\x86\x96\xe6\xb6\x7f\x38\xc9\xda\x61\x8a\x08\x25\x16\x9e",
    // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(112) / L(25)
    "\xd1\xce\xd2\xce\xd8\xd4\xd0\xce\xd1\xd1\xd3\xd6\xd3\xd5\xce\xd1\xd0\xd0\xce\xd6\xce\xd1\xd1\xce\xd1\xe0\x0e\xe9\x07\xde\x4e\x0b\x6b\x6f",
    // "com.iccir.Embrace" / M(Xor1) / S(199) / L(17)
    "\xa4\xa8\xaa\xe9\xae\xa4\xa4\xae\xb5\xe9\x82\xaa\xa5\xb5\xa6\xa4\xa2\xc7",
    // "IOIteratorNext" / M(Xor1) / S(212) / L(14)
    "\x9d\x9b\x9d\xa0\xb1\xa6\xb5\xa0\xbb\xa6\x9a\xb1\xac\xa0\xd4\x10",
    // "Contents" / M(Xor1) / S(232) / L(8)
    "\xab\x87\x86\x9c\x8d\x86\x9c\x9b\xe8\x6a\x7f\x58\x3a\xd8\x41\x96",
    // "" / M(None) / S(0) / L(0)
    "\xd5\x0d\x3b\x07\x14\xa0\x22\xe7\xd6\x9c\xa1\xcb\x5d\x67\x21\x2e\x78\x7e\x18\x13\xa3\x07\xce\x59\xa5\x88\x1d\x0a\x91\x95\x04\xeb",
    // "X509_get_ext_by_OBJ" / M(Rot) / S(97) / L(19)
    "\xb9\x96\x91\x9a\xc0\xc8\xc6\xd5\xc0\xc6\xd9\xd5\xc0\xc3\xda\xc0\xb0\xa3\xab\x61",
    // "kSecMatchLimitAll" / M(Xor2) / S(115) / L(17)
    "\x0a\x32\x04\x02\x2c\x00\x15\x02\x09\x2d\x08\x0c\x08\x15\x20\x0d\x0d\x61",
    // "CFBundleVersion" / M(Xor3) / S(78) / L(15)
    "\x1d\x18\x1c\x2b\x30\x3a\x32\x3b\x08\x3b\x2c\x2d\x37\x31\x30\x5e",
    // "EVP_DigestUpdate" / M(Xor4) / S(51) / L(16)
    "\x26\x35\x33\x3c\x27\x0a\x04\x06\x10\x17\x36\x13\x07\x02\x17\x06\x63",
    // "" / M(None) / S(0) / L(0)
    "\xf7\x94\x2f\xdb\xa8\xd4\x57\x26\xa7\x07\x7e\xd2\x12\x78\x6a\x70\x35\xd8\x6d\xfd\x93\x80\x9a\xea\x16\xa7\xd8\x39\xf7\x4e\x8f\xb0",
    // "" / M(None) / S(0) / L(0)
    "\xf5\x99\x4d\x8a\x54\xa9\xc4\x08\x48\x40\xa6\xa5\x74\x4d\xbf\xba\x72\x76\x32\x58\x9e\xb6\x5b\x46\x9f\x95\x8d\x1d\x7f\xae\x61\x9f",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x3d\x2b\x6c\x04\x1c\xb1\x7b\x66\xf7\xcb\x3b\xe2\xe4\x8e\xcf\x07\x42\xab\xd9\xce\xe0\x4e\x55\xda\x0f\x5f\xe7\xa4\xa7\x56\xcd",
    // "CFDataCreate" / M(Xor3) / S(169) / L(12)
    "\xfa\xff\xfd\xd8\xcd\xd8\xfa\xcb\xdc\xd8\xcd\xdc\xb9\x73\x53\xef",
    // "" / M(None) / S(0) / L(0)
    "\xda\xaf\xda\x38\x6a\xdb\x2b\xa3\x6e\xef\xac\xc4\xe7\x7a\xf7\x49\xba\x7e\xbe\x97\x09\xba\x48\xf1\x63\x7c\x92\xcb\xb2\xd6\x4f\xc3",
    // "kSecMatchSearchList" / M(Rot) / S(113) / L(19)
    "\xdc\xc4\xd6\xd4\xbe\xd2\xe5\xd4\xd9\xc4\xd6\xd2\xe3\xd4\xd9\xbd\xda\xe4\xe5\x71",
    // "" / M(None) / S(0) / L(0)
    "\x89\xdb\x8e\x1e\xfc\x14\xd7\xbe\x87\x2d\x1a\x36\xd7\x94\x0c\xe9\xab\xe2\x55\xd9\xf5\x80\x7d\x16\x26\xfe\xaa\x4c\xde\x17\xcb\xb0",
    // "/usr/lib/libSystem.dylib" / M(Xor1) / S(212) / L(24)
    "\xfb\xa1\xa7\xa6\xfb\xb8\xbd\xb6\xfb\xb8\xbd\xb6\x87\xad\xa7\xa0\xb1\xb9\xfa\xb0\xad\xb8\xbd\xb6\xd4\x4a\xb7\x68\x10\x87\x2f\x87\x26",
    // "CFBundleShortVersionString" / M(Rot) / S(1) / L(26)
    "\x44\x47\x43\x76\x6f\x65\x6d\x66\x54\x69\x70\x73\x75\x57\x66\x73\x74\x6a\x70\x6f\x54\x75\x73\x6a\x6f\x68\x01\x4d\x63\x8a\xad\xda\x71\xd0\xec",
    // "CFStringCompare" / M(Xor3) / S(33) / L(15)
    "\x72\x77\x62\x45\x43\x58\x5f\x56\x72\x5e\x5c\x41\x50\x43\x54\x31",
    // "" / M(None) / S(0) / L(0)
    "\x68\x7f\xa9\xb0\xa3\x63\x3c\xd1\xd2\xdc\x42\x30\xc4\xc8\x73\x4c\x56\x93\x21\x65\xf7\x38\xf7\xd9\x73\x0f\x74\x4c\x70\x74\x81\xb6",
    // "sk_free" / M(Xor2) / S(27) / L(7)
    "\x78\x60\x54\x6d\x79\x6e\x6e\x0b\x38\x99\xe3\x00\x89\x15\x1b\xaf",
    // "kSecMatchLimit" / M(Xor4) / S(202) / L(14)
    "\xcb\xf3\xc5\xc3\xed\xc1\xd4\xc3\xc8\xec\xc9\xcd\xc9\xd4\xa0\xca",
    // "d2i_X509_bio" / M(Xor3) / S(161) / L(12)
    "\xd5\x83\xd8\xee\xe9\x84\x81\x88\xee\xd3\xd8\xde\xb1\xca\x76\x14",
    // "CC_SHA1_Final" / M(Xor2) / S(207) / L(13)
    "\x9c\x9c\x80\x8c\x97\x9e\xee\x80\x99\xb6\xb1\xbe\xb3\xdf\x0a\xe5",
    // "" / M(None) / S(0) / L(0)
    "\x5b\x3e\xf4\xa7\xcf\x44\x75\x5e\x8c\xc1\xb7\x8f\x88\x45\x1f\x4d\x8a\x9a\xd7\x92\xa6\x57\x2e\xb1\x23\x6a\xbc\xfc\x93\xf8\x5b\x73",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(223) / L(48)
    "\x80\xfc\xd6\xdc\xdb\xca\xc2\x80\xe3\xc6\xcd\xdd\xce\xdd\xd6\x80\xe9\xdd\xce\xc2\xca\xd8\xc0\xdd\xc4\xdc\x80\xe6\xe0\xe4\xc6\xdb\x81\xc9\xdd\xce\xc2\xca\xd8\xc0\xdd\xc4\x80\xe6\xe0\xe4\xc6\xdb\xaf",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(247) / L(36)
    "\x5f\x5a\x5e\x69\x72\x78\x70\x79\x5b\x79\x68\x4a\x7d\x70\x69\x79\x5a\x73\x6e\x55\x72\x7a\x73\x58\x75\x7f\x68\x75\x73\x72\x7d\x6e\x65\x57\x79\x65\x1c",
    // "_MASReceipt/receipt" / M(Rot) / S(131) / L(19)
    "\xe2\xd0\xc4\xd6\xd5\xe8\xe6\xe8\xec\xf3\xf7\xb2\xf5\xe8\xe6\xe8\xec\xf3\xf7\x83",
    // "en0" / M(Xor2) / S(74) / L(3)
    "\x3f\x34\x6a\x5a\x0b\xb8\xe0\x88\x7b\x98\xe8\xb7\xc3\xd5\xf1\x02",
    // "IOMasterPort" / M(Xor1) / S(134) / L(12)
    "\xcf\xc9\xcb\xe7\xf5\xf2\xe3\xf4\xd6\xe9\xf4\xf2\x86\xda\x06\x52",
    // "" / M(None) / S(0) / L(0)
    "\x50\x81\x78\x35\x3f\x2e\x2d\x09\x09\x87\x8e\x65\x91\x9f\xaa\xc1\xec\x0a\x90\x74\xe0\x88\x5b\xe8\xee\x73\x2e\x9a\x04\x47\x31\x82",
    // "IOIteratorNext" / M(Xor4) / S(82) / L(14)
    "\x69\x6f\x69\x54\x45\x52\x41\x54\x4f\x52\x6e\x45\x58\x54\x20\x04",
    // "CC_SHA1_Init" / M(Xor1) / S(253) / L(12)
    "\xbe\xbe\xa2\xae\xb5\xbc\xcc\xa2\xb4\x93\x94\x89\xfd\xdc\x43\xbd",
    // "longjmp" / M(Xor2) / S(165) / L(7)
    "\xd9\xda\xdb\xd2\xdf\xd8\xc5\xb5\x14\xa9\xf9\xc6\x08\x98\xfe\x4a",
    // "strncmp" / M(Xor2) / S(30) / L(7)
    "\x7d\x7a\x7c\x60\x6d\x63\x7e\x0e\x68\xf5\x6f\x31\xa2\x60\xd9\x17",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(26) / L(23)
    "\x69\x71\x68\x5f\x59\x5f\x53\x4a\x4e\x68\x5f\x5c\x48\x5f\x49\x52\x68\x5f\x4b\x4f\x5f\x49\x4e\x3a\xcd\xcf\x4e\xf0\xa4\xe2\x17\x5d",
    // "" / M(None) / S(0) / L(0)
    "\xb8\x30\x01\x22\xb3\x7f\xa2\xc8\xae\xcd\x02\x32\x77\xa5\x56\x3b\x7c\x48\xcd\xf8\xf3\x13\x41\xcd\xc8\x47\x33\x1c\x7b\xad\x66\x40",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(139) / L(59)
    "\xf9\xfe\xf5\xfe\x8a\xf5\xfa\x8d\xf5\xf9\xf9\xf5\xfd\x8c\xf5\xfa\xf6\xf5\xfc\x8e\xf5\xff\xf7\xf5\x89\x89\xf5\xfa\xf7\xf5\x8b\xfe\xf5\xfb\x8e\xf5\x8a\xfd\xf5\xfd\xfb\xf5\xfa\xfd\xf5\x8b\xfe\xf5\xf6\xf7\xf5\x8b\x89\xf5\xf9\x8c\xf5\xf9\xff\xcf\xda\x39\xd6\x9e\xf8\x39\x9f\x00",
    // "CFStringCreateWithBytes" / M(Xor2) / S(86) / L(23)
    "\x35\x30\x25\x02\x04\x1f\x18\x11\x35\x04\x13\x17\x02\x13\x21\x1f\x02\x1e\x34\x0f\x02\x13\x05\x76\xe4\xe6\x95\xd1\x25\x90\x66\xb9",
    // "_MASReceipt/receipt" / M(Rot) / S(213) / L(19)
    "\x34\x22\x16\x28\x27\x3a\x38\x3a\x3e\x45\x49\x04\x47\x3a\x38\x3a\x3e\x45\x49\xd5",
    // "EVP_get_digestbyname" / M(Xor4) / S(185) / L(20)
    "\x68\x7b\x7d\x72\x4a\x48\x59\x72\x49\x44\x4a\x48\x5e\x59\x4f\x54\x43\x4c\x40\x48\x2d",
    // "SecItemCopyMatching" / M(Rot) / S(121) / L(19)
    "\xcc\xde\xdc\xc2\xed\xde\xe6\xbc\xe8\xe9\xf2\xc6\xda\xed\xdc\xe1\xe2\xe7\xe0\x79",
    // "CFDictionaryCreateMutable" / M(Xor2) / S(243) / L(25)
    "\x92\x97\x95\xb8\xb2\xa5\xb8\xbe\xbf\xb0\xa3\xa8\x92\xa3\xb4\xb0\xa5\xb4\x9c\xa4\xa5\xb0\xb3\xbd\xb4\xd1\x59\xda\x59\x38\xd7\x0d\x07\x5f",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(22) / L(23)
    "\x65\x7d\x64\x53\x55\x53\x5f\x46\x42\x64\x53\x50\x44\x53\x45\x5e\x64\x53\x47\x43\x53\x45\x42\x36\xb6\xc8\xc7\x98\xab\x41\xae\xc1",
    // "kSecClassCertificate" / M(Xor1) / S(93) / L(20)
    "\x36\x0e\x38\x3e\x1e\x31\x3c\x2e\x2e\x1e\x38\x2f\x29\x34\x3b\x34\x3e\x3c\x29\x38\x5d",
    // "SecKeychainOpen" / M(Xor3) / S(240) / L(15)
    "\x53\x65\x63\x4b\x65\x79\x63\x68\x61\x69\x6e\x4f\x70\x65\x6e\x00",
    // "sk_free" / M(Xor3) / S(123) / L(7)
    "\xf8\xe0\xd4\xed\xf9\xee\xee\x8b\xc3\xef\xb5\x7c\xe7\x1f\x07\x73",
    // "" / M(None) / S(0) / L(0)
    "\xd8\xc0\x63\x5f\x28\x04\x6b\xb0\x8d\x47\xa6\xe8\x95\x47\xa6\x20\xaa\xe6\x66\xe8\xcb\x84\x1b\x77\x57\x40\xbf\x54\x57\x9e\x5d\xfd",
    // "_MASReceipt/receipt" / M(Xor1) / S(191) / L(19)
    "\xe0\xf2\xfe\xec\xed\xda\xdc\xda\xd6\xcf\xcb\x90\xcd\xda\xdc\xda\xd6\xcf\xcb\xbf",
    // "" / M(None) / S(0) / L(0)
    "\x3f\xbb\x8c\x8e\x10\x0f\x94\x5b\x9e\xe7\x91\x0b\x48\xbd\xb1\x51\xf0\xf3\x5d\x27\x56\xc8\xe3\xdb\x81\xa8\xd2\x99\xf3\x5b\x1b\x32",
    // "Contents/_MASReceipt" / M(Xor3) / S(8) / L(20)
    "\x5e\x72\x73\x69\x78\x73\x69\x6e\x32\x42\x50\x5c\x4e\x4f\x78\x7e\x78\x74\x6d\x69\x1d",
    // "" / M(None) / S(0) / L(0)
    "\xa8\xbe\x56\x8a\xfe\xe8\x6e\x59\xf6\x73\x8b\xa4\x2d\x53\x94\x7c\xbe\x17\x81\xbd\xaa\x01\xe2\x0d\x12\xcd\x38\x86\x10\xac\xec\x45",
    // "CC_SHA1_Final" / M(Rot) / S(53) / L(13)
    "\x78\x78\x94\x88\x7d\x76\x66\x94\x7b\x9e\xa3\x96\xa1\x35\x43\xe1",
    // "CFBundleUnloadExecutable" / M(Xor1) / S(140) / L(24)
    "\xcf\xca\xce\xf9\xe2\xe8\xe0\xe9\xd9\xe2\xe0\xe3\xed\xe8\xc9\xf4\xe9\xef\xf9\xf8\xed\xee\xe0\xe9\x8c\xba\x5a\x41\x8f\x3a\x21\x99\x22",
    // "kSecMatchSearchList" / M(Xor1) / S(38) / L(19)
    "\x4d\x75\x43\x45\x6b\x47\x52\x45\x4e\x75\x43\x47\x54\x45\x4e\x6a\x4f\x55\x52\x26",
    // "CFBundleGetMainBundle" / M(Rot) / S(14) / L(21)
    "\x51\x54\x50\x83\x7c\x72\x7a\x73\x55\x73\x82\x5b\x6f\x77\x7c\x50\x83\x7c\x72\x7a\x73\x0e",
    // "BIO_free" / M(Xor3) / S(3) / L(8)
    "\x51\x5a\x5c\x4c\x75\x61\x76\x76\x13\x7a\x1f\x22\x19\x87\x79\xbb",
    // "start" / M(Xor4) / S(145) / L(5)
    "\x63\x64\x71\x62\x64\x10\xbd\xa9\xa3\xf6\x20\x99\xe8\x92\xcf\x13",
    // "" / M(None) / S(0) / L(0)
    "\xf0\x1e\x80\xa3\x8f\x5e\xbc\x73\x34\x46\xa5\x98\x1d\xe1\xf8\x74\x96\x04\x61\x6d\x4a\x6f\x45\x63\xcd\x37\x0a\x5b\x59\x10\x9c\x82",
    // "CFReadStreamRead" / M(Rot) / S(100) / L(16)
    "\xa7\xaa\xb6\xc9\xc5\xc8\xb7\xd8\xd6\xc9\xc5\xd1\xb6\xc9\xc5\xc8\x64",
    // "kSecClassCertificate" / M(Rot) / S(180) / L(20)
    "\x1f\x07\x19\x17\xf7\x20\x15\x27\x27\xf7\x19\x26\x28\x1d\x1a\x1d\x17\x15\x28\x19\xb4",
    // "CC_SHA1" / M(Xor1) / S(68) / L(7)
    "\x07\x07\x1b\x17\x0c\x05\x75\x44\xa1\x0e\x07\x8c\x92\x6b\x0e\xfc",
    // "ASN1_OBJECT_free" / M(Xor1) / S(134) / L(16)
    "\xc7\xd5\xc8\xb7\xd9\xc9\xc4\xcc\xc3\xc5\xd2\xd9\xe0\xf4\xe3\xe3\x86",
    // "CFBundleCopyBundleURL" / M(Xor2) / S(41) / L(21)
    "\x7c\x79\x7d\x4a\x51\x5b\x53\x5a\x7c\x50\x4f\x46\x7d\x4a\x51\x5b\x53\x5a\x6a\x6d\x73\x3f",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(75) / L(32)
    "\xc4\xc4\xc4\xc4\x72\x78\x72\x98\x98\x72\x78\x72\xaf\xaf\x72\x9f\x72\x93\x93\x72\x85\x72\xb8\xb8\x72\x85\x72\xbe\xbe\x72\xa5\x72\x4b",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(117) / L(31)
    "\x3e\x16\x13\x01\x2c\x25\x30\x11\x3c\x36\x21\x3c\x3a\x3b\x34\x27\x2c\x03\x34\x39\x20\x30\x16\x34\x39\x39\x17\x34\x36\x3e\x26\x55",
    // "" / M(None) / S(0) / L(0)
    "\x3e\x45\xfe\x95\x35\xb3\x83\x4a\x80\x7c\x5b\x3c\xb7\x72\xc7\xae\xff\x00\x7c\xb5\x52\xdc\xa8\x6d\xe0\x3a\xa4\xfa\x28\x09\xef\xea",
    // "CFBundleCopyBundleURL" / M(Rot) / S(95) / L(21)
    "\xa2\xa5\xa1\xd4\xcd\xc3\xcb\xc4\xa2\xce\xcf\xd8\xa1\xd4\xcd\xc3\xcb\xc4\xb4\xb1\xab\x5f",
    // "" / M(None) / S(0) / L(0)
    "\xc5\x28\x3c\xe0\x2a\x85\xac\xe7\x04\x61\xf1\x95\x1c\x69\xbb\x5f\x57\xcf\xb7\x5e\xe8\x93\x93\x53\x7f\xd6\x58\x55\x89\xfd\x9d\x99",
    // "" / M(None) / S(0) / L(0)
    "\x77\xfa\x4b\x21\x56\x5e\xf3\x9f\xa9\xac\xfe\xf4\xf3\x15\xda\x8d\xbb\xce\xa1\xd3\x7f\xf1\x4c\x2b\xb0\x41\x95\x08\x2f\x4e\xf3\x64",
    // "CC_SHA1_Init" / M(Xor1) / S(59) / L(12)
    "\x78\x78\x64\x68\x73\x7a\x0a\x64\x72\x55\x52\x4f\x3b\xa2\x4b\xb3",
    // "strlen" / M(Xor3) / S(101) / L(6)
    "\x06\x01\x07\x19\x10\x1b\x75\x1a\xcb\x4c\xc5\xa8\xdb\x6c\xd8\xbb",
    // "CFArrayCreateMutable" / M(Xor3) / S(194) / L(20)
    "\x94\x91\x96\xa5\xa5\xb6\xae\x94\xa5\xb2\xb6\xa3\xb2\x9a\xa2\xa3\xb6\xb5\xbb\xb2\xd7",
    // "SHA1_Update" / M(Xor2) / S(16) / L(11)
    "\x53\x48\x41\x31\x5f\x55\x70\x64\x61\x74\x65\x00\x1e\xd5\xe6\x97",
    // "SecItemCopyMatching" / M(Xor3) / S(152) / L(19)
    "\xff\xc9\xcf\xe5\xd8\xc9\xc1\xef\xc3\xdc\xd5\xe1\xcd\xd8\xcf\xc4\xc5\xc2\xcb\xac",
    // "BIO_s_mem" / M(Xor2) / S(15) / L(9)
    "\x5d\x56\x50\x40\x6c\x40\x72\x7a\x72\x1f\xf6\xdf\xf4\x4f\x07\xed",
    // "" / M(None) / S(0) / L(0)
    "\xb7\x44\x97\x28\x75\xa5\x85\xc9\x14\xe8\xbc\x14\x13\xa1\x06\x54\x25\x16\xbf\x80\xce\x4f\xa5\x13\x43\x06\x89\x2e\xe8\x4d\x1a\xdf",
    // "CFNumberCreate" / M(Xor4) / S(88) / L(14)
    "\xc3\xc6\xce\xf5\xed\xe2\xe5\xf2\xc3\xf2\xe5\xe1\xf4\xe5\x80\x26",
    // "NSApplicationMain" / M(Xor4) / S(67) / L(17)
    "\xf8\xe5\xf7\xc6\xc6\xda\xdf\xd5\xd7\xc2\xdf\xd9\xd8\xfb\xd7\xdf\xd8\xb6",
    // "PKCS7_free" / M(Xor1) / S(189) / L(10)
    "\xed\xf6\xfe\xee\x8a\xe2\xdb\xcf\xd8\xd8\xbd\x8f\xe2\xa2\x98\x65",
    // "kSecMatchSubjectContains" / M(Xor2) / S(219) / L(24)
    "\x91\xa9\x9f\x99\xb7\x9b\x8e\x99\x92\xa9\x8f\x98\x90\x9f\x99\x8e\xb9\x95\x94\x8e\x9b\x93\x94\x89\xfa\x85\xfa\x91\xb1\x92\x4a\x4b\xb6",
    // "CFNumberCreate" / M(Xor4) / S(38) / L(14)
    "\x23\x26\x2e\x15\x0d\x02\x05\x12\x23\x12\x05\x01\x14\x05\x60\x5f",
    // "longjmp" / M(Rot) / S(147) / L(7)
    "\xff\x02\x01\xfa\xfd\x00\x03\x93\xde\x4b\x4c\xc7\xda\xf2\x18\x4d",
    // "" / M(None) / S(0) / L(0)
    "\x98\x15\x37\xdf\x01\x38\x86\x67\xa9\x8b\x13\xff\x23\xfd\x86\x9d\xfe\x8e\x7f\x01\x65\xa6\x4a\xd7\xac\x82\xf0\x96\xa4\x4c\x43\xad",
    // "en0" / M(Xor3) / S(134) / L(3)
    "\xf3\xf8\xa6\x96\x16\x39\xf7\xa0\x5a\xee\x01\xc5\x45\x3d\xa8\xfd",
    // "globfree" / M(Xor3) / S(177) / L(8)
    "\xa6\xad\xae\xa3\xa7\xb3\xa4\xa4\xc1\x83\xa7\x88\xdf\x1b\x86\xba",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(158) / L(50)
    "\xb1\xcd\xe7\xed\xea\xfb\xf3\xb1\xd2\xf7\xfc\xec\xff\xec\xe7\xb1\xd8\xec\xff\xf3\xfb\xe9\xf1\xec\xf5\xed\xb1\xdf\xee\xee\xd5\xf7\xea\xb0\xf8\xec\xff\xf3\xfb\xe9\xf1\xec\xf5\xb1\xdf\xee\xee\xd5\xf7\xea\x9e",
    // "SHA1_Final" / M(Rot) / S(203) / L(10)
    "\x1e\x13\x0c\xfc\x2a\x11\x34\x39\x2c\x37\xcb\xf2\xd3\x83\x29\xda",
    // "BIO_s_mem" / M(Rot) / S(66) / L(9)
    "\x84\x8b\x91\xa1\xb5\xa1\xaf\xa7\xaf\x42\xef\x33\xfb\x90\x75\xbc",
    // "" / M(None) / S(0) / L(0)
    "\x3f\x31\x00\x13\x7e\x08\xcd\x87\x18\x31\x00\xcc\xe9\xff\xc8\x6b\x5a\x07\x3d\x52\xa9\xce\x9c\xeb\xd5\x05\xde\xee\xba\x7d\x99\x21",
    // "" / M(None) / S(0) / L(0)
    "\x72\xe2\xfe\x56\x14\x86\xd5\x93\x34\x78\xc4\x13\xfc\x7c\x3b\xc0\xac\xea\xb7\xb5\x92\xc5\x13\x1d\xbe\x1e\x14\x27\xf4\x47\xb2\x84",
    // "X509_STORE_add_cert" / M(Xor3) / S(68) / L(19)
    "\x00\x6d\x68\x61\x07\x0b\x0c\x17\x0a\x1d\x07\x39\x3c\x3c\x07\x3b\x3d\x2a\x2c\x58",
    // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(249) / L(35)
    "\x47\x42\x40\x65\x70\x61\x42\x6b\x76\x69\x65\x70\x70\x61\x76\x47\x76\x61\x65\x70\x61\x40\x65\x70\x61\x42\x76\x6b\x69\x57\x70\x76\x6d\x6a\x63\x04",
    // "start" / M(Xor3) / S(198) / L(5)
    "\xa5\xa2\xb7\xa4\xa2\xd6\x49\x76\x6f\x13\x5a\xe1\x0c\xc9\xcb\xc6",
    // "init" / M(Xor2) / S(3) / L(4)
    "\x7a\x7d\x7a\x67\x13\xcc\x3e\x84\xb0\x6c\x8e\xc7\x2a\x1e\xdc\x38",
    // "EVP_DigestUpdate" / M(Rot) / S(99) / L(16)
    "\xa8\xb9\xb3\xc2\xa7\xcc\xca\xc8\xd6\xd7\xb8\xd3\xc7\xc4\xd7\xc8\x63",
    // "IOObjectRelease" / M(Xor1) / S(92) / L(15)
    "\x15\x13\x13\x3e\x36\x39\x3f\x28\x0e\x39\x30\x39\x3d\x2f\x39\x5c",
    // "CFDictionarySetValue" / M(Xor2) / S(92) / L(20)
    "\x0a\x0f\x0d\x20\x2a\x3d\x20\x26\x27\x28\x3b\x30\x1a\x2c\x3d\x1f\x28\x25\x3c\x2c\x49",
    // "objc_msgSend" / M(Xor4) / S(162) / L(12)
    "\x4f\x42\x4a\x43\x7f\x4d\x53\x47\x73\x45\x4e\x44\x20\x7a\xd2\x65",
    // "" / M(None) / S(0) / L(0)
    "\xfc\x88\x08\xd6\x03\x4c\x2f\x9a\x5a\x52\x9a\xf3\x3c\xd7\xd7\xb8\x46\xc0\xd9\x92\x89\x52\x6f\xee\xe5\x76\x4e\x3e\x83\x88\x63\x9a",
    // "SHA1_Update" / M(Xor2) / S(254) / L(11)
    "\xbd\xa6\xaf\xdf\xb1\xbb\x9e\x8a\x8f\x9a\x8b\xee\x77\xc3\x60\x31",
    // "%02X" / M(Rot) / S(179) / L(4)
    "\xd8\xe3\xe5\x0b\xb3\xcd\x60\x91\xe0\x0d\xd1\x54\xf2\xbe\xcb\x74",
    // "SHA1" / M(Xor1) / S(48) / L(4)
    "\x63\x78\x71\x01\x30\x2e\xaf\xc8\xfb\xb0\x09\x67\xaa\x2d\xca\x5d",
    // "IOMACAddress" / M(Xor1) / S(98) / L(12)
    "\x2b\x2d\x2f\x23\x21\x23\x06\x06\x10\x07\x11\x11\x62\x94\xe7\x6d",
    // "%02X:" / M(Xor1) / S(56) / L(5)
    "\x1d\x08\x0a\x60\x02\x38\x73\x71\xcc\xe4\x7e\xb4\x07\xa7\x72\x2c",
    // "" / M(None) / S(0) / L(0)
    "\x1d\x72\x78\x08\x3f\x64\xe8\xf4\xa4\xf7\xdc\xff\x3c\xc1\xad\xd0\x38\x9e\xd8\xb6\xc3\x29\x21\x62\x6a\x96\x5d\xfa\x0c\xcb\xb1\x66",
    // "dlsym" / M(Xor4) / S(19) / L(5)
    "\x54\x5c\x43\x49\x5d\x30\x09\x13\x3e\x02\xbd\xe2\x8a\x1d\x17\x97",
    // "1.0" / M(Xor1) / S(2) / L(3)
    "\x33\x2c\x32\x02\x72\xd9\xa4\xb1\x95\x90\xa3\xc6\xcd\xa4\x83\x12",
    // "CFDataAppendBytes" / M(Rot) / S(145) / L(17)
    "\xd4\xd7\xd5\xf2\x05\xf2\xd2\x01\x01\xf6\xff\xf5\xd3\x0a\x05\xf6\x04\x91",
    // "" / M(None) / S(0) / L(0)
    "\xae\xa3\x17\x3d\x9a\x16\x0a\x76\x87\x3a\xba\xd2\x8e\x45\xcc\x83\x0b\xb8\xe0\x88\x7b\x98\xe8\xb7\xc3\xd5\xf1\x02\xc9\xd2\xe9\x2e",
    // "" / M(None) / S(0) / L(0)
    "\x6f\xa2\x45\x69\x33\x67\x03\xb5\x92\x20\xd5\x3b\xae\x88\x7a\xb3\xd2\x88\x09\x0a\x02\xdf\x7c\x80\x33\x74\xf8\x31\xe3\xa2\x72\xd2",
    // "IOMasterPort" / M(Rot) / S(249) / L(12)
    "\x42\x48\x46\x5a\x6c\x6d\x5e\x6b\x49\x68\x6b\x6d\xf9\x0c\xa9\x1b",
    // "BIO_free" / M(Rot) / S(229) / L(8)
    "\x27\x2e\x34\x44\x4b\x57\x4a\x4a\xe5\xfb\x6d\xf4\x59\x01\x3f\x01",
    // "sha1" / M(Xor2) / S(142) / L(4)
    "\xed\xf6\xff\xaf\x9e\x4e\x17\xe9\x59\x67\x5c\x1b\xf2\xef\x03\x77",
    // "receipt" / M(Rot) / S(37) / L(7)
    "\x97\x8a\x88\x8a\x8e\x95\x99\x25\x99\x33\x35\x7e\x4c\x8e\x20\x7b",
    // "" / M(None) / S(0) / L(0)
    "\xa7\x99\xfc\x53\x97\x43\x08\x58\xe6\x58\x7f\x71\x96\x09\x3a\x43\xa1\x7c\x0a\x98\xef\x47\xbc\x9d\xfa\xab\x6c\xe0\xd0\xc0\xac\x3a",
    // "" / M(None) / S(0) / L(0)
    "\x39\x7d\xbb\x3d\xf2\x70\x78\x8e\xe6\x8c\xff\x69\xef\x35\xc4\x96\x7a\x4c\xc4\x02\xd2\xb1\x25\x6d\x60\x7e\x97\x5a\x50\x98\xe0\x58",
    // "" / M(None) / S(0) / L(0)
    "\x71\xf2\x71\x2c\x19\x05\x7f\x0b\x02\xbd\xd3\xec\x75\x0a\x77\x8d\x4a\xee\x49\x76\x6f\x13\x5a\xe1\x0c\xc9\xcb\xc6\x56\x72\x0e\xdb",
    // "kSecClass" / M(Xor3) / S(81) / L(9)
    "\x0a\x32\x04\x02\x22\x0d\x00\x12\x12\x61\x3e\x25\x1e\x28\xac\xd3",
    // "" / M(None) / S(0) / L(0)
    "\x8a\x41\x96\x03\xc0\xb9\x1e\xed\x01\xd6\xb9\x5b\x42\x11\x13\x7e\x72\xce\x8e\x8a\x41\x6d\x49\x95\x68\x30\x95\x16\x44\xc5\xec\x15",
    // "_MASReceipt" / M(Xor2) / S(120) / L(11)
    "\x37\x25\x29\x3b\x3a\x0d\x0b\x0d\x01\x18\x1c\x68\xee\x73\x2e\x9a",
    // "kCFBundleIdentifierKey" / M(Xor4) / S(174) / L(22)
    "\xc9\xe1\xe4\xe0\xd7\xcc\xc6\xce\xc7\xeb\xc6\xc7\xcc\xd6\xcb\xc4\xcb\xc7\xd0\xe9\xc7\xdb\xa2",
    // "IOMACAddress" / M(Rot) / S(144) / L(12)
    "\xd9\xdf\xdd\xd1\xd3\xd1\xf4\xf4\x02\xf5\x03\x03\x90\x74\xf8\x31",
    // "SecKeychainSearchCopyNext" / M(Xor3) / S(113) / L(25)
    "\xc0\xf6\xf0\xd8\xf6\xea\xf0\xfb\xf2\xfa\xfd\xc0\xf6\xf2\xe1\xf0\xfb\xd0\xfc\xe3\xea\xdd\xf6\xeb\xe7\x93\x34\xe5\x23\xe9\xcf\x12\xef\x06",
    // "" / M(None) / S(0) / L(0)
    "\xbc\xfd\x32\x19\xc7\x65\x7a\xcc\x7b\x7a\xe7\xe5\xd2\xec\x97\x76\x60\x9a\x30\x40\x2e\x48\xef\x75\x85\x98\xd0\xa7\xf2\xb9\x73\x35",
    // "" / M(None) / S(0) / L(0)
    "\x5a\x3e\x74\x5d\x3f\x26\xe7\xfb\x6d\xf4\x59\x01\x3f\x01\xa6\xf3\xab\xfd\x45\x9d\xd3\x33\xa2\x86\xa2\xf3\xa4\x69\x25\x53\xe4\x7f",
    // "CC_SHA1" / M(Xor1) / S(29) / L(7)
    "\x5e\x5e\x42\x4e\x55\x5c\x2c\x1d\x15\x1b\xc0\xe3\x59\x03\x46\xc0",
    // "objc_getClass" / M(Xor1) / S(145) / L(13)
    "\xfe\xf3\xfb\xf2\xce\xf6\xf4\xe5\xd2\xfd\xf0\xe2\xe2\x91\x29\xe0",
    // "" / M(None) / S(0) / L(0)
    "\x0d\xf3\x8b\xd1\xad\x96\xd0\x6d\xef\x33\xfb\x90\x75\xbc\xd3\xff\xf5\xdc\x02\x88\x93\x1f\x51\xda\x31\x81\xd1\x6e\x78\x50\x2b\x00",
    // "IOObjectRelease" / M(Rot) / S(119) / L(15)
    "\xc0\xc6\xc6\xd9\xe1\xdc\xda\xeb\xc9\xdc\xe3\xdc\xd8\xea\xdc\x77",
    // "" / M(None) / S(0) / L(0)
    "\x04\x25\x05\xae\x8b\xea\x20\xac\x07\x68\x9b\x4a\x9f\x82\x35\xc8\xc2\x23\x97\xb7\xdb\x93\x54\x0c\xee\x66\xcb\xff\x0a\xe5\x4c\x43",
    // "CFArrayAppendValue" / M(Rot) / S(26) / L(18)
    "\x5d\x60\x5b\x8c\x8c\x7b\x93\x5b\x8a\x8a\x7f\x88\x7e\x70\x7b\x86\x8f\x7f\x1a",
    // "d2i_X509_bio" / M(Xor3) / S(121) / L(12)
    "\xed\xbb\xe0\xd6\xd1\xbc\xb9\xb0\xd6\xeb\xe0\xe6\x89\xe8\xe5\xd3",
    // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(51) / L(35)
    "\x14\x11\x13\x36\x23\x32\x11\x38\x25\x3a\x36\x23\x23\x32\x25\x14\x25\x32\x36\x23\x32\x13\x36\x23\x32\x11\x25\x38\x3a\x04\x23\x25\x3e\x39\x30\x57",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(54) / L(36)
    "\x79\x7c\x78\xab\xa4\x9a\xa2\x9b\x7d\x9b\xaa\x8c\x97\xa2\xab\x9b\x7c\xa5\xa8\x7f\xa4\x9c\xa5\x7a\x9f\x99\xaa\x9f\xa5\xa4\x97\xa8\xaf\x81\x9b\xaf\x36",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(130) / L(36)
    "\xc1\xc4\xc0\xf7\xec\xe6\xee\xe7\xc5\xe7\xf6\xd4\xe3\xee\xf7\xe7\xc4\xed\xf0\xcb\xec\xe4\xed\xc6\xeb\xe1\xf6\xeb\xed\xec\xe3\xf0\xfb\xc9\xe7\xfb\x82",
    // "" / M(None) / S(0) / L(0)
    "\x2c\x92\xf5\x2b\x1c\x50\xc9\x2d\x1a\xde\xf1\xdc\x43\xbd\x86\x24\x92\x6b\xa3\x78\x46\x46\xb3\xc0\xf9\x73\xb8\x60\xce\xd0\xe2\xd9",
    // "CFDictionaryAddValue" / M(Xor2) / S(90) / L(20)
    "\x0c\x09\x0b\x26\x2c\x3b\x26\x20\x21\x2e\x3d\x36\x0e\x2b\x2b\x19\x2e\x23\x3a\x2a\x4f",
    // "%02X:" / M(Xor2) / S(166) / L(5)
    "\x93\x86\x84\xee\x8c\xb6\x68\x7f\xa9\xb0\xa3\x63\x3c\xd1\xd2\xdc",
    // "init" / M(Xor1) / S(83) / L(4)
    "\x3a\x3d\x3a\x27\x53\xa2\x45\x69\x33\x67\x03\xb5\x92\x20\xd5\x3b",
    // "CFBundleGetMainBundle" / M(Xor4) / S(13) / L(21)
    "\x5d\x58\x5c\x6b\x70\x7a\x72\x7b\x59\x7b\x6a\x53\x7f\x77\x70\x5c\x6b\x70\x7a\x72\x7b\x1e",
    // "BIO_write" / M(Rot) / S(95) / L(9)
    "\xa1\xa8\xae\xbe\xd6\xd1\xc8\xd3\xc4\x5f\xd9\x95\xfe\x67\x99\x92",
    // "" / M(None) / S(0) / L(0)
    "\x4d\xbc\x59\xc3\x3f\x77\x41\x9d\x90\x2c\x14\x63\x4d\x0d\x58\x2d\x6c\x57\x46\xaa\x17\x7c\x61\x52\x44\x39\xd1\x59\x10\x52\xec\x7d",
    // "" / M(None) / S(0) / L(0)
    "\x4e\xc4\xc8\xe0\x6f\x78\xcc\x65\xfe\x4b\x31\x9c\x2f\x37\x5f\xa7\x2f\x7f\x8e\x74\xbf\x90\xed\xd0\x6d\x94\xfa\x5e\x07\xc8\xd1\x2b",
    // "" / M(None) / S(0) / L(0)
    "\x2d\xc8\x31\xb1\xde\x21\xce\xc5\x28\xc7\x1b\xa2\xbd\xd1\x64\x73\xcb\x3d\x5e\xb1\x4a\x23\xac\x22\x96\xff\xaf\xbe\x99\xaa\x96\x39",
    // "" / M(None) / S(0) / L(0)
    "\x22\x6a\x80\x8c\x7a\x8e\x43\xbb\xb3\x51\x15\x0d\x46\xca\x24\x4b\xfd\xfb\xaf\x49\x2e\x26\x94\xf4\xa5\xc7\x31\x52\xa7\x3f\x81\x6d",
    // "CFRelease" / M(Xor1) / S(27) / L(9)
    "\x58\x5d\x49\x7e\x77\x7e\x7a\x68\x7e\x1b\x48\xd1\xc1\x01\x9f\xe1",
    // "CFArrayGetValueAtIndex" / M(Rot) / S(157) / L(22)
    "\xe0\xe3\xde\x0f\x0f\xfe\x16\xe4\x02\x11\xf3\xfe\x09\x12\x02\xde\x11\xe6\x0b\x01\x02\x15\x9d",
    // "CFDataAppendBytes" / M(Xor2) / S(130) / L(17)
    "\xd3\xd6\xd4\xf1\xe4\xf1\xd1\xe0\xe0\xf5\xfe\xf4\xd2\xe9\xe4\xf5\xe3\x90",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(239) / L(31)
    "\x86\x80\x9d\xaa\xa8\xa6\xbc\xbb\xbd\xb6\x8a\xa1\xbb\xbd\xb6\x8c\xbd\xaa\xae\xbb\xaa\x8c\x89\x9f\xbd\xa0\xbf\xaa\xbd\xbb\xb6\xcf",
    // "CFDateFormatterSetFormat" / M(Xor4) / S(131) / L(24)
    "\xa0\xa5\xa7\x82\x97\x86\xa5\x8c\x91\x8e\x82\x97\x97\x86\x91\xb0\x86\x97\xa5\x8c\x91\x8e\x82\x97\xe3\x33\x25\x3a\x28\x52\xb7\xe9\xe2",
    // "glob" / M(Xor1) / S(188) / L(4)
    "\xdb\xd0\xd3\xde\xbc\x3f\x54\xf8\x06\x04\xa7\xa7\x89\xe6\xd9\x29",
    // "sk_num" / M(Xor3) / S(0) / L(6)
    "\x63\x7b\x4f\x7e\x65\x7d\x10\x82\xc6\xf7\x31\xbd\x23\x71\xc5\xea",
    // "SecKeychainOpen" / M(Xor4) / S(122) / L(15)
    "\xf3\xc5\xc3\xeb\xc5\xd9\xc3\xc8\xc1\xc9\xce\xef\xd0\xc5\xce\xa0",
    // "kCFTypeArrayCallBacks" / M(Xor4) / S(28) / L(21)
    "\x03\x2b\x2e\x3c\x11\x18\x0d\x29\x1a\x1a\x09\x11\x2b\x09\x04\x04\x2a\x09\x0b\x03\x1b\x68",
    // "objc_getClass" / M(Xor2) / S(86) / L(13)
    "\x29\x24\x2c\x25\x19\x21\x23\x32\x05\x2a\x27\x35\x35\x46\x97\x9b",
    // "" / M(None) / S(0) / L(0)
    "\x13\xca\x8d\xaf\x8b\x99\x4f\x7f\x3f\x63\x02\x00\xf4\x85\x8d\xa2\x59\xe7\x8d\x47\x02\x57\xb7\xb5\x56\xb5\xfe\xca\x03\xaa\x6b\x33",
    // "BIO_new" / M(Xor4) / S(223) / L(7)
    "\xb2\xb9\xbf\xaf\x9e\x95\x87\xf0\x54\x02\xbb\x95\x37\x17\x7b\xaa",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(78) / L(29)
    "\x25\x0d\x08\x1a\x37\x3e\x2b\x0a\x27\x2d\x3a\x27\x21\x20\x2f\x3c\x37\x05\x2b\x37\x0d\x2f\x22\x22\x0c\x2f\x2d\x25\x3d\x4e\xdc\xf2\xe2\x3e\xc1\x6c\x6c\x82",
    // "en0" / M(Xor4) / S(196) / L(3)
    "\x25\x2e\x70\x40\x14\x74\x5e\x65\xd2\x48\xe1\x34\xd3\x48\xe9\x3b",
    // "CFDictionarySetValue" / M(Rot) / S(8) / L(20)
    "\x4b\x4e\x4c\x71\x6b\x7c\x71\x77\x76\x69\x7a\x81\x5b\x6d\x7c\x5e\x69\x74\x7d\x6d\x08",
    // "setjmp" / M(Xor3) / S(232) / L(6)
    "\x8b\x9d\x8c\x92\x95\x88\xf8\xc5\xa7\x7a\xe9\xaa\x30\x18\x52\xf0",
    // "alloc" / M(Xor2) / S(67) / L(5)
    "\x32\x3f\x3f\x3c\x30\x53\x65\xe6\x97\x23\x6f\xfd\xe5\xdd\xc2\x7c",
    // "SecCertificateCopyData" / M(Xor2) / S(185) / L(22)
    "\xfd\xcb\xcd\xed\xcb\xdc\xda\xc7\xc8\xc7\xcd\xcf\xda\xcb\xed\xc1\xde\xd7\xea\xcf\xda\xcf\xae",
    // "CFArrayGetCount" / M(Rot) / S(86) / L(15)
    "\x99\x9c\x97\xc8\xc8\xb7\xcf\x9d\xbb\xca\x99\xc5\xcb\xc4\xca\x56",
    // "%02x" / M(Xor2) / S(134) / L(4)
    "\xb3\xa6\xa4\xee\x96\xdd\x93\x09\xb5\xa4\x25\xab\x36\x2e\x76\xc2",
    // "CFBundleVersion" / M(Xor4) / S(32) / L(15)
    "\x43\x46\x42\x75\x6e\x64\x6c\x65\x56\x65\x72\x73\x69\x6f\x6e\x00",
    // "CFBundleIdentifier" / M(Xor3) / S(63) / L(18)
    "\x11\x14\x10\x27\x3c\x36\x3e\x37\x1b\x36\x37\x3c\x26\x3b\x34\x3b\x37\x20\x52",
    // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(221) / L(35)
    "\x9e\x9b\x8e\xa9\xaf\xb4\xb3\xba\x9a\xb8\xa9\x9b\xb4\xb1\xb8\x8e\xa4\xae\xa9\xb8\xb0\x8f\xb8\xad\xaf\xb8\xae\xb8\xb3\xa9\xbc\xa9\xb4\xb2\xb3\xdd",
    // "NSApplicationMain" / M(Xor1) / S(75) / L(17)
    "\x05\x18\x0a\x3b\x3b\x27\x22\x28\x2a\x3f\x22\x24\x25\x06\x2a\x22\x25\x4b",
    // "EVP_DigestInit" / M(Xor3) / S(32) / L(14)
    "\x75\x66\x60\x6f\x74\x59\x57\x55\x43\x44\x79\x5e\x59\x44\x30\x41",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[569] = {
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) EVP_DigestFinal),
    ((void *) sk_value),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) strlen),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) SHA1_Final),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) EVP_DigestFinal),
    ((void *) OBJ_txt2obj),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
};

#define ReceiptValidation_ASN1_get_object_00260000 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction008, 0, 244, 16))
#define ReceiptValidation_ASN1_get_object_011C017C ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction00A, 380, 143, 16))
#define ReceiptValidation_ASN1_OBJECT_free_00290114 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00A, 276, 38, 17))
#define ReceiptValidation_BIO_free_00290176 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction005, 374, 212, 16))
#define ReceiptValidation_BIO_free_002901C6 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction009, 454, 3, 16))
#define ReceiptValidation_BIO_new_0029002B ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction009, 43, 69, 16))
#define ReceiptValidation_BIO_new_011C008D ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction008, 141, 220, 16))
#define ReceiptValidation_BIO_s_mem_002601D9 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction007, 473, 15, 16))
#define ReceiptValidation_BIO_s_mem_011C01D9 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction007, 473, 15, 16))
#define ReceiptValidation_BIO_s_mem_011C01E6 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction004, 486, 66, 16))
#define ReceiptValidation_BIO_write_00260016 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction003, 22, 206, 16))
#define ReceiptValidation_BIO_write_00290072 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction005, 114, 94, 16))
#define ReceiptValidation_BIO_write_011C021B ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction004, 539, 95, 16))
#define ReceiptValidation_CC_SHA1_00F9005B ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 249, 167, 33, ReceiptValidation_ObfuscationFunction008, 91, 186, 16))
#define ReceiptValidation_CC_SHA1_Init_00F0011F ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction006, 287, 103, 16))
#define ReceiptValidation_CFArrayGetCount_01470143 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction009, 323, 44, 16))
#define ReceiptValidation_CFBundleGetMainBundle_0147021A ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00C, 538, 13, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_00A601C3 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction005, 451, 140, 33))
#define ReceiptValidation_CFDataAppendBytes_00A60101 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction003, 257, 136, 18))
#define ReceiptValidation_CFDataAppendBytes_014701FA ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction003, 506, 145, 18))
#define ReceiptValidation_CFDataCreate_00D50081 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00B, 129, 204, 16))
#define ReceiptValidation_CFDataCreate_01470081 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00B, 129, 204, 16))
#define ReceiptValidation_CFDataGetLength_00A60136 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, 310, 117, 16))
#define ReceiptValidation_CFDataGetLength_00D500D4 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction003, 212, 111, 16))
#define ReceiptValidation_CFDataGetLength_014700D4 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction003, 212, 111, 16))
#define ReceiptValidation_CFDateFormatterCreate_00D50086 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction008, 134, 156, 22))
#define ReceiptValidation_CFDateFormatterCreate_01470086 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, 134, 156, 22))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_00D500FD ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction004, 253, 86, 36))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_014700FD ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction004, 253, 86, 36))
#define ReceiptValidation_CFDateFormatterSetFormat_00A6017B ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00A, 379, 227, 33))
#define ReceiptValidation_CFDateFormatterSetFormat_00A60224 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00B, 548, 131, 33))
#define ReceiptValidation_CFDictionaryCreateMutable_00A601B8 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction007, 440, 243, 34))
#define ReceiptValidation_CFDictionaryCreateMutable_00D500EA ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00C, 234, 38, 34))
#define ReceiptValidation_CFDictionarySetValue_0147018C ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, 396, 99, 21))
#define ReceiptValidation_CFDictionarySetValue_014701EF ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, 495, 92, 21))
#define ReceiptValidation_CFReadStreamCreateWithFile_00D500CF ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction005, 207, 208, 35))
#define ReceiptValidation_CFReadStreamCreateWithFile_014700CF ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction005, 207, 208, 35))
#define ReceiptValidation_CFRelease_00A60188 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction005, 392, 166, 16))
#define ReceiptValidation_CFRelease_00A60220 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction006, 544, 27, 16))
#define ReceiptValidation_CFRelease_00D5017A ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction003, 378, 93, 16))
#define ReceiptValidation_CFRelease_00D50188 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction005, 392, 166, 16))
#define ReceiptValidation_CFRelease_00D50220 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction006, 544, 27, 16))
#define ReceiptValidation_CFRelease_0147017A ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction003, 378, 93, 16))
#define ReceiptValidation_CFRelease_01470188 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction005, 392, 166, 16))
#define ReceiptValidation_CFRelease_01470220 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction006, 544, 27, 16))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_00A60236 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction005, 566, 221, 36))
#define ReceiptValidation_CFStringGetFileSystemRepresentation_00D50137 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00C, 311, 144, 36))
#define ReceiptValidation_d2i_PKCS7_bio_00290015 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction009, 21, 215, 16))
#define ReceiptValidation_d2i_PKCS7_bio_011C0015 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction009, 21, 215, 16))
#define ReceiptValidation_d2i_PKCS7_bio_011C0125 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction003, 293, 121, 16))
#define ReceiptValidation_d2i_X509_bio_00260212 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction009, 530, 121, 16))
#define ReceiptValidation_EVP_DigestFinal_00290126 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction005, 294, 241, 16))
#define ReceiptValidation_EVP_DigestInit_002900E0 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00A, 224, 69, 16))
#define ReceiptValidation_EVP_DigestUpdate_002601ED ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction003, 493, 99, 17))
#define ReceiptValidation_EVP_get_digestbyname_002600BB ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction007, 187, 141, 21))
#define ReceiptValidation_EVP_MD_CTX_init_00290149 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00A, 329, 29, 16))
#define ReceiptValidation_exit_00F00004 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction00A, 4, 232, 16))
#define ReceiptValidation_exit_00F0011E ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction008, 286, 2, 16))
#define ReceiptValidation_exit_00F00173 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction00A, 371, 35, 16))
#define ReceiptValidation_exit_00F90173 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 249, 167, 33, ReceiptValidation_ObfuscationFunction00A, 371, 35, 16))
#define ReceiptValidation_exit_019E0004 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction00A, 4, 232, 16))
#define ReceiptValidation_exit_019E011E ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction008, 286, 2, 16))
#define ReceiptValidation_exit_019E0173 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction00A, 371, 35, 16))
#define ReceiptValidation_XVPZIBJOLJRF_00A101BB ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_XVPZIBJOLJRF, 240, 16))
#define ReceiptValidation_XVPZIBJOLJRF_00A6005D ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_XVPZIBJOLJRF, 33, 20))
#define ReceiptValidation_XVPZIBJOLJRF_00CA00D1 ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 202, 14, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_XVPZIBJOLJRF, 206, 16))
#define ReceiptValidation_XVPZIBJOLJRF_00D501DF ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_XVPZIBJOLJRF, 38, 16))
#define ReceiptValidation_XVPZIBJOLJRF_014700E8 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_XVPZIBJOLJRF, 247, 38))
#define ReceiptValidation_XVPZIBJOLJRF_0147012C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_XVPZIBJOLJRF, 218, 21))
#define ReceiptValidation_XVPZIBJOLJRF_01470136 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_XVPZIBJOLJRF, 117, 16))
#define ReceiptValidation_IJWCVSFUONND_00A60073 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_IJWCVSFUONND, 25, 21))
#define ReceiptValidation_IJWCVSFUONND_00A601CD ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_IJWCVSFUONND, 41, 22))
#define ReceiptValidation_IJWCVSFUONND_00D5012C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_IJWCVSFUONND, 218, 21))
#define ReceiptValidation_IJWCVSFUONND_00D50214 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_IJWCVSFUONND, 54, 37))
#define ReceiptValidation_IJWCVSFUONND_01470129 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_IJWCVSFUONND, 230, 23))
#define ReceiptValidation_IJWCVSFUONND_014701A8 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_IJWCVSFUONND, 247, 37))
#define ReceiptValidation_IJWCVSFUONND_019E01A5 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_IJWCVSFUONND, 207, 16))
#define ReceiptValidation_YKAWXJHTMVXT_00A600DB ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_YKAWXJHTMVXT, 74, 17))
#define ReceiptValidation_YKAWXJHTMVXT_00A6012C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_YKAWXJHTMVXT, 218, 21))
#define ReceiptValidation_YKAWXJHTMVXT_00D50186 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_YKAWXJHTMVXT, 250, 17))
#define ReceiptValidation_YKAWXJHTMVXT_0147010B ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YKAWXJHTMVXT, 133, 16))
#define ReceiptValidation_YKAWXJHTMVXT_01470222 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_YKAWXJHTMVXT, 130, 18))
#define ReceiptValidation_YKAWXJHTMVXT_016600B6 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 358, 66, 55, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_YKAWXJHTMVXT, 12, 38))
#define ReceiptValidation_YKAWXJHTMVXT_01A7000E ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 423, 223, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_YKAWXJHTMVXT, 191, 38))
#define ReceiptValidation_LVYZKPYDFEKB_00A601DB ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_LVYZKPYDFEKB, 88, 16))
#define ReceiptValidation_LVYZKPYDFEKB_00D50179 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_LVYZKPYDFEKB, 180, 21))
#define ReceiptValidation_LVYZKPYDFEKB_00D501B8 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_LVYZKPYDFEKB, 243, 34))
#define ReceiptValidation_LVYZKPYDFEKB_0147000C ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_LVYZKPYDFEKB, 169, 16))
#define ReceiptValidation_LVYZKPYDFEKB_014700B1 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_LVYZKPYDFEKB, 41, 20))
#define ReceiptValidation_LVYZKPYDFEKB_015A0089 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 346, 174, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_LVYZKPYDFEKB, 89, 18))
#define ReceiptValidation_XWDBOORDJTCP_00A60179 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XWDBOORDJTCP, 180, 21))
#define ReceiptValidation_XWDBOORDJTCP_00A6018A ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_XWDBOORDJTCP, 112, 52))
#define ReceiptValidation_XWDBOORDJTCP_00D500FF ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_XWDBOORDJTCP, 232, 17))
#define ReceiptValidation_XWDBOORDJTCP_00F90053 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 249, 167, 33, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_XWDBOORDJTCP, 187, 16))
#define ReceiptValidation_PNPLYCHEESST_009001B7 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_PNPLYCHEESST, 121, 20))
#define ReceiptValidation_PNPLYCHEESST_00A601DF ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PNPLYCHEESST, 38, 16))
#define ReceiptValidation_PNPLYCHEESST_00CA0190 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 202, 14, 49, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_PNPLYCHEESST, 212, 16))
#define ReceiptValidation_PNPLYCHEESST_01470052 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_PNPLYCHEESST, 8, 48))
#define ReceiptValidation_PNPLYCHEESST_014700BC ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PNPLYCHEESST, 240, 22))
#define ReceiptValidation_PNPLYCHEESST_0147015B ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_PNPLYCHEESST, 140, 17))
#define ReceiptValidation_PNPLYCHEESST_014701A0 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_PNPLYCHEESST, 33, 16))
#define ReceiptValidation_VIQMZYLVBGUH_00A601DF ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_VIQMZYLVBGUH, 38, 16))
#define ReceiptValidation_VIQMZYLVBGUH_00D50046 ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_VIQMZYLVBGUH, 51, 18))
#define ReceiptValidation_VIQMZYLVBGUH_00D50157 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_VIQMZYLVBGUH, 61, 19))
#define ReceiptValidation_VIQMZYLVBGUH_0147005D ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_VIQMZYLVBGUH, 33, 20))
#define ReceiptValidation_VIQMZYLVBGUH_015A0223 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 346, 174, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_VIQMZYLVBGUH, 239, 32))
#define ReceiptValidation_UTDAXUMGRGHQ_00A6006D ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_UTDAXUMGRGHQ, 213, 16))
#define ReceiptValidation_UTDAXUMGRGHQ_00A601A0 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_UTDAXUMGRGHQ, 33, 16))
#define ReceiptValidation_UTDAXUMGRGHQ_00D5012C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_UTDAXUMGRGHQ, 218, 21))
#define ReceiptValidation_UTDAXUMGRGHQ_00D50211 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_UTDAXUMGRGHQ, 26, 19))
#define ReceiptValidation_UTDAXUMGRGHQ_01470020 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_UTDAXUMGRGHQ, 72, 17))
#define ReceiptValidation_UTDAXUMGRGHQ_01470104 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_UTDAXUMGRGHQ, 38, 21))
#define ReceiptValidation_UTDAXUMGRGHQ_01A70124 ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 423, 223, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_UTDAXUMGRGHQ, 185, 37))
#define ReceiptValidation_UTDAXUMGRGHQ_01E401DC ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 484, 158, 51, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_UTDAXUMGRGHQ, 67, 18))
#define ReceiptValidation_IOObjectRelease_00CA0021 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 202, 14, 49, ReceiptValidation_ObfuscationFunction00A, 33, 230, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_00A60207 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00B, 519, 174, 23))
#define ReceiptValidation_kCFTypeArrayCallBacks_00A60228 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, 552, 28, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_00D5016C ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction009, 364, 214, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_00D50228 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction00C, 552, 28, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00A60036 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction00C, 54, 34, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00A600FB ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction003, 251, 232, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00D500FB ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction003, 251, 232, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00A60109 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction006, 265, 142, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00A601CF ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 166, 101, 67, ReceiptValidation_ObfuscationFunction008, 463, 117, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D500A8 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 213, 224, 67, ReceiptValidation_ObfuscationFunction005, 168, 97, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_014701CF ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 327, 125, 67, ReceiptValidation_ObfuscationFunction008, 463, 117, 32))
#define ReceiptValidation_kSecClass_00900204 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction00A, 516, 81, 16))
#define ReceiptValidation_kSecClass_01660204 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 358, 66, 55, ReceiptValidation_ObfuscationFunction00A, 516, 81, 16))
#define ReceiptValidation_kSecClassCertificate_009001BA ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction006, 442, 93, 21))
#define ReceiptValidation_kSecClassCertificate_00A100D9 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction007, 217, 167, 21))
#define ReceiptValidation_kSecMatchLimit_009001A3 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction00B, 419, 202, 16))
#define ReceiptValidation_kSecMatchLimit_00A1012E ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction007, 302, 135, 16))
#define ReceiptValidation_kSecMatchLimitAll_00A100B4 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction006, 180, 110, 18))
#define ReceiptValidation_kSecMatchLimitAll_01660194 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 358, 66, 55, ReceiptValidation_ObfuscationFunction007, 404, 115, 18))
#define ReceiptValidation_kSecMatchSearchList_00A1019C ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction003, 412, 113, 20))
#define ReceiptValidation_kSecMatchSearchList_016601C4 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 358, 66, 55, ReceiptValidation_ObfuscationFunction006, 452, 38, 20))
#define ReceiptValidation_kSecMatchSubjectContains_009000D3 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction004, 211, 70, 33))
#define ReceiptValidation_kSecMatchSubjectContains_01660108 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 358, 66, 55, ReceiptValidation_ObfuscationFunction00C, 264, 98, 33))
#define ReceiptValidation_kSecReturnRef_0090014F ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction006, 335, 12, 16))
#define ReceiptValidation_kSecReturnRef_00900187 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction00C, 391, 152, 16))
#define ReceiptValidation_longjmp_00F00121 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction004, 289, 2, 16))
#define ReceiptValidation_longjmp_00F001AF ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction008, 431, 165, 16))
#define ReceiptValidation_longjmp_00F001E0 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 240, 104, 33, ReceiptValidation_ObfuscationFunction004, 480, 147, 16))
#define ReceiptValidation_longjmp_00F90121 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 249, 167, 33, ReceiptValidation_ObfuscationFunction004, 289, 2, 16))
#define ReceiptValidation_longjmp_00F901E0 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 249, 167, 33, ReceiptValidation_ObfuscationFunction004, 480, 147, 16))
#define ReceiptValidation_longjmp_019E01E0 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction004, 480, 147, 16))
#define ReceiptValidation_OBJ_txt2obj_00290161 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction004, 353, 81, 16))
#define ReceiptValidation_objc_getClass_0110013F ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction006, 319, 87, 16))
#define ReceiptValidation_objc_getClass_0110020D ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction006, 525, 145, 16))
#define ReceiptValidation_objc_getClass_01100229 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction008, 553, 86, 16))
#define ReceiptValidation_objc_getClass_0113013F ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction006, 319, 87, 16))
#define ReceiptValidation_objc_getClass_0113020D ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction006, 525, 145, 16))
#define ReceiptValidation_objc_getClass_01130229 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction008, 553, 86, 16))
#define ReceiptValidation_objc_getClass_0165013F ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction006, 319, 87, 16))
#define ReceiptValidation_objc_getClass_01650229 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction008, 553, 86, 16))
#define ReceiptValidation_objc_msgSend_0110004C ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction003, 76, 244, 16))
#define ReceiptValidation_objc_msgSend_01100069 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction006, 105, 197, 16))
#define ReceiptValidation_objc_msgSend_011001F0 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction00C, 496, 162, 16))
#define ReceiptValidation_objc_msgSend_0113004C ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction003, 76, 244, 16))
#define ReceiptValidation_objc_msgSend_011301F0 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction00C, 496, 162, 16))
#define ReceiptValidation_objc_msgSend_0165004C ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction003, 76, 244, 16))
#define ReceiptValidation_objc_msgSend_01650069 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction006, 105, 197, 16))
#define ReceiptValidation_objc_msgSend_016501F0 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction00C, 496, 162, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_0029005E ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00B, 94, 0, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_0029009B ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00C, 155, 206, 32))
#define ReceiptValidation_PKCS7_free_00290116 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction004, 278, 30, 16))
#define ReceiptValidation_PKCS7_free_002901DD ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction005, 477, 189, 16))
#define ReceiptValidation_PKCS7_free_011C0039 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction00C, 57, 239, 16))
#define ReceiptValidation_PKCS7_get0_signers_011C0043 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction006, 67, 108, 19))
#define ReceiptValidation_PKCS7_verify_011C00D6 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction004, 214, 6, 16))
#define ReceiptValidation_SecCertificateCopyData_00900156 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction004, 342, 90, 23))
#define ReceiptValidation_SecCertificateCopyData_00A10156 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction004, 342, 90, 23))
#define ReceiptValidation_SecKeychainSearchCopyNext_00900209 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 144, 68, 55, ReceiptValidation_ObfuscationFunction009, 521, 113, 34))
#define ReceiptValidation_SecKeychainSearchCopyNext_00A100B0 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 161, 187, 55, ReceiptValidation_ObfuscationFunction00C, 176, 83, 34))
#define ReceiptValidation_sel_registerName_01100048 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction005, 72, 66, 17))
#define ReceiptValidation_sel_registerName_0110004A ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 272, 201, 23, ReceiptValidation_ObfuscationFunction00A, 74, 96, 17))
#define ReceiptValidation_sel_registerName_01130048 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction005, 72, 66, 17))
#define ReceiptValidation_sel_registerName_0113004A ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction00A, 74, 96, 17))
#define ReceiptValidation_sel_registerName_01130154 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 275, 235, 23, ReceiptValidation_ObfuscationFunction004, 340, 254, 17))
#define ReceiptValidation_sel_registerName_0165004A ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction00A, 74, 96, 17))
#define ReceiptValidation_sel_registerName_01650154 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 357, 7, 23, ReceiptValidation_ObfuscationFunction004, 340, 254, 17))
#define ReceiptValidation_setjmp_019E010C ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 414, 212, 33, ReceiptValidation_ObfuscationFunction009, 268, 214, 16))
#define ReceiptValidation_SHA1_002601F4 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction006, 500, 48, 16))
#define ReceiptValidation_SHA1_Final_011C0098 ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction007, 152, 255, 16))
#define ReceiptValidation_SHA1_Init_011C011B ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction005, 283, 156, 16))
#define ReceiptValidation_SHA1_Update_00260146 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction008, 326, 57, 16))
#define ReceiptValidation_sk_free_002901A2 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction008, 418, 27, 16))
#define ReceiptValidation_sk_num_0029000A ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00A, 10, 165, 16))
#define ReceiptValidation_sk_value_011C0131 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction009, 305, 195, 16))
#define ReceiptValidation_X509_digest_002600B3 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction007, 179, 228, 16))
#define ReceiptValidation_X509_free_002600D2 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction007, 210, 235, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_00290193 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction003, 403, 97, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_011C0070 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction009, 112, 159, 34))
#define ReceiptValidation_X509_STORE_add_cert_0026007F ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 38, 40, 16, ReceiptValidation_ObfuscationFunction006, 127, 190, 20))
#define ReceiptValidation_X509_STORE_free_011C00DD ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 284, 217, 16, ReceiptValidation_ObfuscationFunction00C, 221, 8, 16))
#define ReceiptValidation_X509_STORE_new_00290177 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 41, 137, 16, ReceiptValidation_ObfuscationFunction00B, 375, 118, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] - p3); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    char *tmp2 = tmp1;
    ReceiptValidation_ObfuscationFunction003(p1, tmp1, p3, p4);
    while(*tmp2) { tmp2++; }
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] - p3); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    ReceiptValidation_ObfuscationFunction004(p1, tmp1, p3, p4);
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[88])(NULL, tmp1, kCFStringEncodingUTF8);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = p1[i1] ^ (char) p3; i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    char *tmp2 = tmp1;
    ReceiptValidation_ObfuscationFunction005(p1, tmp1, p3, p4);
    while(*tmp2) { tmp2++; }
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[336])(NULL, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = p1[i1] ^ (char) p3; i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    ReceiptValidation_ObfuscationFunction006(p1, tmp1, p3, p4);
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[106])(NULL, tmp1, kCFStringEncodingUTF8);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ p3 ^ p4); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    char *tmp2 = tmp1;
    ReceiptValidation_ObfuscationFunction007(p1, tmp1, p3, p4);
    while(*tmp2) { tmp2++; }
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[336])(NULL, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ p3 ^ p4); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    ReceiptValidation_ObfuscationFunction008(p1, tmp1, p3, p4);
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[106])(NULL, tmp1, kCFStringEncodingUTF8);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 + p4)); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *p1, int p3, int p4) {
    char tmp1[569];
    char *tmp2 = tmp1;
    ReceiptValidation_ObfuscationFunction009(p1, tmp1, p3, p4);
    while(*tmp2) { tmp2++; }
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 + p4)); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *p1, int p3, int p4) {
    char tmp1[569];
    ReceiptValidation_ObfuscationFunction00A(p1, tmp1, p3, p4);
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[88])(NULL, tmp1, kCFStringEncodingUTF8);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 * p4)); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *p1, int p3, int p4) {
    char tmp1[569];
    char *tmp2 = tmp1;
    ReceiptValidation_ObfuscationFunction00B(p1, tmp1, p3, p4);
    while(*tmp2) { tmp2++; }
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
    return str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *p1, char *p2, int p3, int p4) {
    int i1 = 0;
    while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 * p4)); i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *p1, int p3, int p4) {
    char tmp1[569];
    ReceiptValidation_ObfuscationFunction00C(p1, tmp1, p3, p4);
    CFStringRef str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[88])(NULL, tmp1, kCFStringEncodingUTF8);
    return str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt func1, int index1, int val1, int len1, ReceiptValidation_decrypt func2, int index2, int val2, int len2) {
    char tmp1[569], tmp2[569];
    // Load the library if needed
    if (ReceiptValidation_Pointers[index1] == NULL) {
        func1(ReceiptValidation_Strings[index1], tmp1, val1, len1);
        ReceiptValidation_Pointers[index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[372])(tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[index2] == NULL) {
        func2(ReceiptValidation_Strings[index2], tmp2, val2, len2);
        ReceiptValidation_Pointers[index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[159])(ReceiptValidation_Pointers[index1], tmp2);
    }
    return ReceiptValidation_Pointers[index2];
}




// CodeBlock GetMainBundle
#if DEBUG
inline static void ReceiptValidation_GetMainBundle016(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_0147021A();
    if (!ctx->main_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_00A60188(ctx->main_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_00A601C3((CFBundleRef) ctx->main_bundle);
    }
    // Global variables computation
    // Set to 232
    ReceiptValidation_XVPZIBJOLJRF = 232;
    // Set to 461
    ReceiptValidation_IJWCVSFUONND = 461;
    // Set to 390
    ReceiptValidation_YKAWXJHTMVXT = 390;
    // Set to 177
    ReceiptValidation_LVYZKPYDFEKB = 177;
    // Set to 394
    ReceiptValidation_XWDBOORDJTCP = 394;
    // Set to 82
    ReceiptValidation_PNPLYCHEESST = 82;
    // Set to 70
    ReceiptValidation_VIQMZYLVBGUH = 70;
    // Set to 32
    ReceiptValidation_UTDAXUMGRGHQ = 32;
}
#else
#define ReceiptValidation_GetMainBundle016(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_0147021A(); \
    if (!ctx->main_bundle) { \
        ReceiptValidation_CFRelease_00A60188(ctx->main_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_00A601C3((CFBundleRef) ctx->main_bundle); \
    } \
    ReceiptValidation_XVPZIBJOLJRF = 232; \
    ReceiptValidation_IJWCVSFUONND = 461; \
    ReceiptValidation_YKAWXJHTMVXT = 390; \
    ReceiptValidation_LVYZKPYDFEKB = 177; \
    ReceiptValidation_XWDBOORDJTCP = 394; \
    ReceiptValidation_PNPLYCHEESST = 82; \
    ReceiptValidation_VIQMZYLVBGUH = 70; \
    ReceiptValidation_UTDAXUMGRGHQ = 32; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt01A(ReceiptValidation_CheckingContext *ctx) {
    CFStringRef str1;
    CFURLRef url1, url2;
    CFReadStreamRef stream;
    CFMutableDataRef data;
    CFIndex count;
    uint8_t buffer[569];
    volatile int code = 17; code -= 3; code *= 12; code += 5; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    url1 = ReceiptValidation_IJWCVSFUONND_00A601CD((CFBundleRef) ctx->main_bundle);
    str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[298]), 1, 37);
    url2 = ReceiptValidation_XVPZIBJOLJRF_014700E8(NULL, url1, str1, false);
    ReceiptValidation_CFRelease_01470220(str1);
    ReceiptValidation_CFRelease_01470220(url1);
    // Create a stream from the receipt file
    stream = ReceiptValidation_CFReadStreamCreateWithFile_014700CF(kCFAllocatorDefault, url2);
    if (stream == NULL || !ReceiptValidation_YKAWXJHTMVXT_00D50186(stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_019E0004(code);
        // Dead code
        ReceiptValidation_CFRelease_01470220(str1);
        ReceiptValidation_CFRelease_01470220(url1);
        ReceiptValidation_CFRelease_01470220(str1);
        goto ReceiptValidation_LoadReceipt01A_bail;
    }
    // Create the data object that will contains receipt data
    data = ReceiptValidation_LVYZKPYDFEKB_014700B1(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        count = ReceiptValidation_UTDAXUMGRGHQ_01470020(stream, &buffer[0], 569);
        if (count > 0) {
            ReceiptValidation_CFDataAppendBytes_014701FA(data, buffer, count);
        }
    } while (count > 0);
    // Close the stream
    ReceiptValidation_VIQMZYLVBGUH_00D50046(stream);
    if (ctx->receipt_data) ReceiptValidation_CFRelease_01470220(ctx->receipt_data);
    ctx->receipt_data = data;
    // Global variables computation
    // From 232 to 209
    ReceiptValidation_XVPZIBJOLJRF += 186; ReceiptValidation_XVPZIBJOLJRF /= 2; 
    // From 390 to 14
    ReceiptValidation_YKAWXJHTMVXT += 16; ReceiptValidation_YKAWXJHTMVXT /= 29; 
    // From 177 to 137
    ReceiptValidation_LVYZKPYDFEKB += 97; ReceiptValidation_LVYZKPYDFEKB /= 2; 
    // From 82 to 400
    ReceiptValidation_PNPLYCHEESST -= 16; ReceiptValidation_PNPLYCHEESST *= 6; ReceiptValidation_PNPLYCHEESST += 4; 
    // From 70 to 547
    ReceiptValidation_VIQMZYLVBGUH -= 10; ReceiptValidation_VIQMZYLVBGUH *= 9; ReceiptValidation_VIQMZYLVBGUH += 7; 
    // From 32 to 292
    ReceiptValidation_UTDAXUMGRGHQ -= 6; ReceiptValidation_UTDAXUMGRGHQ *= 11; ReceiptValidation_UTDAXUMGRGHQ += 6; 
ReceiptValidation_LoadReceipt01A_bail:
    if (stream) ReceiptValidation_CFRelease_01470220(stream);    
    ReceiptValidation_CFRelease_01470220(url2);
}
#else
#define ReceiptValidation_LoadReceipt01A(ctx) { \
    CFStringRef str1; \
    CFURLRef url1, url2; \
    CFReadStreamRef stream; \
    CFMutableDataRef data; \
    CFIndex count; \
    uint8_t buffer[569]; \
    volatile int code = 17; code -= 3; code *= 12; code += 5;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    url1 = ReceiptValidation_IJWCVSFUONND_00A601CD((CFBundleRef) ctx->main_bundle); \
    str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[298]), 1, 37); \
    url2 = ReceiptValidation_XVPZIBJOLJRF_014700E8(NULL, url1, str1, false); \
    ReceiptValidation_CFRelease_01470220(str1); \
    ReceiptValidation_CFRelease_01470220(url1); \
    stream = ReceiptValidation_CFReadStreamCreateWithFile_014700CF(kCFAllocatorDefault, url2); \
    if (stream == NULL || !ReceiptValidation_YKAWXJHTMVXT_00D50186(stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_019E0004(code); \
        ReceiptValidation_CFRelease_01470220(str1); \
        ReceiptValidation_CFRelease_01470220(url1); \
        ReceiptValidation_CFRelease_01470220(str1); \
        goto ReceiptValidation_LoadReceipt01A_bail; \
    } \
    data = ReceiptValidation_LVYZKPYDFEKB_014700B1(kCFAllocatorDefault, 0); \
    do { \
        count = ReceiptValidation_UTDAXUMGRGHQ_01470020(stream, &buffer[0], 569); \
        if (count > 0) { \
            ReceiptValidation_CFDataAppendBytes_014701FA(data, buffer, count); \
        } \
    } while (count > 0); \
    ReceiptValidation_VIQMZYLVBGUH_00D50046(stream); \
    if (ctx->receipt_data) ReceiptValidation_CFRelease_01470220(ctx->receipt_data); \
    ctx->receipt_data = data; \
    ReceiptValidation_XVPZIBJOLJRF += 186; ReceiptValidation_XVPZIBJOLJRF /= 2;  \
    ReceiptValidation_YKAWXJHTMVXT += 16; ReceiptValidation_YKAWXJHTMVXT /= 29;  \
    ReceiptValidation_LVYZKPYDFEKB += 97; ReceiptValidation_LVYZKPYDFEKB /= 2;  \
    ReceiptValidation_PNPLYCHEESST -= 16; ReceiptValidation_PNPLYCHEESST *= 6; ReceiptValidation_PNPLYCHEESST += 4;  \
    ReceiptValidation_VIQMZYLVBGUH -= 10; ReceiptValidation_VIQMZYLVBGUH *= 9; ReceiptValidation_VIQMZYLVBGUH += 7;  \
    ReceiptValidation_UTDAXUMGRGHQ -= 6; ReceiptValidation_UTDAXUMGRGHQ *= 11; ReceiptValidation_UTDAXUMGRGHQ += 6;  \
ReceiptValidation_LoadReceipt01A_bail: \
    if (stream) ReceiptValidation_CFRelease_01470220(stream);     \
    ReceiptValidation_CFRelease_01470220(url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#if DEBUG
inline static void ReceiptValidation_LoadReceipt01A(ReceiptValidation_CheckingContext *ctx) {
    CFStringRef str1;
    CFURLRef url1 = NULL;
    CFReadStreamRef stream = NULL;
    CFMutableDataRef data;
    CFIndex count;
    uint8_t buffer[569];
    char path[PATH_MAX];
    int status;
    glob_t glob_buffer;
    char *expanded_path;
    volatile int code = 166; code -= 109; code *= 3; code += 2; 
    str1 = @obfuscateCF@("");
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_00A60236(str1, path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ReceiptValidation_CFRelease_01470220(str1);
        ReceiptValidation_CFRelease_01470220(url1);
        ReceiptValidation_CFRelease_01470220(str1);
        goto ReceiptValidation_LoadReceipt01A_bail;
    }
    status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[350])(path, GLOB_TILDE | GLOB_ERR, NULL, &glob_buffer);
    if (status != 0 || glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[153])(&glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ReceiptValidation_CFRelease_01470220(url1);
        ReceiptValidation_CFRelease_01470220(str1);
        ReceiptValidation_CFRelease_01470220(url1);
        goto ReceiptValidation_LoadReceipt01A_bail;
    }
    // Get the globbed path
    expanded_path = glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", expanded_path);
    url1 = ReceiptValidation_PNPLYCHEESST_01470052(kCFAllocatorDefault, (const UInt8 *) expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[56])(expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[153])(&glob_buffer);
    // Create a stream from the receipt file
    stream = ReceiptValidation_CFReadStreamCreateWithFile_00D500CF(kCFAllocatorDefault, url1);
    if (stream == NULL || !ReceiptValidation_YKAWXJHTMVXT_00D50186(stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ReceiptValidation_CFRelease_01470220(str1);
        ReceiptValidation_CFRelease_01470220(url1);
        ReceiptValidation_CFRelease_01470220(str1);
        goto ReceiptValidation_LoadReceipt01A_bail;
    }
    // Create the data object that will contains receipt data
    data = ReceiptValidation_LVYZKPYDFEKB_014700B1(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        count = ReceiptValidation_UTDAXUMGRGHQ_01470020(stream, &buffer[0], 569);
        if (count > 0) {
            ReceiptValidation_CFDataAppendBytes_00A60101(data, buffer, count);
        }
    } while (count > 0);
    // Close the stream
    ReceiptValidation_VIQMZYLVBGUH_00D50046(stream);
    if (ctx->receipt_data) ReceiptValidation_CFRelease_01470220(ctx->receipt_data);
    ctx->receipt_data = data;
    // Global variables computation
    // From 232 to 209
    ReceiptValidation_XVPZIBJOLJRF += 186; ReceiptValidation_XVPZIBJOLJRF /= 2; 
    // From 390 to 14
    ReceiptValidation_YKAWXJHTMVXT += 16; ReceiptValidation_YKAWXJHTMVXT /= 29; 
    // From 177 to 137
    ReceiptValidation_LVYZKPYDFEKB += 97; ReceiptValidation_LVYZKPYDFEKB /= 2; 
    // From 82 to 400
    ReceiptValidation_PNPLYCHEESST -= 16; ReceiptValidation_PNPLYCHEESST *= 6; ReceiptValidation_PNPLYCHEESST += 4; 
    // From 70 to 547
    ReceiptValidation_VIQMZYLVBGUH -= 10; ReceiptValidation_VIQMZYLVBGUH *= 9; ReceiptValidation_VIQMZYLVBGUH += 7; 
    // From 32 to 292
    ReceiptValidation_UTDAXUMGRGHQ -= 6; ReceiptValidation_UTDAXUMGRGHQ *= 11; ReceiptValidation_UTDAXUMGRGHQ += 6; 
ReceiptValidation_LoadReceipt01A_bail:
    if (stream) ReceiptValidation_CFRelease_01470220(stream);    
    ReceiptValidation_CFRelease_01470220(str1);
    if (url1) ReceiptValidation_CFRelease_01470220(url1);
}
#else
#define ReceiptValidation_LoadReceipt01A(ctx) { \
    CFStringRef str1; \
    CFURLRef url1 = NULL; \
    CFReadStreamRef stream = NULL; \
    CFMutableDataRef data; \
    CFIndex count; \
    uint8_t buffer[569]; \
    char path[PATH_MAX]; \
    int status; \
    glob_t glob_buffer; \
    char *expanded_path; \
    volatile int code = 166; code -= 109; code *= 3; code += 2;  \
    str1 = @obfuscateCF@(""); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_CFStringGetFileSystemRepresentation_00A60236(str1, path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        ReceiptValidation_exit_019E0173(code); \
        ReceiptValidation_CFRelease_01470220(str1); \
        ReceiptValidation_CFRelease_01470220(url1); \
        ReceiptValidation_CFRelease_01470220(str1); \
        goto ReceiptValidation_LoadReceipt01A_bail; \
    } \
    status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[350])(path, GLOB_TILDE | GLOB_ERR, NULL, &glob_buffer); \
    if (status != 0 || glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[153])(&glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        ReceiptValidation_exit_019E0173(code); \
        ReceiptValidation_CFRelease_01470220(url1); \
        ReceiptValidation_CFRelease_01470220(str1); \
        ReceiptValidation_CFRelease_01470220(url1); \
        goto ReceiptValidation_LoadReceipt01A_bail; \
    } \
    expanded_path = glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", expanded_path); \
    url1 = ReceiptValidation_PNPLYCHEESST_01470052(kCFAllocatorDefault, (const UInt8 *) expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[56])(expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[153])(&glob_buffer); \
    stream = ReceiptValidation_CFReadStreamCreateWithFile_00D500CF(kCFAllocatorDefault, url1); \
    if (stream == NULL || !ReceiptValidation_YKAWXJHTMVXT_00D50186(stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        ReceiptValidation_exit_019E0173(code); \
        ReceiptValidation_CFRelease_01470220(str1); \
        ReceiptValidation_CFRelease_01470220(url1); \
        ReceiptValidation_CFRelease_01470220(str1); \
        goto ReceiptValidation_LoadReceipt01A_bail; \
    } \
    data = ReceiptValidation_LVYZKPYDFEKB_014700B1(kCFAllocatorDefault, 0); \
    do { \
        count = ReceiptValidation_UTDAXUMGRGHQ_01470020(stream, &buffer[0], 569); \
        if (count > 0) { \
            ReceiptValidation_CFDataAppendBytes_00A60101(data, buffer, count); \
        } \
    } while (count > 0); \
    ReceiptValidation_VIQMZYLVBGUH_00D50046(stream); \
    if (ctx->receipt_data) ReceiptValidation_CFRelease_01470220(ctx->receipt_data); \
    ctx->receipt_data = data; \
    ReceiptValidation_XVPZIBJOLJRF += 186; ReceiptValidation_XVPZIBJOLJRF /= 2;  \
    ReceiptValidation_YKAWXJHTMVXT += 16; ReceiptValidation_YKAWXJHTMVXT /= 29;  \
    ReceiptValidation_LVYZKPYDFEKB += 97; ReceiptValidation_LVYZKPYDFEKB /= 2;  \
    ReceiptValidation_PNPLYCHEESST -= 16; ReceiptValidation_PNPLYCHEESST *= 6; ReceiptValidation_PNPLYCHEESST += 4;  \
    ReceiptValidation_VIQMZYLVBGUH -= 10; ReceiptValidation_VIQMZYLVBGUH *= 9; ReceiptValidation_VIQMZYLVBGUH += 7;  \
    ReceiptValidation_UTDAXUMGRGHQ -= 6; ReceiptValidation_UTDAXUMGRGHQ *= 11; ReceiptValidation_UTDAXUMGRGHQ += 6;  \
ReceiptValidation_LoadReceipt01A_bail: \
    if (stream) ReceiptValidation_CFRelease_01470220(stream);     \
    ReceiptValidation_CFRelease_01470220(str1); \
    if (url1) ReceiptValidation_CFRelease_01470220(url1); \
}
#endif
#endif


// CodeBlock GetGUID
#if DEBUG
inline static void ReceiptValidation_GetGUID046(ReceiptValidation_CheckingContext *ctx) {
    kern_return_t kernResult;
    mach_port_t master_port;
    CFMutableDictionaryRef matching_dict = NULL;
    io_iterator_t iterator;
    io_object_t service, parent_service;
    char *str1;
    CFStringRef str2;
    str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[520]), 144, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    kernResult = ReceiptValidation_XVPZIBJOLJRF_00CA00D1(MACH_PORT_NULL, &master_port);
    if (kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00D5017A(matching_dict);
        ReceiptValidation_CFRelease_00D5017A(str2);
        ReceiptValidation_CFRelease_00D5017A(matching_dict);
        goto ReceiptValidation_GetGUID046_bail;
    }
    // Create a search for primary interface
    char str1_[569];
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[557]), str1_, 196, 16);
    str1 = str1_;
    matching_dict = ReceiptValidation_LVYZKPYDFEKB_015A0089(master_port, 0, str1);
    if (!matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_00D5017A(matching_dict);
        ReceiptValidation_CFRelease_00D5017A(str2);
        ReceiptValidation_CFRelease_00D5017A(matching_dict);
        goto ReceiptValidation_GetGUID046_bail;
    }
    // Perform the search
    kernResult = ReceiptValidation_UTDAXUMGRGHQ_01A70124(master_port, matching_dict, &iterator);
    if (kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00D5017A(str2);
        ReceiptValidation_CFRelease_00D5017A(matching_dict);
        ReceiptValidation_CFRelease_00D5017A(str2);
        goto ReceiptValidation_GetGUID046_bail;
    }
    // Iterate over the result
    while((service = ReceiptValidation_PNPLYCHEESST_00CA0190(iterator)) != 0) {
        kernResult = ReceiptValidation_YKAWXJHTMVXT_01A7000E(service, kIOServicePlane, &parent_service);
        if (kernResult == KERN_SUCCESS) {
            if (ctx->guid_data) ReceiptValidation_CFRelease_00D5017A(ctx->guid_data);
            ctx->guid_data = (CFDataRef) ReceiptValidation_VIQMZYLVBGUH_015A0223(parent_service, str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_00CA0021(parent_service);
        }
        ReceiptValidation_IOObjectRelease_00CA0021(iterator);
        ReceiptValidation_IOObjectRelease_00CA0021(service);
    }
    // Global variables computation
    // From 209 to 443
    ReceiptValidation_XVPZIBJOLJRF -= 99; ReceiptValidation_XVPZIBJOLJRF *= 4; ReceiptValidation_XVPZIBJOLJRF += 3; 
    // From 461 to 297
    ReceiptValidation_IJWCVSFUONND += 430; ReceiptValidation_IJWCVSFUONND /= 3; 
    // From 14 to 182
    ReceiptValidation_YKAWXJHTMVXT -= 2; ReceiptValidation_YKAWXJHTMVXT *= 15; ReceiptValidation_YKAWXJHTMVXT += 2; 
    // From 137 to 440
    ReceiptValidation_LVYZKPYDFEKB -= 49; ReceiptValidation_LVYZKPYDFEKB *= 5; 
    // From 394 to 377
    ReceiptValidation_XWDBOORDJTCP += 360; ReceiptValidation_XWDBOORDJTCP /= 2; 
    // From 400 to 439
    ReceiptValidation_PNPLYCHEESST -= 254; ReceiptValidation_PNPLYCHEESST *= 3; ReceiptValidation_PNPLYCHEESST += 1; 
    // Set to 343
    ReceiptValidation_VIQMZYLVBGUH = 343;
    // From 292 to 260
    ReceiptValidation_UTDAXUMGRGHQ += 228; ReceiptValidation_UTDAXUMGRGHQ /= 2; 
ReceiptValidation_GetGUID046_bail:
    ReceiptValidation_CFRelease_00D5017A(str2);
}
#else
#define ReceiptValidation_GetGUID046(ctx) { \
    kern_return_t kernResult; \
    mach_port_t master_port; \
    CFMutableDictionaryRef matching_dict = NULL; \
    io_iterator_t iterator; \
    io_object_t service, parent_service; \
    char *str1; \
    CFStringRef str2; \
    str2 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[520]), 144, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    kernResult = ReceiptValidation_XVPZIBJOLJRF_00CA00D1(MACH_PORT_NULL, &master_port); \
    if (kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00D5017A(matching_dict); \
        ReceiptValidation_CFRelease_00D5017A(str2); \
        ReceiptValidation_CFRelease_00D5017A(matching_dict); \
        goto ReceiptValidation_GetGUID046_bail; \
    } \
    char str1_[569]; \
    ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[557]), str1_, 196, 16); \
    str1 = str1_; \
    matching_dict = ReceiptValidation_LVYZKPYDFEKB_015A0089(master_port, 0, str1); \
    if (!matching_dict) { \
        ReceiptValidation_CFRelease_00D5017A(matching_dict); \
        ReceiptValidation_CFRelease_00D5017A(str2); \
        ReceiptValidation_CFRelease_00D5017A(matching_dict); \
        goto ReceiptValidation_GetGUID046_bail; \
    } \
    kernResult = ReceiptValidation_UTDAXUMGRGHQ_01A70124(master_port, matching_dict, &iterator); \
    if (kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00D5017A(str2); \
        ReceiptValidation_CFRelease_00D5017A(matching_dict); \
        ReceiptValidation_CFRelease_00D5017A(str2); \
        goto ReceiptValidation_GetGUID046_bail; \
    } \
    while((service = ReceiptValidation_PNPLYCHEESST_00CA0190(iterator)) != 0) { \
        kernResult = ReceiptValidation_YKAWXJHTMVXT_01A7000E(service, kIOServicePlane, &parent_service); \
        if (kernResult == KERN_SUCCESS) { \
            if (ctx->guid_data) ReceiptValidation_CFRelease_00D5017A(ctx->guid_data); \
            ctx->guid_data = (CFDataRef) ReceiptValidation_VIQMZYLVBGUH_015A0223(parent_service, str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_00CA0021(parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_00CA0021(iterator); \
        ReceiptValidation_IOObjectRelease_00CA0021(service); \
    } \
    ReceiptValidation_XVPZIBJOLJRF -= 99; ReceiptValidation_XVPZIBJOLJRF *= 4; ReceiptValidation_XVPZIBJOLJRF += 3;  \
    ReceiptValidation_IJWCVSFUONND += 430; ReceiptValidation_IJWCVSFUONND /= 3;  \
    ReceiptValidation_YKAWXJHTMVXT -= 2; ReceiptValidation_YKAWXJHTMVXT *= 15; ReceiptValidation_YKAWXJHTMVXT += 2;  \
    ReceiptValidation_LVYZKPYDFEKB -= 49; ReceiptValidation_LVYZKPYDFEKB *= 5;  \
    ReceiptValidation_XWDBOORDJTCP += 360; ReceiptValidation_XWDBOORDJTCP /= 2;  \
    ReceiptValidation_PNPLYCHEESST -= 254; ReceiptValidation_PNPLYCHEESST *= 3; ReceiptValidation_PNPLYCHEESST += 1;  \
    ReceiptValidation_VIQMZYLVBGUH = 343; \
    ReceiptValidation_UTDAXUMGRGHQ += 228; ReceiptValidation_UTDAXUMGRGHQ /= 2;  \
ReceiptValidation_GetGUID046_bail: \
    ReceiptValidation_CFRelease_00D5017A(str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ctx) {
    OSStatus status;
    SecKeychainRef keychain = NULL;
    CFTypeRef searchList = NULL;
    CFDictionaryRef searchDict = NULL;
    char *str1;
    CFTypeRef str2 = NULL;
    CFIndex idx;
    CFTypeRef results = NULL;
    SecCertificateRef certificate = NULL;
    volatile CFIndex count1 = 1; count1 /= 1; 
    volatile CFIndex count2 = 4; count2 -= 3; count2 *= 3; count2 += 2; 
    const void *searchKeys[5];
    const void *searchValues[5];
    volatile int code = 69; code -= 26; code *= 4; code += 1; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char str1_[569];
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[52]), str1_, 29, 66);
    str1 = str1_;
    status = ReceiptValidation_XVPZIBJOLJRF_00A101BB(str1, &keychain);
    if (status != errSecSuccess) {
        ReceiptValidation_exit_00F00173(code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA051_bail;
    }
    // Create a search list within the system Keychain
    searchList = ReceiptValidation_UTDAXUMGRGHQ_01470104(kCFAllocatorDefault, count1, ReceiptValidation_kCFTypeArrayCallBacks_00D50228);
    ReceiptValidation_VIQMZYLVBGUH_00D50157((CFMutableArrayRef) searchList, keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[370]), 13, 16);
    searchKeys[0] = *ReceiptValidation_kSecClass_01660204;
    searchValues[0] = *ReceiptValidation_kSecClassCertificate_00A100D9;
    searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00A1019C;
    searchValues[1] = searchList;
    searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_009000D3;
    searchValues[2] = str2;
    searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00A1012E;
    searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00A100B4;
    searchKeys[4] = *ReceiptValidation_kSecReturnRef_00900187;
    searchValues[4] = kCFBooleanTrue;
    searchDict = CFDictionaryCreate(kCFAllocatorDefault, searchKeys, searchValues, count2, NULL, NULL);
    // Perform the actual search
    status = ReceiptValidation_PNPLYCHEESST_009001B7(searchDict, &results);
    if (status != errSecSuccess) {
        ReceiptValidation_exit_00F00173(code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA051_bail;
    }
    // Iterate over the results and copy the certificate data
    for(idx = 0; idx < ReceiptValidation_CFArrayGetCount_01470143((CFArrayRef) results); idx++) {
        certificate = (SecCertificateRef) ReceiptValidation_IJWCVSFUONND_01470129((CFArrayRef) results, idx);
        if (ctx->ca_data) ReceiptValidation_CFRelease_00A60188(ctx->ca_data);
        ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00900156(certificate);
    }
    // Global variables computation
    // From 297 to 532
    ReceiptValidation_IJWCVSFUONND -= 120; ReceiptValidation_IJWCVSFUONND *= 3; ReceiptValidation_IJWCVSFUONND += 1; 
    // From 439 to 188
    ReceiptValidation_PNPLYCHEESST += 313; ReceiptValidation_PNPLYCHEESST /= 4; 
    // From 260 to 416
    ReceiptValidation_UTDAXUMGRGHQ -= 122; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 2; 
ReceiptValidation_GetRootCA051_bail:
    if (str2) ReceiptValidation_CFRelease_00A60188(str2);
    if (results) ReceiptValidation_CFRelease_00A60188(results);
    if (searchDict) ReceiptValidation_CFRelease_00A60188(searchDict);
    if (searchList) ReceiptValidation_CFRelease_00A60188(searchList);
    if (keychain) ReceiptValidation_CFRelease_00A60188(keychain);
}
#else
#define ReceiptValidation_GetRootCA051(ctx) { \
    OSStatus status; \
    SecKeychainRef keychain = NULL; \
    CFTypeRef searchList = NULL; \
    CFDictionaryRef searchDict = NULL; \
    char *str1; \
    CFTypeRef str2 = NULL; \
    CFIndex idx; \
    CFTypeRef results = NULL; \
    SecCertificateRef certificate = NULL; \
    volatile CFIndex count1 = 1; count1 /= 1;  \
    volatile CFIndex count2 = 4; count2 -= 3; count2 *= 3; count2 += 2;  \
    const void *searchKeys[5]; \
    const void *searchValues[5]; \
    volatile int code = 69; code -= 26; code *= 4; code += 1;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char str1_[569]; \
    ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[52]), str1_, 29, 66); \
    str1 = str1_; \
    status = ReceiptValidation_XVPZIBJOLJRF_00A101BB(str1, &keychain); \
    if (status != errSecSuccess) { \
        ReceiptValidation_exit_00F00173(code); \
        goto ReceiptValidation_GetRootCA051_bail; \
    } \
    searchList = ReceiptValidation_UTDAXUMGRGHQ_01470104(kCFAllocatorDefault, count1, ReceiptValidation_kCFTypeArrayCallBacks_00D50228); \
    ReceiptValidation_VIQMZYLVBGUH_00D50157((CFMutableArrayRef) searchList, keychain); \
    str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[370]), 13, 16); \
    searchKeys[0] = *ReceiptValidation_kSecClass_01660204; \
    searchValues[0] = *ReceiptValidation_kSecClassCertificate_00A100D9; \
    searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00A1019C; \
    searchValues[1] = searchList; \
    searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_009000D3; \
    searchValues[2] = str2; \
    searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00A1012E; \
    searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00A100B4; \
    searchKeys[4] = *ReceiptValidation_kSecReturnRef_00900187; \
    searchValues[4] = kCFBooleanTrue; \
    searchDict = CFDictionaryCreate(kCFAllocatorDefault, searchKeys, searchValues, count2, NULL, NULL); \
    status = ReceiptValidation_PNPLYCHEESST_009001B7(searchDict, &results); \
    if (status != errSecSuccess) { \
        ReceiptValidation_exit_00F00173(code); \
        goto ReceiptValidation_GetRootCA051_bail; \
    } \
    for(idx = 0; idx < ReceiptValidation_CFArrayGetCount_01470143((CFArrayRef) results); idx++) { \
        certificate = (SecCertificateRef) ReceiptValidation_IJWCVSFUONND_01470129((CFArrayRef) results, idx); \
        if (ctx->ca_data) ReceiptValidation_CFRelease_00A60188(ctx->ca_data); \
        ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00900156(certificate); \
    } \
    ReceiptValidation_IJWCVSFUONND -= 120; ReceiptValidation_IJWCVSFUONND *= 3; ReceiptValidation_IJWCVSFUONND += 1;  \
    ReceiptValidation_PNPLYCHEESST += 313; ReceiptValidation_PNPLYCHEESST /= 4;  \
    ReceiptValidation_UTDAXUMGRGHQ -= 122; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 2;  \
ReceiptValidation_GetRootCA051_bail: \
    if (str2) ReceiptValidation_CFRelease_00A60188(str2); \
    if (results) ReceiptValidation_CFRelease_00A60188(results); \
    if (searchDict) ReceiptValidation_CFRelease_00A60188(searchDict); \
    if (searchList) ReceiptValidation_CFRelease_00A60188(searchList); \
    if (keychain) ReceiptValidation_CFRelease_00A60188(keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#if DEBUG
inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ctx) {
    OSStatus status;
    SecKeychainRef keychain = NULL;
    CFTypeRef searchList = NULL;
    char *str1, *str2;
    SecKeychainAttributeList attributeList;
    SecKeychainAttribute attribute;
    SecKeychainSearchRef searchRef = NULL;
    SecKeychainItemRef itemRef = nil;
    volatile CFIndex count1 = 1; count1 /= 1; 
    volatile CFIndex count2 = 1; count2 -= 1; count2 *= 7; count2 += 5; 
    volatile CFIndex count3 = 12; count3 -= 8; count3 *= 3; count3 += 1; 
    volatile int code = 68; code -= 25; code *= 4; code += 1; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char str1_[569];
    ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[44]), str1_, 37, 66);
    str1 = str1_;
    status = ReceiptValidation_XVPZIBJOLJRF_00A101BB(str1, &keychain);
    if (status != errSecSuccess) {
        ReceiptValidation_exit_00F00004(code);
        // Dead code
        goto ReceiptValidation_GetRootCA051_bail;
    }
    // Create a search list within the system Keychain
    searchList = ReceiptValidation_UTDAXUMGRGHQ_01470104(kCFAllocatorDefault, count1, ReceiptValidation_kCFTypeArrayCallBacks_00A60228);
    ReceiptValidation_VIQMZYLVBGUH_00D50157((CFMutableArrayRef) searchList, keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char str2_[569];
    ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[16]), str2_, 56, 16);
    str2 = str2_;
    attributeList.count = 1;
    attributeList.attr  = &attribute;
    attribute.tag = kSecLabelItemAttr;
    attribute.data = str2;
    attribute.length = (UInt32) count3;
    status = ReceiptValidation_YKAWXJHTMVXT_016600B6(searchList, kSecCertificateItemClass, &attributeList, &searchRef);
    if (status != errSecSuccess) {
        ReceiptValidation_exit_00F00004(code);
        // Dead code
        goto ReceiptValidation_GetRootCA051_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_SecKeychainSearchCopyNext_00900209(searchRef, &itemRef) == noErr) {
        if (ctx->ca_data) ReceiptValidation_CFRelease_00D50188(ctx->ca_data);
        ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00A10156((SecCertificateRef) itemRef);
    }
    // Global variables computation
    // From 297 to 532
    ReceiptValidation_IJWCVSFUONND -= 120; ReceiptValidation_IJWCVSFUONND *= 3; ReceiptValidation_IJWCVSFUONND += 1; 
    // From 439 to 188
    ReceiptValidation_PNPLYCHEESST += 313; ReceiptValidation_PNPLYCHEESST /= 4; 
    // From 260 to 416
    ReceiptValidation_UTDAXUMGRGHQ -= 122; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 2; 
ReceiptValidation_GetRootCA051_bail:
    if (itemRef) ReceiptValidation_CFRelease_00D50188(itemRef);
    if (searchRef) ReceiptValidation_CFRelease_00D50188(searchRef);
    if (searchList) ReceiptValidation_CFRelease_00D50188(searchList);
    if (keychain) ReceiptValidation_CFRelease_00D50188(keychain);
}
#else
#define ReceiptValidation_GetRootCA051(ctx) { \
    OSStatus status; \
    SecKeychainRef keychain = NULL; \
    CFTypeRef searchList = NULL; \
    char *str1, *str2; \
    SecKeychainAttributeList attributeList; \
    SecKeychainAttribute attribute; \
    SecKeychainSearchRef searchRef = NULL; \
    SecKeychainItemRef itemRef = nil; \
    volatile CFIndex count1 = 1; count1 /= 1;  \
    volatile CFIndex count2 = 1; count2 -= 1; count2 *= 7; count2 += 5;  \
    volatile CFIndex count3 = 12; count3 -= 8; count3 *= 3; count3 += 1;  \
    volatile int code = 68; code -= 25; code *= 4; code += 1;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char str1_[569]; \
    ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[44]), str1_, 37, 66); \
    str1 = str1_; \
    status = ReceiptValidation_XVPZIBJOLJRF_00A101BB(str1, &keychain); \
    if (status != errSecSuccess) { \
        ReceiptValidation_exit_00F00004(code); \
        goto ReceiptValidation_GetRootCA051_bail; \
    } \
    searchList = ReceiptValidation_UTDAXUMGRGHQ_01470104(kCFAllocatorDefault, count1, ReceiptValidation_kCFTypeArrayCallBacks_00A60228); \
    ReceiptValidation_VIQMZYLVBGUH_00D50157((CFMutableArrayRef) searchList, keychain); \
    char str2_[569]; \
    ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[16]), str2_, 56, 16); \
    str2 = str2_; \
    attributeList.count = 1; \
    attributeList.attr  = &attribute; \
    attribute.tag = kSecLabelItemAttr; \
    attribute.data = str2; \
    attribute.length = (UInt32) count3; \
    status = ReceiptValidation_YKAWXJHTMVXT_016600B6(searchList, kSecCertificateItemClass, &attributeList, &searchRef); \
    if (status != errSecSuccess) { \
        ReceiptValidation_exit_00F00004(code); \
        goto ReceiptValidation_GetRootCA051_bail; \
    } \
    while(ReceiptValidation_SecKeychainSearchCopyNext_00900209(searchRef, &itemRef) == noErr) { \
        if (ctx->ca_data) ReceiptValidation_CFRelease_00D50188(ctx->ca_data); \
        ctx->ca_data = ReceiptValidation_SecCertificateCopyData_00A10156((SecCertificateRef) itemRef); \
    } \
    ReceiptValidation_IJWCVSFUONND -= 120; ReceiptValidation_IJWCVSFUONND *= 3; ReceiptValidation_IJWCVSFUONND += 1;  \
    ReceiptValidation_PNPLYCHEESST += 313; ReceiptValidation_PNPLYCHEESST /= 4;  \
    ReceiptValidation_UTDAXUMGRGHQ -= 122; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 2;  \
ReceiptValidation_GetRootCA051_bail: \
    if (itemRef) ReceiptValidation_CFRelease_00D50188(itemRef); \
    if (searchRef) ReceiptValidation_CFRelease_00D50188(searchRef); \
    if (searchList) ReceiptValidation_CFRelease_00D50188(searchList); \
    if (keychain) ReceiptValidation_CFRelease_00D50188(keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_CheckingContext *ctx) {
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[399]), 199, 18);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    volatile int code = 101; code -= 44; code *= 3; code += 2; 
    CFStringRef str2 = ReceiptValidation_PNPLYCHEESST_014700BC((CFBundleRef) ctx->main_bundle);
    if (ReceiptValidation_UTDAXUMGRGHQ_00A601A0(str1, str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_00F0011E(code);
        // Dead code
        ReceiptValidation_CFRelease_01470188(str2);
        ReceiptValidation_CFRelease_01470188(str2);
    }
    // Global variables computation
    // From 532 to 424
    ReceiptValidation_IJWCVSFUONND += 316; ReceiptValidation_IJWCVSFUONND /= 2; 
    // From 416 to 416
    ReceiptValidation_UTDAXUMGRGHQ /= 1; 
    ReceiptValidation_CFRelease_01470188(str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05B(ctx) { \
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[399]), 199, 18); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    volatile int code = 101; code -= 44; code *= 3; code += 2;  \
    CFStringRef str2 = ReceiptValidation_PNPLYCHEESST_014700BC((CFBundleRef) ctx->main_bundle); \
    if (ReceiptValidation_UTDAXUMGRGHQ_00A601A0(str1, str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_00F0011E(code); \
        ReceiptValidation_CFRelease_01470188(str2); \
        ReceiptValidation_CFRelease_01470188(str2); \
    } \
    ReceiptValidation_IJWCVSFUONND += 316; ReceiptValidation_IJWCVSFUONND /= 2;  \
    ReceiptValidation_UTDAXUMGRGHQ /= 1;  \
    ReceiptValidation_CFRelease_01470188(str1); \
}
#endif


// CodeBlock CheckBundleVersion
#if DEBUG
inline static void ReceiptValidation_CheckBundleVersion060(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    volatile int code = 109; code -= 52; code *= 3; code += 2; 
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16);
    CFStringRef str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[415]), 1, 35);
    CFStringRef str3 = (CFStringRef) ReceiptValidation_IJWCVSFUONND_014701A8((CFBundleRef) ctx->main_bundle, str2);
    if (ReceiptValidation_UTDAXUMGRGHQ_00A601A0(str1, str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str3, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_019E011E(code);
        // Dead code
        ReceiptValidation_CFRelease_01470220(str1);
        ReceiptValidation_CFRelease_01470220(str2);
        ReceiptValidation_CFRelease_01470220(str1);
    }
    // Global variables computation
    // From 443 to 300
    ReceiptValidation_XVPZIBJOLJRF += 157; ReceiptValidation_XVPZIBJOLJRF /= 2; 
    // Set to 115
    ReceiptValidation_IJWCVSFUONND = 115;
    // Set to 546
    ReceiptValidation_YKAWXJHTMVXT = 546;
    // Set to 377
    ReceiptValidation_LVYZKPYDFEKB = 377;
    // Set to 255
    ReceiptValidation_XWDBOORDJTCP = 255;
    // From 188 to 479
    ReceiptValidation_PNPLYCHEESST -= 69; ReceiptValidation_PNPLYCHEESST *= 4; ReceiptValidation_PNPLYCHEESST += 3; 
    // Set to 93
    ReceiptValidation_VIQMZYLVBGUH = 93;
    // From 416 to 529
    ReceiptValidation_UTDAXUMGRGHQ -= 240; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 1; 
    ReceiptValidation_CFRelease_01470220(str2);
    ReceiptValidation_CFRelease_01470220(str1);
}
#else
#define ReceiptValidation_CheckBundleVersion060(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    volatile int code = 109; code -= 52; code *= 3; code += 2;  \
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16); \
    CFStringRef str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[415]), 1, 35); \
    CFStringRef str3 = (CFStringRef) ReceiptValidation_IJWCVSFUONND_014701A8((CFBundleRef) ctx->main_bundle, str2); \
    if (ReceiptValidation_UTDAXUMGRGHQ_00A601A0(str1, str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str3, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_019E011E(code); \
        ReceiptValidation_CFRelease_01470220(str1); \
        ReceiptValidation_CFRelease_01470220(str2); \
        ReceiptValidation_CFRelease_01470220(str1); \
    } \
    ReceiptValidation_XVPZIBJOLJRF += 157; ReceiptValidation_XVPZIBJOLJRF /= 2;  \
    ReceiptValidation_IJWCVSFUONND = 115; \
    ReceiptValidation_YKAWXJHTMVXT = 546; \
    ReceiptValidation_LVYZKPYDFEKB = 377; \
    ReceiptValidation_XWDBOORDJTCP = 255; \
    ReceiptValidation_PNPLYCHEESST -= 69; ReceiptValidation_PNPLYCHEESST *= 4; ReceiptValidation_PNPLYCHEESST += 3;  \
    ReceiptValidation_VIQMZYLVBGUH = 93; \
    ReceiptValidation_UTDAXUMGRGHQ -= 240; ReceiptValidation_UTDAXUMGRGHQ *= 3; ReceiptValidation_UTDAXUMGRGHQ += 1;  \
    ReceiptValidation_CFRelease_01470220(str2); \
    ReceiptValidation_CFRelease_01470220(str1); \
}
#endif


// CodeBlock GetReceiptInformation
#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation064X(const unsigned char *data, long length, int *payload) {
    const unsigned char *ptr = data;
    long size = length;
    *payload = 0;
    do {
        *payload <<= 8;
        *payload += (uint8_t) *ptr++;
    } while(--size > 0);
}
#else
inline static void ReceiptValidation_GetReceiptInformation064X(const unsigned char *data, long length, int *payload) { \
    const unsigned char *ptr = data; \
    long size = length; \
    *payload = 0; \
    do { \
        *payload <<= 8; \
        *payload += (uint8_t) *ptr++; \
    } while(--size > 0); \
}
#endif

#if DEBUG
inline static void ReceiptValidation_GetReceiptInformation064(ReceiptValidation_CheckingContext *ctx) {
    ReceiptValidation_ParsingContext receipt_context;
    ReceiptValidation_ParsingContext *current_context;
    CFNumberRef key;
    ReceiptValidation_ReceiptAttributeType key1, key2;
    CFTypeRef value1, value2;
    int type;
    int xclass;
    long length;
    CFDateFormatterRef formatter = NULL;
    BIO *bio_p7;
    PKCS7 *pkcs7;
    ASN1_OCTET_STRING *contentcontent;
    const unsigned char *seq_end;
    int attr_type;
    int attr_version;
    int str_type;
    long str_length;
    const unsigned char *str_ptr;
    volatile int code = 34; code -= 10; code *= 7; code += 5; 
    ReceiptValidation_ParsingContext inapp_context;
    int number;
    int num_type;
    long num_length;
    const unsigned char *num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    bio_p7 = ReceiptValidation_BIO_new_0029002B(ReceiptValidation_BIO_s_mem_002601D9());
    ReceiptValidation_BIO_write_00260016(bio_p7, (void *) ReceiptValidation_XWDBOORDJTCP_00D500FF((CFDataRef) ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_014700D4((CFDataRef) ctx->receipt_data));
    pkcs7 = ReceiptValidation_d2i_PKCS7_bio_011C0125(bio_p7, NULL);
    if (!pkcs7) {
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_bail;
    }
    if (!PKCS7_type_is_signed(pkcs7)) {
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_bail;
    }
    if (!PKCS7_type_is_data(pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_019E0173(code);
        // Dead code
        ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    formatter = ReceiptValidation_CFDateFormatterCreate_01470086(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    value1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[462]), 75, 33); 
    ReceiptValidation_CFDateFormatterSetFormat_00A60224(formatter, (CFStringRef) value1);
    ReceiptValidation_CFRelease_00D50188(value1);
    // Initial context
    contentcontent = pkcs7->d.sign->contents->d.data;
    receipt_context.ptr = contentcontent->data;
    receipt_context.end = receipt_context.ptr + contentcontent->length;
    receipt_context.parent = NULL;
    receipt_context.dictionary = NULL;
    current_context = &receipt_context;
    while(current_context->ptr < current_context->end) {
        if (!current_context->dictionary) {
            // Create the target dictionary
            current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_00D500EA(kCFAllocatorDefault, (CFIndex) 569, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00A600FB, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00A60109);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr);
            if (type != V_ASN1_SET) {
                ReceiptValidation_exit_019E0173(code);
                goto ReceiptValidation_GetReceiptInformation064_bail;
            }
        }
        // Iterate over attributes
        while(current_context->ptr < current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr);
            if (type != V_ASN1_SEQUENCE) {
                ReceiptValidation_exit_019E0173(code);
                goto ReceiptValidation_GetReceiptInformation064_bail;
            }
            seq_end = current_context->ptr + length;
            attr_type = 0;
            attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr);
            if (type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_019E0173(code);
                goto ReceiptValidation_GetReceiptInformation064_bail;
            }
            ReceiptValidation_GetReceiptInformation064X((current_context->ptr), (length), (&attr_type));
            current_context->ptr += length;
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr);
            if (type != V_ASN1_INTEGER) {
                ReceiptValidation_exit_019E0173(code);
                goto ReceiptValidation_GetReceiptInformation064_bail;
            }
            ReceiptValidation_GetReceiptInformation064X((current_context->ptr), (length), (&attr_version));
            current_context->ptr += length;
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr);
            if (type != V_ASN1_OCTET_STRING) {
                ReceiptValidation_exit_019E0173(code);
                goto ReceiptValidation_GetReceiptInformation064_bail;
            }
            key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (attr_type << 1));
            key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (attr_type << 1) + 1);
            value1 = NULL;
            value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", current_context->parent ? "--- " : "- ", attr_type);
            switch (attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    str_type = 0;
                    str_length = 0;
                    str_ptr = current_context->ptr;
                    ReceiptValidation_ASN1_get_object_011C017C(&str_ptr, &str_length, &str_type, &xclass, seq_end - str_ptr);
                    if (str_type != V_ASN1_UTF8STRING) {
                        ReceiptValidation_exit_019E0173(code);
                        goto ReceiptValidation_GetReceiptInformation064_bail;
                    }
                    value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) str_ptr, (CFIndex) str_length, kCFStringEncodingUTF8, false);
                    value2 = ReceiptValidation_CFDataCreate_01470081(NULL, (const UInt8 *) current_context->ptr, (CFIndex) length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", current_context->parent ? "--- " : "- ", attr_type, CFStringGetCStringPtr((CFStringRef) value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    str_type = 0;
                    str_length = 0;
                    str_ptr = current_context->ptr;
                    ReceiptValidation_ASN1_get_object_011C017C(&str_ptr, &str_length, &str_type, &xclass, seq_end - str_ptr);
                    if (str_type != V_ASN1_IA5STRING) {
                        ReceiptValidation_exit_019E0173(code);
                        goto ReceiptValidation_GetReceiptInformation064_bail;
                    }
                    value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) str_ptr, (CFIndex) str_length, kCFStringEncodingASCII, false);
                    value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_014700FD(NULL, formatter, (CFStringRef) value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", current_context->parent ? "--- " : "- ", attr_type, CFStringGetCStringPtr((CFStringRef) value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    num_type = 0;
                    num_length = 0;
                    num_ptr = current_context->ptr;
                    ReceiptValidation_ASN1_get_object_011C017C(&num_ptr, &num_length, &num_type, &xclass, seq_end - num_ptr);
                    if (num_type != V_ASN1_INTEGER) {
                        ReceiptValidation_exit_019E0173(code);
                        goto ReceiptValidation_GetReceiptInformation064_bail;
                    }
                    ReceiptValidation_GetReceiptInformation064X((num_ptr), (num_length), (&number));
                    value1 = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", current_context->parent ? "--- " : "- ", attr_type, number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    value1 = ReceiptValidation_CFDataCreate_01470081(NULL, (const UInt8 *) current_context->ptr, (CFIndex) length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", current_context->parent ? "--- " : "- ", attr_type, ReceiptValidation_CFDataGetLength_014700D4((CFDataRef) value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    inapp_context.ptr = current_context->ptr;
                    inapp_context.end = inapp_context.ptr + length;
                    inapp_context.dictionary = NULL;
                    inapp_context.parent = current_context;
                    current_context = &inapp_context;
                    goto ReceiptValidation_GetReceiptInformation064_key;
                }
                default:
                    break;
            }
            if (value1) {
                key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key1);
                ReceiptValidation_LVYZKPYDFEKB_00D50179((CFMutableDictionaryRef) current_context->dictionary, key, value1);
                ReceiptValidation_CFRelease_00D50188(key);
                ReceiptValidation_CFRelease_00D50188(value1);
            }
            if (value2) {
                key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key2);
                ReceiptValidation_LVYZKPYDFEKB_00D50179((CFMutableDictionaryRef) current_context->dictionary, key, value2);
                ReceiptValidation_CFRelease_00D50188(key);
                ReceiptValidation_CFRelease_00D50188(value2);
            }
            // Move past the attribute
            current_context->ptr += length;
        }
ReceiptValidation_GetReceiptInformation064_key:
        // If the current context is a new one, continue parsing
        if (!current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key1);
            value1 = ReceiptValidation_XVPZIBJOLJRF_0147012C((CFDictionaryRef) current_context->parent->dictionary, key);
            if (!value1) {
                value1 = ReceiptValidation_IJWCVSFUONND_00A60073(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00A60228);
                ReceiptValidation_CFDictionarySetValue_0147018C((CFMutableDictionaryRef) current_context->parent->dictionary, key, value1);
                ReceiptValidation_CFRelease_00D50188(value1);
            }
            ReceiptValidation_UTDAXUMGRGHQ_00D50211((CFMutableArrayRef) value1, current_context->dictionary);
            ReceiptValidation_CFRelease_00D50188(current_context->dictionary);
            ReceiptValidation_CFRelease_00D50188(key);
            // Switch to parent context
            current_context = current_context->parent;
            // Move past the child context
            current_context->ptr = inapp_context.end;
        }
    }
    if (ctx->receipt_dict) ReceiptValidation_CFRelease_00D50188(ctx->receipt_dict);
    ctx->receipt_dict = receipt_context.dictionary;
    // Global variables computation
    // From 300 to 310
    ReceiptValidation_XVPZIBJOLJRF -= 197; ReceiptValidation_XVPZIBJOLJRF *= 3; ReceiptValidation_XVPZIBJOLJRF += 1; 
    // From 546 to 219
    ReceiptValidation_YKAWXJHTMVXT += 330; ReceiptValidation_YKAWXJHTMVXT /= 4; 
ReceiptValidation_GetReceiptInformation064_bail:
    if (pkcs7) ReceiptValidation_PKCS7_free_011C0039(pkcs7);
    if (bio_p7) ReceiptValidation_BIO_free_002901C6(bio_p7);
    if (formatter) ReceiptValidation_CFRelease_00D50188(formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation064(ctx) { \
    ReceiptValidation_ParsingContext receipt_context; \
    ReceiptValidation_ParsingContext *current_context; \
    CFNumberRef key; \
    ReceiptValidation_ReceiptAttributeType key1, key2; \
    CFTypeRef value1, value2; \
    int type; \
    int xclass; \
    long length; \
    CFDateFormatterRef formatter = NULL; \
    BIO *bio_p7; \
    PKCS7 *pkcs7; \
    ASN1_OCTET_STRING *contentcontent; \
    const unsigned char *seq_end; \
    int attr_type; \
    int attr_version; \
    int str_type; \
    long str_length; \
    const unsigned char *str_ptr; \
    volatile int code = 34; code -= 10; code *= 7; code += 5;  \
    ReceiptValidation_ParsingContext inapp_context; \
    int number; \
    int num_type; \
    long num_length; \
    const unsigned char *num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    bio_p7 = ReceiptValidation_BIO_new_0029002B(ReceiptValidation_BIO_s_mem_002601D9()); \
    ReceiptValidation_BIO_write_00260016(bio_p7, (void *) ReceiptValidation_XWDBOORDJTCP_00D500FF((CFDataRef) ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_014700D4((CFDataRef) ctx->receipt_data)); \
    pkcs7 = ReceiptValidation_d2i_PKCS7_bio_011C0125(bio_p7, NULL); \
    if (!pkcs7) { \
        ReceiptValidation_exit_019E0173(code); \
        ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_bail; \
    } \
    if (!PKCS7_type_is_signed(pkcs7)) { \
        ReceiptValidation_exit_019E0173(code); \
        ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_bail; \
    } \
    if (!PKCS7_type_is_data(pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_019E0173(code); \
        ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_bail; \
    } \
    formatter = ReceiptValidation_CFDateFormatterCreate_01470086(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    value1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[462]), 75, 33);  \
    ReceiptValidation_CFDateFormatterSetFormat_00A60224(formatter, (CFStringRef) value1); \
    ReceiptValidation_CFRelease_00D50188(value1); \
    contentcontent = pkcs7->d.sign->contents->d.data; \
    receipt_context.ptr = contentcontent->data; \
    receipt_context.end = receipt_context.ptr + contentcontent->length; \
    receipt_context.parent = NULL; \
    receipt_context.dictionary = NULL; \
    current_context = &receipt_context; \
    while(current_context->ptr < current_context->end) { \
        if (!current_context->dictionary) { \
            current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_00D500EA(kCFAllocatorDefault, (CFIndex) 569, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00A600FB, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00A60109); \
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr); \
            if (type != V_ASN1_SET) { \
                ReceiptValidation_exit_019E0173(code); \
                goto ReceiptValidation_GetReceiptInformation064_bail; \
            } \
        } \
        while(current_context->ptr < current_context->end) { \
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr); \
            if (type != V_ASN1_SEQUENCE) { \
                ReceiptValidation_exit_019E0173(code); \
                goto ReceiptValidation_GetReceiptInformation064_bail; \
            } \
            seq_end = current_context->ptr + length; \
            attr_type = 0; \
            attr_version = 0; \
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr); \
            if (type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_019E0173(code); \
                goto ReceiptValidation_GetReceiptInformation064_bail; \
            } \
            ReceiptValidation_GetReceiptInformation064X((current_context->ptr), (length), (&attr_type)); \
            current_context->ptr += length; \
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr); \
            if (type != V_ASN1_INTEGER) { \
                ReceiptValidation_exit_019E0173(code); \
                goto ReceiptValidation_GetReceiptInformation064_bail; \
            } \
            ReceiptValidation_GetReceiptInformation064X((current_context->ptr), (length), (&attr_version)); \
            current_context->ptr += length; \
            ReceiptValidation_ASN1_get_object_011C017C(&current_context->ptr, &length, &type, &xclass, current_context->end - current_context->ptr); \
            if (type != V_ASN1_OCTET_STRING) { \
                ReceiptValidation_exit_019E0173(code); \
                goto ReceiptValidation_GetReceiptInformation064_bail; \
            } \
            key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (attr_type << 1)); \
            key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (attr_type << 1) + 1); \
            value1 = NULL; \
            value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%d", current_context->parent ? "--- " : "- ", attr_type); \
            switch (attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    str_type = 0; \
                    str_length = 0; \
                    str_ptr = current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_011C017C(&str_ptr, &str_length, &str_type, &xclass, seq_end - str_ptr); \
                    if (str_type != V_ASN1_UTF8STRING) { \
                        ReceiptValidation_exit_019E0173(code); \
                        goto ReceiptValidation_GetReceiptInformation064_bail; \
                    } \
                    value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) str_ptr, (CFIndex) str_length, kCFStringEncodingUTF8, false); \
                    value2 = ReceiptValidation_CFDataCreate_01470081(NULL, (const UInt8 *) current_context->ptr, (CFIndex) length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", current_context->parent ? "--- " : "- ", attr_type, CFStringGetCStringPtr((CFStringRef) value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    str_type = 0; \
                    str_length = 0; \
                    str_ptr = current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_011C017C(&str_ptr, &str_length, &str_type, &xclass, seq_end - str_ptr); \
                    if (str_type != V_ASN1_IA5STRING) { \
                        ReceiptValidation_exit_019E0173(code); \
                        goto ReceiptValidation_GetReceiptInformation064_bail; \
                    } \
                    value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[171])(NULL, (const UInt8 *) str_ptr, (CFIndex) str_length, kCFStringEncodingASCII, false); \
                    value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_014700FD(NULL, formatter, (CFStringRef) value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %s", current_context->parent ? "--- " : "- ", attr_type, CFStringGetCStringPtr((CFStringRef) value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    num_type = 0; \
                    num_length = 0; \
                    num_ptr = current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_011C017C(&num_ptr, &num_length, &num_type, &xclass, seq_end - num_ptr); \
                    if (num_type != V_ASN1_INTEGER) { \
                        ReceiptValidation_exit_019E0173(code); \
                        goto ReceiptValidation_GetReceiptInformation064_bail; \
                    } \
                    ReceiptValidation_GetReceiptInformation064X((num_ptr), (num_length), (&number)); \
                    value1 = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => %d", current_context->parent ? "--- " : "- ", attr_type, number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    value1 = ReceiptValidation_CFDataCreate_01470081(NULL, (const UInt8 *) current_context->ptr, (CFIndex) length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%d => [%lu bytes]", current_context->parent ? "--- " : "- ", attr_type, ReceiptValidation_CFDataGetLength_014700D4((CFDataRef) value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    inapp_context.ptr = current_context->ptr; \
                    inapp_context.end = inapp_context.ptr + length; \
                    inapp_context.dictionary = NULL; \
                    inapp_context.parent = current_context; \
                    current_context = &inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation064_key; \
                } \
                default: \
                    break; \
            } \
            if (value1) { \
                key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key1); \
                ReceiptValidation_LVYZKPYDFEKB_00D50179((CFMutableDictionaryRef) current_context->dictionary, key, value1); \
                ReceiptValidation_CFRelease_00D50188(key); \
                ReceiptValidation_CFRelease_00D50188(value1); \
            } \
            if (value2) { \
                key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key2); \
                ReceiptValidation_LVYZKPYDFEKB_00D50179((CFMutableDictionaryRef) current_context->dictionary, key, value2); \
                ReceiptValidation_CFRelease_00D50188(key); \
                ReceiptValidation_CFRelease_00D50188(value2); \
            } \
            current_context->ptr += length; \
        } \
ReceiptValidation_GetReceiptInformation064_key: \
        if (!current_context->dictionary) { \
            continue; \
        } \
        if (current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            key = ReceiptValidation_PNPLYCHEESST_00A601DF(NULL, kCFNumberIntType, &key1); \
            value1 = ReceiptValidation_XVPZIBJOLJRF_0147012C((CFDictionaryRef) current_context->parent->dictionary, key); \
            if (!value1) { \
                value1 = ReceiptValidation_IJWCVSFUONND_00A60073(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00A60228); \
                ReceiptValidation_CFDictionarySetValue_0147018C((CFMutableDictionaryRef) current_context->parent->dictionary, key, value1); \
                ReceiptValidation_CFRelease_00D50188(value1); \
            } \
            ReceiptValidation_UTDAXUMGRGHQ_00D50211((CFMutableArrayRef) value1, current_context->dictionary); \
            ReceiptValidation_CFRelease_00D50188(current_context->dictionary); \
            ReceiptValidation_CFRelease_00D50188(key); \
            current_context = current_context->parent; \
            current_context->ptr = inapp_context.end; \
        } \
    } \
    if (ctx->receipt_dict) ReceiptValidation_CFRelease_00D50188(ctx->receipt_dict); \
    ctx->receipt_dict = receipt_context.dictionary; \
    ReceiptValidation_XVPZIBJOLJRF -= 197; ReceiptValidation_XVPZIBJOLJRF *= 3; ReceiptValidation_XVPZIBJOLJRF += 1;  \
    ReceiptValidation_YKAWXJHTMVXT += 330; ReceiptValidation_YKAWXJHTMVXT /= 4;  \
ReceiptValidation_GetReceiptInformation064_bail: \
    if (pkcs7) ReceiptValidation_PKCS7_free_011C0039(pkcs7); \
    if (bio_p7) ReceiptValidation_BIO_free_002901C6(bio_p7); \
    if (formatter) ReceiptValidation_CFRelease_00D50188(formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#if DEBUG
inline static void ReceiptValidation_CheckReceiptSignature06C(ReceiptValidation_CheckingContext *ctx) {
    BIO *bio_p7 = NULL;
    PKCS7 *pkcs7 = NULL;
    STACK_OF(X509) *certificates = NULL;
    X509 *certificate = NULL;
    int count, index1;
    unsigned int index2;
    ASN1_OBJECT *oid = NULL;
    char *str1;
    char *str2;
    char *str3;
    char *str4;
    char *str5;
    int verify, status;
    BIO *bio_apple = NULL;
    X509 *apple = NULL;
    X509_STORE *store = NULL;
    volatile int code = 25; code -= 4; code *= 8; code += 5; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    bio_p7 = ReceiptValidation_BIO_new_011C008D(ReceiptValidation_BIO_s_mem_011C01E6());
    ReceiptValidation_BIO_write_011C021B(bio_p7, (void *) ReceiptValidation_YKAWXJHTMVXT_00A600DB((CFDataRef) ctx->receipt_data), (int) ReceiptValidation_XVPZIBJOLJRF_01470136((CFDataRef) ctx->receipt_data));
    pkcs7 = ReceiptValidation_d2i_PKCS7_bio_011C0015(bio_p7, NULL);
    if (!pkcs7) {
        ReceiptValidation_exit_00F90173(code);
        ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    if (!PKCS7_type_is_signed(pkcs7)) {
        ReceiptValidation_exit_00F90173(code);
        ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    if (!PKCS7_type_is_data(pkcs7->d.sign->contents)) {
        ReceiptValidation_exit_00F90173(code);
        ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_0029009B();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ctx->ca_data) {
        bio_apple = ReceiptValidation_BIO_new_011C008D(ReceiptValidation_BIO_s_mem_011C01E6());
        ReceiptValidation_BIO_write_011C021B(bio_apple, (void *) ReceiptValidation_YKAWXJHTMVXT_00A600DB((CFDataRef) ctx->ca_data), (int) ReceiptValidation_XVPZIBJOLJRF_01470136((CFDataRef) ctx->ca_data));
        apple = ReceiptValidation_d2i_X509_bio_00260212(bio_apple, NULL);
        if (!apple) {
            ReceiptValidation_exit_00F90173(code);
            goto ReceiptValidation_CheckReceiptSignature06C_bail;
        }
        store = ReceiptValidation_X509_STORE_new_00290177();
        ReceiptValidation_X509_STORE_add_cert_0026007F(store, apple);
        // Check that the PKCS7_verify function is not tampered with
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        verify = ReceiptValidation_PKCS7_verify_011C00D6(pkcs7, NULL, store, NULL, NULL, 0) * 2378;
        if (verify != 2378) {
            ReceiptValidation_exit_00F90173(code);
            goto ReceiptValidation_CheckReceiptSignature06C_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    verify = 0;
    certificates = pkcs7->d.sign->cert;
    count = ReceiptValidation_sk_num_0029000A((const _STACK *) certificates);
    for(index1 = 0; index1 < count; index1++) {
        certificate = (X509 *) ReceiptValidation_sk_value_011C0131((const _STACK *) certificates, index1);
        char common_name[569];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        // Retrieve the common name
        status = ReceiptValidation_X509_NAME_get_text_by_NID_011C0070(certificate->cert_info->subject, NID_commonName, common_name, 569);
        if (status <= 0) {
            ReceiptValidation_exit_00F90173(code);
            goto ReceiptValidation_CheckReceiptSignature06C_bail;
        }
        volatile unsigned int digest_length = 13; digest_length -= 7; digest_length *= 3; digest_length += 2; 
        char str2_[569];
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[511]), str2_, 142, 16);
        str2 = str2_;
        const EVP_MD *digester = ReceiptValidation_EVP_get_digestbyname_002600BB(str2);
        unsigned char digest[EVP_MAX_MD_SIZE];
        unsigned int len = 0;
        // Check that the X509_digest function is not tampered with
        status = ReceiptValidation_X509_digest_002600B3(NULL, NULL, digest, &len) * 2378;
        if (status == 2378 || len > 0) {
            ReceiptValidation_exit_00F90173(code);
            goto ReceiptValidation_CheckReceiptSignature06C_bail;
        }
        status = ReceiptValidation_X509_digest_002600B3(certificate, digester, digest, &len) * 2378;
        if (status != 2378 || len != digest_length) {
            ReceiptValidation_exit_00F90173(code);
            goto ReceiptValidation_CheckReceiptSignature06C_bail;
        }
        char fingerprint[569];
        volatile unsigned int increment = 1; increment -= 1; increment *= 4; increment += 2; 
        for(index2 = 0; index2 < digest_length; index2++) {
            snprintf(&fingerprint[index2 * increment], increment + 1, "%02x", digest[index2]);
        }
        char str3_[569];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[51]), str3_, 57, 49);
        str3 = str3_;
        // Check the common name and the fingerprint
        char str1_[569];
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[16]), str1_, 56, 16);
        str1 = str1_;
        volatile size_t num = 2; num -= 1; num *= 8; num += 5; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[432])(common_name, str1, num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[432])(fingerprint, str3, digest_length * increment - 1) == 0) {
            verify = 2378;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (certificate == NULL || verify != 2378) {
        ReceiptValidation_exit_00F90173(code);
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char str4_[569];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[308]), str4_, 118, 34);
    str4 = str4_;
    oid = ReceiptValidation_OBJ_txt2obj_00290161(str4, 0);
    verify = ReceiptValidation_X509_get_ext_by_OBJ_00290193(certificate, oid, 0);
    if (verify >= 0) {
        ReceiptValidation_exit_00F90173(code);
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    ReceiptValidation_ASN1_OBJECT_free_00290114(oid);
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char str5_[569];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[308]), str5_, 118, 34);
    str5 = str5_;
    certificates = ReceiptValidation_PKCS7_get0_signers_011C0043(pkcs7, NULL, 0);
    count = ReceiptValidation_sk_num_0029000A((const _STACK *) certificates);
    for(index1 = 0; index1 < count; index1++) {
        certificate = (X509 *) ReceiptValidation_sk_value_011C0131((const _STACK *) certificates, index1);
        oid = ReceiptValidation_OBJ_txt2obj_00290161(str5, 0);
        verify = ReceiptValidation_X509_get_ext_by_OBJ_00290193(certificate, oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_00290114(oid);
        break;
    }
    if (certificate == NULL || verify < 0) {
        ReceiptValidation_exit_00F90173(code);
        goto ReceiptValidation_CheckReceiptSignature06C_bail;
    }
    // Global variables computation
    // From 115 to 300
    ReceiptValidation_IJWCVSFUONND -= 40; ReceiptValidation_IJWCVSFUONND *= 4; 
    // Set to 267
    ReceiptValidation_YKAWXJHTMVXT = 267;
    // From 377 to 475
    ReceiptValidation_LVYZKPYDFEKB -= 219; ReceiptValidation_LVYZKPYDFEKB *= 3; ReceiptValidation_LVYZKPYDFEKB += 1; 
ReceiptValidation_CheckReceiptSignature06C_bail:
    if (bio_p7) ReceiptValidation_BIO_free_00290176(bio_p7);
    if (pkcs7) ReceiptValidation_PKCS7_free_002901DD(pkcs7);
    if (certificates) sk_X509_free (certificates);
    if (apple) ReceiptValidation_X509_free_002600D2(apple);
    if (bio_apple) ReceiptValidation_BIO_free_00290176(bio_apple);
    if (store) ReceiptValidation_X509_STORE_free_011C00DD(store);
}
#else
#define ReceiptValidation_CheckReceiptSignature06C(ctx) { \
    BIO *bio_p7 = NULL; \
    PKCS7 *pkcs7 = NULL; \
    STACK_OF(X509) *certificates = NULL; \
    X509 *certificate = NULL; \
    int count, index1; \
    unsigned int index2; \
    ASN1_OBJECT *oid = NULL; \
    char *str1; \
    char *str2; \
    char *str3; \
    char *str4; \
    char *str5; \
    int verify, status; \
    BIO *bio_apple = NULL; \
    X509 *apple = NULL; \
    X509_STORE *store = NULL; \
    volatile int code = 25; code -= 4; code *= 8; code += 5;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    bio_p7 = ReceiptValidation_BIO_new_011C008D(ReceiptValidation_BIO_s_mem_011C01E6()); \
    ReceiptValidation_BIO_write_011C021B(bio_p7, (void *) ReceiptValidation_YKAWXJHTMVXT_00A600DB((CFDataRef) ctx->receipt_data), (int) ReceiptValidation_XVPZIBJOLJRF_01470136((CFDataRef) ctx->receipt_data)); \
    pkcs7 = ReceiptValidation_d2i_PKCS7_bio_011C0015(bio_p7, NULL); \
    if (!pkcs7) { \
        ReceiptValidation_exit_00F90173(code); \
        ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    if (!PKCS7_type_is_signed(pkcs7)) { \
        ReceiptValidation_exit_00F90173(code); \
        ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    if (!PKCS7_type_is_data(pkcs7->d.sign->contents)) { \
        ReceiptValidation_exit_00F90173(code); \
        ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_0029009B(); \
    if (ctx->ca_data) { \
        bio_apple = ReceiptValidation_BIO_new_011C008D(ReceiptValidation_BIO_s_mem_011C01E6()); \
        ReceiptValidation_BIO_write_011C021B(bio_apple, (void *) ReceiptValidation_YKAWXJHTMVXT_00A600DB((CFDataRef) ctx->ca_data), (int) ReceiptValidation_XVPZIBJOLJRF_01470136((CFDataRef) ctx->ca_data)); \
        apple = ReceiptValidation_d2i_X509_bio_00260212(bio_apple, NULL); \
        if (!apple) { \
            ReceiptValidation_exit_00F90173(code); \
            goto ReceiptValidation_CheckReceiptSignature06C_bail; \
        } \
        store = ReceiptValidation_X509_STORE_new_00290177(); \
        ReceiptValidation_X509_STORE_add_cert_0026007F(store, apple); \
        verify = ReceiptValidation_PKCS7_verify_011C00D6(pkcs7, NULL, store, NULL, NULL, 0) * 2378; \
        if (verify != 2378) { \
            ReceiptValidation_exit_00F90173(code); \
            goto ReceiptValidation_CheckReceiptSignature06C_bail; \
        } \
    } \
    verify = 0; \
    certificates = pkcs7->d.sign->cert; \
    count = ReceiptValidation_sk_num_0029000A((const _STACK *) certificates); \
    for(index1 = 0; index1 < count; index1++) { \
        certificate = (X509 *) ReceiptValidation_sk_value_011C0131((const _STACK *) certificates, index1); \
        char common_name[569]; \
        status = ReceiptValidation_X509_NAME_get_text_by_NID_011C0070(certificate->cert_info->subject, NID_commonName, common_name, 569); \
        if (status <= 0) { \
            ReceiptValidation_exit_00F90173(code); \
            goto ReceiptValidation_CheckReceiptSignature06C_bail; \
        } \
        volatile unsigned int digest_length = 13; digest_length -= 7; digest_length *= 3; digest_length += 2;  \
        char str2_[569]; \
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[511]), str2_, 142, 16); \
        str2 = str2_; \
        const EVP_MD *digester = ReceiptValidation_EVP_get_digestbyname_002600BB(str2); \
        unsigned char digest[EVP_MAX_MD_SIZE]; \
        unsigned int len = 0; \
        status = ReceiptValidation_X509_digest_002600B3(NULL, NULL, digest, &len) * 2378; \
        if (status == 2378 || len > 0) { \
            ReceiptValidation_exit_00F90173(code); \
            goto ReceiptValidation_CheckReceiptSignature06C_bail; \
        } \
        status = ReceiptValidation_X509_digest_002600B3(certificate, digester, digest, &len) * 2378; \
        if (status != 2378 || len != digest_length) { \
            ReceiptValidation_exit_00F90173(code); \
            goto ReceiptValidation_CheckReceiptSignature06C_bail; \
        } \
        char fingerprint[569]; \
        volatile unsigned int increment = 1; increment -= 1; increment *= 4; increment += 2;  \
        for(index2 = 0; index2 < digest_length; index2++) { \
            snprintf(&fingerprint[index2 * increment], increment + 1, "%02x", digest[index2]); \
        } \
        char str3_[569]; \
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[51]), str3_, 57, 49); \
        str3 = str3_; \
        char str1_[569]; \
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[16]), str1_, 56, 16); \
        str1 = str1_; \
        volatile size_t num = 2; num -= 1; num *= 8; num += 5;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[432])(common_name, str1, num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[432])(fingerprint, str3, digest_length * increment - 1) == 0) { \
            verify = 2378; \
            break; \
        } \
    } \
    if (certificate == NULL || verify != 2378) { \
        ReceiptValidation_exit_00F90173(code); \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    char str4_[569]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[308]), str4_, 118, 34); \
    str4 = str4_; \
    oid = ReceiptValidation_OBJ_txt2obj_00290161(str4, 0); \
    verify = ReceiptValidation_X509_get_ext_by_OBJ_00290193(certificate, oid, 0); \
    if (verify >= 0) { \
        ReceiptValidation_exit_00F90173(code); \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    ReceiptValidation_ASN1_OBJECT_free_00290114(oid); \
    char str5_[569]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[308]), str5_, 118, 34); \
    str5 = str5_; \
    certificates = ReceiptValidation_PKCS7_get0_signers_011C0043(pkcs7, NULL, 0); \
    count = ReceiptValidation_sk_num_0029000A((const _STACK *) certificates); \
    for(index1 = 0; index1 < count; index1++) { \
        certificate = (X509 *) ReceiptValidation_sk_value_011C0131((const _STACK *) certificates, index1); \
        oid = ReceiptValidation_OBJ_txt2obj_00290161(str5, 0); \
        verify = ReceiptValidation_X509_get_ext_by_OBJ_00290193(certificate, oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_00290114(oid); \
        break; \
    } \
    if (certificate == NULL || verify < 0) { \
        ReceiptValidation_exit_00F90173(code); \
        goto ReceiptValidation_CheckReceiptSignature06C_bail; \
    } \
    ReceiptValidation_IJWCVSFUONND -= 40; ReceiptValidation_IJWCVSFUONND *= 4;  \
    ReceiptValidation_YKAWXJHTMVXT = 267; \
    ReceiptValidation_LVYZKPYDFEKB -= 219; ReceiptValidation_LVYZKPYDFEKB *= 3; ReceiptValidation_LVYZKPYDFEKB += 1;  \
ReceiptValidation_CheckReceiptSignature06C_bail: \
    if (bio_p7) ReceiptValidation_BIO_free_00290176(bio_p7); \
    if (pkcs7) ReceiptValidation_PKCS7_free_002901DD(pkcs7); \
    if (certificates) sk_X509_free (certificates); \
    if (apple) ReceiptValidation_X509_free_002600D2(apple); \
    if (bio_apple) ReceiptValidation_BIO_free_00290176(bio_apple); \
    if (store) ReceiptValidation_X509_STORE_free_011C00DD(store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#if DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    volatile int code = 135; code -= 78; code *= 3; code += 2; 
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[252]), 122, 18);
    CFNumberRef key = ReceiptValidation_LVYZKPYDFEKB_00A601DB(NULL, kCFNumberIntType, &value);
    CFStringRef str2 = (CFStringRef) ReceiptValidation_IJWCVSFUONND_00D5012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00D50220(key);
    if (ReceiptValidation_YKAWXJHTMVXT_0147010B(str1, str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_00F00173(code);
        // Dead code
        ReceiptValidation_CFRelease_00D50220(key);
        ReceiptValidation_CFRelease_00D50220(str1);
        ReceiptValidation_CFRelease_00D50220(key);
        ReceiptValidation_CFRelease_00D50220(str1);
    }
    // Global variables computation
    // From 310 to 479
    ReceiptValidation_XVPZIBJOLJRF -= 151; ReceiptValidation_XVPZIBJOLJRF *= 3; ReceiptValidation_XVPZIBJOLJRF += 2; 
    // From 479 to 416
    ReceiptValidation_PNPLYCHEESST += 353; ReceiptValidation_PNPLYCHEESST /= 2; 
    // From 529 to 300
    ReceiptValidation_UTDAXUMGRGHQ += 371; ReceiptValidation_UTDAXUMGRGHQ /= 3; 
    ReceiptValidation_CFRelease_00D50220(str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    volatile int code = 135; code -= 78; code *= 3; code += 2;  \
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[252]), 122, 18); \
    CFNumberRef key = ReceiptValidation_LVYZKPYDFEKB_00A601DB(NULL, kCFNumberIntType, &value); \
    CFStringRef str2 = (CFStringRef) ReceiptValidation_IJWCVSFUONND_00D5012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00D50220(key); \
    if (ReceiptValidation_YKAWXJHTMVXT_0147010B(str1, str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_00F00173(code); \
        ReceiptValidation_CFRelease_00D50220(key); \
        ReceiptValidation_CFRelease_00D50220(str1); \
        ReceiptValidation_CFRelease_00D50220(key); \
        ReceiptValidation_CFRelease_00D50220(str1); \
    } \
    ReceiptValidation_XVPZIBJOLJRF -= 151; ReceiptValidation_XVPZIBJOLJRF *= 3; ReceiptValidation_XVPZIBJOLJRF += 2;  \
    ReceiptValidation_PNPLYCHEESST += 353; ReceiptValidation_PNPLYCHEESST /= 2;  \
    ReceiptValidation_UTDAXUMGRGHQ += 371; ReceiptValidation_UTDAXUMGRGHQ /= 3;  \
    ReceiptValidation_CFRelease_00D50220(str1); \
}
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16);
    volatile int code = 33; code -= 9; code *= 7; code += 5; 
    CFNumberRef key = ReceiptValidation_XVPZIBJOLJRF_00D501DF(NULL, kCFNumberIntType, &value);
    CFStringRef str2 = (CFStringRef) ReceiptValidation_UTDAXUMGRGHQ_00D5012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00D50220(key);
    if (ReceiptValidation_PNPLYCHEESST_014701A0(str1, str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding()));
        ReceiptValidation_exit_019E0004(code);
        // Dead code
        ReceiptValidation_CFRelease_00D50220(key);
        ReceiptValidation_CFRelease_00D50220(str1);
        ReceiptValidation_CFRelease_00D50220(key);
        ReceiptValidation_CFRelease_00D50220(str1);
    }
    // Global variables computation
    // Set to 93
    ReceiptValidation_XVPZIBJOLJRF = 93;
    // Set to 421
    ReceiptValidation_IJWCVSFUONND = 421;
    // From 267 to 300
    ReceiptValidation_YKAWXJHTMVXT -= 167; ReceiptValidation_YKAWXJHTMVXT *= 3; 
    // From 475 to 12
    ReceiptValidation_LVYZKPYDFEKB += 17; ReceiptValidation_LVYZKPYDFEKB /= 41; 
    // Set to 83
    ReceiptValidation_XWDBOORDJTCP = 83;
    // From 416 to 347
    ReceiptValidation_PNPLYCHEESST += 278; ReceiptValidation_PNPLYCHEESST /= 2; 
    // From 93 to 479
    ReceiptValidation_VIQMZYLVBGUH -= 25; ReceiptValidation_VIQMZYLVBGUH *= 7; ReceiptValidation_VIQMZYLVBGUH += 3; 
    // From 300 to 109
    ReceiptValidation_UTDAXUMGRGHQ += 136; ReceiptValidation_UTDAXUMGRGHQ /= 4; 
    ReceiptValidation_CFRelease_00D50220(str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16); \
    volatile int code = 33; code -= 9; code *= 7; code += 5;  \
    CFNumberRef key = ReceiptValidation_XVPZIBJOLJRF_00D501DF(NULL, kCFNumberIntType, &value); \
    CFStringRef str2 = (CFStringRef) ReceiptValidation_UTDAXUMGRGHQ_00D5012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00D50220(key); \
    if (ReceiptValidation_PNPLYCHEESST_014701A0(str1, str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding())); \
        ReceiptValidation_exit_019E0004(code); \
        ReceiptValidation_CFRelease_00D50220(key); \
        ReceiptValidation_CFRelease_00D50220(str1); \
        ReceiptValidation_CFRelease_00D50220(key); \
        ReceiptValidation_CFRelease_00D50220(str1); \
    } \
    ReceiptValidation_XVPZIBJOLJRF = 93; \
    ReceiptValidation_IJWCVSFUONND = 421; \
    ReceiptValidation_YKAWXJHTMVXT -= 167; ReceiptValidation_YKAWXJHTMVXT *= 3;  \
    ReceiptValidation_LVYZKPYDFEKB += 17; ReceiptValidation_LVYZKPYDFEKB /= 41;  \
    ReceiptValidation_XWDBOORDJTCP = 83; \
    ReceiptValidation_PNPLYCHEESST += 278; ReceiptValidation_PNPLYCHEESST /= 2;  \
    ReceiptValidation_VIQMZYLVBGUH -= 25; ReceiptValidation_VIQMZYLVBGUH *= 7; ReceiptValidation_VIQMZYLVBGUH += 3;  \
    ReceiptValidation_UTDAXUMGRGHQ += 136; ReceiptValidation_UTDAXUMGRGHQ /= 4;  \
    ReceiptValidation_CFRelease_00D50220(str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#if DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16);
    CFNumberRef key = ReceiptValidation_XVPZIBJOLJRF_00D501DF(NULL, kCFNumberIntType, &value);
    CFStringRef str2 = (CFStringRef) ReceiptValidation_UTDAXUMGRGHQ_00D5012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00A60188(key);
    if (ReceiptValidation_PNPLYCHEESST_014701A0(str1, str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // Set to 93
    ReceiptValidation_XVPZIBJOLJRF = 93;
    // Set to 421
    ReceiptValidation_IJWCVSFUONND = 421;
    // From 267 to 300
    ReceiptValidation_YKAWXJHTMVXT -= 167; ReceiptValidation_YKAWXJHTMVXT *= 3; 
    // From 475 to 12
    ReceiptValidation_LVYZKPYDFEKB += 17; ReceiptValidation_LVYZKPYDFEKB /= 41; 
    // Set to 83
    ReceiptValidation_XWDBOORDJTCP = 83;
    // From 416 to 347
    ReceiptValidation_PNPLYCHEESST += 278; ReceiptValidation_PNPLYCHEESST /= 2; 
    // From 93 to 479
    ReceiptValidation_VIQMZYLVBGUH -= 25; ReceiptValidation_VIQMZYLVBGUH *= 7; ReceiptValidation_VIQMZYLVBGUH += 3; 
    // From 300 to 109
    ReceiptValidation_UTDAXUMGRGHQ += 136; ReceiptValidation_UTDAXUMGRGHQ /= 4; 
    ReceiptValidation_CFRelease_00A60188(str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[344]), 220, 16); \
    CFNumberRef key = ReceiptValidation_XVPZIBJOLJRF_00D501DF(NULL, kCFNumberIntType, &value); \
    CFStringRef str2 = (CFStringRef) ReceiptValidation_UTDAXUMGRGHQ_00D5012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00A60188(key); \
    if (ReceiptValidation_PNPLYCHEESST_014701A0(str1, str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_XVPZIBJOLJRF = 93; \
    ReceiptValidation_IJWCVSFUONND = 421; \
    ReceiptValidation_YKAWXJHTMVXT -= 167; ReceiptValidation_YKAWXJHTMVXT *= 3;  \
    ReceiptValidation_LVYZKPYDFEKB += 17; ReceiptValidation_LVYZKPYDFEKB /= 41;  \
    ReceiptValidation_XWDBOORDJTCP = 83; \
    ReceiptValidation_PNPLYCHEESST += 278; ReceiptValidation_PNPLYCHEESST /= 2;  \
    ReceiptValidation_VIQMZYLVBGUH -= 25; ReceiptValidation_VIQMZYLVBGUH *= 7; ReceiptValidation_VIQMZYLVBGUH += 3;  \
    ReceiptValidation_UTDAXUMGRGHQ += 136; ReceiptValidation_UTDAXUMGRGHQ /= 4;  \
    ReceiptValidation_CFRelease_00A60188(str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#if DEBUG
inline static void ReceiptValidation_CheckReceiptHash08E(ReceiptValidation_CheckingContext *ctx) {
    CFDataRef data1, data2, data3;
    CFMutableDataRef data4;
    unsigned char digest[569];
    volatile int counter = 19; counter -= 13; counter *= 3; counter += 2; 
    ReceiptValidation_ReceiptAttributeType value;
    CFNumberRef key;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value);
    data1 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00A60220(key);
    value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value);
    data2 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00A60220(key);
    value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value);
    data3 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key);
    ReceiptValidation_CFRelease_00A60220(key);
    data4 = ReceiptValidation_XVPZIBJOLJRF_00A6005D(NULL, 0);
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B((CFDataRef) ctx->guid_data), ReceiptValidation_CFDataGetLength_00D500D4((CFDataRef) ctx->guid_data));
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B(data1), ReceiptValidation_CFDataGetLength_00D500D4(data1));
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B(data2), ReceiptValidation_CFDataGetLength_00D500D4(data2));
    ReceiptValidation_SHA1_002601F4(ReceiptValidation_PNPLYCHEESST_0147015B(data4), (CC_LONG) ReceiptValidation_CFDataGetLength_00D500D4(data4), digest);
    SHA_CTX hashctx2;
    ReceiptValidation_SHA1_Init_011C011B(&hashctx2);
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B((CFDataRef) ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_00D500D4((CFDataRef) ctx->guid_data));
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B(data1), (size_t) ReceiptValidation_CFDataGetLength_00D500D4(data1));
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B(data2), (size_t) ReceiptValidation_CFDataGetLength_00D500D4(data2));
    ReceiptValidation_SHA1_Final_011C0098(digest, &hashctx2);
    volatile int code = 124; code -= 67; code *= 3; code += 2; 
    const unsigned char *ptr1 = digest;
    const unsigned char *ptr2 = ReceiptValidation_PNPLYCHEESST_0147015B(data3);
    while(--counter >= 0) {
        if ((*ptr1++) != (*ptr2++)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_00A60220(data4);
            ReceiptValidation_exit_019E0173(code);
            // Dead code
            ReceiptValidation_CFRelease_00A60220(data1);
            ReceiptValidation_CFRelease_00A60220(data2);
            ReceiptValidation_CFRelease_00A60220(data4);
            goto ReceiptValidation_CheckReceiptHash08E_bail;
        }
    }
    // Global variables computation
    // From 109 to 476
    ReceiptValidation_UTDAXUMGRGHQ -= 30; ReceiptValidation_UTDAXUMGRGHQ *= 6; ReceiptValidation_UTDAXUMGRGHQ += 2; 
ReceiptValidation_CheckReceiptHash08E_bail:
    ReceiptValidation_CFRelease_00A60220(data4);
}
#else
#define ReceiptValidation_CheckReceiptHash08E(ctx) { \
    CFDataRef data1, data2, data3; \
    CFMutableDataRef data4; \
    unsigned char digest[569]; \
    volatile int counter = 19; counter -= 13; counter *= 3; counter += 2;  \
    ReceiptValidation_ReceiptAttributeType value; \
    CFNumberRef key; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value); \
    data1 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00A60220(key); \
    value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value); \
    data2 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00A60220(key); \
    value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    key = ReceiptValidation_VIQMZYLVBGUH_00A601DF(NULL, kCFNumberIntType, &value); \
    data3 = (CFDataRef) ReceiptValidation_YKAWXJHTMVXT_00A6012C((CFDictionaryRef) ctx->receipt_dict, key); \
    ReceiptValidation_CFRelease_00A60220(key); \
    data4 = ReceiptValidation_XVPZIBJOLJRF_00A6005D(NULL, 0); \
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B((CFDataRef) ctx->guid_data), ReceiptValidation_CFDataGetLength_00D500D4((CFDataRef) ctx->guid_data)); \
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B(data1), ReceiptValidation_CFDataGetLength_00D500D4(data1)); \
    ReceiptValidation_CFDataAppendBytes_014701FA(data4, ReceiptValidation_PNPLYCHEESST_0147015B(data2), ReceiptValidation_CFDataGetLength_00D500D4(data2)); \
    ReceiptValidation_SHA1_002601F4(ReceiptValidation_PNPLYCHEESST_0147015B(data4), (CC_LONG) ReceiptValidation_CFDataGetLength_00D500D4(data4), digest); \
    SHA_CTX hashctx2; \
    ReceiptValidation_SHA1_Init_011C011B(&hashctx2); \
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B((CFDataRef) ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_00D500D4((CFDataRef) ctx->guid_data)); \
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B(data1), (size_t) ReceiptValidation_CFDataGetLength_00D500D4(data1)); \
    ReceiptValidation_SHA1_Update_00260146(&hashctx2, (const void *) ReceiptValidation_PNPLYCHEESST_0147015B(data2), (size_t) ReceiptValidation_CFDataGetLength_00D500D4(data2)); \
    ReceiptValidation_SHA1_Final_011C0098(digest, &hashctx2); \
    volatile int code = 124; code -= 67; code *= 3; code += 2;  \
    const unsigned char *ptr1 = digest; \
    const unsigned char *ptr2 = ReceiptValidation_PNPLYCHEESST_0147015B(data3); \
    while(--counter >= 0) { \
        if ((*ptr1++) != (*ptr2++)) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
            ReceiptValidation_CFRelease_00A60220(data4); \
            ReceiptValidation_exit_019E0173(code); \
            ReceiptValidation_CFRelease_00A60220(data1); \
            ReceiptValidation_CFRelease_00A60220(data2); \
            ReceiptValidation_CFRelease_00A60220(data4); \
            goto ReceiptValidation_CheckReceiptHash08E_bail; \
        } \
    } \
    ReceiptValidation_UTDAXUMGRGHQ -= 30; ReceiptValidation_UTDAXUMGRGHQ *= 6; ReceiptValidation_UTDAXUMGRGHQ += 2;  \
ReceiptValidation_CheckReceiptHash08E_bail: \
    ReceiptValidation_CFRelease_00A60220(data4); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 476);
#endif

inline static void ReceiptValidation_AppRunner0A6(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_UTDAXUMGRGHQ))(ctx->argc, ctx->argv);
#else
    ReceiptValidation_UTDAXUMGRGHQ_01E401DC(ctx->argc, ctx->argv);
#endif
}


// CodeBlock CleanUp
#if DEBUG
inline static void ReceiptValidation_CleanUp0AA(ReceiptValidation_CheckingContext *ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    CFTypeRef references[4] = { ctx->receipt_data, ctx->guid_data, ctx->receipt_dict, ctx->ca_data };
    if (references[0]) {
        ReceiptValidation_CFRelease_00D50188(references[0]);
        references[0] = NULL;
    }
    if (references[1]) {
        ReceiptValidation_CFRelease_00D50188(references[1]);
        references[1] = NULL;
    }
    if (references[2]) {
        ReceiptValidation_CFRelease_00D50188(references[2]);
        references[2] = NULL;
    }
    if (references[3]) {
        ReceiptValidation_CFRelease_00D50188(references[3]);
        references[3] = NULL;
    }
}
#else
#define ReceiptValidation_CleanUp0AA(ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    CFTypeRef references[4] = { ctx->receipt_data, ctx->guid_data, ctx->receipt_dict, ctx->ca_data }; \
    if (references[0]) { \
        ReceiptValidation_CFRelease_00D50188(references[0]); \
        references[0] = NULL; \
    } \
    if (references[1]) { \
        ReceiptValidation_CFRelease_00D50188(references[1]); \
        references[1] = NULL; \
    } \
    if (references[2]) { \
        ReceiptValidation_CFRelease_00D50188(references[2]); \
        references[2] = NULL; \
    } \
    if (references[3]) { \
        ReceiptValidation_CFRelease_00D50188(references[3]); \
        references[3] = NULL; \
    } \
}
#endif




// CodeBlock EntryPoint
#if DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 };
    // Arguments for running the application
    ctx1.argc = _argc;
    ctx1.argv = (const char **) _argv;
    // Initial value
    int index = 2305;
    // While loop
    while(index != 3558) {
        switch(index) {
        case 1706:
            ReceiptValidation_CheckBundleVersion060((&ctx1));
            index -= 753; index *= 3; index += 1; 
            break;
        case 2993:
            ReceiptValidation_GetGUID046((&ctx1));
            index -= 1888; index *= 3; index += 2; 
            break;
        case 2860:
            ReceiptValidation_GetReceiptInformation064((&ctx1));
            index += 2198; index /= 2; 
            break;
        case 676:
            ReceiptValidation_CheckBundleIdentifier05B((&ctx1));
            index -= 250; index *= 4; index += 2; 
            break;
        case 27:
            ReceiptValidation_CheckReceiptHash08E((&ctx1));
            index -= 1; index *= 67; index += 26; 
            break;
        case 72:
            ReceiptValidation_CheckReceiptVersion080((&ctx1));
            index += 36; index /= 4; 
            break;
        case 1768:
            ReceiptValidation_AppRunner0A6((&ctx1));
            index += 786; index /= 2; 
            break;
        case 1277:
            ReceiptValidation_CleanUp0AA((&ctx1));
            index -= 388; index *= 4; index += 2; 
            break;
        case 2529:
            ReceiptValidation_CheckReceiptSignature06C((&ctx1));
            index += 1831; index /= 4; 
            break;
        case 1090:
            ReceiptValidation_CheckReceiptIdentifier07F((&ctx1));
            index += 134; index /= 17; 
            break;
        case 2305:
            ReceiptValidation_GetMainBundle016((&ctx1));
            index += 879; index /= 2; 
            break;
        case 1592:
            ReceiptValidation_LoadReceipt01A((&ctx1));
            index -= 595; index *= 3; index += 2; 
            break;
        case 3317:
            ReceiptValidation_GetRootCA051((&ctx1));
            index += 739; index /= 6; 
            break;
        }
    }
    return 0;
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 }; \
    ctx1.argc = _argc; \
    ctx1.argv = (const char **) _argv; \
    int index = 2305; \
    while(index != 3558) { \
        switch(index) { \
        case 1706: \
            ReceiptValidation_CheckBundleVersion060((&ctx1)); \
            index -= 753; index *= 3; index += 1;  \
            break; \
        case 2993: \
            ReceiptValidation_GetGUID046((&ctx1)); \
            index -= 1888; index *= 3; index += 2;  \
            break; \
        case 2860: \
            ReceiptValidation_GetReceiptInformation064((&ctx1)); \
            index += 2198; index /= 2;  \
            break; \
        case 676: \
            ReceiptValidation_CheckBundleIdentifier05B((&ctx1)); \
            index -= 250; index *= 4; index += 2;  \
            break; \
        case 27: \
            ReceiptValidation_CheckReceiptHash08E((&ctx1)); \
            index -= 1; index *= 67; index += 26;  \
            break; \
        case 72: \
            ReceiptValidation_CheckReceiptVersion080((&ctx1)); \
            index += 36; index /= 4;  \
            break; \
        case 1768: \
            ReceiptValidation_AppRunner0A6((&ctx1)); \
            index += 786; index /= 2;  \
            break; \
        case 1277: \
            ReceiptValidation_CleanUp0AA((&ctx1)); \
            index -= 388; index *= 4; index += 2;  \
            break; \
        case 2529: \
            ReceiptValidation_CheckReceiptSignature06C((&ctx1)); \
            index += 1831; index /= 4;  \
            break; \
        case 1090: \
            ReceiptValidation_CheckReceiptIdentifier07F((&ctx1)); \
            index += 134; index /= 17;  \
            break; \
        case 2305: \
            ReceiptValidation_GetMainBundle016((&ctx1)); \
            index += 879; index /= 2;  \
            break; \
        case 1592: \
            ReceiptValidation_LoadReceipt01A((&ctx1)); \
            index -= 595; index *= 3; index += 2;  \
            break; \
        case 3317: \
            ReceiptValidation_GetRootCA051((&ctx1)); \
            index += 739; index /= 6;  \
            break; \
        } \
    } \
    0; \
})
#endif




// C++ epilogue
#ifdef __cplusplus
}
#endif

