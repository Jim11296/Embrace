//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : 
// CFBundleShortVersionString : 2.0
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif

// Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
// Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>

// Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>

// Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>

// Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
    #ifndef _STACK
        #define _STACK STACK
    #endif
#endif

// Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>

// Some compilers provide the capability to test if certain attributes are available.
// This macro provides a compatibility path for other compilers.
#ifndef __has_feature
    #define __has_feature(X)    0
#endif

// Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
    #if __has_feature(objc_arc)
        #define __SAFE_CAST(T,X)    (__bridge T) X
        #define __RETURN_RETAINED   __attribute__((ns_returns_retained))
    #else
        #define __SAFE_CAST(T,X)    (T) X
        #define __RETURN_RETAINED
    #endif
#endif

// Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
    #define RECEIGEN_QUIET_DEBUG 0
#endif

// Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
        #define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
    #if __OBJC__
        #define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
    #else
        #define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
    #endif
#else
        #define __ReceiptValidation_RECEIPT_LOG(...)
#endif

// Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
    #define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif

// Function pointer for string decryption
typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);

// Keys for each receipt attribute
typedef enum _ReceiptValidation_ReceiptAttributeType {

    // Bundle identifier
    ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
    // Application version
    ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
    // Opaque value
    ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
    // Hash value
    ReceiptValidation_ReceiptAttributeTypeHash = 5,
    // In-app purchase receipt
    ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
    // Original Application Version
    ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
    // Receipt Expiration Date
    ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
    // Quantity
    ReceiptValidation_InAppAttributeTypeQuantity = 1701,
    // Product identifier
    ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
    // Transaction identifier
    ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
    // Purchase date
    ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
    // Original transaction identifier
    ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
    // Original purchase date
    ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
    // Subscription Expiration Date
    ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
    // Web Order Line Item ID
    ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
    // Cancellation Date
    ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,

    // Storage key base value
    ReceiptValidation_StoreNone = 35,
    // Bundle identifier
    ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
    ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
    // Application version
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
    ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
    // Opaque value
    ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
    // Hash value
    ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
    // In-app purchase receipt
    ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
    // Original Application Version
    ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 2),
    // Receipt Expiration Date
    ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 2),
    // Quantity
    ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 2),
    // Product identifier
    ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 2),
    // Transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 2),
    // Purchase date
    ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 2),
    // Original transaction identifier
    ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 2),
    // Original purchase date
    ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 2),
    // Subscription Expiration Date
    ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 2),
    // Web Order Line Item ID
    ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 2),
    // Cancellation Date
    ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 2)

} ReceiptValidation_ReceiptAttributeType;

// Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]

// Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]

// Shared context for receipt validation
typedef struct _ReceiptValidation_CheckingContext {
    CFTypeRef dummy0003;
    CFTypeRef ca_data;
    CFTypeRef dummy0004;
    CFTypeRef guid_data;
    CFTypeRef dummy0008;
    CFTypeRef dummy0001;
    CFTypeRef dummy000B;
    CFTypeRef main_bundle;
    long argc;
    CFTypeRef dummy0002;
    const char ** argv;
    CFTypeRef dummy0006;
    CFTypeRef receipt_data;
    CFTypeRef dummy000A;
    CFTypeRef dummy0009;
    CFTypeRef dummy000C;
    CFTypeRef dummy0007;
    CFTypeRef dummy0000;
    CFTypeRef dummy0005;
    CFTypeRef receipt_dict;
} ReceiptValidation_CheckingContext;

// Shared context for receipt parsing
typedef struct _ReceiptValidation_ParsingContext {
    CFTypeRef dummy0003;
    CFTypeRef dummy0004;
    const unsigned char * ptr;
    CFTypeRef dummy0001;
    struct _ReceiptValidation_ParsingContext * parent;
    CFTypeRef dummy0008;
    CFTypeRef dummy0006;
    CFTypeRef dictionary;
    CFTypeRef dummy0005;
    CFTypeRef dummy0007;
    CFTypeRef dummy0002;
    CFTypeRef dummy0000;
    const unsigned char * end;
} ReceiptValidation_ParsingContext;

// Symbol ASN1_get_object
typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
// Symbol ASN1_INTEGER_free
typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
// Symbol ASN1_INTEGER_get
typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
// Symbol ASN1_OBJECT_free
typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
// Symbol BIO_free
typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
// Symbol BIO_new
typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
// Symbol BIO_s_mem
typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
// Symbol BIO_write
typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
// Symbol c2i_ASN1_INTEGER
typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
// Symbol CC_SHA1
typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
// Symbol CC_SHA1_Final
typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
// Symbol CC_SHA1_Init
typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
// Symbol CC_SHA1_Update
typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
// Symbol CFAbsoluteTimeGetCurrent
typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
// Symbol CFArrayAppendValue
typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
// Symbol CFArrayCreateMutable
typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
// Symbol CFArrayGetCount
typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
// Symbol CFArrayGetValueAtIndex
typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
// Symbol CFBundleCopyBundleURL
typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
// Symbol CFBundleGetIdentifier
typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
// Symbol CFBundleGetMainBundle
typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
// Symbol CFBundleGetValueForInfoDictionaryKey
typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
// Symbol CFBundleUnloadExecutable
typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
// Symbol CFDataAppendBytes
typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreate
typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
// Symbol CFDataCreateMutable
typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
// Symbol CFDataGetBytePtr
typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
// Symbol CFDataGetLength
typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
// Symbol CFDateCompare
typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFDateCreate
typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
// Symbol CFDateFormatterCreate
typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
// Symbol CFDateFormatterCreateDateFromString
typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
// Symbol CFDateFormatterSetFormat
typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
// Symbol CFDateFormatterSetProperty
typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
// Symbol CFDictionaryAddValue
typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFDictionaryCreateMutable
typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
// Symbol CFDictionaryGetValue
typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
// Symbol CFDictionarySetValue
typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
// Symbol CFEqual
typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
// Symbol CFNumberCreate
typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
// Symbol CFReadStreamClose
typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
// Symbol CFReadStreamCreateWithFile
typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
// Symbol CFReadStreamOpen
typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
// Symbol CFReadStreamRead
typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
// Symbol CFRelease
typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
// Symbol CFStringCompare
typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
// Symbol CFStringCreateWithBytes
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
// Symbol CFStringCreateWithCString
typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
// Symbol CFStringGetFileSystemRepresentation
typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
// Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
// Symbol CFURLCreateCopyAppendingPathComponent
typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
// Symbol CFURLCreateFromFileSystemRepresentation
typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
// Symbol CFURLCreateWithFileSystemPathRelativeToBase
typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
// Symbol d2i_PKCS7_bio
typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
// Symbol d2i_X509_bio
typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
// Symbol dlopen
typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
// Symbol dlsym
typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
// Symbol EVP_DigestFinal
typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
// Symbol EVP_DigestInit
typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
// Symbol EVP_DigestUpdate
typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
// Symbol EVP_get_digestbyname
typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
// Symbol EVP_MD_CTX_init
typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
// Symbol exit
typedef void (*__ReceiptValidation_exit)(int status);
// Symbol glob
typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
// Symbol glob_b
typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
// Symbol globfree
typedef void (*__ReceiptValidation_globfree)(glob_t *);
// Symbol IOBSDNameMatching
typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
// Symbol IOIteratorNext
typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
// Symbol IOMasterPort
typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
// Symbol IOObjectRelease
typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
// Symbol IORegistryEntryCreateCFProperty
typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
// Symbol IORegistryEntryGetParentEntry
typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
// Symbol IOServiceGetMatchingServices
typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
// Symbol kCFBundleIdentifierKey
typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
// Symbol kCFDateFormatterTimeZone
typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
// Symbol kCFTypeArrayCallBacks
typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
// Symbol kCFTypeDictionaryKeyCallBacks
typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
// Symbol kCFTypeDictionaryValueCallBacks
typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
// Symbol kSecClass
typedef const CFTypeRef *__ReceiptValidation_kSecClass;
// Symbol kSecClassCertificate
typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
// Symbol kSecMatchLimit
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
// Symbol kSecMatchLimitAll
typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
// Symbol kSecMatchSearchList
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
// Symbol kSecMatchSubjectContains
typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
// Symbol kSecReturnRef
typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
// Symbol longjmp
typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
// Symbol NSApplicationMain
typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
// Symbol OBJ_txt2obj
typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
// Symbol objc_getClass
typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
// Symbol objc_msgSend
typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
// Symbol OpenSSL_add_all_digests
typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
// Symbol PKCS7_free
typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
// Symbol PKCS7_get0_signers
typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
// Symbol PKCS7_verify
typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
// Symbol SecCertificateCopyData
typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
// Symbol SecItemCopyMatching
typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
// Symbol SecKeychainOpen
typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
// Symbol SecKeychainSearchCopyNext
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
// Symbol SecKeychainSearchCreateFromAttributes
typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
// Symbol sel_registerName
typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
// Symbol setjmp
typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
// Symbol SHA1
typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
// Symbol SHA1_Final
typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
// Symbol SHA1_Init
typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
// Symbol SHA1_Update
typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
// Symbol sk_free
typedef void (*__ReceiptValidation_sk_free)(_STACK *);
// Symbol sk_num
typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
// Symbol sk_value
typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
// Symbol strlen
typedef size_t (*__ReceiptValidation_strlen)(const char *);
// Symbol strncmp
typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
// Symbol X509_digest
typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
// Symbol X509_free
typedef void (*__ReceiptValidation_X509_free)(X509 *a);
// Symbol X509_get_ext_by_OBJ
typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
// Symbol X509_NAME_get_text_by_NID
typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
// Symbol X509_STORE_add_cert
typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
// Symbol X509_STORE_free
typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
// Symbol X509_STORE_new
typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();


// Table for storing strings
static const char *ReceiptValidation_Strings[608] = {
    // "IOServiceGetMatchingServices" / M(Xor3) / S(174) / L(28)
    "\x9a\x9c\x80\xb6\xa1\xa5\xba\xb0\xb6\x94\xb6\xa7\x9e\xb2\xa7\xb0\xbb\xba\xbd\xb4\x80\xb6\xa1\xa5\xba\xb0\xb6\xa0\xd3\x20\x4f\xc9\xc5\xf2\x81\x0e\x22",
    // "" / M(None) / S(0) / L(0)
    "\x72\xdd\x22\x34\x87\x10\x7f\xd5\x44\x6f\xcf\x3a\x03\x7e\x07\x6e\xb7\x31\xa5\xc6\xec\x4e\x9b\x6c\x8c\xe2\xc1\x13\xd8\x1c\xcc\xb2",
    // "CFDataCreate" / M(Xor3) / S(233) / L(12)
    "\xba\xbf\xbd\x98\x8d\x98\xba\x8b\x9c\x98\x8d\x9c\xf9\x40\x32\x84",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(203) / L(59)
    "\x39\x3e\x35\x3e\x4a\x35\x3a\x4d\x35\x39\x39\x35\x3d\x4c\x35\x3a\x36\x35\x3c\x4e\x35\x3f\x37\x35\x49\x49\x35\x3a\x37\x35\x4b\x3e\x35\x3b\x4e\x35\x4a\x3d\x35\x3d\x3b\x35\x3a\x3d\x35\x4b\x3e\x35\x36\x37\x35\x4b\x49\x35\x39\x4c\x35\x39\x3f\x0f\x0b\x8b\xe3\xb5\x3d\x31\x90\xdc",
    // "BIO_write" / M(Xor1) / S(21) / L(9)
    "\x57\x5c\x5a\x4a\x62\x67\x7c\x61\x70\x15\x23\x28\xa0\xdb\xb2\x45",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x75\x41\xb3\xb1\x8b\x1c\x7d\x35\xc9\x87\x89\x77\xc9\x7c\xb7\x1a\xe7\x5a\x47\xb0\xb8\xf7\xb7\x2d\x51\xaf\xc4\xe7\x8e\x61\xed",
    // "EVP_DigestUpdate" / M(Xor2) / S(181) / L(16)
    "\xe1\xf2\xf4\xfb\xe0\xcd\xc3\xc1\xd7\xd0\xf1\xd4\xc0\xc5\xd0\xc1\xa4",
    // "CFRelease" / M(Xor4) / S(252) / L(9)
    "\x83\x86\x92\xa5\xac\xa5\xa1\xb3\xa5\xc0\x29\xb1\xc2\x92\x73\xf3",
    // "CFDictionaryGetValue" / M(Xor2) / S(28) / L(20)
    "\x4a\x4f\x4d\x60\x6a\x7d\x60\x66\x67\x68\x7b\x70\x4e\x6c\x7d\x5f\x68\x65\x7c\x6c\x09",
    // "" / M(None) / S(0) / L(0)
    "\x88\x9f\x9a\x83\xde\xf8\x0b\xa9\x69\x9b\x8b\x83\x90\x25\x37\x58\xe2\x1e\x28\x24\xa2\x1c\x7f\xa8\x1f\x24\x8d\x4f\x77\x5c\x5a\xa0",
    // "strlen" / M(Xor4) / S(59) / L(6)
    "\xc3\xc4\xc2\xdc\xd5\xde\xb0\xca\x0d\xff\xd9\x56\x5d\x61\xa8\x83",
    // "CFStringGetFileSystemRepresentation" / M(Rot) / S(133) / L(35)
    "\xc8\xcb\xd8\xf9\xf7\xee\xf3\xec\xcc\xea\xf9\xcb\xee\xf1\xea\xd8\xfe\xf8\xf9\xea\xf2\xd7\xea\xf5\xf7\xea\xf8\xea\xf3\xf9\xe6\xf9\xee\xf4\xf3\x85",
    // "" / M(None) / S(0) / L(0)
    "\x2d\x52\x49\x1c\x8c\x02\x68\x90\xfd\xca\x68\x93\xfa\x80\x0d\xdb\xf3\x4b\xb5\xa9\xc1\xbc\x31\xb5\xef\x99\x00\x3a\x53\xe8\x2a\x57",
    // "%02x" / M(Xor2) / S(47) / L(4)
    "\x1a\x0f\x0d\x47\x3f\x1a\xad\x94\xab\xd1\x6e\x4a\x6f\xf9\x77\x5c",
    // "" / M(None) / S(0) / L(0)
    "\x86\x9e\x7a\xe3\x52\x0a\x55\x12\x54\xdb\x59\xfe\x77\xc9\x1f\x9e\xa9\xeb\x65\x82\xdd\x05\xae\xa2\x83\xe8\x92\xe4\xe1\x0a\xad\x88",
    // "CFArrayAppendValue" / M(Xor2) / S(129) / L(18)
    "\xd1\xd4\xd3\xe0\xe0\xf3\xeb\xd3\xe2\xe2\xf7\xfc\xf6\xc4\xf3\xfe\xe7\xf7\x92",
    // "SecCertificateCopyData" / M(Xor4) / S(229) / L(22)
    "\xc0\xf6\xf0\xd0\xf6\xe1\xe7\xfa\xf5\xfa\xf0\xf2\xe7\xf6\xd0\xfc\xe3\xea\xd7\xf2\xe7\xf2\x93",
    // "" / M(None) / S(0) / L(0)
    "\x60\x02\xa5\xd9\x15\x8e\x7d\xe2\xdb\xd1\x09\x26\xf7\x39\x73\x5e\x8c\x22\x77\x3f\x6d\x2b\x69\xbd\xaf\xce\xd1\xa6\x37\x40\xc9\xd8",
    // "CFArrayAppendValue" / M(Xor4) / S(24) / L(18)
    "\x8b\x8e\x89\xba\xba\xa9\xb1\x89\xb8\xb8\xad\xa6\xac\x9e\xa9\xa4\xbd\xad\xc8",
    // "" / M(None) / S(0) / L(0)
    "\xc3\x17\x20\x4b\x82\x5e\x8d\x14\x1b\x21\x94\xfa\x44\x42\xc1\xb4\x95\xea\x4e\xdd\xda\x06\x1a\x6e\xcb\xc4\x71\x1c\xf8\x78\x70\x12",
    // "NSApplicationMain" / M(Xor1) / S(188) / L(17)
    "\xf2\xef\xfd\xcc\xcc\xd0\xd5\xdf\xdd\xc8\xd5\xd3\xd2\xf1\xdd\xd5\xd2\xbc",
    // "/usr/lib/libSystem.dylib" / M(Rot) / S(103) / L(24)
    "\x96\xdc\xda\xd9\x96\xd3\xd0\xc9\x96\xd3\xd0\xc9\xba\xe0\xda\xdb\xcc\xd4\x95\xcb\xe0\xd3\xd0\xc9\x67\x56\x1c\xd8\xc7\xbe\x8b\xdd\xde",
    // "" / M(None) / S(0) / L(0)
    "\x3a\xfd\xdb\x9a\xbd\x02\xec\xb2\xa6\x39\xe0\x20\x3b\x4a\xef\x40\xf6\x8a\xec\x5f\xf7\x8b\x9e\xc5\x33\xe8\x25\xdb\x67\xae\x0f\x76",
    // "CFDataGetLength" / M(Xor3) / S(131) / L(15)
    "\xd0\xd5\xd7\xf2\xe7\xf2\xd4\xf6\xe7\xdf\xf6\xfd\xf4\xe7\xfb\x93",
    // "strncmp" / M(Xor2) / S(136) / L(7)
    "\xeb\xec\xea\xf6\xfb\xf5\xe8\x98\xd6\x52\x81\x71\xde\x19\x95\x20",
    // "CFStringCreateWithBytes" / M(Xor1) / S(220) / L(23)
    "\x9f\x9a\x8f\xa8\xae\xb5\xb2\xbb\x9f\xae\xb9\xbd\xa8\xb9\x8b\xb5\xa8\xb4\x9e\xa5\xa8\xb9\xaf\xdc\x28\x58\xbe\xb2\x69\x1f\x85\x38",
    // "kCFTypeArrayCallBacks" / M(Xor1) / S(220) / L(21)
    "\xb7\x9f\x9a\x88\xa5\xac\xb9\x9d\xae\xae\xbd\xa5\x9f\xbd\xb0\xb0\x9e\xbd\xbf\xb7\xaf\xdc",
    // "objc_msgSend" / M(Xor3) / S(221) / L(12)
    "\x82\x8f\x87\x8e\xb2\x80\x9e\x8a\xbe\x88\x83\x89\xed\xf9\x27\x6c",
    // "en0" / M(Xor1) / S(138) / L(3)
    "\xef\xe4\xba\x8a\xf6\x5f\x2a\xc0\x7b\xea\x39\x33\x9e\xf0\x49\x0d",
    // "IOMasterPort" / M(Xor4) / S(116) / L(12)
    "\x09\x0f\x0d\x21\x33\x34\x25\x32\x10\x2f\x32\x34\x40\x88\x8b\x3e",
    // "EVP_DigestUpdate" / M(Xor1) / S(115) / L(16)
    "\x36\x25\x23\x2c\x37\x1a\x14\x16\x00\x07\x26\x03\x17\x12\x07\x16\x73",
    // "CFBundleVersion" / M(Xor4) / S(176) / L(15)
    "\x43\x46\x42\x75\x6e\x64\x6c\x65\x56\x65\x72\x73\x69\x6f\x6e\x00",
    // "OBJ_txt2obj" / M(Xor2) / S(1) / L(11)
    "\x5e\x53\x5b\x4e\x65\x69\x65\x23\x7e\x73\x7b\x11\x94\x9a\x3d\x8e",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(236) / L(31)
    "\xa7\x8f\x8a\x98\xb5\xbc\xa9\x88\xa5\xaf\xb8\xa5\xa3\xa2\xad\xbe\xb5\x9a\xad\xa0\xb9\xa9\x8f\xad\xa0\xa0\x8e\xad\xaf\xa7\xbf\xcc",
    // "PKCS7_verify" / M(Rot) / S(243) / L(12)
    "\x43\x3e\x36\x46\x2a\x52\x69\x58\x65\x5c\x59\x6c\xf3\xbc\x31\xb5",
    // "strlen" / M(Rot) / S(111) / L(6)
    "\xe2\xe3\xe1\xdb\xd4\xdd\x6f\xe8\x35\x64\x9e\x1b\x4f\xb3\x43\x23",
    // "EVP_get_digestbyname" / M(Xor2) / S(77) / L(20)
    "\x1d\x0e\x08\x07\x3f\x3d\x2c\x07\x3c\x31\x3f\x3d\x2b\x2c\x3a\x21\x36\x39\x35\x3d\x58",
    // "_MASReceipt/receipt" / M(Xor3) / S(190) / L(19)
    "\x8d\x9f\x93\x81\x80\xb7\xb1\xb7\xbb\xa2\xa6\xfd\xa0\xb7\xb1\xb7\xbb\xa2\xa6\xd2",
    // "CFRelease" / M(Xor2) / S(226) / L(9)
    "\xb1\xb4\xa0\x97\x9e\x97\x93\x81\x97\xf2\x26\xf5\xcb\x56\x1c\x75",
    // "IORegistryEntryGetParentEntry" / M(Xor2) / S(109) / L(29)
    "\x02\x04\x19\x2e\x2c\x22\x38\x3f\x39\x32\x0e\x25\x3f\x39\x32\x0c\x2e\x3f\x1b\x2a\x39\x2e\x25\x3f\x0e\x25\x3f\x39\x32\x4b\xa5\xf3\x72\xc8\xec\x68\x66\x0c",
    // "SecItemCopyMatching" / M(Xor1) / S(110) / L(19)
    "\x3d\x0b\x0d\x27\x1a\x0b\x03\x2d\x01\x1e\x17\x23\x0f\x1a\x0d\x06\x07\x00\x09\x6e",
    // "CFBundleGetIdentifier" / M(Xor1) / S(88) / L(21)
    "\x1b\x1e\x1a\x2d\x36\x3c\x34\x3d\x1f\x3d\x2c\x11\x3c\x3d\x36\x2c\x31\x3e\x31\x3d\x2a\x58",
    // "" / M(None) / S(0) / L(0)
    "\xbd\xdf\x75\xa9\x42\xd7\xb0\x2f\xa5\x94\xa3\x19\xdb\x89\xb7\x24\xeb\x99\x41\x01\xe9\xf0\x64\xf3\x3f\x96\x46\x9a\xaf\xe1\xa0\xb0",
    // "CFBundleGetMainBundle" / M(Xor4) / S(144) / L(21)
    "\x23\x26\x22\x15\x0e\x04\x0c\x05\x27\x05\x14\x2d\x01\x09\x0e\x22\x15\x0e\x04\x0c\x05\x60",
    // "globfree" / M(Xor3) / S(136) / L(8)
    "\xff\xf4\xf7\xfa\xfe\xea\xfd\xfd\x98\x7a\xfa\x63\x71\xfe\xf8\x93",
    // "Apple Root CA" / M(Xor4) / S(122) / L(13)
    "\xe1\xd0\xd0\xcc\xc5\x80\xf2\xcf\xcf\xd4\x80\xe3\xe1\xa0\x5b\xb8",
    // "" / M(None) / S(0) / L(0)
    "\xab\x76\xfd\x1c\xe2\x39\xc4\xb4\x4f\xaa\xe9\xbe\x12\xe5\xf5\x0f\xdc\x48\x28\xeb\xd2\x8c\xa1\x13\x00\x8f\x18\x31\x61\x02\xed\xc7",
    // "CFArrayGetValueAtIndex" / M(Xor3) / S(155) / L(22)
    "\xf1\xf4\xf3\xc0\xc0\xd3\xcb\xf5\xd7\xc6\xe4\xd3\xde\xc7\xd7\xf3\xc6\xfb\xdc\xd6\xd7\xca\xb2",
    // "IOObjectRelease" / M(Rot) / S(38) / L(15)
    "\x6f\x75\x75\x88\x90\x8b\x89\x9a\x78\x8b\x92\x8b\x87\x99\x8b\x26",
    // "CC_SHA1_Update" / M(Xor4) / S(38) / L(14)
    "\x23\x23\x3f\x33\x28\x21\x51\x3f\x35\x10\x04\x01\x14\x05\x60\xea",
    // "kSecClassCertificate" / M(Rot) / S(165) / L(20)
    "\x10\xf8\x0a\x08\xe8\x11\x06\x18\x18\xe8\x0a\x17\x19\x0e\x0b\x0e\x08\x06\x19\x0a\xa5",
    // "EVP_DigestFinal" / M(Xor3) / S(89) / L(15)
    "\x2c\x3f\x39\x36\x2d\x00\x0e\x0c\x1a\x1d\x2f\x00\x07\x08\x05\x69",
    // "Contents/_MASReceipt/receipt" / M(Xor4) / S(73) / L(28)
    "\xce\xe2\xe3\xf9\xe8\xe3\xf9\xfe\xa2\xd2\xc0\xcc\xde\xdf\xe8\xee\xe8\xe4\xfd\xf9\xa2\xff\xe8\xee\xe8\xe4\xfd\xf9\x8d\x73\x0f\xf2\x5b\x46\x14\x81\x5e",
    // "CFStringCreateWithBytes" / M(Rot) / S(220) / L(23)
    "\x1f\x22\x2f\x50\x4e\x45\x4a\x43\x1f\x4e\x41\x3d\x50\x41\x33\x45\x50\x44\x1e\x55\x50\x41\x4f\xdc\xa8\xb9\xd5\x56\xe4\xba\x64\xda",
    // "SHA1_Update" / M(Xor4) / S(194) / L(11)
    "\x73\x68\x61\x11\x7f\x75\x50\x44\x41\x54\x45\x20\x43\xd6\xe6\x77",
    // "." / M(Xor1) / S(236) / L(1)
    "\xc2\xec\xb5\xdb\x7e\xa4\x2b\x85\x2a\x97\x16\xb4\x00\x8d\xda\xfb",
    // "CFNumberCreate" / M(Xor2) / S(212) / L(14)
    "\x87\x82\x8a\xb1\xa9\xa6\xa1\xb6\x87\xb6\xa1\xa5\xb0\xa1\xc4\x88",
    // "" / M(None) / S(0) / L(0)
    "\xd6\xe5\xaf\xed\xde\x4f\x8d\x23\xb3\x6e\x8d\x4e\xdc\x29\x57\x90\x9c\x78\x69\x5b\x9f\xe2\x8a\xa4\x4b\x46\x0f\x25\x83\x13\x3e\x8e",
    // "OpenSSL_add_all_digests" / M(Xor1) / S(99) / L(23)
    "\x2c\x13\x06\x0d\x30\x30\x2f\x3c\x02\x07\x07\x3c\x02\x0f\x0f\x3c\x07\x0a\x04\x06\x10\x17\x10\x63\xa4\x04\x4a\xf0\x13\x36\x70\x5b",
    // "CFDateFormatterCreate" / M(Xor1) / S(14) / L(21)
    "\x4d\x48\x4a\x6f\x7a\x6b\x48\x61\x7c\x63\x6f\x7a\x7a\x6b\x7c\x4d\x7c\x6b\x6f\x7a\x6b\x0e",
    // "ASN1_INTEGER_get" / M(Xor4) / S(54) / L(16)
    "\xd7\xc5\xd8\xa7\xc9\xdf\xd8\xc2\xd3\xd1\xd3\xc4\xc9\xf1\xf3\xe2\x96",
    // "IOServiceGetMatchingServices" / M(Xor4) / S(165) / L(28)
    "\x90\x96\x8a\xbc\xab\xaf\xb0\xba\xbc\x9e\xbc\xad\x94\xb8\xad\xba\xb1\xb0\xb7\xbe\x8a\xbc\xab\xaf\xb0\xba\xbc\xaa\xd9\x21\x11\xe6\x7c\x8f\x96\x48\x9a",
    // "Contents" / M(Xor4) / S(241) / L(8)
    "\x53\x7f\x7e\x64\x75\x7e\x64\x63\x10\xae\x56\x74\x77\xee\xdf\xb8",
    // "" / M(None) / S(0) / L(0)
    "\x3c\x96\x85\x9b\xe2\xbf\xa2\xe9\xcd\xbc\x3a\xb6\x7d\x3f\xe1\xe8\xd5\x36\x44\x8d\x3e\xd3\xa1\xd2\x51\xb8\x22\x84\xe6\xe3\xfa\x8e",
    // "setjmp" / M(Xor2) / S(101) / L(6)
    "\x06\x10\x01\x1f\x18\x05\x75\xeb\xd2\x8c\xa1\x13\x00\x8f\x18\x31",
    // "%02X:" / M(Xor2) / S(197) / L(5)
    "\xf0\xe5\xe7\x8d\xef\xd5\xdd\x29\x25\x5e\x13\x26\xa8\xa9\xd3\x26",
    // "/usr/lib/libSystem.dylib" / M(Rot) / S(35) / L(24)
    "\x52\x98\x96\x95\x52\x8f\x8c\x85\x52\x8f\x8c\x85\x76\x9c\x96\x97\x88\x90\x51\x87\x9c\x8f\x8c\x85\x23\xca\x6f\x59\xea\x1e\x3d\x5e\x29",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(203) / L(31)
    "\xa2\xa4\xb9\x8e\x8c\x82\x98\x9f\x99\x92\xae\x85\x9f\x99\x92\xa8\x99\x8e\x8a\x9f\x8e\xa8\xad\xbb\x99\x84\x9b\x8e\x99\x9f\x92\xeb",
    // "kSecMatchLimitAll" / M(Xor4) / S(188) / L(17)
    "\x53\x6b\x5d\x5b\x75\x59\x4c\x5b\x50\x74\x51\x55\x51\x4c\x79\x54\x54\x38",
    // "SHA1_Update" / M(Xor2) / S(243) / L(11)
    "\xb0\xab\xa2\xd2\xbc\xb6\x93\x87\x82\x97\x86\xe3\xe0\x8f\x7f\x61",
    // "" / M(Xor2) / S(53) / L(0)
    "\x25\x72\x1c\x7f\x7c\x6e\xe8\xb9\x04\x85\x59\xab\xa1\x8d\x04\x57",
    // "" / M(None) / S(0) / L(0)
    "\xcb\xcf\x5b\xd2\xea\x87\x10\xea\xcd\xa3\x4a\x55\xca\xa8\x95\x6d\xe4\x38\x6f\x8f\x27\xb3\x7e\x58\x2f\x59\x76\x5e\x5a\x53\x6a\x5e",
    // "" / M(None) / S(0) / L(0)
    "\x0a\x34\x29\x3b\xab\x4f\x5b\xb4\xdd\x37\x7d\xa0\x79\xff\x3c\xaf\xec\x8f\x16\xca\x0d\xff\xd9\x56\x5d\x61\xa8\x83\x8c\x4a\x74\x0e",
    // "PKCS7_verify" / M(Rot) / S(140) / L(12)
    "\xdc\xd7\xcf\xdf\xc3\xeb\x02\xf1\xfe\xf5\xf2\x05\x8c\x95\x11\x55",
    // "" / M(None) / S(0) / L(0)
    "\x07\xfb\xee\x08\xbe\x1c\xb6\xa5\x16\xa3\x0c\x82\x7d\x53\x08\xeb\x3e\x89\x6a\x9d\x66\xe2\xaf\x68\xb3\x93\x44\x96\xf4\xe2\xd4\xa1",
    // "" / M(None) / S(0) / L(0)
    "\x17\xf5\xcf\x3e\x56\xb6\x06\x78\xde\xee\x98\x7c\x1d\x58\x8c\x32\xfd\x4d\xd3\xac\xbd\xba\x48\x5f\x82\x96\xe6\x2a\x73\x8e\x55\x04",
    // "" / M(None) / S(0) / L(0)
    "\xc8\xe4\xd4\xc1\xc9\x4c\x74\x8e\x57\xaf\xa7\xcb\x7a\x9f\xab\xee\xa9\x15\xeb\xcb\xd0\x7e\xee\x9b\x23\x76\x23\x3b\x68\xdd\x6d\x00",
    // "" / M(None) / S(0) / L(0)
    "\xc5\xaf\x8c\x1c\xb7\x0e\xf2\x05\xc3\x81\x9e\x00\x14\x43\xc3\xda\x59\x00\x82\x3c\x69\xc7\xfe\xc5\xa7\x45\xbc\x95\xed\xa9\x61\xc2",
    // "CFDateFormatterSetProperty" / M(Xor2) / S(203) / L(26)
    "\xab\xae\xac\x89\x9c\x8d\xae\x87\x9a\x85\x89\x9c\x9c\x8d\x9a\xbb\x8d\x9c\xb8\x9a\x87\x98\x8d\x9a\x9c\x91\xe8\x10\xf7\x78\x8e\x60\x9f\x06\xa6",
    // "SecCertificateCopyData" / M(Xor3) / S(254) / L(22)
    "\x46\x70\x76\x56\x70\x67\x61\x7c\x73\x7c\x76\x74\x61\x70\x56\x7a\x65\x6c\x51\x74\x61\x74\x15",
    // "dlsym" / M(Xor1) / S(46) / L(5)
    "\x4a\x42\x5d\x57\x43\x2e\x7f\x3e\xc9\x5a\x54\xb9\x50\x21\x5c\xf8",
    // "globfree" / M(Xor3) / S(127) / L(8)
    "\xe8\xe3\xe0\xed\xe9\xfd\xea\xea\x8f\x6c\x91\x85\x22\x0c\xa7\x69",
    // "PKCS7_free" / M(Xor3) / S(140) / L(10)
    "\xcc\xd7\xdf\xcf\xab\xc3\xfa\xee\xf9\xf9\x9c\x01\xf0\x19\xb9\x8b",
    // "objc_getClass" / M(Xor3) / S(97) / L(13)
    "\x1e\x13\x1b\x12\x2e\x16\x14\x05\x32\x1d\x10\x02\x02\x71\x19\xcd",
    // "" / M(None) / S(0) / L(0)
    "\x14\x4b\x7d\xb1\x22\x54\x93\x76\x40\x1f\xbe\x18\x37\x51\x1c\x9e\x6b\xc9\x72\x67\xbe\xeb\xd5\xa3\x33\x5a\xc4\xfb\xe6\x9d\x56\x67",
    // "" / M(None) / S(0) / L(0)
    "\xbc\x10\x3a\x65\x61\x5d\x4e\x18\x43\xa3\x8a\x49\xad\x15\x60\xa5\x7a\xfb\xe2\xa7\x47\x0c\xd1\xa8\xc1\x7d\x82\x75\x50\xc6\x57\xc6",
    // "sha1" / M(Xor1) / S(65) / L(4)
    "\x32\x29\x20\x70\x41\xc6\x3e\xd3\xa4\xbe\xe9\x36\xc3\xc1\x17\x81",
    // "ASN1_INTEGER_free" / M(Rot) / S(0) / L(17)
    "\x41\x53\x4e\x31\x5f\x49\x4e\x54\x45\x47\x45\x52\x5f\x66\x72\x65\x65\x00",
    // "CFDateFormatterSetProperty" / M(Xor4) / S(34) / L(26)
    "\xe5\xe0\xe2\xc7\xd2\xc3\xe0\xc9\xd4\xcb\xc7\xd2\xd2\xc3\xd4\xf5\xc3\xd2\xf6\xd4\xc9\xd6\xc3\xd4\xd2\xdf\xa6\xcb\x70\x14\x5a\x37\x39\xfd\xdc",
    // "CFDictionaryAddValue" / M(Xor3) / S(130) / L(20)
    "\xd4\xd1\xd3\xfe\xf4\xe3\xfe\xf8\xf9\xf6\xe5\xee\xd6\xf3\xf3\xc1\xf6\xfb\xe2\xf2\x97",
    // "X509_NAME_get_text_by_NID" / M(Xor3) / S(233) / L(25)
    "\x53\x3e\x3b\x32\x54\x45\x4a\x46\x4e\x54\x6c\x6e\x7f\x54\x7f\x6e\x73\x7f\x54\x69\x72\x54\x45\x42\x4f\x0b\x7b\x59\xaa\x75\x2f\x58\x77\xd9",
    // "start" / M(Xor3) / S(121) / L(5)
    "\xfa\xfd\xe8\xfb\xfd\x89\x2e\xda\x44\xe6\x46\x32\x85\xc8\xf5\x9f",
    // "" / M(None) / S(0) / L(0)
    "\xe5\xd6\x0f\x7d\xd3\xb7\x3e\x56\xcf\x90\xd1\x18\x9c\xbb\xb4\x0f\x85\xe2\x2a\xed\x89\xbe\x32\x5e\x09\x7c\x24\x18\x27\xc8\xae\x85",
    // "kSecReturnRef" / M(Xor4) / S(19) / L(13)
    "\x5b\x63\x55\x53\x62\x55\x44\x45\x42\x5e\x62\x55\x56\x30\x24\x7f",
    // "CFEqual" / M(Xor2) / S(0) / L(7)
    "\x53\x56\x55\x61\x65\x71\x7c\x10\xb9\xb4\x86\xf0\x42\xb1\x99\x89",
    // "kSecClass" / M(Xor2) / S(0) / L(9)
    "\x7b\x43\x75\x73\x53\x7c\x71\x63\x63\x10\x55\x98\x6c\x5b\xb1\x88",
    // "" / M(None) / S(0) / L(0)
    "\xa9\x50\xdf\x72\xb9\x70\x27\x33\x07\xaf\x99\x43\xd9\xe9\xf4\x02\x2b\x50\xb9\x77\x9a\x46\x1a\x0a\xf1\xfe\x85\x9f\xc2\x3b\x98\x4c",
    // "" / M(None) / S(0) / L(0)
    "\xb2\x34\xf1\xb8\xa1\x10\x7f\xa7\xbf\x1e\x2c\xce\xb1\xc6\x54\x41\x06\x17\x51\x16\xf4\x7d\x86\x35\xbe\xe2\xe9\x8d\xe5\x6e\x34\x97",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(72) / L(36)
    "\x2b\x2e\x2a\x1d\x06\x0c\x04\x0d\x2f\x0d\x1c\x3e\x09\x04\x1d\x0d\x2e\x07\x1a\x21\x06\x0e\x07\x2c\x01\x0b\x1c\x01\x07\x06\x09\x1a\x11\x23\x0d\x11\x68",
    // "kSecClass" / M(Xor4) / S(21) / L(9)
    "\x3b\x03\x35\x33\x13\x3c\x31\x23\x23\x50\x18\x70\xba\x83\xd2\xb4",
    // "c2i_ASN1_INTEGER" / M(Xor2) / S(172) / L(16)
    "\xde\x8f\xd4\xe2\xfc\xee\xf3\x8c\xe2\xf4\xf3\xe9\xf8\xfa\xf8\xef\xbd",
    // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(227) / L(35)
    "\xaf\xaa\xbf\x98\x9e\x85\x82\x8b\xab\x89\x98\xaa\x85\x80\x89\xbf\x95\x9f\x98\x89\x81\xbe\x89\x9c\x9e\x89\x9f\x89\x82\x98\x8d\x98\x85\x83\x82\xec",
    // "" / M(None) / S(0) / L(0)
    "\x35\xc3\xe0\xac\xba\x31\x83\x89\xe0\xc3\xac\xdc\xe1\xeb\xe2\xbd\x7b\xae\x38\x2e\x70\x98\x32\x94\x77\x95\x27\x46\x65\x2a\x1c\xe7",
    // "kSecMatchSearchList" / M(Rot) / S(30) / L(19)
    "\x89\x71\x83\x81\x6b\x7f\x92\x81\x86\x71\x83\x7f\x90\x81\x86\x6a\x87\x91\x92\x1e",
    // "IOMACAddress" / M(Xor3) / S(2) / L(12)
    "\x5b\x5d\x5f\x53\x51\x53\x76\x76\x60\x77\x61\x61\x12\x48\x5c\xae",
    // "CFNumberCreate" / M(Rot) / S(218) / L(14)
    "\x1d\x20\x28\x4f\x47\x3c\x3f\x4c\x1d\x4c\x3f\x3b\x4e\x3f\xda\x66",
    // "glob_b" / M(Rot) / S(188) / L(6)
    "\x23\x28\x2b\x1e\x1b\x1e\xbc\xef\xc3\xc6\x54\x16\x2f\x16\x8c\xaa",
    // "X509_STORE_add_cert" / M(Rot) / S(209) / L(19)
    "\x29\x06\x01\x0a\x30\x24\x25\x20\x23\x16\x30\x32\x35\x35\x30\x34\x36\x43\x45\xd1",
    // "CFDateCreate" / M(Xor1) / S(39) / L(12)
    "\x64\x61\x63\x46\x53\x42\x64\x55\x42\x46\x53\x42\x27\x21\xf7\xff",
    // "setjmp" / M(Xor1) / S(51) / L(6)
    "\x40\x56\x47\x59\x5e\x43\x33\x63\x49\x00\x9f\x1b\x42\xd5\x63\x09",
    // "" / M(None) / S(0) / L(0)
    "\x8d\xd7\xd0\x05\xd8\x6c\xfb\xed\x80\x13\xc3\x7c\x2c\x77\x91\x7e\x65\x64\xae\x0e\x27\x4f\x24\xf1\x1d\xf6\xc1\xd1\xa9\x88\xc0\xcb",
    // "IOMasterPort" / M(Xor2) / S(206) / L(12)
    "\x97\x91\x93\xbf\xad\xaa\xbb\xac\x8e\xb1\xac\xaa\xde\xc4\xce\xd1",
    // "CFBundleGetIdentifier" / M(Xor1) / S(91) / L(21)
    "\x18\x1d\x19\x2e\x35\x3f\x37\x3e\x1c\x3e\x2f\x12\x3f\x3e\x35\x2f\x32\x3d\x32\x3e\x29\x5b",
    // "CFArrayAppendValue" / M(Xor3) / S(31) / L(18)
    "\x71\x74\x73\x40\x40\x53\x4b\x73\x42\x42\x57\x5c\x56\x64\x53\x5e\x47\x57\x32",
    // "/usr/lib/libobjc.dylib" / M(Xor3) / S(144) / L(22)
    "\x88\xd2\xd4\xd5\x88\xcb\xce\xc5\x88\xcb\xce\xc5\xc8\xc5\xcd\xc4\x89\xc3\xde\xcb\xce\xc5\xa7",
    // "" / M(None) / S(0) / L(0)
    "\xa5\x02\x65\xb8\xc1\xd0\x58\xcd\x8d\x27\x51\x06\x82\x99\x3f\x4e\xfa\x87\x76\x35\x76\x84\xc3\xe1\x9c\x65\xcf\x05\xda\xee\x15\x7b",
    // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(137) / L(25)
    "\x9a\x85\x99\x85\x93\x9f\x9b\x85\x9a\x9a\x98\x9d\x98\x9e\x85\x9a\x9b\x9b\x85\x9d\x85\x9a\x9a\x85\x9a\xab\xd4\x1e\x1b\x53\xc1\xc7\x77\xdf",
    // "objc_msgSend" / M(Xor1) / S(16) / L(12)
    "\x7f\x72\x7a\x73\x4f\x7d\x63\x77\x43\x75\x7e\x74\x10\xf9\xa2\xb9",
    // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(91) / L(24)
    "\x3f\x3a\x3d\x1e\x0f\x13\x10\x09\x08\x19\x28\x15\x11\x19\x3b\x19\x08\x3f\x09\x0e\x0e\x19\x12\x08\x7c\xd8\x89\x10\xff\x06\x20\xea\x36",
    // "" / M(None) / S(0) / L(0)
    "\x64\x60\x72\x7c\x81\x7e\x96\x7a\x95\x2d\x18\x07\x27\x69\xb8\x7e\xd3\xc7\x3f\x3a\xfb\xcf\x1f\x74\x78\x02\x3a\x61\x82\x09\xe1\x26",
    // "EVP_DigestUpdate" / M(Xor1) / S(115) / L(16)
    "\x36\x25\x23\x2c\x37\x1a\x14\x16\x00\x07\x26\x03\x17\x12\x07\x16\x73",
    // "receipt" / M(Xor1) / S(126) / L(7)
    "\x0c\x1b\x1d\x1b\x17\x0e\x0a\x7e\xd5\x98\x55\xf8\xa4\x09\x20\x68",
    // "" / M(None) / S(0) / L(0)
    "\x89\xba\xd8\x16\xd3\x60\x3d\xe5\xdf\xe8\x5d\x30\xd6\x2f\xa0\xbd\xea\x0d\xbe\x16\xf4\x47\x24\xa0\xbb\x69\x86\x0e\x73\xce\x4d\x4a",
    // "" / M(None) / S(0) / L(0)
    "\xe8\xd8\x00\x39\xa7\x85\x45\xe8\x71\xe3\xfa\x46\xad\x52\xe1\xcb\xec\xec\xaa\x70\x78\x38\xa9\x1b\xa7\x80\x96\xc3\x3e\x7f\x2f\xdc",
    // "objc_getClass" / M(Xor2) / S(142) / L(13)
    "\xf1\xfc\xf4\xfd\xc1\xf9\xfb\xea\xdd\xf2\xff\xed\xed\x9e\x36\xf3",
    // "" / M(None) / S(0) / L(0)
    "\x22\x8b\x97\xf6\x98\xaf\x99\xb2\xe4\xeb\x75\xcc\x60\xbd\x87\xee\x38\x81\xd6\x06\x6e\x04\x3e\xb2\xdb\x1d\x65\x81\x64\xf7\x37\x58",
    // "IOIteratorNext" / M(Rot) / S(174) / L(14)
    "\xf7\xfd\xf7\x22\x13\x20\x0f\x22\x1d\x20\xfc\x13\x26\x22\xae\x12",
    // "RTLD_MAIN_ONLY" / M(Xor1) / S(132) / L(14)
    "\xd6\xd0\xc8\xc0\xdb\xc9\xc5\xcd\xca\xdb\xcb\xca\xc8\xdd\x84\x22",
    // "BIO_write" / M(Rot) / S(145) / L(9)
    "\xd3\xda\xe0\xf0\x08\x03\xfa\x05\xf6\x91\xde\x12\x27\x84\x6c\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x7e\x6e\xad\x4d\xe2\xe4\xd7\x8f\x2f\xfa\xe2\xed\xce\xf1\x91\x1c\x07\xd8\x82\xa6\x0b\x8b\xe3\xb5\x3d\x31\x90\xdc\x20\xce\xcd\xab",
    // "exit" / M(Xor4) / S(14) / L(4)
    "\x85\x98\x89\x94\xe0\xcc\x7b\x1f\x5c\xe1\x2b\x65\x69\x9e\xe8\xc6",
    // "CFDataGetBytePtr" / M(Xor3) / S(22) / L(16)
    "\x64\x61\x63\x46\x53\x46\x60\x42\x53\x65\x5e\x53\x42\x77\x53\x55\x27",
    // "ASN1_OBJECT_free" / M(Xor3) / S(198) / L(16)
    "\x96\x84\x99\xe6\x88\x98\x95\x9d\x92\x94\x83\x88\xb1\xa5\xb2\xb2\xd7",
    // "CFStringCreateWithCString" / M(Rot) / S(36) / L(25)
    "\x67\x6a\x77\x98\x96\x8d\x92\x8b\x67\x96\x89\x85\x98\x89\x7b\x8d\x98\x8c\x67\x77\x98\x96\x8d\x92\x8b\x24\x13\xe3\x2c\x42\xe3\x54\xa1\x68",
    // "CFDataGetLength" / M(Xor3) / S(111) / L(15)
    "\x3c\x39\x3b\x1e\x0b\x1e\x38\x1a\x0b\x33\x1a\x11\x18\x0b\x17\x7f",
    // "glob_b" / M(Xor1) / S(145) / L(6)
    "\xf6\xfd\xfe\xf3\xce\xf3\x91\xe8\xd2\xb2\x93\x1e\x5f\xc7\x2a\x56",
    // "PKCS7_get0_signers" / M(Xor4) / S(1) / L(18)
    "\x43\x58\x50\x40\x24\x4c\x74\x76\x67\x23\x4c\x60\x7a\x74\x7d\x76\x61\x60\x13",
    // "_MASReceipt/receipt" / M(Xor1) / S(2) / L(19)
    "\x5d\x4f\x43\x51\x50\x67\x61\x67\x6b\x72\x76\x2d\x70\x67\x61\x67\x6b\x72\x76\x02",
    // "CFReadStreamRead" / M(Xor2) / S(120) / L(16)
    "\x2a\x2f\x3b\x0c\x08\x0d\x3a\x1d\x1b\x0c\x08\x04\x3b\x0c\x08\x0d\x69",
    // "sk_num" / M(Rot) / S(173) / L(6)
    "\x20\x18\x0c\x1b\x22\x1a\xad\xf7\xe7\x47\x56\x3a\xa2\xda\x12\xcd",
    // "CFDateCreate" / M(Xor1) / S(8) / L(12)
    "\x4b\x4e\x4c\x69\x7c\x6d\x4b\x7a\x6d\x69\x7c\x6d\x08\xb5\x64\x82",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(62) / L(57)
    "\xaf\xd3\xf9\xf3\xf4\xe5\xed\xaf\xcc\xe9\xe2\xf2\xe1\xf2\xf9\xaf\xcb\xe5\xf9\xe3\xe8\xe1\xe9\xee\xf3\xaf\xd3\xf9\xf3\xf4\xe5\xed\xd2\xef\xef\xf4\xc3\xe5\xf2\xf4\xe9\xe6\xe9\xe3\xe1\xf4\xe5\xf3\xae\xeb\xe5\xf9\xe3\xe8\xe1\xe9\xee\x80\xbd\x3c\xf4\x0f\x79\x8b\x00\xb1",
    // "CFStringCreateWithCString" / M(Xor3) / S(81) / L(25)
    "\x30\x35\x20\x07\x01\x1a\x1d\x14\x30\x01\x16\x12\x07\x16\x24\x1a\x07\x1b\x30\x20\x07\x01\x1a\x1d\x14\x73\x59\x39\xab\x46\xaf\xcf\xaa\xf2",
    // "CFReadStreamCreateWithFile" / M(Xor4) / S(99) / L(26)
    "\xca\xcf\xdb\xec\xe8\xed\xda\xfd\xfb\xec\xe8\xe4\xca\xfb\xec\xe8\xfd\xec\xde\xe0\xfd\xe1\xcf\xe0\xe5\xec\x89\xbf\xb7\x7a\x52\x5e\x87\xbc\xce",
    // "" / M(None) / S(0) / L(0)
    "\x85\x7a\x50\xd7\x5e\x0e\x24\xa6\x3d\xb9\xd0\x06\xeb\xe9\xb3\xa4\x9a\xee\xd7\x74\x9f\x02\xec\x60\xcd\x37\xa9\x9c\xd2\xca\xef\x27",
    // "_MASReceipt" / M(Rot) / S(191) / L(11)
    "\x1e\x0c\x00\x12\x11\x24\x22\x24\x28\x2f\x33\xbf\x1d\xf6\xc1\xd1",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(37) / L(29)
    "\x4e\x66\x63\x71\x5c\x55\x40\x61\x4c\x46\x51\x4c\x4a\x4b\x44\x57\x5c\x6e\x40\x5c\x66\x44\x49\x49\x67\x44\x46\x4e\x56\x25\x0e\x7f\x98\xc9\x8e\x59\xc8\x1b",
    // "EVP_DigestFinal" / M(Xor1) / S(209) / L(15)
    "\x94\x87\x81\x8e\x95\xb8\xb6\xb4\xa2\xa5\x97\xb8\xbf\xb0\xbd\xd1",
    // "" / M(Xor2) / S(33) / L(0)
    "\x31\xc1\xed\xd4\x98\x48\x71\x68\x09\x5e\x02\x37\x5b\xe9\xa8\xf3",
    // "CFDateCreate" / M(Xor4) / S(34) / L(12)
    "\x63\x66\x64\x41\x54\x45\x63\x52\x45\x41\x54\x45\x20\xb3\x70\x4a",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(173) / L(39)
    "\xee\xeb\xf9\xc4\xc0\xc8\xf7\xc2\xc3\xc8\xee\xdf\xc8\xcc\xd9\xc8\xfa\xc4\xd9\xc5\xf9\xc4\xc0\xc8\xe4\xc3\xd9\xc8\xdf\xdb\xcc\xc1\xeb\xdf\xc2\xc0\xea\xe0\xf9\xad\x1f\x70\xf7\x11\x2f\xf2\x81\x3b",
    // "SHA1_Init" / M(Xor3) / S(139) / L(9)
    "\xc8\xd3\xda\xaa\xc4\xd2\xf5\xf2\xef\x9b\xd8\xd8\x46\x8d\x5b\x8c",
    // "" / M(None) / S(0) / L(0)
    "\x37\xec\x30\x08\xf2\x73\x61\x28\x18\xb3\xb3\x05\x1a\x38\xa1\x3e\x31\xf2\xae\x96\xf5\x2d\xc7\x00\xe4\x75\x3a\x93\x0e\xdc\xaa\x3c",
    // "IOMACAddress" / M(Xor2) / S(109) / L(12)
    "\x34\x32\x30\x3c\x3e\x3c\x19\x19\x0f\x18\x0e\x0e\x7d\x72\xb0\x11",
    // "/usr/lib/libobjc.dylib" / M(Xor4) / S(110) / L(22)
    "\xcd\x97\x91\x90\xcd\x8e\x8b\x80\xcd\x8e\x8b\x80\x8d\x80\x88\x81\xcc\x86\x9b\x8e\x8b\x80\xe2",
    // "EVP_get_digestbyname" / M(Xor4) / S(234) / L(20)
    "\x77\x64\x62\x6d\x55\x57\x46\x6d\x56\x5b\x55\x57\x41\x46\x50\x4b\x5c\x53\x5f\x57\x32",
    // "" / M(None) / S(0) / L(0)
    "\x0c\x25\x4e\xdf\x13\x4d\x61\xa2\xca\x08\xd8\xa9\x38\xa1\xd2\x94\xa5\xc2\xd3\xe7\xde\x57\xe2\x7c\x22\xc4\xcc\x8f\x84\xc3\xa2\x99",
    // "" / M(None) / S(0) / L(0)
    "\x3f\xb0\x69\x44\x90\xca\xd2\x53\xaa\x8b\xc8\xa7\x72\xbd\x93\x64\xea\x56\xbf\x11\x41\x6c\xe2\x0b\x14\xe1\xe4\x52\x75\xb7\x8d\x9a",
    // "CFArrayCreateMutable" / M(Xor2) / S(142) / L(20)
    "\xd8\xdd\xda\xe9\xe9\xfa\xe2\xd8\xe9\xfe\xfa\xef\xfe\xd6\xee\xef\xfa\xf9\xf7\xfe\x9b",
    // "BIO_free" / M(Rot) / S(25) / L(8)
    "\x5b\x62\x68\x78\x7f\x8b\x7e\x7e\x19\x4a\xcd\xb3\x9f\xbf\xcf\x2b",
    // "" / M(None) / S(0) / L(0)
    "\x96\x57\x8c\x0c\x0d\x18\x59\x6d\x3d\xc0\x5c\x81\x5d\x5a\x4a\x1c\xd7\x3b\x0e\xcb\xee\x19\xf5\xc5\x2e\x9b\x2e\x4e\xc4\xc7\x1c\xf5",
    // "CC_SHA1_Update" / M(Xor4) / S(83) / L(14)
    "\x73\x73\x6f\x63\x78\x71\x01\x6f\x65\x40\x54\x51\x44\x55\x30\x17",
    // "kCFDateFormatterTimeZone" / M(Xor1) / S(204) / L(24)
    "\xa7\x8f\x8a\x88\xad\xb8\xa9\x8a\xa3\xbe\xa1\xad\xb8\xb8\xa9\xbe\x98\xa5\xa1\xa9\x96\xa3\xa2\xa9\xcc\x34\xe8\xc4\x9f\x29\x10\xc3\x98",
    // "sk_num" / M(Xor1) / S(30) / L(6)
    "\x6d\x75\x41\x70\x6b\x73\x1e\x8f\x27\xb3\x7e\x58\x2f\x59\x76\x5e",
    // "" / M(None) / S(0) / L(0)
    "\xad\x04\x42\x93\xd0\xb8\xb8\x35\xb3\x9e\xe3\xa8\x57\x5e\xe1\x6b\x16\x98\xcd\x49\x8f\x88\x20\xe5\x1f\x97\x12\x3b\x39\x76\x6c\xb6",
    // "sk_value" / M(Xor2) / S(226) / L(8)
    "\x81\x99\xad\x84\x93\x9e\x87\x97\xf2\xca\xdd\x79\x25\x23\xd2\x8b",
    // "" / M(None) / S(0) / L(0)
    "\x0f\x55\x22\x56\xe9\xc6\x53\x51\xf3\x46\x7a\xba\xa0\x92\x1f\xb3\x3c\x58\x59\xb1\x16\x80\x08\xba\x4f\x56\x8a\x75\x78\x74\xab\xf1",
    // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(247) / L(35)
    "\xb4\xb1\xb3\x96\x83\x92\xb1\x98\x85\x9a\x96\x83\x83\x92\x85\xb4\x85\x92\x96\x83\x92\xb3\x96\x83\x92\xb1\x85\x98\x9a\xa4\x83\x85\x9e\x99\x90\xf7",
    // "" / M(None) / S(0) / L(0)
    "\x62\xb9\x4d\xda\xce\xfb\xef\xf9\x10\x25\x78\x32\x55\xd9\x87\xd9\x6e\x47\xca\xf9\xf7\x3f\x44\xec\xfc\x89\x4b\x7d\x25\x86\xf0\xe9",
    // "" / M(None) / S(0) / L(0)
    "\x9c\xe6\x60\xed\xfc\xeb\x93\xaf\x9d\xec\x38\x94\x76\x08\x39\xaa\xb0\x73\x0f\xf2\x5b\x46\x14\x81\x7c\xa6\xf4\x5e\x15\xc2\x0a\x29",
    // "X509_free" / M(Xor3) / S(4) / L(9)
    "\x4c\x21\x24\x2d\x4b\x72\x66\x71\x71\x14\x06\x78\xde\xee\x98\x7c",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(75) / L(29)
    "\x49\x61\x64\x76\x5b\x52\x47\x66\x4b\x41\x56\x4b\x4d\x4c\x43\x50\x5b\x69\x47\x5b\x61\x43\x4e\x4e\x60\x43\x41\x49\x51\x22\x6e\x16\x3a\xdd\x7d\xfa\x2f\xe4",
    // "X509_STORE_new" / M(Xor1) / S(127) / L(14)
    "\x27\x4a\x4f\x46\x20\x2c\x2b\x30\x2d\x3a\x20\x11\x1a\x08\x7f\xa3",
    // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(144) / L(31)
    "\xf9\xff\xe2\xd5\xd7\xd9\xc3\xc4\xc2\xc9\xf5\xde\xc4\xc2\xc9\xf3\xc2\xd5\xd1\xc4\xd5\xf3\xf6\xe0\xc2\xdf\xc0\xd5\xc2\xc4\xc9\xb0",
    // "strncmp" / M(Xor4) / S(225) / L(7)
    "\x63\x64\x62\x7e\x73\x7d\x60\x10\x9d\x9a\x9c\x49\x0a\x1f\x91\xd8",
    // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(127) / L(35)
    "\x3c\x39\x3b\x1e\x0b\x1a\x39\x10\x0d\x12\x1e\x0b\x0b\x1a\x0d\x3c\x0d\x1a\x1e\x0b\x1a\x3b\x1e\x0b\x1a\x39\x0d\x10\x12\x2c\x0b\x0d\x16\x11\x18\x7f",
    // "SKReceiptRefreshRequest" / M(Xor1) / S(8) / L(23)
    "\x5b\x43\x5a\x6d\x6b\x6d\x61\x78\x7c\x5a\x6d\x6e\x7a\x6d\x7b\x60\x5a\x6d\x79\x7d\x6d\x7b\x7c\x08\x30\x3d\xc6\xf8\xaf\x44\x28\xb3",
    // "CFDataCreateMutable" / M(Rot) / S(33) / L(19)
    "\x64\x67\x65\x82\x95\x82\x64\x93\x86\x82\x95\x86\x6e\x96\x95\x82\x83\x8d\x86\x21",
    // "X509_STORE_new" / M(Xor2) / S(72) / L(14)
    "\x00\x6d\x68\x61\x07\x0b\x0c\x17\x0a\x1d\x07\x36\x3d\x2f\x58\xa3",
    // "" / M(None) / S(0) / L(0)
    "\xd9\xa7\xfc\xa5\x9c\xc9\x9e\x4f\x23\x94\xc5\xfc\xff\xcc\x6c\xbc\xe9\x83\xa8\x14\xc3\x7a\x9c\x83\xb6\xfc\xa7\x96\x9a\xd6\x8d\x93",
    // "Contents/_MASReceipt" / M(Xor2) / S(135) / L(20)
    "\xd1\xfd\xfc\xe6\xf7\xfc\xe6\xe1\xbd\xcd\xdf\xd3\xc1\xc0\xf7\xf1\xf7\xfb\xe2\xe6\x92",
    // "" / M(None) / S(0) / L(0)
    "\x31\xdf\x7d\xfe\x29\xff\x1b\x25\x86\x72\xb0\x11\xd7\x09\x61\x36\x93\xdc\xc5\x53\x6c\xbe\x51\xa9\x54\xc9\x51\x3a\xa6\x7c\x47\x67",
    // "init" / M(Rot) / S(48) / L(4)
    "\x99\x9e\x99\xa4\x30\x58\x0c\xb8\x4c\xa0\x0e\x67\x41\x93\x42\x79",
    // "%02x" / M(Rot) / S(180) / L(4)
    "\xd9\xe4\xe6\x2c\xb4\xbb\xb4\x0f\x85\xe2\x2a\xed\x89\xbe\x32\x5e",
    // "CFDataGetLength" / M(Xor3) / S(199) / L(15)
    "\x94\x91\x93\xb6\xa3\xb6\x90\xb2\xa3\x9b\xb2\xb9\xb0\xa3\xbf\xd7",
    // "d2i_X509_bio" / M(Rot) / S(62) / L(12)
    "\xa2\x70\xa7\x9d\x96\x73\x6e\x77\x9d\xa0\xa7\xad\x3e\x69\x7a\x73",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(177) / L(24)
    "\xd3\xd6\xd2\xe5\xfe\xf4\xfc\xf5\xc5\xfe\xfc\xff\xf1\xf4\xd5\xe8\xf5\xf3\xe5\xe4\xf1\xf2\xfc\xf5\x90\xb2\xb8\xb7\x9e\x26\x89\x4b\xe9",
    // "%02X:" / M(Xor2) / S(200) / L(5)
    "\xfd\xe8\xea\x80\xe2\xd8\x98\x4c\xb2\x34\xf1\xb8\xa1\x10\x7f\xa7",
    // "CFStringCompare" / M(Xor3) / S(185) / L(15)
    "\x8a\x8f\x9a\xbd\xbb\xa0\xa7\xae\x8a\xa6\xa4\xb9\xa8\xbb\xac\xc9",
    // "longjmp" / M(Rot) / S(165) / L(7)
    "\x11\x14\x13\x0c\x0f\x12\x15\xa5\x78\x10\x7a\xc4\x52\xf7\x0d\x88",
    // "CFReadStreamRead" / M(Xor3) / S(86) / L(16)
    "\x24\x21\x35\x02\x06\x03\x34\x13\x15\x02\x06\x0a\x35\x02\x06\x03\x67",
    // "" / M(None) / S(0) / L(0)
    "\xc1\xf4\xb4\xb3\x33\xee\x7e\x5d\x41\xaa\x7b\xe4\x5d\x78\xa4\x98\xd3\xc6\x3e\xd3\xa4\xbe\xe9\x36\xc3\xc1\x17\x81\xc3\x05\x1b\x61",
    // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(228) / L(29)
    "\x61\x49\x4c\x5e\x73\x7a\x6f\x4e\x63\x69\x7e\x63\x65\x64\x6b\x78\x73\x41\x6f\x73\x49\x6b\x66\x66\x48\x6b\x69\x61\x79\x0a\x88\x2e\xd5\xc6\xa9\xd9\x99\xd4",
    // "" / M(None) / S(0) / L(0)
    "\xa2\xa1\xc3\x63\x94\xab\xe8\xce\xd2\x80\x76\xa8\x5b\xa5\x1f\x13\x97\x1e\xeb\xfd\x81\xcb\x8c\x0e\xcc\x5d\xbc\x59\x22\x51\x06\xde",
    // "PKCS7_get0_signers" / M(Xor1) / S(207) / L(18)
    "\x9f\x84\x8c\x9c\xf8\x90\xa8\xaa\xbb\xff\x90\xbc\xa6\xa8\xa1\xaa\xbd\xbc\xcf",
    // "SecKeychainSearchCreateFromAttributes" / M(Rot) / S(92) / L(37)
    "\xaf\xc1\xbf\xa7\xc1\xd5\xbf\xc4\xbd\xc5\xca\xaf\xc1\xbd\xce\xbf\xc4\x9f\xce\xc1\xbd\xd0\xc1\xa2\xce\xcb\xc9\x9d\xd0\xd0\xce\xc5\xbe\xd1\xd0\xc1\xcf\x5c",
    // "" / M(None) / S(0) / L(0)
    "\x75\xe1\x2e\xda\x44\xe6\x46\x32\x85\xc8\xf5\x9f\x29\xda\x92\x09\xbf\x7a\x99\x97\x49\x2b\x36\xaf\xc6\x7b\x8d\x26\x28\xaf\x04\x64",
    // "BIO_free" / M(Rot) / S(21) / L(8)
    "\x57\x5e\x64\x74\x7b\x87\x7a\x7a\x15\xcb\x27\x22\x98\xf2\x64\x89",
    // "CC_SHA1_Init" / M(Xor4) / S(178) / L(12)
    "\x63\x63\x7f\x73\x68\x61\x11\x7f\x69\x4e\x49\x54\x20\x3c\xfa\x8b",
    // "CFBundleGetMainBundle" / M(Rot) / S(172) / L(21)
    "\xef\xf2\xee\x21\x1a\x10\x18\x11\xf3\x11\x20\xf9\x0d\x15\x1a\xee\x21\x1a\x10\x18\x11\xac",
    // "CFBundleCopyBundleURL" / M(Xor3) / S(237) / L(21)
    "\x40\x45\x41\x76\x6d\x67\x6f\x66\x40\x6c\x73\x7a\x41\x76\x6d\x67\x6f\x66\x56\x51\x4f\x03",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(92) / L(32)
    "\xd5\xd5\xd5\xd5\x83\x89\x83\xa9\xa9\x83\x89\x83\xc0\xc0\x83\xb0\x83\xa4\xa4\x83\x96\x83\xc9\xc9\x83\x96\x83\xcf\xcf\x83\xb6\x83\x5c",
    // "CFEqual" / M(Xor1) / S(108) / L(7)
    "\x2f\x2a\x29\x1d\x19\x0d\x00\x6c\xf5\xdd\xb7\x39\x33\xad\xdd\x57",
    // "" / M(None) / S(0) / L(0)
    "\x51\x10\xbf\xc6\xdc\x30\xd7\xa5\xbe\x27\x3b\x92\x24\x11\xfb\x61\xaa\x00\x26\x09\xd5\x1c\x3f\x43\x73\x56\x43\x0d\x24\xb9\x14\x20",
    // "CFDictionarySetValue" / M(Xor2) / S(212) / L(20)
    "\x82\x87\x85\xa8\xa2\xb5\xa8\xae\xaf\xa0\xb3\xb8\x92\xa4\xb5\x97\xa0\xad\xb4\xa4\xc1",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(69) / L(39)
    "\x06\x03\x10\x17\x09\x06\x37\x20\x24\x31\x20\x03\x37\x2a\x28\x03\x2c\x29\x20\x16\x3c\x36\x31\x20\x28\x17\x20\x35\x37\x20\x36\x20\x2b\x31\x24\x31\x2c\x2a\x2b\x45\xc5\xf6\xcb\x1a\xbe\x00\xd1\x89",
    // "SHA1" / M(Rot) / S(101) / L(4)
    "\xb8\xad\xa6\x96\x65\xe5\xaf\xed\xde\x4f\x8d\x23\xb3\x6e\x8d\x4e",
    // "sha1" / M(Xor2) / S(222) / L(4)
    "\xbd\xa6\xaf\xff\xce\xbd\xc0\x0b\x2e\xd1\x10\x2d\xd8\x10\x23\x57",
    // "CFDateFormatterSetFormat" / M(Xor4) / S(251) / L(24)
    "\x18\x1d\x1f\x3a\x2f\x3e\x1d\x34\x29\x36\x3a\x2f\x2f\x3e\x29\x08\x3e\x2f\x1d\x34\x29\x36\x3a\x2f\x5b\x73\xe7\x0c\x02\x18\xfe\xbc\xe9",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(209) / L(66)
    "\x00\x24\x4a\x44\x45\x36\x3e\x00\x1d\x3a\x33\x43\x32\x43\x4a\x00\x17\x43\x32\x3e\x36\x48\x40\x43\x3c\x44\x00\x14\x40\x43\x36\x17\x40\x46\x3f\x35\x32\x45\x3a\x40\x3f\xff\x37\x43\x32\x3e\x36\x48\x40\x43\x3c\x00\x14\x40\x43\x36\x17\x40\x46\x3f\x35\x32\x45\x3a\x40\x3f\xd1",
    // "" / M(None) / S(0) / L(0)
    "\x7c\xb8\x64\xfb\x88\x30\x92\x53\x55\x00\xa7\x0b\xcb\xfa\x7e\x58\x39\x10\xf0\x7d\x07\xe5\xa3\x66\x57\x0d\xcd\x31\xf3\x36\x84\xf5",
    // "kSecReturnRef" / M(Xor2) / S(144) / L(13)
    "\xeb\xd3\xe5\xe3\xd2\xe5\xf4\xf5\xf2\xee\xd2\xe5\xe6\x80\x01\x66",
    // "CFDataAppendBytes" / M(Xor1) / S(146) / L(17)
    "\xd1\xd4\xd6\xf3\xe6\xf3\xd3\xe2\xe2\xf7\xfc\xf6\xd0\xeb\xe6\xf7\xe1\x92",
    // "%02X" / M(Xor4) / S(10) / L(4)
    "\x85\x90\x92\xf8\xa0\xc8\xae\x85\xa9\x50\xdf\x72\xb9\x70\x27\x33",
    // "IOBSDNameMatching" / M(Xor1) / S(182) / L(17)
    "\xff\xf9\xf4\xe5\xf2\xf8\xd7\xdb\xd3\xfb\xd7\xc2\xd5\xde\xdf\xd8\xd1\xb6",
    // "kCFTypeArrayCallBacks" / M(Xor4) / S(93) / L(21)
    "\x95\xbd\xb8\xaa\x87\x8e\x9b\xbf\x8c\x8c\x9f\x87\xbd\x9f\x92\x92\xbc\x9f\x9d\x95\x8d\xfe",
    // "CFBundleGetIdentifier" / M(Xor1) / S(18) / L(21)
    "\x51\x54\x50\x67\x7c\x76\x7e\x77\x55\x77\x66\x5b\x76\x77\x7c\x66\x7b\x74\x7b\x77\x60\x12",
    // "Contents" / M(Rot) / S(147) / L(8)
    "\xd6\x02\x01\x07\xf8\x01\x07\x06\x93\x4f\x66\xb4\xb8\xca\x75\xfe",
    // "/usr/lib/libobjc.dylib" / M(Xor1) / S(127) / L(22)
    "\x50\x0a\x0c\x0d\x50\x13\x16\x1d\x50\x13\x16\x1d\x10\x1d\x15\x1c\x51\x1b\x06\x13\x16\x1d\x7f",
    // "" / M(None) / S(0) / L(0)
    "\x82\xc6\x4e\x65\x4a\x94\x60\x96\x80\x8f\x2e\x16\x05\x74\x11\x66\xb6\xcd\xe5\xdb\x75\x51\xb3\x1e\x3c\x0e\x77\xd7\x51\xf1\x35\x6e",
    // "BIO_new" / M(Rot) / S(17) / L(7)
    "\x53\x5a\x60\x70\x7f\x76\x88\x11\x85\xf2\x0f\x84\x19\x3c\xa4\x48",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(212) / L(43)
    "\xa3\xa6\xb5\xb2\xac\xa3\x92\x85\x81\x94\x85\xb7\x89\x94\x88\xa6\x89\x8c\x85\xb3\x99\x93\x94\x85\x8d\xb0\x81\x94\x88\xb2\x85\x8c\x81\x94\x89\x96\x85\xb4\x8f\xa2\x81\x93\x85\xe0\x07\x63\x51\xd4\x4d\xdb\xb9\xf2",
    // "" / M(None) / S(0) / L(0)
    "\x98\x0e\xb3\x2c\xf6\xcb\x27\x22\x98\xf2\x64\x89\xbd\x64\x7e\x0d\x42\x0e\x86\xb7\x3b\xbc\xe4\x06\x88\x1e\x54\x1c\x29\xfd\xd8\x66",
    // "kCFBundleIdentifierKey" / M(Xor3) / S(202) / L(22)
    "\x8a\xa2\xa7\xa3\x94\x8f\x85\x8d\x84\xa8\x85\x84\x8f\x95\x88\x87\x88\x84\x93\xaa\x84\x98\xe1",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(36) / L(59)
    "\x12\x15\x1e\x15\x41\x1e\x11\x46\x1e\x12\x12\x1e\x16\x47\x1e\x11\x1d\x1e\x17\x45\x1e\x14\x1c\x1e\x42\x42\x1e\x11\x1c\x1e\x40\x15\x1e\x10\x45\x1e\x41\x16\x1e\x16\x10\x1e\x11\x16\x1e\x40\x15\x1e\x1d\x1c\x1e\x40\x42\x1e\x12\x47\x1e\x12\x14\x24\x5d\x46\x47\x8d\x1e\xca\x15\x9f",
    // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(223) / L(24)
    "\x9c\x99\x9e\xbd\xac\xb0\xb3\xaa\xab\xba\x8b\xb6\xb2\xba\x98\xba\xab\x9c\xaa\xad\xad\xba\xb1\xab\xdf\xec\x2a\x04\xf3\x5d\xd8\x01\x4c",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(8) / L(40)
    "\x3e\x39\x39\x6d\x3d\x6a\x3e\x3e\x3a\x6b\x3d\x41\x3b\x69\x38\x40\x6e\x6e\x3d\x40\x6c\x39\x3c\x69\x6d\x3a\x3a\x3c\x3d\x3a\x6c\x39\x41\x40\x6c\x6e\x3e\x6b\x3e\x38\x08\x73\x61\x28\x18\xb3\xb3\x05\x3e",
    // "CFDateFormatterSetFormat" / M(Xor3) / S(103) / L(24)
    "\xcb\xce\xcc\xe9\xfc\xed\xce\xe7\xfa\xe5\xe9\xfc\xfc\xed\xfa\xdb\xed\xfc\xce\xe7\xfa\xe5\xe9\xfc\x88\xab\xfe\x29\xac\xec\x1c\xfe\x45",
    // "" / M(None) / S(0) / L(0)
    "\x90\x89\xfa\xb6\x47\x36\x3a\x61\x34\xbc\x8b\x7d\x63\x80\x7a\xc6\x05\xed\x01\x94\x37\x45\x71\xde\x0b\x40\xd9\xdc\x8f\xcc\x49\xfc",
    // "CFArrayCreateMutable" / M(Xor4) / S(20) / L(20)
    "\xe7\xe2\xe5\xd6\xd6\xc5\xdd\xe7\xd6\xc1\xc5\xd0\xc1\xe9\xd1\xd0\xc5\xc6\xc8\xc1\xa4",
    // "BIO_new" / M(Xor4) / S(195) / L(7)
    "\x72\x79\x7f\x6f\x5e\x55\x47\x30\x05\x39\x70\x9d\x4e\x82\xd4\x95",
    // "CFBundleShortVersionString" / M(Xor4) / S(217) / L(26)
    "\xe8\xed\xe9\xde\xc5\xcf\xc7\xce\xf8\xc3\xc4\xd9\xdf\xfd\xce\xd9\xd8\xc2\xc4\xc5\xf8\xdf\xd9\xc2\xc5\xcc\xab\x9c\x5f\xf8\xf0\xa2\x71\xa3\xd1",
    // "CC_SHA1_Final" / M(Xor4) / S(76) / L(13)
    "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x86\xa9\xae\xa1\xac\xc0\x55\x9f",
    // "2.0" / M(Xor1) / S(136) / L(3)
    "\xba\xa6\xb8\x88\xad\x15\x60\xa5\x7a\xfb\xe2\xa7\x47\x0c\xd1\xa8",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(15) / L(40)
    "\x39\x3e\x3e\x4a\x3a\x4d\x39\x39\x3d\x4c\x3a\x36\x3c\x4e\x3f\x37\x49\x49\x3a\x37\x4b\x3e\x3b\x4e\x4a\x3d\x3d\x3b\x3a\x3d\x4b\x3e\x36\x37\x4b\x49\x39\x4c\x39\x3f\x0f\xdf\x18\xf8\x8b\xd8\xf8\xf3\x59",
    // "%02X" / M(Rot) / S(98) / L(4)
    "\x87\x92\x94\xba\x62\x72\x17\xe4\xa1\xed\x34\x58\x7d\xf5\xc7\xec",
    // "CFReadStreamOpen" / M(Xor3) / S(113) / L(16)
    "\xc1\xc4\xd0\xe7\xe3\xe6\xd1\xf6\xf0\xe7\xe3\xef\xcd\xf2\xe7\xec\x82",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor2) / S(139) / L(50)
    "\x97\xeb\xc1\xcb\xcc\xdd\xd5\x97\xf4\xd1\xda\xca\xd9\xca\xc1\x97\xfe\xca\xd9\xd5\xdd\xcf\xd7\xca\xd3\xcb\x97\xf9\xc8\xc8\xf3\xd1\xcc\x96\xde\xca\xd9\xd5\xdd\xcf\xd7\xca\xd3\x97\xf9\xc8\xc8\xf3\xd1\xcc\xb8",
    // "CFDateCompare" / M(Xor1) / S(238) / L(13)
    "\xad\xa8\xaa\x8f\x9a\x8b\xad\x81\x83\x9e\x8f\x9c\x8b\xee\xfb\x8c",
    // "sk_free" / M(Xor3) / S(60) / L(7)
    "\x3f\x27\x13\x2a\x3e\x29\x29\x4c\xea\x87\x10\xea\xcd\xa3\x4a\x55",
    // "CC_SHA1_Final" / M(Xor4) / S(241) / L(13)
    "\x53\x53\x4f\x43\x58\x51\x21\x4f\x56\x79\x7e\x71\x7c\x10\x36\x96",
    // "kSecMatchSubjectContains" / M(Xor2) / S(231) / L(24)
    "\xad\x95\xa3\xa5\x8b\xa7\xb2\xa5\xae\x95\xb3\xa4\xac\xa3\xa5\xb2\x85\xa9\xa8\xb2\xa7\xaf\xa8\xb5\xc6\x5d\x5c\xd9\x3a\x92\x6b\xff\xad",
    // "IOMACAddress" / M(Xor2) / S(187) / L(12)
    "\xe2\xe4\xe6\xea\xe8\xea\xcf\xcf\xd9\xce\xd8\xd8\xab\x06\xdc\x1f",
    // "" / M(None) / S(0) / L(0)
    "\xdb\xcb\x3c\x65\x4a\x2f\xfe\x39\x0a\xd9\xee\xea\xfe\xa1\x75\x03\x5e\xb0\x56\x15\xdb\xec\x20\x01\x2e\xb6\x0a\xd8\xd1\x37\xa4\xdd",
    // "ASN1_get_object" / M(Xor3) / S(152) / L(15)
    "\xe9\xfb\xe6\x99\xf7\xcf\xcd\xdc\xf7\xc7\xca\xc2\xcd\xcb\xdc\xa8",
    // "SecKeychainSearchCreateFromAttributes" / M(Rot) / S(223) / L(37)
    "\x32\x44\x42\x2a\x44\x58\x42\x47\x40\x48\x4d\x32\x44\x40\x51\x42\x47\x22\x51\x44\x40\x53\x44\x25\x51\x4e\x4c\x20\x53\x53\x51\x48\x41\x54\x53\x44\x52\xdf",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(13) / L(39)
    "\x7e\x7b\x69\x54\x50\x58\x67\x52\x53\x58\x7e\x4f\x58\x5c\x49\x58\x6a\x54\x49\x55\x69\x54\x50\x58\x74\x53\x49\x58\x4f\x4b\x5c\x51\x7b\x4f\x52\x50\x7a\x70\x69\x3d\x67\xef\xfb\x07\x18\x1b\x6e\xe0",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(33) / L(32)
    "\x38\x38\x38\x38\x66\x6c\x66\x0c\x0c\x66\x6c\x66\x25\x25\x66\x15\x66\x09\x09\x66\x7b\x66\x2c\x2c\x66\x7b\x66\x32\x32\x66\x1b\x66\x41",
    // "dlopen" / M(Xor1) / S(247) / L(6)
    "\x93\x9b\x98\x87\x92\x99\xf7\xbf\xb4\x9c\x89\x2b\xe9\x8b\x73\xbf",
    // "CFDictionarySetValue" / M(Xor3) / S(35) / L(20)
    "\x7b\x7e\x7c\x51\x5b\x4c\x51\x57\x56\x59\x4a\x41\x6b\x5d\x4c\x6e\x59\x54\x4d\x5d\x38",
    // "" / M(None) / S(0) / L(0)
    "\x4a\x1c\x14\xcd\xb3\x7c\xe7\xfc\x8d\x38\x4b\x4e\x70\x33\x36\x96\xad\x4c\x83\xc3\xdb\x97\xad\xba\x68\xf7\x8f\x3c\xf8\x3c\xfa\x8b",
    // "CFDictionaryCreateMutable" / M(Xor3) / S(254) / L(25)
    "\x63\x66\x64\x49\x43\x54\x49\x4f\x4e\x41\x52\x59\x63\x52\x45\x41\x54\x45\x6d\x55\x54\x41\x42\x4c\x45\x20\x7b\xa7\x58\x5d\x60\x83\x6d\xcc",
    // "X509_get_ext_by_OBJ" / M(Xor3) / S(86) / L(19)
    "\x32\x5f\x5a\x53\x35\x0d\x0f\x1e\x35\x0f\x12\x1e\x35\x08\x13\x35\x25\x28\x20\x6a",
    // "sel_registerName" / M(Xor1) / S(110) / L(16)
    "\x1d\x0b\x02\x31\x1c\x0b\x09\x07\x1d\x1a\x0b\x1c\x20\x0f\x03\x0b\x6e",
    // "" / M(None) / S(0) / L(0)
    "\xed\x0e\x52\x7f\x66\x19\x5c\x4a\x72\x6b\x5f\x7b\x09\x75\x1e\xea\x11\x00\x2f\x22\x8d\x02\x8e\x9e\x53\xf7\xf3\xc6\x35\x05\x3e\xd1",
    // "NSApplicationMain" / M(Xor3) / S(111) / L(17)
    "\xcf\xd2\xc0\xf1\xf1\xed\xe8\xe2\xe0\xf5\xe8\xee\xef\xcc\xe0\xe8\xef\x81",
    // "CC_SHA1_Init" / M(Rot) / S(13) / L(12)
    "\x50\x50\x6c\x60\x55\x4e\x3e\x6c\x56\x7b\x76\x81\x0d\x27\x64\xac",
    // "CFURLCreateFromFileSystemRepresentation" / M(Xor4) / S(60) / L(39)
    "\x03\x06\x15\x12\x0c\x03\x32\x25\x21\x34\x25\x06\x32\x2f\x2d\x06\x29\x2c\x25\x13\x39\x33\x34\x25\x2d\x12\x25\x30\x32\x25\x33\x25\x2e\x34\x21\x34\x29\x2f\x2e\x40\xc2\x8a\x18\x7e\x3a\x66\xae\xf6",
    // "" / M(None) / S(0) / L(0)
    "\xa5\x9e\x24\x3c\x08\x3f\x35\x0f\x16\x39\x81\xc7\xae\x49\x56\xce\xc0\x23\x3b\xf3\x06\x78\x26\xc7\xea\x5f\x5f\x3b\x04\xa5\xb8\x02",
    // "CFDictionaryAddValue" / M(Rot) / S(154) / L(20)
    "\xdd\xe0\xde\x03\xfd\x0e\x03\x09\x08\xfb\x0c\x13\xdb\xfe\xfe\xf0\xfb\x06\x0f\xff\x9a",
    // "_MASReceipt" / M(Xor4) / S(114) / L(11)
    "\x7f\x6d\x61\x73\x72\x45\x43\x45\x49\x50\x54\x20\xc8\xc2\x43\x9c",
    // "CFRelease" / M(Xor3) / S(82) / L(9)
    "\x21\x24\x30\x07\x0e\x07\x03\x11\x07\x62\x8a\xf4\x86\xbb\x15\x97",
    // "kSecMatchSearchList" / M(Rot) / S(126) / L(19)
    "\xe9\xd1\xe3\xe1\xcb\xdf\xf2\xe1\xe6\xd1\xe3\xdf\xf0\xe1\xe6\xca\xe7\xf1\xf2\x7e",
    // "" / M(None) / S(0) / L(0)
    "\x0c\xf9\xc4\xfc\x55\xde\x55\x52\x9e\x27\xed\x33\x90\xc8\x6f\xed\xe2\x5a\x9e\x68\x57\x29\xa2\xc2\x9c\x01\x7c\xff\x9c\xe2\x5f\xb3",
    // "SKReceiptRefreshRequest" / M(Xor2) / S(122) / L(23)
    "\x09\x11\x08\x3f\x39\x3f\x33\x2a\x2e\x08\x3f\x3c\x28\x3f\x29\x32\x08\x3f\x2b\x2f\x3f\x29\x2e\x5a\xee\xb1\xd6\xab\x75\x89\x4a\xaa",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor3) / S(238) / L(54)
    "\x0a\x76\x5c\x56\x51\x40\x48\x0a\x69\x4c\x47\x57\x44\x57\x5c\x0a\x63\x57\x44\x48\x40\x52\x4a\x57\x4e\x56\x0a\x76\x40\x46\x50\x57\x4c\x51\x5c\x0b\x43\x57\x44\x48\x40\x52\x4a\x57\x4e\x0a\x76\x40\x46\x50\x57\x4c\x51\x5c\x25",
    // "kSecClassCertificate" / M(Xor3) / S(150) / L(20)
    "\xc0\xf8\xce\xc8\xe8\xc7\xca\xd8\xd8\xe8\xce\xd9\xdf\xc2\xcd\xc2\xc8\xca\xdf\xce\xab",
    // "X509_get_ext_by_OBJ" / M(Xor3) / S(116) / L(19)
    "\xd0\xbd\xb8\xb1\xd7\xef\xed\xfc\xd7\xed\xf0\xfc\xd7\xea\xf1\xd7\xc7\xca\xc2\x88",
    // "CFReadStreamRead" / M(Xor4) / S(141) / L(16)
    "\x1e\x1b\x0f\x38\x3c\x39\x0e\x29\x2f\x38\x3c\x30\x0f\x38\x3c\x39\x5d",
    // "d2i_PKCS7_bio" / M(Xor4) / S(249) / L(13)
    "\xf4\xa2\xf9\xcf\xc0\xdb\xd3\xc3\xa7\xcf\xf2\xf9\xff\x90\xfe\x76",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor2) / S(151) / L(40)
    "\x90\x97\x97\xc3\x93\xc4\x90\x90\x94\xc5\x93\x9f\x95\xc7\x96\x9e\xc0\xc0\x93\x9e\xc2\x97\x92\xc7\xc3\x94\x94\x92\x93\x94\xc2\x97\x9f\x9e\xc2\xc0\x90\xc5\x90\x96\xa6\xf0\xca\x01\x45\xea\x05\x56\x30",
    // "X509_get_ext_by_OBJ" / M(Xor1) / S(82) / L(19)
    "\x0a\x67\x62\x6b\x0d\x35\x37\x26\x0d\x37\x2a\x26\x0d\x30\x2b\x0d\x1d\x10\x18\x52",
    // "CFBundleVersion" / M(Xor2) / S(253) / L(15)
    "\xae\xab\xaf\x98\x83\x89\x81\x88\xbb\x88\x9f\x9e\x84\x82\x83\xed",
    // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(222) / L(37)
    "\x57\x61\x67\x4f\x61\x7d\x67\x6c\x65\x6d\x6a\x57\x61\x65\x76\x67\x6c\x47\x76\x61\x65\x70\x61\x42\x76\x6b\x69\x45\x70\x70\x76\x6d\x66\x71\x70\x61\x77\x04",
    // "CFBundleIdentifier" / M(Xor4) / S(43) / L(18)
    "\x72\x77\x73\x44\x5f\x55\x5d\x54\x78\x55\x54\x5f\x45\x58\x57\x58\x54\x43\x31",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(68) / L(54)
    "\x6b\x17\x3d\x37\x30\x21\x29\x6b\x08\x2d\x26\x36\x25\x36\x3d\x6b\x02\x36\x25\x29\x21\x33\x2b\x36\x2f\x37\x6b\x17\x21\x27\x31\x36\x2d\x30\x3d\x6a\x22\x36\x25\x29\x21\x33\x2b\x36\x2f\x6b\x17\x21\x27\x31\x36\x2d\x30\x3d\x44",
    // "BIO_new" / M(Xor2) / S(242) / L(7)
    "\xa0\xab\xad\xbd\x8c\x87\x95\xe2\x3b\xbc\xe4\x06\x88\x1e\x54\x1c",
    // "CFDataCreate" / M(Rot) / S(103) / L(12)
    "\xaa\xad\xab\xc8\xdb\xc8\xaa\xd9\xcc\xc8\xdb\xcc\x67\xf6\x32\xf7",
    // "" / M(None) / S(0) / L(0)
    "\xbb\xb0\x82\xa1\xae\x58\x95\x1e\xc6\xbf\x94\x01\x3e\x71\x1f\xe9\xe7\x78\xde\xbb\x49\xa3\x50\x7f\x4f\x06\x6b\x1c\xf8\xc1\x1b\xed",
    // "CFStringCompare" / M(Xor2) / S(66) / L(15)
    "\x11\x14\x01\x26\x20\x3b\x3c\x35\x11\x3d\x3f\x22\x33\x20\x37\x52",
    // "objc_msgSend" / M(Xor1) / S(116) / L(12)
    "\x1b\x16\x1e\x17\x2b\x19\x07\x13\x27\x11\x1a\x10\x74\x75\x41\xb3",
    // "" / M(None) / S(0) / L(0)
    "\xb5\x97\xec\x42\xda\x06\x9d\xfc\xe1\x88\x24\xf2\x59\xd1\x10\x84\x3c\xf2\x25\x07\xd3\xe8\xe5\x68\x83\x60\x2c\x9c\x60\xfc\x58\x2f",
    // "d2i_PKCS7_bio" / M(Xor2) / S(115) / L(13)
    "\x07\x51\x0a\x3c\x33\x28\x20\x30\x54\x3c\x01\x0a\x0c\x63\x2a\xdb",
    // "" / M(None) / S(0) / L(0)
    "\x74\xfe\x11\xae\x37\x47\xaa\x4d\x4f\x69\xd4\x44\x4c\x7e\xa5\x1c\x2f\xb1\x57\x91\xa6\x90\xce\x56\x61\x15\xd8\x90\x42\xbc\x98\x70",
    // "CC_SHA1_Update" / M(Xor3) / S(234) / L(14)
    "\xb9\xb9\xa5\xa9\xb2\xbb\xcb\xa5\xaf\x8a\x9e\x9b\x8e\x9f\xfa\xb3",
    // "CFDictionaryCreateMutable" / M(Rot) / S(180) / L(25)
    "\xf7\xfa\xf8\x1d\x17\x28\x1d\x23\x22\x15\x26\x2d\xf7\x26\x19\x15\x28\x19\x01\x29\x28\x15\x16\x20\x19\xb4\x7b\xca\xdd\xe3\x33\xad\xb9\x55",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(142) / L(59)
    "\xfc\xfb\xf0\xfb\x8f\xf0\xff\x88\xf0\xfc\xfc\xf0\xf8\x89\xf0\xff\xf3\xf0\xf9\x8b\xf0\xfa\xf2\xf0\x8c\x8c\xf0\xff\xf2\xf0\x8e\xfb\xf0\xfe\x8b\xf0\x8f\xf8\xf0\xf8\xfe\xf0\xff\xf8\xf0\x8e\xfb\xf0\xf3\xf2\xf0\x8e\x8c\xf0\xfc\x89\xf0\xfc\xfa\xca\x08\x63\x79\x76\x02\x51\x52\x25",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(133) / L(43)
    "\xf2\xf7\xe4\xe3\xfd\xf2\xc3\xd4\xd0\xc5\xd4\xe6\xd8\xc5\xd9\xf7\xd8\xdd\xd4\xe2\xc8\xc2\xc5\xd4\xdc\xe1\xd0\xc5\xd9\xe3\xd4\xdd\xd0\xc5\xd8\xc7\xd4\xe5\xde\xf3\xd0\xc2\xd4\xb1\xe0\x4a\xd3\x86\x23\x2f\x5f\xc8",
    // "" / M(None) / S(0) / L(0)
    "\x69\xcb\xcc\x5b\xfa\x6b\x83\x97\x50\xed\x16\x63\x32\x83\x27\xb8\x6f\x8b\x38\x1d\x35\x82\x16\xfd\x6a\xe6\x53\x01\x3a\xb9\x9f\x1e",
    // "" / M(None) / S(0) / L(0)
    "\x22\x0b\x57\x06\xc2\xae\xb4\xfe\x01\x67\xd2\x5a\x17\x39\x1d\xaf\xc2\x80\xbc\x31\xac\x84\x51\xd7\x89\x62\x19\x58\xf6\x0f\x15\x92",
    // "IORegistryEntryGetParentEntry" / M(Xor3) / S(86) / L(29)
    "\x35\x33\x2e\x19\x1b\x15\x0f\x08\x0e\x05\x39\x12\x08\x0e\x05\x3b\x19\x08\x2c\x1d\x0e\x19\x12\x08\x39\x12\x08\x0e\x05\x7c\xad\x07\x11\x35\x7c\xd9\xee\xf3",
    // "dlsym" / M(Xor3) / S(109) / L(5)
    "\x19\x11\x0e\x04\x10\x7d\xa6\xe5\xe0\xc9\xdd\xe3\x28\x51\x8a\x12",
    // "ASN1_INTEGER_free" / M(Rot) / S(171) / L(17)
    "\xec\xfe\xf9\xdc\x0a\xf4\xf9\xff\xf0\xf2\xf0\xfd\x0a\x11\x1d\x10\x10\xab",
    // "" / M(None) / S(0) / L(0)
    "\xb3\xbc\x05\x66\xab\x55\x32\x14\x46\x74\x20\xf4\xb7\x57\x50\x64\x08\x1f\xdc\x27\xb3\x32\xa0\xae\x83\x9f\x18\x85\xf8\x69\x40\xa3",
    // "CFBundleUnloadExecutable" / M(Xor1) / S(209) / L(24)
    "\x92\x97\x93\xa4\xbf\xb5\xbd\xb4\x84\xbf\xbd\xbe\xb0\xb5\x94\xa9\xb4\xb2\xa4\xa5\xb0\xb3\xbd\xb4\xd1\x3e\x18\x58\x9a\x5c\x37\x15\xf6",
    // "" / M(None) / S(0) / L(0)
    "\x70\xef\x3e\xfa\xdc\x78\xcc\x3c\x76\x8d\xb4\xec\xe8\x08\x5c\x7d\x93\x7a\xe0\x4d\x5f\xcc\x47\x73\x17\xed\xad\xc4\x83\xf6\x32\xf7",
    // "strncmp" / M(Xor4) / S(167) / L(7)
    "\x03\x04\x02\x1e\x13\x1d\x00\x70\xbe\x1c\xb6\xa5\x16\xa3\x0c\x82",
    // "" / M(None) / S(0) / L(0)
    "\x93\xcc\x27\x01\x61\x1f\x6a\xf7\x81\x90\x83\x46\x64\xea\x39\x68\xf6\xeb\x44\x5d\x26\xfb\xde\x7e\x9b\xf5\x76\x6a\xd8\x94\xd2\xdf",
    // "ASN1_OBJECT_free" / M(Xor3) / S(34) / L(16)
    "\x72\x60\x7d\x02\x6c\x7c\x71\x79\x76\x70\x67\x6c\x55\x41\x56\x56\x33",
    // "CFReadStreamOpen" / M(Xor2) / S(121) / L(16)
    "\x2b\x2e\x3a\x0d\x09\x0c\x3b\x1c\x1a\x0d\x09\x05\x27\x18\x0d\x06\x68",
    // "ASN1_OBJECT_free" / M(Xor1) / S(138) / L(16)
    "\xcb\xd9\xc4\xbb\xd5\xc5\xc8\xc0\xcf\xc9\xde\xd5\xec\xf8\xef\xef\x8a",
    // "kSecMatchSubjectContains" / M(Rot) / S(129) / L(24)
    "\xec\xd4\xe6\xe4\xce\xe2\xf5\xe4\xe9\xd4\xf6\xe3\xeb\xe6\xe4\xf5\xc4\xf0\xef\xf5\xe2\xea\xef\xf4\x81\x26\x41\x0c\x2a\x4d\x9e\x04\xf7",
    // "SecKeychainSearchCopyNext" / M(Xor2) / S(71) / L(25)
    "\x36\x00\x06\x2e\x00\x1c\x06\x0d\x04\x0c\x0b\x36\x00\x04\x17\x06\x0d\x26\x0a\x15\x1c\x2b\x00\x1d\x11\x65\xf0\x10\x0d\xe8\xef\x2c\xa8\x98",
    // "" / M(None) / S(0) / L(0)
    "\xc3\xe9\x7a\x32\x0e\x62\x95\x7f\xca\x70\x89\x9b\x8b\x6c\x74\xc6\x15\x57\x22\x68\x4c\x38\xbb\x16\x6f\xae\xae\xf8\x25\x21\x65\x82",
    // "SecItemCopyMatching" / M(Xor4) / S(43) / L(19)
    "\x0f\x39\x3f\x15\x28\x39\x31\x1f\x33\x2c\x25\x11\x3d\x28\x3f\x34\x35\x32\x3b\x5c",
    // "kSecMatchLimitAll" / M(Xor4) / S(218) / L(17)
    "\x3f\x07\x31\x37\x19\x35\x20\x37\x3c\x18\x3d\x39\x3d\x20\x15\x38\x38\x54",
    // "" / M(None) / S(0) / L(0)
    "\xd4\x4a\xc5\x7f\xef\xc9\x54\xcd\xd6\xa2\x5b\x1a\x1b\x95\xdf\xbb\x1b\xa7\x53\x23\x51\xb3\x70\x4a\x0a\x91\x18\xb8\x6e\x64\x32\xc2",
    // "CFBundleCopyBundleURL" / M(Xor2) / S(154) / L(21)
    "\xcf\xca\xce\xf9\xe2\xe8\xe0\xe9\xcf\xe3\xfc\xf5\xce\xf9\xe2\xe8\xe0\xe9\xd9\xde\xc0\x8c",
    // "CFArrayCreateMutable" / M(Xor3) / S(41) / L(20)
    "\x7d\x78\x7f\x4c\x4c\x5f\x47\x7d\x4c\x5b\x5f\x4a\x5b\x73\x4b\x4a\x5f\x5c\x52\x5b\x3e",
    // "" / M(None) / S(0) / L(0)
    "\xec\xda\x90\x12\xb7\x65\xd0\x1a\xbf\x2b\xfe\xa6\xe0\x00\xf5\x5f\xaa\x24\xd8\xb3\xc9\xb6\xcd\x31\x22\x88\x04\x17\x3d\xd2\x10\x15",
    // "CC_SHA1" / M(Xor4) / S(186) / L(7)
    "\xe3\xe3\xff\xf3\xe8\xe1\x91\xa0\x7c\xf3\x76\x84\x56\x59\xa5\x7b",
    // "" / M(None) / S(0) / L(0)
    "\xe6\xd4\xd7\x09\xea\xf5\x23\xac\x7b\x25\xbb\x49\x1c\xa6\xab\x4c\x02\x48\x6c\x8c\x49\x59\x2b\x2a\xc6\xde\xbd\x73\x82\x8f\x85\xde",
    // "." / M(Xor4) / S(21) / L(1)
    "\x7e\x50\x82\x75\x50\xc6\x57\xc6\xe5\xd6\x0f\x7d\xd3\xb7\x3e\x56",
    // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(19) / L(31)
    "\x7a\x7c\x61\x56\x54\x5a\x40\x47\x41\x4a\x76\x5d\x47\x41\x4a\x70\x41\x56\x52\x47\x56\x70\x75\x63\x41\x5c\x43\x56\x41\x47\x4a\x33",
    // "ASN1_INTEGER_get" / M(Xor4) / S(157) / L(16)
    "\x2c\x3e\x23\x5c\x32\x24\x23\x39\x28\x2a\x28\x3f\x32\x0a\x08\x19\x6d",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(252) / L(59)
    "\x32\x2d\x36\x2d\x61\x36\x31\x5e\x36\x32\x32\x36\x2e\x5f\x36\x31\x35\x36\x2f\x5d\x36\x2c\x34\x36\x62\x62\x36\x31\x34\x36\x60\x2d\x36\x30\x5d\x36\x61\x2e\x36\x2e\x30\x36\x31\x2e\x36\x60\x2d\x36\x35\x34\x36\x60\x62\x36\x32\x5f\x36\x32\x2c\xfc\x84\x97\x8e\xac\xcf\xc3\x2d\x1b",
    // "" / M(None) / S(0) / L(0)
    "\xec\xa1\x10\x8e\x87\x9f\xa6\x57\x37\x58\x05\x19\x89\x68\xd4\x19\xae\xe6\xed\xdc\x73\x8b\xd3\x35\x92\x51\xea\x97\x27\x15\xf0\x4c",
    // "CFBundleCopyBundleURL" / M(Rot) / S(125) / L(21)
    "\xc0\xc3\xbf\xf2\xeb\xe1\xe9\xe2\xc0\xec\xed\xf6\xbf\xf2\xeb\xe1\xe9\xe2\xd2\xcf\xc9\x7d",
    // "" / M(None) / S(0) / L(0)
    "\x11\xa7\xef\x87\x7a\x6d\xb5\xee\x7f\x2d\xac\x63\xe1\x8b\xbf\xf5\xa7\xa7\xe7\x10\xf7\x78\x8e\x60\x06\xa6\x06\x9f\xff\x2d\xb1\x40",
    // "" / M(None) / S(0) / L(0)
    "\xe3\x19\xa5\xce\x8f\x6c\xcd\x4d\x7e\x2e\xb0\x41\x9e\x45\xbf\xb9\xb9\xed\x78\x8b\xf5\x0a\xc7\x39\x8d\xaa\xac\xa9\x33\x2e\xc2\xda",
    // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(76) / L(54)
    "\x7b\x07\x2d\x27\x20\x31\x39\x7b\x18\x3d\x36\x26\x35\x26\x2d\x7b\x12\x26\x35\x39\x31\x23\x3b\x26\x3f\x27\x7b\x07\x31\x37\x21\x26\x3d\x20\x2d\x7a\x32\x26\x35\x39\x31\x23\x3b\x26\x3f\x7b\x07\x31\x37\x21\x26\x3d\x20\x2d\x54",
    // "" / M(None) / S(0) / L(0)
    "\xcb\x8f\xa4\xa4\x69\x20\xae\x4d\xdc\xd2\xbf\x2e\xf4\x40\x32\x0d\x78\xbd\xa5\xb8\xb0\x7d\xc2\x63\x4e\x44\x8f\xd3\x82\x0a\x2c\xf7",
    // "" / M(None) / S(0) / L(0)
    "\x7f\x70\x76\x59\x56\x0a\x78\xdd\x86\x6c\x03\x19\xfd\xf8\x96\xe1\xee\xfd\x0e\x5a\x42\x4e\xc7\x21\x94\x45\x53\xbb\x3d\x3b\x39\x4f",
    // "CFReadStreamClose" / M(Xor1) / S(57) / L(17)
    "\x7a\x7f\x6b\x5c\x58\x5d\x6a\x4d\x4b\x5c\x58\x54\x7a\x55\x56\x4a\x5c\x39",
    // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(52) / L(35)
    "\x1b\x1e\x1c\x39\x2c\x3d\x1e\x37\x2a\x35\x39\x2c\x2c\x3d\x2a\x1b\x2a\x3d\x39\x2c\x3d\x1c\x39\x2c\x3d\x1e\x2a\x37\x35\x0b\x2c\x2a\x31\x36\x3f\x58",
    // "CFStringCreateWithBytes" / M(Rot) / S(249) / L(23)
    "\x3c\x3f\x4c\x6d\x6b\x62\x67\x60\x3c\x6b\x5e\x5a\x6d\x5e\x50\x62\x6d\x61\x3b\x72\x6d\x5e\x6c\xf9\x7b\x17\xc8\xaf\x84\xd7\xb0\xb9",
    // "CFArrayGetCount" / M(Xor3) / S(193) / L(15)
    "\x92\x97\x90\xa3\xa3\xb0\xa8\x96\xb4\xa5\x92\xbe\xa4\xbf\xa5\xd1",
    // "CFBundleUnloadExecutable" / M(Xor2) / S(164) / L(24)
    "\xc6\xc3\xc7\xf0\xeb\xe1\xe9\xe0\xd0\xeb\xe9\xea\xe4\xe1\xc0\xfd\xe0\xe6\xf0\xf1\xe4\xe7\xe9\xe0\x85\x1f\xdc\x27\xb3\x32\xa0\xae\x85",
    // "BIO_free" / M(Xor3) / S(216) / L(8)
    "\xaa\xa1\xa7\xb7\x8e\x9a\x8d\x8d\xe8\xe5\xe2\xa8\xcb\xac\x4f\x7c",
    // "%02x:" / M(Xor4) / S(18) / L(5)
    "\x05\x10\x12\x58\x1a\x20\xd3\xde\xd8\x13\xee\xd4\x7f\xda\xad\x99",
    // "setDelegate:" / M(Xor3) / S(155) / L(12)
    "\xd8\xce\xdf\xef\xce\xc7\xce\xcc\xca\xdf\xce\x91\xab\x2c\xb6\xe6",
    // "kCFDateFormatterTimeZone" / M(Xor4) / S(69) / L(24)
    "\x8e\xa6\xa3\xa1\x84\x91\x80\xa3\x8a\x97\x88\x84\x91\x91\x80\x97\xb1\x8c\x88\x80\xbf\x8a\x8b\x80\xe5\x3d\xec\x6d\x4d\xa4\x87\xb3\x77",
    // "CFReadStreamClose" / M(Rot) / S(173) / L(17)
    "\xf0\xf3\xff\x12\x0e\x11\x00\x21\x1f\x12\x0e\x1a\xf0\x19\x1c\x20\x12\xad",
    // "" / M(None) / S(0) / L(0)
    "\xfe\x55\x5f\xbe\xec\x5a\xb2\xb5\x14\x93\xc2\x68\xf0\x8a\x91\x37\xb9\xb4\x86\xf0\x42\xb1\x99\x89\xba\x20\x8e\xc7\x09\x00\x0c\xf4",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(162) / L(37)
    "\xe1\xe4\xf7\xf0\xee\xe1\xd0\xc7\xc3\xd6\xc7\xe1\xcd\xd2\xdb\xe3\xd2\xd2\xc7\xcc\xc6\xcb\xcc\xc5\xf2\xc3\xd6\xca\xe1\xcd\xcf\xd2\xcd\xcc\xc7\xcc\xd6\xa2",
    // "OpenSSL_add_all_digests" / M(Xor4) / S(175) / L(23)
    "\xaf\x90\x85\x8e\xb3\xb3\xac\xbf\x81\x84\x84\xbf\x81\x8c\x8c\xbf\x84\x89\x87\x85\x93\x94\x93\xe0\xe7\x8e\x61\xed\x88\x9f\x9a\x83",
    // "" / M(None) / S(0) / L(0)
    "\x31\x0a\x80\x0c\x90\xbd\xa5\x66\x6f\x7f\x85\xad\xb8\xfc\xbf\x8c\xd0\xe6\xd4\xc6\x92\x41\xcf\xeb\x9a\x89\x7d\x57\x74\x5c\xdb\xf2",
    // "alloc" / M(Xor1) / S(246) / L(5)
    "\x97\x9a\x9a\x99\x95\xf6\xc8\xa7\x72\xbd\x93\x64\xea\x56\xbf\x11",
    // "sk_num" / M(Xor2) / S(56) / L(6)
    "\x5b\x43\x77\x46\x5d\x45\x28\x41\xaa\x0f\x35\x2e\xa3\x3f\x4a\x33",
    // "dlopen" / M(Xor4) / S(4) / L(6)
    "\x24\x2c\x2f\x30\x25\x2e\x40\x7e\xa6\xa0\x0f\xc5\x3b\x19\x88\x07",
    // "X509_digest" / M(Xor4) / S(17) / L(11)
    "\x48\x25\x20\x29\x4f\x74\x79\x77\x75\x63\x64\x10\xb3\x93\x44\x96",
    // "Contents/_MASReceipt/receipt" / M(Rot) / S(170) / L(28)
    "\xed\x19\x18\x1e\x0f\x18\x1e\x1d\xd9\x09\xf7\xeb\xfd\xfc\x0f\x0d\x0f\x13\x1a\x1e\xd9\x1c\x0f\x0d\x0f\x13\x1a\x1e\xaa\x5e\x71\x48\xca\x12\x5d\x31\xb9",
    // "setjmp" / M(Xor1) / S(154) / L(6)
    "\xe9\xff\xee\xf0\xf7\xea\x9a\x74\xf3\xf9\xf8\x0c\x38\x50\xe8\x17",
    // "Apple Root CA" / M(Xor1) / S(177) / L(13)
    "\xf0\xc1\xc1\xdd\xd4\x91\xe3\xde\xde\xc5\x91\xf2\xf0\xb1\xed\x17",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(185) / L(48)
    "\x46\x3a\x10\x1a\x1d\x0c\x04\x46\x25\x00\x0b\x1b\x08\x1b\x10\x46\x2f\x1b\x08\x04\x0c\x1e\x06\x1b\x02\x1a\x46\x20\x26\x22\x00\x1d\x47\x0f\x1b\x08\x04\x0c\x1e\x06\x1b\x02\x46\x20\x26\x22\x00\x1d\x69",
    // "Contents/_MASReceipt/receipt" / M(Xor3) / S(89) / L(28)
    "\x3d\x11\x10\x0a\x1b\x10\x0a\x0d\x51\x21\x33\x3f\x2d\x2c\x1b\x1d\x1b\x17\x0e\x0a\x51\x0c\x1b\x1d\x1b\x17\x0e\x0a\x7e\x50\xfe\x82\x07\x7c\x2e\x17\xea",
    // "" / M(None) / S(0) / L(0)
    "\x6f\x90\xdb\xaa\x67\x3b\xbf\xab\xe6\x5c\xd7\x1f\xf9\x24\x19\x31\xb2\xff\x38\x67\x25\xb5\xb1\x5e\xce\x0d\x8d\xbb\x51\x4d\xe8\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x80\x12\x5b\x41\xbd\xba\xf7\x87\xe4\x3c\xf0\xf1\x75\x0a\x03\x96\xca\x82\x8b\xab\x8e\x92\x25\x75\x24\x79\x09\x28\x9b\xdd\x81\x28",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor1) / S(36) / L(48)
    "\x0b\x77\x5d\x57\x50\x41\x49\x0b\x68\x4d\x46\x56\x45\x56\x5d\x0b\x62\x56\x45\x49\x41\x53\x4b\x56\x4f\x57\x0b\x6d\x6b\x6f\x4d\x50\x0a\x42\x56\x45\x49\x41\x53\x4b\x56\x4f\x0b\x6d\x6b\x6f\x4d\x50\x24",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x3f\x42\x01\x4c\xf0\x07\x69\x32\x72\x81\x71\x28\x9b\x71\x10\x5d\xba\x26\xf5\xcb\x56\x1c\x75\xb7\x55\xc7\x0a\x05\x5d\xe1\xae",
    // "d2i_X509_bio" / M(Xor4) / S(54) / L(12)
    "\x04\x52\x09\x3f\x38\x55\x50\x59\x3f\x02\x09\x0f\x60\xb3\x64\x0c",
    // "glob" / M(Xor3) / S(5) / L(4)
    "\x72\x79\x7a\x77\x15\xb5\x67\xd6\x73\x6a\x64\x64\xa1\xad\xcd\x00",
    // "" / M(None) / S(0) / L(0)
    "\xaa\x53\x0a\x6e\x0c\x0c\xe2\xa2\xa2\x52\x39\xf0\x00\x65\x2e\xc8\xc9\x4e\x52\xd8\x6c\x71\x69\x1d\x4b\x17\xb8\x29\xdb\x5b\xc8\xce",
    // "RTLD_MAIN_ONLY" / M(Xor2) / S(142) / L(14)
    "\xcc\xca\xd2\xda\xc1\xd3\xdf\xd7\xd0\xc1\xd1\xd0\xd2\xc7\x9e\x56",
    // "" / M(None) / S(0) / L(0)
    "\x7b\x17\xc8\xaf\x84\xd7\xb0\xb9\x76\x01\x3b\xd2\x78\x07\xcc\x03\x6b\x65\xd5\xda\x5f\x5b\x45\x93\xba\x7f\x5b\x79\x8f\x55\x57\x9d",
    // "" / M(None) / S(0) / L(0)
    "\x01\x4b\x13\xe3\x2c\x42\xe3\x54\x80\x30\x68\xa1\xc3\x5a\x6a\x93\x37\xb3\xe0\x1e\x27\x90\x61\x2f\x30\xbd\x50\x48\x78\xf2\x11\x03",
    // "CC_SHA1" / M(Xor3) / S(84) / L(7)
    "\x27\x27\x3b\x37\x2c\x25\x55\x64\x2e\xb6\x0a\xd8\xd1\x37\xa4\xdd",
    // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor3) / S(239) / L(43)
    "\x60\x65\x76\x71\x6f\x60\x51\x46\x42\x57\x46\x74\x4a\x57\x4b\x65\x4a\x4f\x46\x70\x5a\x50\x57\x46\x4e\x73\x42\x57\x4b\x71\x46\x4f\x42\x57\x4a\x55\x46\x77\x4c\x61\x42\x50\x46\x23\x2c\x4d\x9c\x63\x0e\x76\x7c\x92",
    // "CFDataCreate" / M(Rot) / S(60) / L(12)
    "\x7f\x82\x80\x9d\xb0\x9d\x7f\xae\xa1\x9d\xb0\xa1\x3c\x4c\x01\x24",
    // "IOIteratorNext" / M(Xor1) / S(51) / L(14)
    "\x7a\x7c\x7a\x47\x56\x41\x52\x47\x5c\x41\x7d\x56\x4b\x47\x33\xbf",
    // "2.0" / M(Xor3) / S(1) / L(3)
    "\x23\x3f\x21\x11\x25\x87\x42\xa9\x74\x5b\x35\x93\x2a\x1f\x2b\x8d",
    // "longjmp" / M(Xor3) / S(33) / L(7)
    "\x5d\x5e\x5f\x56\x5b\x5c\x41\x31\x7e\x06\x5e\x2d\x80\xda\x2d\x18",
    // "" / M(None) / S(0) / L(0)
    "\x2f\x38\x5a\xc6\x7a\x9e\x2b\x78\x4b\x43\x26\x41\x30\xaf\x49\x6b\x19\x44\xe6\xb1\x6f\x4d\x26\x91\xb7\x8e\x68\xe0\xb9\x50\xea\x2c",
    // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(136) / L(59)
    "\xbe\xb9\xb2\xb9\xcd\xb2\xbd\xca\xb2\xbe\xbe\xb2\xba\xcb\xb2\xbd\xb1\xb2\xbb\xc9\xb2\xb8\xb0\xb2\xce\xce\xb2\xbd\xb0\xb2\xcc\xb9\xb2\xbc\xc9\xb2\xcd\xba\xb2\xba\xbc\xb2\xbd\xba\xb2\xcc\xb9\xb2\xb1\xb0\xb2\xcc\xce\xb2\xbe\xcb\xb2\xbe\xb8\x88\x78\x32\x4e\x27\x2e\x3c\x37\x37",
    // "ASN1_get_object" / M(Xor1) / S(23) / L(15)
    "\x56\x44\x59\x26\x48\x70\x72\x63\x48\x78\x75\x7d\x72\x74\x63\x17",
    // "sel_registerName" / M(Xor3) / S(38) / L(16)
    "\x44\x52\x5b\x68\x45\x52\x50\x5e\x44\x43\x52\x45\x79\x56\x5a\x52\x37",
    // "" / M(None) / S(0) / L(0)
    "\x7f\x05\x3b\xeb\x87\xcf\x54\x51\x8b\xb8\xe4\x4d\x0f\x06\xe2\xfd\x4e\x55\x97\x79\xa1\x45\x8d\x7e\x67\xef\xfb\x07\x18\x1b\x6e\xe0",
    // "" / M(None) / S(0) / L(0)
    "\xcd\x0b\x43\x05\x90\x6a\xad\x98\xcb\xa6\xef\xe0\x84\x2c\x4a\x18\x93\x19\x65\x74\xcd\x51\xec\x33\x00\x0f\x06\xa2\x63\xe1\xcb\xe1",
    // "." / M(Rot) / S(44) / L(1)
    "\x5a\x2c\xf7\xc5\x3a\x00\xf7\x70\x4a\x85\x48\x5d\x90\x1e\x9b\x60",
    // "sha1" / M(Rot) / S(244) / L(4)
    "\x67\x5c\x55\x25\xf4\x0e\x22\x24\x99\x33\x31\x0a\x26\x8e\x13\xe8",
    // "" / M(None) / S(0) / L(0)
    "\x75\xbe\xf8\xd5\x04\x52\x0e\x5d\xe3\xf1\xd2\xb2\x27\x79\x88\xec\x83\x24\xc6\x38\x74\x93\x7f\x6b\xc3\xa3\xbf\x53\x61\xad\xd8\xee",
    // "%02X:" / M(Rot) / S(216) / L(5)
    "\xfd\x08\x0a\x30\x12\xd8\xa0\x89\x71\x67\xa1\x68\x8c\x67\x52\xf2",
    // "Contents/_MASReceipt" / M(Xor2) / S(172) / L(20)
    "\xfa\xd6\xd7\xcd\xdc\xd7\xcd\xca\x96\xe6\xf4\xf8\xea\xeb\xdc\xda\xdc\xd0\xc9\xcd\xb9",
    // "" / M(None) / S(0) / L(0)
    "\xfc\x52\xdf\xda\xd9\x68\x93\xc8\xca\xc9\xfc\x3a\xf4\x29\xbc\xc6\xc5\xf6\xcb\x1a\xbe\x00\xd1\x89\x04\x67\x28\xae\xe8\xbf\x0a\x11",
    // "SHA1" / M(Rot) / S(112) / L(4)
    "\xc3\xb8\xb1\xa1\x70\xbc\x0c\x2a\xf2\xea\x6e\x2e\xe6\x4b\x18\x16",
    // "OBJ_txt2obj" / M(Xor2) / S(115) / L(11)
    "\x2c\x21\x29\x3c\x17\x1b\x17\x51\x0c\x01\x09\x63\x0f\xd9\xf4\xa0",
    // "OBJ_txt2obj" / M(Xor2) / S(3) / L(11)
    "\x5c\x51\x59\x4c\x67\x6b\x67\x21\x7c\x71\x79\x13\x72\x56\x43\xb6",
    // "CFBundleShortVersionString" / M(Xor1) / S(37) / L(26)
    "\x66\x63\x67\x50\x4b\x41\x49\x40\x76\x4d\x4a\x57\x51\x73\x40\x57\x56\x4c\x4a\x4b\x76\x51\x57\x4c\x4b\x42\x25\x74\x71\xc4\x31\x34\xd5\x5f\x1c",
    // "" / M(None) / S(0) / L(0)
    "\x7f\xd1\xf2\x06\x23\xc3\xee\xdf\x69\x99\x7b\x97\x8b\x98\xaa\x6f\xc1\x44\xa0\xab\x1a\xb3\x69\x96\x5e\xd6\xb1\x26\x87\x74\x58\xbe",
    // "" / M(None) / S(0) / L(0)
    "\x77\x5d\xed\x02\xe0\x4a\xd3\x86\x23\x2f\x5f\xc8\x63\xe2\xb8\x0f\x1c\x74\xf7\xfa\x91\x4a\x47\x74\x64\x77\xfe\x76\x05\x78\x19\x0f",
    // "" / M(None) / S(0) / L(0)
    "\x37\x65\x0a\x00\x41\x93\xae\x3d\x69\x69\x7a\x73\x52\x2d\xcf\x74\x54\x3f\x37\xbf\xb4\x9c\x89\x2b\xe9\x8b\x73\xbf\xad\x52\xc9\xff",
    // "IOServiceGetMatchingServices" / M(Xor2) / S(255) / L(28)
    "\x93\x95\x89\xbf\xa8\xac\xb3\xb9\xbf\x9d\xbf\xae\x97\xbb\xae\xb9\xb2\xb3\xb4\xbd\x89\xbf\xa8\xac\xb3\xb9\xbf\xa9\xda\xda\x15\xe2\x56\x6b\xf0\xa6\xa0",
    // "NSApplicationMain" / M(Xor2) / S(235) / L(17)
    "\xb7\xaa\xb8\x89\x89\x95\x90\x9a\x98\x8d\x90\x96\x97\xb4\x98\x90\x97\xf9",
    // "SHA1_Final" / M(Xor2) / S(245) / L(10)
    "\xb6\xad\xa4\xd4\xba\xa3\x8c\x8b\x84\x89\xe5\xeb\x1f\xc3\x0d\x11",
    // "EVP_get_digestbyname" / M(Xor3) / S(61) / L(20)
    "\x17\x04\x02\x0d\x35\x37\x26\x0d\x36\x3b\x35\x37\x21\x26\x30\x2b\x3c\x33\x3f\x37\x52",
    // "" / M(None) / S(0) / L(0)
    "\xbf\x18\x4f\xb0\x37\x85\xf3\x44\x4c\xf3\xb0\x99\x0a\xa3\x68\x85\xf0\xd4\x03\x5e\x2e\x7e\x71\x72\xb2\xe2\x45\xff\x41\xf8\xc8\x75",
    // "IOBSDNameMatching" / M(Xor2) / S(98) / L(17)
    "\x39\x3f\x32\x23\x34\x3e\x11\x1d\x15\x3d\x11\x04\x13\x18\x19\x1e\x17\x70",
    // "" / M(None) / S(0) / L(0)
    "\x85\x1a\x39\xdc\x85\xee\xd3\x10\xdf\x95\x7a\x15\xc4\xc7\x97\x25\x2b\x6c\x32\xb0\x50\xc8\x2b\xc6\x39\xb7\xca\xf9\xcb\x6e\x56\x0e",
    // "sk_value" / M(Xor2) / S(50) / L(8)
    "\x51\x49\x7d\x54\x43\x4e\x57\x47\x22\x4f\x5b\xb4\xdd\x37\x7d\xa0",
    // "ASN1_get_object" / M(Xor2) / S(249) / L(15)
    "\xa8\xba\xa7\xd8\xb6\x8e\x8c\x9d\xb6\x86\x8b\x83\x8c\x8a\x9d\xe9",
    // "en0" / M(Xor1) / S(27) / L(3)
    "\x7e\x75\x2b\x1b\xd9\xa7\xfc\xa5\x9c\xc9\x9e\x4f\x23\x94\xc5\xfc",
    // "IOMasterPort" / M(Xor4) / S(89) / L(12)
    "\xd9\xdf\xdd\xf1\xe3\xe4\xf5\xe2\xc0\xff\xe2\xe4\x90\x0e\xf0\x96",
    // "ASN1_INTEGER_get" / M(Xor3) / S(133) / L(16)
    "\xd7\xc5\xd8\xa7\xc9\xdf\xd8\xc2\xd3\xd1\xd3\xc4\xc9\xf1\xf3\xe2\x96",
    // "sel_registerName" / M(Rot) / S(82) / L(16)
    "\xc5\xb7\xbe\xb1\xc4\xb7\xb9\xbb\xc5\xc6\xb7\xc4\xa0\xb3\xbf\xb7\x52",
    // "glob" / M(Xor1) / S(250) / L(4)
    "\x9d\x96\x95\x98\xfa\xaa\x23\x40\x13\x88\x9b\xa6\xb0\x8e\x88\xe3",
    // "" / M(None) / S(0) / L(0)
    "\x99\x7e\x6f\x22\xbc\xd3\x02\x54\xdc\xe1\x2e\xcf\xdf\xcb\x4a\xc7\xd4\x8b\x16\x67\x8a\xfe\x34\x26\x60\xcb\xc8\x8b\xcd\xa2\x88\x3d",
    // "X509_free" / M(Rot) / S(82) / L(9)
    "\xaa\x87\x82\x8b\xb1\xb8\xc4\xb7\xb7\x52\x6f\x3c\xbe\xa4\xf9\x4b",
    // "d2i_PKCS7_bio" / M(Xor1) / S(35) / L(13)
    "\x47\x11\x4a\x7c\x73\x68\x60\x70\x14\x7c\x41\x4a\x4c\x23\x07\x99",
    // "sk_value" / M(Xor2) / S(208) / L(8)
    "\xb3\xab\x9f\xb6\xa1\xac\xb5\xa5\xc0\x71\xc1\xc0\xdd\xbc\xdc\x50",
    // "CFBundleIdentifier" / M(Rot) / S(95) / L(18)
    "\xa2\xa5\xa1\xd4\xcd\xc3\xcb\xc4\xa8\xc3\xc4\xcd\xd3\xc8\xc5\xc8\xc4\xd1\x5f",
    // "_MASReceipt/receipt" / M(Xor4) / S(210) / L(19)
    "\x37\x25\x29\x3b\x3a\x0d\x0b\x0d\x01\x18\x1c\x47\x1a\x0d\x0b\x0d\x01\x18\x1c\x68",
    // "CFDictionarySetValue" / M(Xor3) / S(17) / L(20)
    "\x65\x60\x62\x4f\x45\x52\x4f\x49\x48\x47\x54\x5f\x75\x43\x52\x70\x47\x4a\x53\x43\x26",
    // "" / M(None) / S(0) / L(0)
    "\x15\xbe\x4a\xf7\xd9\xba\x72\x9e\x53\x94\x35\xbd\x47\xe6\x8b\x04\x39\x49\x17\x96\x0e\x3a\xf8\x88\x60\xb0\xe7\x64\x8e\x75\xda\xc4",
    // "%02x" / M(Rot) / S(84) / L(4)
    "\x79\x84\x86\xcc\x54\x2e\xe6\x8e\x44\x63\x55\xaa\xf9\xaf\x8f\x64",
    // "kSecMatchLimit" / M(Xor1) / S(197) / L(14)
    "\xae\x96\xa0\xa6\x88\xa4\xb1\xa6\xad\x89\xac\xa8\xac\xb1\xc5\x97",
    // "kCFBundleIdentifierKey" / M(Xor2) / S(22) / L(22)
    "\x6a\x42\x47\x43\x74\x6f\x65\x6d\x64\x48\x65\x64\x6f\x75\x68\x67\x68\x64\x73\x4a\x64\x78\x01",
    // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(59) / L(37)
    "\x5e\x5b\x48\x4f\x51\x5e\x6f\x78\x7c\x69\x78\x5e\x72\x6d\x64\x5c\x6d\x6d\x78\x73\x79\x74\x73\x7a\x4d\x7c\x69\x75\x5e\x72\x70\x6d\x72\x73\x78\x73\x69\x1d",
    // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(23) / L(31)
    "\x82\x5a\x5d\x6b\x90\x87\x7c\x5b\x80\x7a\x8b\x80\x86\x85\x78\x89\x90\x6d\x78\x83\x8c\x7c\x5a\x78\x83\x83\x59\x78\x7a\x82\x8a\x17",
    // "CFDateFormatterSetProperty" / M(Rot) / S(46) / L(26)
    "\x71\x74\x72\x8f\xa2\x93\x74\x9d\xa0\x9b\x8f\xa2\xa2\x93\xa0\x81\x93\xa2\x7e\xa0\x9d\x9e\x93\xa0\xa2\xa7\x2e\xd1\x27\x3f\xe5\xb5\xbc\x5c\x8c",
    // "CFArrayGetValueAtIndex" / M(Xor3) / S(162) / L(22)
    "\xfa\xff\xf8\xcb\xcb\xd8\xc0\xfe\xdc\xcd\xef\xd8\xd5\xcc\xdc\xf8\xcd\xf0\xd7\xdd\xdc\xc1\xb9",
    // "PKCS7_free" / M(Rot) / S(129) / L(10)
    "\xd1\xcc\xc4\xd4\xb8\xe0\xe7\xf3\xe6\xe6\x81\x00\xc7\x5b\x19\x64",
    // "" / M(None) / S(0) / L(0)
    "\x44\x70\x27\x35\xd7\xec\x8f\x21\x69\x2c\xb8\x34\x4e\x24\xa3\xef\xc3\xc6\x54\x16\x2f\x16\x8c\xaa\x00\x4a\xe3\x59\x55\xb0\x4d\x7a",
    // "CFBundleGetMainBundle" / M(Xor2) / S(195) / L(21)
    "\x96\x93\x97\xa0\xbb\xb1\xb9\xb0\x92\xb0\xa1\x98\xb4\xbc\xbb\x97\xa0\xbb\xb1\xb9\xb0\xd5",
    // "CC_SHA1" / M(Xor3) / S(206) / L(7)
    "\x9d\x9d\x81\x8d\x96\x9f\xef\xde\x72\x23\x34\x74\x38\x18\x13\xa3",
    // "kCFDateFormatterTimeZone" / M(Xor2) / S(145) / L(24)
    "\xdb\xf3\xf6\xf4\xd1\xc4\xd5\xf6\xdf\xc2\xdd\xd1\xc4\xc4\xd5\xc2\xe4\xd9\xdd\xd5\xea\xdf\xde\xd5\xb0\x7d\x9d\x0c\x17\xe9\x69\x94\xe2",
    // "" / M(None) / S(0) / L(0)
    "\x54\x6c\x91\x85\x22\x0c\xa7\x69\x42\x8d\x8e\xbf\x83\xf1\x44\x5c\xd9\x3a\x74\x24\xe4\x7c\xfc\xb5\xea\x89\x06\x49\xc6\x74\xf3\x39",
    // "CFDataGetBytePtr" / M(Rot) / S(169) / L(16)
    "\xec\xef\xed\x0a\x1d\x0a\xf0\x0e\x1d\xeb\x22\x1d\x0e\xf9\x1d\x1b\xa9",
    // "CFDataGetBytePtr" / M(Rot) / S(217) / L(16)
    "\x1c\x1f\x1d\x3a\x4d\x3a\x20\x3e\x4d\x1b\x52\x4d\x3e\x29\x4d\x4b\xd9",
    // "" / M(None) / S(0) / L(0)
    "\x4e\x0a\xfc\x5b\x77\xeb\x4a\xe2\xba\x99\xeb\xbf\x5a\x35\xbb\x66\x1b\xaa\x8e\x73\x79\x56\x7d\xb0\x74\xc4\xce\xd1\xb9\x57\x58\xd4",
    // "" / M(None) / S(0) / L(0)
    "\xb0\xd9\x0d\xe3\xcf\xb5\x2b\x11\x17\x65\x9e\x64\xf1\xc7\xf0\x47\xb0\x53\xbe\x82\xfd\x56\xcf\x58\xa2\x7b\x5b\xf4\xb9\x3c\x9f\x76",
    // "" / M(None) / S(0) / L(0)
    "\x86\x07\xef\x56\x2d\x6d\xf7\xef\x16\xa0\xe6\xf1\xce\x50\x16\x99\x5a\x21\x2d\xbc\x18\xbe\x45\xc4\x4b\x0a\x4d\xe6\x33\xfb\x8d\x05",
    // "" / M(None) / S(0) / L(0)
    "\xbe\x51\x99\xce\x4b\x7b\x3a\x55\x45\xb5\xa5\xf3\x72\xc8\xec\x68\x2f\xae\x0c\x66\x1b\xd8\xcd\xb5\xea\x0a\x81\x31\x84\x43\x57\xa0",
    // "" / M(None) / S(0) / L(0)
    "\x6b\x3a\xa5\x94\x2d\x7e\x23\x8b\x79\x1c\xaf\x21\x5b\xcd\x1c\x0f\x5b\x21\x11\xe6\x7c\x8f\x96\x48\x97\xbe\x13\x9a\xc0\xe6\x7c\xf6",
    // "IOIteratorNext" / M(Xor4) / S(61) / L(14)
    "\x99\x9f\x99\xa4\xb5\xa2\xb1\xa4\xbf\xa2\x9e\xb5\xa8\xa4\xd0\xe6",
    // "CFDateFormatterSetFormat" / M(Rot) / S(227) / L(24)
    "\x26\x29\x27\x44\x57\x48\x29\x52\x55\x50\x44\x57\x57\x48\x55\x36\x48\x57\x29\x52\x55\x50\x44\x57\xe3\x68\xd4\x19\xae\xe6\xed\xdc\x35",
    // "kSecMatchLimitAll" / M(Xor3) / S(6) / L(17)
    "\x73\x4b\x7d\x7b\x55\x79\x6c\x7b\x70\x54\x71\x75\x71\x6c\x59\x74\x74\x18",
    // "" / M(None) / S(0) / L(0)
    "\x8c\x39\x5b\x59\xc6\x7e\xa1\xda\xe3\x07\x30\xdc\xbd\xaa\xdf\x35\xf7\xed\x35\xc2\x01\x71\xe6\x55\x96\xf0\x72\x4c\xeb\xdc\x67\x26",
    // "BIO_s_mem" / M(Xor2) / S(88) / L(9)
    "\x0a\x01\x07\x17\x3b\x17\x25\x2d\x25\x48\x0f\xe6\x58\x36\xc3\xd0",
    // "EVP_DigestInit" / M(Xor1) / S(6) / L(14)
    "\x43\x50\x56\x59\x42\x6f\x61\x63\x75\x72\x4f\x68\x6f\x72\x06\xbc",
    // "exit" / M(Xor3) / S(139) / L(4)
    "\xfe\xe3\xf2\xef\x9b\xe6\x8b\x04\x39\x49\x17\x96\x0e\x3a\xf8\x88",
    // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(13) / L(39)
    "\x50\x53\x61\x76\x7a\x72\x67\x7c\x7b\x72\x50\x7f\x72\x6e\x81\x72\x64\x76\x81\x75\x61\x76\x7a\x72\x56\x7b\x81\x72\x7f\x83\x6e\x79\x53\x7f\x7c\x7a\x54\x5a\x61\x0d\x80\x5c\x09\xe6\xfe\xc1\xe8\xcd",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor2) / S(224) / L(50)
    "\xfc\x80\xaa\xa0\xa7\xb6\xbe\xfc\x9f\xba\xb1\xa1\xb2\xa1\xaa\xfc\x95\xa1\xb2\xbe\xb6\xa4\xbc\xa1\xb8\xa0\xfc\x92\xa3\xa3\x98\xba\xa7\xfd\xb5\xa1\xb2\xbe\xb6\xa4\xbc\xa1\xb8\xfc\x92\xa3\xa3\x98\xba\xa7\xd3",
    // "X509_digest" / M(Xor1) / S(150) / L(11)
    "\xce\xa3\xa6\xaf\xc9\xf2\xff\xf1\xf3\xe5\xe2\x96\xa1\x09\x3b\x50",
    // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(45) / L(31)
    "\x26\x0e\x0b\x19\x34\x3d\x28\x09\x24\x2e\x39\x24\x22\x23\x2c\x3f\x34\x1b\x2c\x21\x38\x28\x0e\x2c\x21\x21\x0f\x2c\x2e\x26\x3e\x4d",
    // "X509_STORE_free" / M(Xor4) / S(8) / L(15)
    "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xe6\xf2\xe5\xe5\x80",
    // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(93) / L(59)
    "\x93\x8e\x97\x8e\xc2\x97\x92\xbf\x97\x93\x93\x97\x8f\xc0\x97\x92\x96\x97\x90\xbe\x97\x8d\x95\x97\xc3\xc3\x97\x92\x95\x97\xc1\x8e\x97\x91\xbe\x97\xc2\x8f\x97\x8f\x91\x97\x92\x8f\x97\xc1\x8e\x97\x96\x95\x97\xc1\xc3\x97\x93\xc0\x97\x93\x8d\x5d\xec\xec\xaa\x70\x78\x38\xa9\x1b",
    // "" / M(None) / S(0) / L(0)
    "\x03\x54\x9b\x61\x9e\x08\x22\xb1\x14\x21\x90\x0a\xe7\x7d\x9d\x0c\x17\xe9\x69\x94\x6a\xa0\x2e\xe2\xeb\x41\x05\x99\x06\xa8\xb8\xb7",
    // "dlopen" / M(Xor3) / S(66) / L(6)
    "\x36\x3e\x3d\x22\x37\x3c\x52\x43\xa7\xc2\xb4\x51\x39\xe5\x4b\x59",
    // "" / M(None) / S(0) / L(0)
    "\x98\x4d\x5b\x40\x3d\x77\x14\xcc\xe8\xab\x14\x83\xbe\xc1\x7f\x8e\x8b\xd6\xf8\x23\x92\x96\x02\x9d\xa9\x52\x60\x49\xfd\xaf\xfe\x5d",
    // "" / M(None) / S(0) / L(0)
    "\x57\x96\xd2\x7d\xef\xf5\x9f\x46\x75\xa9\x42\x4f\x17\x92\x88\x2e\xd5\xc6\xa9\xd9\x81\x60\xd4\x99\x42\xac\x99\xc1\x92\xfd\x95\xb5",
    // "CFDateCompare" / M(Rot) / S(129) / L(13)
    "\xc4\xc7\xc5\xe2\xf5\xe6\xc4\xf0\xee\xf1\xe2\xf3\xe6\x81\xed\x40",
    // "X509_STORE_add_cert" / M(Rot) / S(91) / L(19)
    "\xb3\x90\x8b\x94\xba\xae\xaf\xaa\xad\xa0\xba\xbc\xbf\xbf\xba\xbe\xc0\xcd\xcf\x5b",
    // "Contents" / M(Xor4) / S(108) / L(8)
    "\x83\xaf\xae\xb4\xa5\xae\xb4\xb3\xc0\x80\x08\xba\x4f\x56\x8a\x75",
    // "CFDateFormatterCreate" / M(Xor4) / S(241) / L(21)
    "\xf5\xf0\xf2\xd7\xc2\xd3\xf0\xd9\xc4\xdb\xd7\xc2\xc2\xd3\xc4\xf5\xc4\xd3\xd7\xc2\xd3\xb6",
    // "SecCertificateCopyData" / M(Xor4) / S(62) / L(22)
    "\xc1\xf7\xf1\xd1\xf7\xe0\xe6\xfb\xf4\xfb\xf1\xf3\xe6\xf7\xd1\xfd\xe2\xeb\xd6\xf3\xe6\xf3\x92",
    // "EVP_MD_CTX_init" / M(Xor2) / S(206) / L(15)
    "\x9b\x88\x8e\x81\x93\x9a\x81\x9d\x8a\x86\x81\xb7\xb0\xb7\xaa\xde",
    // "" / M(None) / S(0) / L(0)
    "\x0e\xa7\x37\x0e\xe3\xe1\xc0\x8c\x97\xbc\x1c\xe5\x14\xe4\xe5\xb4\x92\xb9\x9b\xdb\xc4\x59\x5f\x49\x13\x6c\x19\x1f\x8e\xa9\x9b\x0e",
    // "kSecMatchSubjectContains" / M(Xor3) / S(109) / L(24)
    "\xe5\xdd\xeb\xed\xc3\xef\xfa\xed\xe6\xdd\xfb\xec\xe4\xeb\xed\xfa\xcd\xe1\xe0\xfa\xef\xe7\xe0\xfd\x8e\xda\x72\x4c\x55\x83\x11\x4c\x07",
    // "CFArrayGetValueAtIndex" / M(Rot) / S(100) / L(22)
    "\xa7\xaa\xa5\xd6\xd6\xc5\xdd\xab\xc9\xd8\xba\xc5\xd0\xd9\xc9\xa5\xd8\xad\xd2\xc8\xc9\xdc\x64",
    // "IOObjectRelease" / M(Rot) / S(55) / L(15)
    "\x80\x86\x86\x99\xa1\x9c\x9a\xab\x89\x9c\xa3\x9c\x98\xaa\x9c\x37",
    // "" / M(None) / S(0) / L(0)
    "\xa4\x2d\x55\x98\x6c\x5b\xb1\x88\xe4\x14\x75\x8d\xb9\x79\xf4\x44\x71\x4f\x02\xe2\x29\x81\xbb\xc2\x17\xb8\xa2\xcc\x94\x4d\xc3\xe3",
    // "" / M(None) / S(0) / L(0)
    "\x2d\x57\x45\x60\x85\x3b\xab\x23\x96\xe1\xc4\x1b\xa0\x42\x81\x97\xf4\xa1\x85\x4d\xed\x0c\xfb\xa2\xd2\xce\x14\x41\x3c\x54\xd8\xdf",
    // "alloc" / M(Xor3) / S(181) / L(5)
    "\xa4\xa9\xa9\xaa\xa6\xc5\x60\x07\x7c\xe6\x25\xdc\x86\x12\xfa\x27",
    // "X509_free" / M(Xor2) / S(156) / L(9)
    "\xd4\xb9\xbc\xb5\xd3\xea\xfe\xe9\xe9\x8c\xcb\x6a\xae\x1e\xfd\x25",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(129) / L(40)
    "\x87\x80\x80\xf4\x84\xf3\x87\x87\x83\xf2\x84\x88\x82\xf0\x81\x89\xf7\xf7\x84\x89\xf5\x80\x85\xf0\xf4\x83\x83\x85\x84\x83\xf5\x80\x88\x89\xf5\xf7\x87\xf2\x87\x81\xb1\xc3\xf7\x3b\x64\x96\x89\x28\xa2",
    // "longjmp" / M(Rot) / S(235) / L(7)
    "\x57\x5a\x59\x52\x55\x58\x5b\xeb\x3c\x85\x1e\xab\xd7\x6f\x05\x67",
    // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(41) / L(40)
    "\x2e\x29\x29\x5d\x2d\x5a\x2e\x2e\x2a\x5b\x2d\x21\x2b\x59\x28\x20\x5e\x5e\x2d\x20\x5c\x29\x2c\x59\x5d\x2a\x2a\x2c\x2d\x2a\x5c\x29\x21\x20\x5c\x5e\x2e\x5b\x2e\x28\x18\xc4\xcc\x8f\x84\xc3\xa2\x99\x44",
    // "init" / M(Xor2) / S(41) / L(4)
    "\x50\x57\x50\x4d\x39\x60\x33\xe3\x30\x4b\x37\x01\xae\x9d\xa3\xb2",
    // "kSecClass" / M(Rot) / S(249) / L(9)
    "\x64\x4c\x5e\x5c\x3c\x65\x5a\x6c\x6c\xf9\x9e\x20\x78\x21\x32\x3d",
    // "BIO_s_mem" / M(Xor1) / S(156) / L(9)
    "\xde\xd5\xd3\xc3\xef\xc3\xf1\xf9\xf1\x9c\x3a\x61\x34\xbc\x8b\x7d",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(87) / L(66)
    "\x3b\x47\x6d\x67\x60\x71\x79\x3b\x58\x7d\x76\x66\x75\x66\x6d\x3b\x52\x66\x75\x79\x71\x63\x7b\x66\x7f\x67\x3b\x57\x7b\x66\x71\x52\x7b\x61\x7a\x70\x75\x60\x7d\x7b\x7a\x3a\x72\x66\x75\x79\x71\x63\x7b\x66\x7f\x3b\x57\x7b\x66\x71\x52\x7b\x61\x7a\x70\x75\x60\x7d\x7b\x7a\x14",
    // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(170) / L(32)
    "\xb2\xb2\xb2\xb2\xec\xe6\xec\x86\x86\xec\xe6\xec\xaf\xaf\xec\x9f\xec\x83\x83\xec\xf1\xec\xa6\xa6\xec\xf1\xec\xb8\xb8\xec\x91\xec\xcb",
    // "1.2.840.113635.100.6.11.1" / M(Rot) / S(50) / L(25)
    "\x63\x60\x64\x60\x6a\x66\x62\x60\x63\x63\x65\x68\x65\x67\x60\x63\x62\x62\x60\x68\x60\x63\x63\x60\x63\x32\xb2\x4c\x16\x3d\x9b\x6c\xfc\x45",
    // "CFArrayGetCount" / M(Xor4) / S(183) / L(15)
    "\x33\x36\x31\x02\x02\x11\x09\x37\x15\x04\x33\x1f\x05\x1e\x04\x70",
    // "" / M(None) / S(0) / L(0)
    "\xf1\xe0\x1d\x1f\xbf\xf0\xc3\xd2\x91\x8e\xec\xb7\xc4\x84\x8c\x04\x36\x53\x76\x31\x92\x41\x53\x8c\x49\x8e\xca\x8c\xd8\x42\x54\xc8",
    // "%02X" / M(Xor4) / S(46) / L(4)
    "\xc5\xd0\xd2\xb8\xe0\x91\x2d\x52\xad\xf9\x5e\xe4\xa7\xaf\xae\xe7",
    // "" / M(None) / S(0) / L(0)
    "\xeb\x11\x17\xd1\x79\x32\x59\x11\x43\xda\x47\x2d\x4a\xe6\x64\xe7\xe6\x26\x41\x0c\x2a\x4d\x9e\x04\xad\x34\x79\xf7\x11\xca\x10\xb3",
    // "SecKeychainOpen" / M(Xor2) / S(116) / L(15)
    "\x37\x01\x07\x2f\x01\x1d\x07\x0c\x05\x0d\x0a\x2b\x14\x01\x0a\x64",
    // "" / M(None) / S(0) / L(0)
    "\x4e\x1f\x39\xc1\x78\x34\xab\x82\xd0\x46\x01\x66\x13\xf8\x1f\xce\x96\x03\xf1\x9a\x7e\x06\x5e\x2d\x80\xda\x2d\x18\x7a\xcf\xf9\xd8",
    // "CFEqual" / M(Xor4) / S(38) / L(7)
    "\x23\x26\x25\x11\x15\x01\x0c\x60\xa5\x1d\xfb\x0a\x71\x15\x13\x8d",
    // "" / M(None) / S(0) / L(0)
    "\x36\x16\x0e\xac\xfe\x2a\xc6\xb9\x3d\xef\x96\x8e\x38\x80\x10\x14\x5a\x63\x91\xdd\x01\xda\x99\xd5\xa4\x2a\x72\xe9\xbb\x64\x01\x8a",
    // "" / M(None) / S(0) / L(0)
    "\x05\xed\x7c\x94\x48\x5e\x8a\xff\x86\x0a\x96\x1a\x65\xa1\x54\x17\xdb\x8b\x6d\xce\x20\x86\xc0\x8c\xcb\xd6\x53\xcb\xb5\x27\x61\xa4",
    // "" / M(None) / S(0) / L(0)
    "\x01\xd0\xb8\x99\x5b\x55\x96\x37\xb2\x2b\xcf\x60\x2c\x91\x32\x5e\x94\x9a\x3d\x8e\x29\x81\x92\xe5\xc8\xfa\xae\xd6\x2d\x57\xe6\x38",
    // "" / M(None) / S(0) / L(0)
    "\x25\xfa\x36\xf3\x24\xbe\x17\x67\xea\xe1\x9c\xfb\xa2\xf8\xf7\xb7\x45\xf9\xa2\xb9\x99\x27\xf8\x3a\x5e\x64\xcf\x8a\x48\x57\xb9\x43",
    // "CFStringGetFileSystemRepresentation" / M(Rot) / S(88) / L(35)
    "\x9b\x9e\xab\xcc\xca\xc1\xc6\xbf\x9f\xbd\xcc\x9e\xc1\xc4\xbd\xab\xd1\xcb\xcc\xbd\xc5\xaa\xbd\xc8\xca\xbd\xcb\xbd\xc6\xcc\xb9\xcc\xc1\xc7\xc6\x58",
    // "_MASReceipt" / M(Xor4) / S(72) / L(11)
    "\xdf\xcd\xc1\xd3\xd2\xe5\xe3\xe5\xe9\xf0\xf4\x80\xfe\x37\xcd\x16",
    // "CFStringCreateWithCString" / M(Xor4) / S(126) / L(25)
    "\xff\xfa\xef\xc8\xce\xd5\xd2\xdb\xff\xce\xd9\xdd\xc8\xd9\xeb\xd5\xc8\xd4\xff\xef\xc8\xce\xd5\xd2\xdb\xbc\xea\xfc\xf4\xcd\x2c\x91\x43\x11",
    // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(85) / L(25)
    "\x46\x59\x45\x59\x4f\x43\x47\x59\x46\x46\x44\x41\x44\x42\x59\x46\x47\x47\x59\x41\x59\x46\x46\x59\x46\x77\x18\x07\x27\x69\xb8\x7e\x3a\x3f",
    // "" / M(None) / S(0) / L(0)
    "\xf5\x7b\x96\xfd\xb5\xcd\xad\xe6\x69\xd5\x89\x69\xa4\x04\x4a\xf0\x13\x36\x70\x5b\xbb\xda\x61\x64\xc9\x88\x85\x31\xc5\x05\xee\x01",
    // "OpenSSL_add_all_digests" / M(Xor2) / S(7) / L(23)
    "\x68\x57\x42\x49\x74\x74\x6b\x78\x46\x43\x43\x78\x46\x4b\x4b\x78\x43\x4e\x40\x42\x54\x53\x54\x27\x56\x57\x0e\x1e\x03\xfa\xec\xe5",
    // "" / M(None) / S(0) / L(0)
    "\xf0\x19\xb9\x8b\x76\xca\x2c\x34\xe1\x07\xa8\x2e\xf7\xd1\xd3\xbd\x52\x00\x2a\xac\xc9\xb0\xdd\xee\xe8\x83\xd4\xeb\x39\x7b\x1a\x04",
    // "CFDictionaryCreateMutable" / M(Rot) / S(122) / L(25)
    "\xbd\xc0\xbe\xe3\xdd\xee\xe3\xe9\xe8\xdb\xec\xf3\xbd\xec\xdf\xdb\xee\xdf\xc7\xef\xee\xdb\xdc\xe6\xdf\x7a\x32\x0d\x78\xbd\xa5\xb8\x63\xc2",
    // "2.0" / M(Xor1) / S(217) / L(3)
    "\xeb\xf7\xe9\xd9\x7e\x7a\x63\x2e\xfb\xf5\x64\x76\x75\x18\x95\x3b",
    // "kSecMatchLimit" / M(Xor2) / S(27) / L(14)
    "\x60\x58\x6e\x68\x46\x6a\x7f\x68\x63\x47\x62\x66\x62\x7f\x0b\xb2",
    // "CFDataAppendBytes" / M(Xor2) / S(80) / L(17)
    "\x01\x04\x06\x23\x36\x23\x03\x32\x32\x27\x2c\x26\x00\x3b\x36\x27\x31\x42",
    // "CFDataAppendBytes" / M(Xor1) / S(21) / L(17)
    "\x56\x53\x51\x74\x61\x74\x54\x65\x65\x70\x7b\x71\x57\x6c\x61\x70\x66\x15",
    // "SHA1_Update" / M(Xor3) / S(140) / L(11)
    "\xcf\xd4\xdd\xad\xc3\xc9\xec\xf8\xfd\xe8\xf9\x9c\x51\xb8\x22\x84",
    // "%02x:" / M(Xor4) / S(180) / L(5)
    "\x65\x70\x72\x38\x7a\x40\xf4\x02\x2b\x50\xb9\x77\x9a\x46\x1a\x0a",
    // "CFNumberCreate" / M(Xor3) / S(61) / L(14)
    "\x0e\x0b\x03\x38\x20\x2f\x28\x3f\x0e\x3f\x28\x2c\x39\x28\x4d\x73",
    // "" / M(None) / S(0) / L(0)
    "\x2b\xe9\x3e\x03\xb2\xfa\x52\x7c\x2c\x73\xd5\xae\x50\xcf\xa5\xa8\x9f\x79\x28\x53\xa7\x24\x57\xd6\x3d\xb6\x6b\xc3\xd5\xda\xcb\xa1",
    // "kCFTypeArrayCallBacks" / M(Rot) / S(206) / L(21)
    "\x39\x11\x14\x22\x47\x3e\x33\x0f\x40\x40\x2f\x47\x11\x2f\x3a\x3a\x10\x2f\x31\x39\x41\xce",
    // "CFURLCreateFromFileSystemRepresentation" / M(Rot) / S(248) / L(39)
    "\x3b\x3e\x4d\x4a\x44\x3b\x6a\x5d\x59\x6c\x5d\x3e\x6a\x67\x65\x3e\x61\x64\x5d\x4b\x71\x6b\x6c\x5d\x65\x4a\x5d\x68\x6a\x5d\x6b\x5d\x66\x6c\x59\x6c\x61\x67\x66\xf8\xaa\x2a\xb4\xbb\x68\xc0\xf7\x11",
    // "" / M(None) / S(0) / L(0)
    "\x5d\xf0\x32\x8e\xdc\x84\x65\xf4\xc4\xd2\x4e\xf0\x40\xcd\x4b\xd2\x51\x78\x2e\xa8\x48\x8c\x24\x79\xe5\xf8\x9f\x7d\xea\xd7\x70\x51",
    // "CFDictionaryGetValue" / M(Rot) / S(156) / L(20)
    "\xdf\xe2\xe0\x05\xff\x10\x05\x0b\x0a\xfd\x0e\x15\xe3\x01\x10\xf2\xfd\x08\x11\x01\x9c",
    // "EVP_DigestInit" / M(Xor2) / S(73) / L(14)
    "\x1c\x0f\x09\x06\x1d\x30\x3e\x3c\x2a\x2d\x10\x37\x30\x2d\x59\x15",
    // "kSecReturnRef" / M(Xor2) / S(62) / L(13)
    "\x45\x7d\x4b\x4d\x7c\x4b\x5a\x5b\x5c\x40\x7c\x4b\x48\x2e\xa0\x1c",
    // "EVP_MD_CTX_init" / M(Rot) / S(38) / L(15)
    "\x6b\x7c\x76\x85\x73\x6a\x85\x69\x7a\x7e\x85\x8f\x94\x8f\x9a\x26",
    // "X509_STORE_new" / M(Xor4) / S(145) / L(14)
    "\x48\x25\x20\x29\x4f\x43\x44\x5f\x42\x55\x4f\x7e\x75\x67\x10\x06",
    // "RTLD_MAIN_ONLY" / M(Xor4) / S(9) / L(14)
    "\xc2\xc4\xdc\xd4\xcf\xdd\xd1\xd9\xde\xcf\xdf\xde\xdc\xc9\x90\x94",
    // "" / M(None) / S(0) / L(0)
    "\x80\xd8\xae\x8d\xcf\xfb\x34\xf7\x6b\x05\x32\xfb\x3b\xa4\xbe\x81\x7c\x9b\x75\x7a\x76\x48\x65\x3e\xae\xcd\xf2\xbd\x1f\x40\x17\x49",
    // "CFBundleVersion" / M(Xor1) / S(136) / L(15)
    "\xcb\xce\xca\xfd\xe6\xec\xe4\xed\xde\xed\xfa\xfb\xe1\xe7\xe6\x88",
    // "globfree" / M(Xor4) / S(201) / L(8)
    "\xf7\xfc\xff\xf2\xf6\xe2\xf5\xf5\x90\xba\x24\xc4\x94\x49\xa2\x05",
    // "" / M(None) / S(0) / L(0)
    "\x50\x4e\x3f\x09\x85\x56\x41\x89\x3a\x77\x55\xd1\xf1\xc0\x01\xda\xf6\xbe\x90\x32\x9d\x40\xc7\x02\x9d\x5c\xaf\x7d\x7a\x40\x10\x7d",
    // "%02x:" / M(Xor2) / S(210) / L(5)
    "\xe7\xf2\xf0\xba\xf8\xc2\xc3\x0f\xbc\x28\x0e\xca\xdb\x6e\x0c\xbc",
    // "SHA1_Init" / M(Xor4) / S(59) / L(9)
    "\xe3\xf8\xf1\x81\xef\xf9\xde\xd9\xc4\xb0\xf1\x91\x79\x60\x28\xd7",
    // "IOBSDNameMatching" / M(Xor4) / S(83) / L(17)
    "\x9f\x99\x94\x85\x92\x98\xb7\xbb\xb3\x9b\xb7\xa2\xb5\xbe\xbf\xb8\xb1\xd6",
    // "EVP_DigestInit" / M(Xor4) / S(233) / L(14)
    "\xd5\xc6\xc0\xcf\xd4\xf9\xf7\xf5\xe3\xe4\xd9\xfe\xf9\xe4\x90\xd6",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(152) / L(36)
    "\xfe\xfb\xff\xc8\xd3\xd9\xd1\xd8\xfa\xd8\xc9\xeb\xdc\xd1\xc8\xd8\xfb\xd2\xcf\xf4\xd3\xdb\xd2\xf9\xd4\xde\xc9\xd4\xd2\xd3\xdc\xcf\xc4\xf6\xd8\xc4\xbd",
    // "kSecMatchLimit" / M(Xor2) / S(242) / L(14)
    "\x89\xb1\x87\x81\xaf\x83\x96\x81\x8a\xae\x8b\x8f\x8b\x96\xe2\x8d",
    // "CFDateCompare" / M(Rot) / S(186) / L(13)
    "\xfd\x00\xfe\x1b\x2e\x1f\xfd\x29\x27\x2a\x1b\x2c\x1f\xba\x54\xcd",
    // "PKCS7_free" / M(Xor1) / S(105) / L(10)
    "\x39\x22\x2a\x3a\x5e\x36\x0f\x1b\x0c\x0c\x69\x58\xe2\x1e\x28\x24",
    // "SHA1_Final" / M(Xor4) / S(108) / L(10)
    "\x93\x88\x81\xf1\x9f\x86\xa9\xae\xa1\xac\xc0\xa4\x4b\x46\x0f\x25",
    // "IOObjectRelease" / M(Xor1) / S(206) / L(15)
    "\x87\x81\x81\xac\xa4\xab\xad\xba\x9c\xab\xa2\xab\xaf\xbd\xab\xce",
    // "CFURLCreateCopyAppendingPathComponent" / M(Rot) / S(156) / L(37)
    "\xdf\xe2\xf1\xee\xe8\xdf\x0e\x01\xfd\x10\x01\xdf\x0b\x0c\x15\xdd\x0c\x0c\x01\x0a\x00\x05\x0a\x03\xec\xfd\x10\x04\xdf\x0b\x09\x0c\x0b\x0a\x01\x0a\x10\x9c",
    // "CC_SHA1_Final" / M(Xor3) / S(113) / L(13)
    "\xc2\xc2\xde\xd2\xc9\xc0\xb0\xde\xc7\xe8\xef\xe0\xed\x81\x3e\x82",
    // "" / M(None) / S(0) / L(0)
    "\x9e\x94\x73\x5c\xd8\xa6\xd1\x80\x77\x8d\xf0\x3c\xd1\x81\xc8\xf8\xc3\xbe\x38\xaf\xf1\xe7\xfc\x1b\xc8\x5b\x61\x79\x5b\x1a\x15\x6d",
    // "X509_NAME_get_text_by_NID" / M(Xor2) / S(123) / L(25)
    "\x01\x6c\x69\x60\x06\x17\x18\x14\x1c\x06\x3e\x3c\x2d\x06\x2d\x3c\x21\x2d\x06\x3b\x20\x06\x17\x10\x1d\x59\x23\x3b\x68\xdd\x6d\x00\x1c\x8c",
    // "" / M(None) / S(0) / L(0)
    "\x97\xf6\x19\x09\x1f\x07\x25\x2c\x42\x6b\x75\x74\xf3\xf9\xf8\x0c\x38\x50\xe8\x17\x38\x70\x19\x2a\x62\x96\x10\xb2\xf0\x5f\xbd\xef",
    // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(67) / L(66)
    "\xa6\xda\xf0\xfa\xfd\xec\xe4\xa6\xc5\xe0\xeb\xfb\xe8\xfb\xf0\xa6\xcf\xfb\xe8\xe4\xec\xfe\xe6\xfb\xe2\xfa\xa6\xca\xe6\xfb\xec\xcf\xe6\xfc\xe7\xed\xe8\xfd\xe0\xe6\xe7\xa7\xef\xfb\xe8\xe4\xec\xfe\xe6\xfb\xe2\xa6\xca\xe6\xfb\xec\xcf\xe6\xfc\xe7\xed\xe8\xfd\xe0\xe6\xe7\x89",
    // "CFStringCompare" / M(Xor4) / S(129) / L(15)
    "\x53\x56\x43\x64\x62\x79\x7e\x77\x53\x7f\x7d\x60\x71\x62\x75\x10",
    // "X509_NAME_get_text_by_NID" / M(Xor4) / S(160) / L(25)
    "\x18\x75\x70\x79\x1f\x0e\x01\x0d\x05\x1f\x27\x25\x34\x1f\x34\x25\x38\x34\x1f\x22\x39\x1f\x0e\x09\x04\x40\xfc\x71\x58\x56\x1b\x63\xcf\x7a",
    // "CFReadStreamCreateWithFile" / M(Rot) / S(125) / L(26)
    "\xc0\xc3\xcf\xe2\xde\xe1\xd0\xf1\xef\xe2\xde\xea\xc0\xef\xe2\xde\xf1\xe2\xd4\xe6\xf1\xe5\xc3\xe6\xe9\xe2\x7d\x5e\xce\x0d\x8d\xbb\xf0\xe8\x4d",
    // "CFDataCreateMutable" / M(Xor3) / S(96) / L(19)
    "\x37\x32\x30\x15\x00\x15\x37\x06\x11\x15\x00\x11\x39\x01\x00\x15\x16\x18\x11\x74",
    // "CFDictionaryGetValue" / M(Xor3) / S(119) / L(20)
    "\xcf\xca\xc8\xe5\xef\xf8\xe5\xe3\xe2\xed\xfe\xf5\xcb\xe9\xf8\xda\xed\xe0\xf9\xe9\x8c",
    // "" / M(None) / S(0) / L(0)
    "\x68\x0b\xfd\x9f\xc2\x40\xa3\x89\x8a\x1e\xc3\x40\x4a\x73\x70\xf6\xf2\x08\x59\xb2\xb8\xcb\x7f\x36\xc8\x5c\x7a\x2e\x6b\x81\xf1\x91",
    // "SecKeychainSearchCopyNext" / M(Rot) / S(240) / L(25)
    "\x43\x55\x53\x3b\x55\x69\x53\x58\x51\x59\x5e\x43\x55\x51\x62\x53\x58\x33\x5f\x60\x69\x3e\x55\x68\x64\xf0\xc1\xb4\x95\xea\x4e\xdd\x6e\x1a",
    // "kCFBundleIdentifierKey" / M(Rot) / S(19) / L(22)
    "\x7e\x56\x59\x55\x88\x81\x77\x7f\x78\x5c\x77\x78\x81\x87\x7c\x79\x7c\x78\x85\x5e\x78\x8c\x13",
    // "" / M(None) / S(0) / L(0)
    "\x79\x60\x28\xd7\xff\x8a\x07\x7a\x91\xad\x31\x0a\xb0\x43\x69\xba\x43\xd6\xe6\x77\xac\xe9\x0c\xd7\xac\x1f\x10\x64\x2d\x10\x37\xa3",
    // "start" / M(Xor1) / S(77) / L(5)
    "\x3e\x39\x2c\x3f\x39\x4d\x07\x61\x85\x2e\xd3\x89\xe5\x1a\xef\x98",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(200) / L(57)
    "\x25\x59\x73\x79\x7e\x6f\x67\x25\x46\x63\x68\x78\x6b\x78\x73\x25\x41\x6f\x73\x69\x62\x6b\x63\x64\x79\x25\x59\x73\x79\x7e\x6f\x67\x58\x65\x65\x7e\x49\x6f\x78\x7e\x63\x6c\x63\x69\x6b\x7e\x6f\x79\x24\x61\x6f\x73\x69\x62\x6b\x63\x64\x0a\x29\xde\x11\xed\x8f\x2d\x12\xbc",
    // "CFDataCreateMutable" / M(Xor4) / S(173) / L(19)
    "\xc7\xc2\xc0\xe5\xf0\xe5\xc7\xf6\xe1\xe5\xf0\xe1\xc9\xf1\xf0\xe5\xe6\xe8\xe1\x84",
    // "exit" / M(Xor1) / S(101) / L(4)
    "\x00\x1d\x0c\x11\x65\xc7\xb6\x6b\xc7\x86\x67\x82\x40\xf5\x42\xac",
    // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(6) / L(24)
    "\x85\x80\x87\xa4\xb5\xa9\xaa\xb3\xb2\xa3\x92\xaf\xab\xa3\x81\xa3\xb2\x85\xb3\xb4\xb4\xa3\xa8\xb2\xc6\x39\x81\xc7\xae\x49\x56\xce\xf3",
    // "objc_getClass" / M(Rot) / S(194) / L(13)
    "\x31\x24\x2c\x25\x21\x29\x27\x36\x05\x2e\x23\x35\x35\xc2\x72\x44",
    // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(153) / L(40)
    "\xfc\xfb\xfb\xaf\xff\xa8\xfc\xfc\xf8\xa9\xff\xf3\xf9\xab\xfa\xf2\xac\xac\xff\xf2\xae\xfb\xfe\xab\xaf\xf8\xf8\xfe\xff\xf8\xae\xfb\xf3\xf2\xae\xac\xfc\xa9\xfc\xfa\xca\x55\xc1\x08\x81\xdd\x0d\x6a\xeb",
    // "" / M(None) / S(0) / L(0)
    "\xd8\x83\xe2\x96\x7d\x30\xdb\xad\xb4\xd3\x8f\xf7\xe7\x47\x56\x3a\xa2\xda\x12\xcd\xd1\x59\x2e\xb6\x3a\x38\x48\xd9\xf3\x71\xc1\xc0",
    // "sk_free" / M(Xor4) / S(61) / L(7)
    "\xa3\xbb\x8f\xb6\xa2\xb5\xb5\xd0\x85\xbe\xf4\xe7\x94\xa1\x0d\x46",
    // "PKCS7_get0_signers" / M(Xor3) / S(209) / L(18)
    "\xb4\xaf\xa7\xb7\xd3\xbb\x83\x81\x90\xd4\xbb\x97\x8d\x83\x8a\x81\x96\x97\xe4",
    // "CFDateFormatterCreate" / M(Xor3) / S(155) / L(21)
    "\xf2\xf7\xf5\xd0\xc5\xd4\xf7\xde\xc3\xdc\xd0\xc5\xc5\xd4\xc3\xf2\xc3\xd4\xd0\xc5\xd4\xb1",
    // "CFReadStreamOpen" / M(Rot) / S(252) / L(16)
    "\x3f\x42\x4e\x61\x5d\x60\x4f\x70\x6e\x61\x5d\x69\x4b\x6c\x61\x6a\xfc",
    // "SecKeychainSearchCopyNext" / M(Xor4) / S(174) / L(25)
    "\x4f\x79\x7f\x57\x79\x65\x7f\x74\x7d\x75\x72\x4f\x79\x7d\x6e\x7f\x74\x5f\x73\x6c\x65\x52\x79\x64\x68\x1c\x17\x49\x50\x4e\x3f\x09\x89\x41",
    // "init" / M(Xor1) / S(53) / L(4)
    "\x5c\x5b\x5c\x41\x35\x83\xa8\x14\xc3\x7a\x9c\x83\xb6\xfc\xa7\x96",
    // "strlen" / M(Xor1) / S(236) / L(6)
    "\x9f\x98\x9e\x80\x89\x82\xec\x98\x35\x17\x4d\xd7\x59\xe1\xec\xa9",
    // "CFBundleShortVersionString" / M(Xor4) / S(250) / L(26)
    "\x6d\x68\x6c\x5b\x40\x4a\x42\x4b\x7d\x46\x41\x5c\x5a\x78\x4b\x5c\x5d\x47\x41\x40\x7d\x5a\x5c\x47\x40\x49\x2e\x49\x8f\x88\x20\xe5\x3b\x12\x97",
    // "SecItemCopyMatching" / M(Xor4) / S(127) / L(19)
    "\xbf\x89\x8f\xa5\x98\x89\x81\xaf\x83\x9c\x95\xa1\x8d\x98\x8f\x84\x85\x82\x8b\xec",
    // "" / M(None) / S(0) / L(0)
    "\xdd\xbc\xdc\x50\xeb\x28\x68\xdd\x7e\x6e\x95\xe8\x35\x64\x9e\x1b\x4f\xb3\x43\x23\x26\xbd\xa9\xf6\x4e\x8f\x4f\x17\x9d\x9a\x9c\x49",
    // "" / M(None) / S(0) / L(0)
    "\x0a\x1f\x91\xd8\x7a\x79\x87\x18\xf7\x9d\x80\xd9\xb6\x99\x27\xa4\xa1\x09\x3b\x50\x7f\x9c\x0f\x2f\xa0\x34\x87\x4c\x15\x02\x6f\x3c",
    // "SecKeychainOpen" / M(Xor3) / S(109) / L(15)
    "\x2e\x18\x1e\x36\x18\x04\x1e\x15\x1c\x14\x13\x32\x0d\x18\x13\x7d",
    // "dlsym" / M(Xor2) / S(29) / L(5)
    "\x69\x61\x7e\x74\x60\x0d\x4f\xb0\x37\x85\xf3\x44\x4c\xf3\xb0\x99",
    // "IORegistryEntryGetParentEntry" / M(Xor2) / S(241) / L(29)
    "\x9e\x98\x85\xb2\xb0\xbe\xa4\xa3\xa5\xae\x92\xb9\xa3\xa5\xae\x90\xb2\xa3\x87\xb6\xa5\xb2\xb9\xa3\x92\xb9\xa3\xa5\xae\xd7\xe2\xac\x4b\x34\x96\xe3\x2c\x19",
    // "Apple Root CA" / M(Xor1) / S(158) / L(13)
    "\xdf\xee\xee\xf2\xfb\xbe\xcc\xf1\xf1\xea\xbe\xdd\xdf\x9e\x8c\x0c",
    // "" / M(None) / S(0) / L(0)
    "\xbe\xa4\xf9\x4b\x65\xb0\x9a\xe9\x5c\xb8\x6e\x34\x04\xe6\x6a\xfb\xaa\x99\x4c\x1f\xda\xa0\xa5\x03\x9c\x3e\x1e\x7a\xf2\xa1\x49\x33",
    // "CC_SHA1_Init" / M(Xor3) / S(73) / L(12)
    "\x1a\x1a\x06\x0a\x11\x18\x68\x06\x10\x37\x30\x2d\x59\x96\xab\x2e",
    // "X509_STORE_free" / M(Xor4) / S(102) / L(15)
    "\x38\x55\x50\x59\x3f\x33\x34\x2f\x32\x25\x3f\x06\x12\x05\x05\x60",
    // "X509_STORE_free" / M(Xor4) / S(71) / L(15)
    "\x28\x45\x40\x49\x2f\x23\x24\x3f\x22\x35\x2f\x16\x02\x15\x15\x70",
    // "glob_b" / M(Xor2) / S(74) / L(6)
    "\x3d\x36\x35\x38\x05\x38\x5a\x8b\x31\xf9\xa4\x87\x6f\xbd\x4f\x35",
    // "" / M(None) / S(0) / L(0)
    "\x38\xbf\x2e\x7a\x0e\x6e\xfa\x0a\x7a\x12\x12\x4a\x5b\x6d\xd9\x15\x1d\xe9\x7b\x59\xaa\x75\x2f\x58\xca\xfe\xd9\x77\xe9\xd7\x29\xad",
    // "SHA1" / M(Xor2) / S(40) / L(4)
    "\x6b\x70\x79\x09\x38\x96\x10\xb2\xf0\x5f\xbd\xef\x68\x0b\xfd\x9f",
    // "start" / M(Xor1) / S(159) / L(5)
    "\xec\xeb\xfe\xed\xeb\x9f\x9c\xf8\xcf\xad\x98\xa7\xaf\x0d\x4d\xf0",
    // "" / M(None) / S(0) / L(0)
    "\x86\x5c\x15\x61\xae\x45\xf0\xe1\xe2\xd9\xaa\xb6\x76\xd8\x98\x1d\x98\x1c\x10\x39\xf3\x3e\xb8\xe9\xde\x54\x52\x28\xda\xd0\x00\xae",
    // "X509_digest" / M(Xor3) / S(138) / L(11)
    "\xc2\xaf\xaa\xa3\xc5\xfe\xf3\xfd\xff\xe9\xee\x9a\xa3\xcc\xdb\xea",
    // "" / M(None) / S(0) / L(0)
    "\x03\xe6\xc2\x3c\x18\xa5\x7c\x7a\x24\x05\xe7\x47\x8a\x81\x75\xa3\x20\x72\x1c\x7f\x7c\x6e\xe8\xb9\x04\x85\x59\xab\xa1\x8d\x04\x57",
    // "setDelegate:" / M(Xor3) / S(44) / L(12)
    "\x4f\x59\x48\x78\x59\x50\x59\x5b\x5d\x48\x59\x06\x3c\xaa\x7b\xe4",
    // "" / M(None) / S(0) / L(0)
    "\xb8\xb8\x52\xff\x7e\x7a\x63\x2e\xfb\xf5\x64\x76\x75\x18\x95\x3b\xed\x52\xf7\xc5\x3a\x00\xf7\x70\x4a\x85\x48\x5d\x90\x1e\x9b\x60",
    // "BIO_write" / M(Xor4) / S(6) / L(9)
    "\x22\x29\x2f\x3f\x17\x12\x09\x14\x05\x60\x71\xde\x0b\x40\xd9\xdc",
    // "" / M(None) / S(0) / L(0)
    "\x00\x40\xbf\x4e\xf5\x1a\xad\x94\xab\xd1\x6e\x4a\x6f\xf9\x77\x5c\x29\x43\x88\xbd\x22\x72\x17\xe4\xa1\xed\x34\x58\x7d\xf5\xc7\xec",
    // "sk_free" / M(Rot) / S(65) / L(7)
    "\xb4\xac\xa0\xa7\xb3\xa6\xa6\x41\x2d\x10\x37\xa3\xd8\x83\xe2\x96",
    // "setDelegate:" / M(Rot) / S(51) / L(12)
    "\xa6\x98\xa7\x77\x98\x9f\x98\x9a\x94\xa7\x98\x6d\x33\xcc\xa3\x2f",
    // "d2i_X509_bio" / M(Xor2) / S(184) / L(12)
    "\xcc\x9a\xc1\xf7\xf0\x9d\x98\x91\xf7\xca\xc1\xc7\xa8\xe1\x96\xd1",
    // "" / M(None) / S(0) / L(0)
    "\xc6\xf8\x5c\x44\x00\xae\xc3\x0f\xbc\x28\x0e\xca\xdb\x6e\x0c\xbc\xd3\xfa\x3c\x36\xdc\xe2\xdd\x29\x25\x5e\x13\x26\xa8\xa9\xd3\x26",
    // "SKReceiptRefreshRequest" / M(Xor3) / S(113) / L(23)
    "\xc2\xda\xc3\xf4\xf2\xf4\xf8\xe1\xe5\xc3\xf4\xf7\xe3\xf4\xe2\xf9\xc3\xf4\xe0\xe4\xf4\xe2\xe5\x91\x81\xcb\x8c\x0e\xcc\x5d\xbc\x59",
    // "X509_STORE_add_cert" / M(Xor3) / S(139) / L(19)
    "\xc7\xaa\xaf\xa6\xc0\xcc\xcb\xd0\xcd\xda\xc0\xfe\xfb\xfb\xc0\xfc\xfa\xed\xeb\x9f",
    // "EVP_MD_CTX_init" / M(Xor2) / S(81) / L(15)
    "\x04\x17\x11\x1e\x0c\x05\x1e\x02\x15\x19\x1e\x28\x2f\x28\x35\x41",
    // "CFBundleIdentifier" / M(Xor1) / S(191) / L(18)
    "\xfc\xf9\xfd\xca\xd1\xdb\xd3\xda\xf6\xdb\xda\xd1\xcb\xd6\xd9\xd6\xda\xcd\xbf",
    // "kSecMatchSearchList" / M(Xor4) / S(199) / L(19)
    "\xe7\xdf\xe9\xef\xc1\xed\xf8\xef\xe4\xdf\xe9\xed\xfe\xef\xe4\xc0\xe5\xff\xf8\x8c",
    // "CFReadStreamCreateWithFile" / M(Xor1) / S(87) / L(26)
    "\x14\x11\x05\x32\x36\x33\x04\x23\x25\x32\x36\x3a\x14\x25\x32\x36\x23\x32\x00\x3e\x23\x3f\x11\x3e\x3b\x32\x57\xc0\x26\x13\x10\xbe\xfb\x86\x1c",
    // "/usr/lib/libSystem.dylib" / M(Xor4) / S(253) / L(24)
    "\xb2\xe8\xee\xef\xb2\xf1\xf4\xff\xb2\xf1\xf4\xff\xce\xe4\xee\xe9\xf8\xf0\xb3\xf9\xe4\xf1\xf4\xff\x9d\x84\x80\x18\x96\xc4\x5c\xf1\x9c",
    // "" / M(Xor4) / S(215) / L(0)
    "\x70\x5a\xc4\xfb\xe6\x9d\x56\x67\xbc\x10\x3a\x65\x61\x5d\x4e\x18",
    // "c2i_ASN1_INTEGER" / M(Rot) / S(12) / L(16)
    "\x6f\x3e\x75\x6b\x4d\x5f\x5a\x3d\x6b\x55\x5a\x60\x51\x53\x51\x5e\x0c",
    // "" / M(None) / S(0) / L(0)
    "\xbb\x99\x47\x97\xce\x16\x80\x52\x40\x5d\x0d\xde\x80\x0e\x8e\xce\x30\x3d\x0d\x20\x17\xbc\x9e\xc8\x96\x59\xbb\xe7\x86\xdd\xb1\x85",
    // "SHA1_Init" / M(Xor2) / S(47) / L(9)
    "\x6c\x77\x7e\x0e\x60\x76\x51\x56\x4b\x3f\xa2\xe9\xcd\xbc\x3a\xb6",
    // "SHA1_Final" / M(Rot) / S(133) / L(10)
    "\xd8\xcd\xc6\xb6\xe4\xcb\xee\xf3\xe6\xf1\x85\xf6\xf2\x08\x59\xb2",
    // "c2i_ASN1_INTEGER" / M(Xor2) / S(20) / L(16)
    "\x66\x37\x6c\x5a\x44\x56\x4b\x34\x5a\x4c\x4b\x51\x40\x42\x40\x57\x05",
    // "CFArrayGetCount" / M(Xor4) / S(106) / L(15)
    "\xe3\xe6\xe1\xd2\xd2\xc1\xd9\xe7\xc5\xd4\xe3\xcf\xd5\xce\xd4\xa0",
    // "en0" / M(Xor1) / S(217) / L(3)
    "\xbc\xb7\xe9\xd9\x08\x73\xfa\xa3\xae\x01\xa4\x9c\x25\xe5\xc9\x2b",
    // "Contents/_MASReceipt" / M(Xor4) / S(254) / L(20)
    "\x95\xb9\xb8\xa2\xb3\xb8\xa2\xa5\xf9\x89\x9b\x97\x85\x84\xb3\xb5\xb3\xbf\xa6\xa2\xd6",
    // "" / M(None) / S(0) / L(0)
    "\x20\x7b\x7e\xc1\x87\x7d\xac\x1f\xd8\x53\x82\xe1\x91\x69\x9d\x14\x63\xcb\x63\xe1\x9c\x59\x6c\xc3\x00\x8f\x29\xde\x11\xed\x8f\x2d",
    // "glob" / M(Xor3) / S(107) / L(4)
    "\x1c\x17\x14\x19\x7b\x75\xda\xc4\x44\x70\x27\x35\xd7\xec\x8f\x21",
    // "EVP_DigestFinal" / M(Xor1) / S(234) / L(15)
    "\xaf\xbc\xba\xb5\xae\x83\x8d\x8f\x99\x9e\xac\x83\x84\x8b\x86\xea",
    // "CFDictionaryAddValue" / M(Xor2) / S(171) / L(20)
    "\xfd\xf8\xfa\xd7\xdd\xca\xd7\xd1\xd0\xdf\xcc\xc7\xff\xda\xda\xe8\xdf\xd2\xcb\xdb\xbe",
    // "" / M(None) / S(0) / L(0)
    "\x51\xe6\xbc\x12\x17\x99\x03\x4a\x5b\x6e\xe0\xbe\x67\xbb\x14\x46\xc8\xc2\x43\x9c\xff\xd5\x30\x06\x03\x1d\x31\x22\xab\xd0\x23\xac",
    // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(130) / L(50)
    "\xad\xd1\xfb\xf1\xf6\xe7\xef\xad\xce\xeb\xe0\xf0\xe3\xf0\xfb\xad\xc4\xf0\xe3\xef\xe7\xf5\xed\xf0\xe9\xf1\xad\xc3\xf2\xf2\xc9\xeb\xf6\xac\xe4\xf0\xe3\xef\xe7\xf5\xed\xf0\xe9\xad\xc3\xf2\xf2\xc9\xeb\xf6\x82",
    // "SecKeychainOpen" / M(Xor2) / S(97) / L(15)
    "\x22\x14\x12\x3a\x14\x08\x12\x19\x10\x18\x1f\x3e\x01\x14\x1f\x71",
    // "ASN1_INTEGER_free" / M(Xor4) / S(179) / L(17)
    "\xd7\xc5\xd8\xa7\xc9\xdf\xd8\xc2\xd3\xd1\xd3\xc4\xc9\xf0\xe4\xf3\xf3\x96",
    // "receipt" / M(Xor4) / S(125) / L(7)
    "\xa2\xb5\xb3\xb5\xb9\xa0\xa4\xd0\xa8\x83\x95\x85\xf6\xc0\x18\x71",
    // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(130) / L(48)
    "\x9c\xe0\xca\xc0\xc7\xd6\xde\x9c\xff\xda\xd1\xc1\xd2\xc1\xca\x9c\xf5\xc1\xd2\xde\xd6\xc4\xdc\xc1\xd8\xc0\x9c\xfa\xfc\xf8\xda\xc7\x9d\xd5\xc1\xd2\xde\xd6\xc4\xdc\xc1\xd8\x9c\xfa\xfc\xf8\xda\xc7\xb3",
    // "" / M(None) / S(0) / L(0)
    "\x80\xd9\x34\xee\xc9\xb3\x50\x6a\x6a\x02\x09\xf5\xa0\xbf\xfa\x8c\xe5\xe1\xd7\x11\xa1\x12\x33\xeb\xe2\x91\x20\x7c\xce\xbf\x6f\xc9",
    // "BIO_s_mem" / M(Xor4) / S(166) / L(9)
    "\x22\x29\x2f\x3f\x13\x3f\x0d\x05\x0d\x60\x25\x23\xe0\x01\x70\x22",
    // "receipt" / M(Xor3) / S(223) / L(7)
    "\x9d\x8a\x8c\x8a\x86\x9f\x9b\xef\x6c\xbe\x51\xa9\x54\xc9\x51\x3a",
    // "kSecClassCertificate" / M(Xor3) / S(166) / L(20)
    "\xd0\xe8\xde\xd8\xf8\xd7\xda\xc8\xc8\xf8\xde\xc9\xcf\xd2\xdd\xd2\xd8\xda\xcf\xde\xbb",
    // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(156) / L(36)
    "\xdf\xda\xde\xe9\xf2\xf8\xf0\xf9\xdb\xf9\xe8\xca\xfd\xf0\xe9\xf9\xda\xf3\xee\xd5\xf2\xfa\xf3\xd8\xf5\xff\xe8\xf5\xf3\xf2\xfd\xee\xe5\xd7\xf9\xe5\x9c",
    // "PKCS7_verify" / M(Xor1) / S(51) / L(12)
    "\x63\x78\x70\x60\x04\x6c\x45\x56\x41\x5a\x55\x4a\x33\xfa\x52\x7c",
    // "" / M(None) / S(0) / L(0)
    "\xf6\x92\xb2\x4c\x16\x3d\x9b\x6c\xac\x7f\x45\xfc\xa6\xff\x9e\x7a\x9c\xfb\xdf\x01\x9b\x2a\x74\x42\x1e\xda\x75\x34\x46\x01\x8e\x11",
    // "CFReadStreamClose" / M(Xor2) / S(137) / L(17)
    "\xd8\xdd\xc9\xfe\xfa\xff\xc8\xef\xe9\xfe\xfa\xf6\xd8\xf7\xf4\xe8\xfe\x9b",
    // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor1) / S(210) / L(57)
    "\xfd\x81\xab\xa1\xa6\xb7\xbf\xfd\x9e\xbb\xb0\xa0\xb3\xa0\xab\xfd\x99\xb7\xab\xb1\xba\xb3\xbb\xbc\xa1\xfd\x81\xab\xa1\xa6\xb7\xbf\x80\xbd\xbd\xa6\x91\xb7\xa0\xa6\xbb\xb4\xbb\xb1\xb3\xa6\xb7\xa1\xfc\xb9\xb7\xab\xb1\xba\xb3\xbb\xbc\xd2\xd0\x05\xd8\x6c\xfb\xed\x7c\xc3",
    // "" / M(None) / S(0) / L(0)
    "\xbf\xea\xca\x85\x56\xbb\x06\xfd\xfa\x47\xff\x52\x58\xce\xdb\x1f\x9b\xea\x03\x7c\x8d\x92\xca\xab\x78\xa8\x04\x09\x9a\x23\xa7\xf8",
    // "" / M(None) / S(0) / L(0)
    "\xd6\x6f\x70\x43\x8f\x7a\x80\xf6\x5d\x46\x47\x8d\x1e\xca\x15\x9f\x79\xbf\xff\xb7\x19\xc7\x77\xd8\xb4\x82\x4b\x27\x66\x5c\x8f\x6a",
    // "alloc" / M(Xor3) / S(10) / L(5)
    "\x7b\x76\x76\x75\x79\x1a\x7a\x88\x30\xbc\x6e\x71\x78\xc5\x3b\xcf",
};

// Table for storing pointers
static void *ReceiptValidation_Pointers[608] = {
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) strlen),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) globfree),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestUpdate),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) glob_b),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) X509_get_ext_by_OBJ),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_new),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_PKCS7_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strncmp),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) ASN1_OBJECT_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithBytes),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_num),
    ((void *) dlopen),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) glob),
    ((void *) NULL),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) OBJ_txt2obj),
    ((void *) OBJ_txt2obj),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Final),
    ((void *) EVP_get_digestbyname),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_value),
    ((void *) ASN1_get_object),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_get),
    ((void *) NULL),
    ((void *) glob),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) d2i_PKCS7_bio),
    ((void *) sk_value),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlopen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) CFStringCreateWithCString),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) OpenSSL_add_all_digests),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Update),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) EVP_MD_CTX_init),
    ((void *) X509_STORE_new),
    ((void *) RTLD_MAIN_ONLY),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) globfree),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) NULL),
    ((void *) EVP_DigestInit),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_free),
    ((void *) SHA1_Final),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_NAME_get_text_by_NID),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) PKCS7_get0_signers),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) strlen),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) dlsym),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_free),
    ((void *) X509_STORE_free),
    ((void *) glob_b),
    ((void *) NULL),
    ((void *) SHA1),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_digest),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_write),
    ((void *) NULL),
    ((void *) sk_free),
    ((void *) NULL),
    ((void *) d2i_X509_bio),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) X509_STORE_add_cert),
    ((void *) EVP_MD_CTX_init),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) SHA1_Init),
    ((void *) SHA1_Final),
    ((void *) c2i_ASN1_INTEGER),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) glob),
    ((void *) EVP_DigestFinal),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) ASN1_INTEGER_free),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) BIO_s_mem),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) PKCS7_verify),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
    ((void *) NULL),
};

// Push a new diagnostic context
#pragma clang diagnostic push
// When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
// In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
// In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"

// Global variables
static int ReceiptValidation_TPAMUMCIMUJI __unused;
static int ReceiptValidation_QFTLSXPQXRZQ __unused;
static int ReceiptValidation_XQTZCGXTOMRV __unused;
static int ReceiptValidation_UBKHBSHWTCVT __unused;
static int ReceiptValidation_THYDFRJHWWUN __unused;
static int ReceiptValidation_PEYLDRWHJIRJ __unused;
static int ReceiptValidation_FLUAORRUQXJR __unused;
static int ReceiptValidation_IOIKCHZOKKFQ __unused;


#define ReceiptValidation_ASN1_get_object_01F20185 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction008, 389, 249, 16))
#define ReceiptValidation_ASN1_INTEGER_free_01610124 ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction003, 292, 171, 18))
#define ReceiptValidation_ASN1_INTEGER_get_0161013A ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction00C, 314, 157, 17))
#define ReceiptValidation_ASN1_OBJECT_free_007F0084 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction009, 132, 198, 17))
#define ReceiptValidation_BIO_free_01F200C5 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction003, 197, 21, 16))
#define ReceiptValidation_BIO_free_01F20148 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction00A, 328, 216, 16))
#define ReceiptValidation_BIO_new_007F00E6 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction00B, 230, 195, 16))
#define ReceiptValidation_BIO_new_01F200DC ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction004, 220, 17, 16))
#define ReceiptValidation_BIO_s_mem_007F0255 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction00B, 597, 166, 16))
#define ReceiptValidation_BIO_s_mem_016101AB ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction007, 427, 88, 16))
#define ReceiptValidation_BIO_write_01610080 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction003, 128, 145, 16))
#define ReceiptValidation_BIO_write_01610234 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction00C, 564, 6, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_007F0242 ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction003, 578, 12, 17))
#define ReceiptValidation_CC_SHA1_00420164 ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction009, 356, 84, 16))
#define ReceiptValidation_CC_SHA1_Update_024000A1 ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction00C, 161, 83, 16))
#define ReceiptValidation_CFArrayAppendValue_02060012 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00C, 18, 24, 19))
#define ReceiptValidation_CFArrayCreateMutable_0206009E ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction007, 158, 142, 21))
#define ReceiptValidation_CFArrayGetValueAtIndex_00D10199 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00A, 409, 162, 23))
#define ReceiptValidation_CFArrayGetValueAtIndex_01CC002F ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, 47, 155, 23))
#define ReceiptValidation_CFBundleGetMainBundle_020600C7 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction004, 199, 172, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_01CC00BA ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction008, 186, 177, 33))
#define ReceiptValidation_CFDataAppendBytes_00D101E4 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, 484, 80, 18))
#define ReceiptValidation_CFDataAppendBytes_01CC01E4 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction008, 484, 80, 18))
#define ReceiptValidation_CFDataAppendBytes_020600D4 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction005, 212, 146, 18))
#define ReceiptValidation_CFDataCreate_02060002 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction009, 2, 233, 16))
#define ReceiptValidation_CFDataCreateMutable_00D100B1 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction004, 177, 33, 20))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_02060144 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00A, 324, 52, 36))
#define ReceiptValidation_CFDateFormatterSetProperty_00D1004E ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, 78, 203, 35))
#define ReceiptValidation_CFDictionaryAddValue_02060103 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction003, 259, 154, 21))
#define ReceiptValidation_CFDictionaryGetValue_00D10008 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, 8, 28, 21))
#define ReceiptValidation_CFDictionarySetValue_01CC00CC ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction008, 204, 212, 21))
#define ReceiptValidation_CFNumberCreate_00D10069 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction004, 105, 218, 16))
#define ReceiptValidation_CFReadStreamCreateWithFile_00D1008F ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00C, 143, 99, 35))
#define ReceiptValidation_CFReadStreamCreateWithFile_0206023F ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction006, 575, 87, 35))
#define ReceiptValidation_CFReadStreamOpen_00D1012B ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction007, 299, 121, 17))
#define ReceiptValidation_CFReadStreamOpen_01CC021B ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction003, 539, 252, 17))
#define ReceiptValidation_CFRelease_00D10007 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00B, 7, 252, 16))
#define ReceiptValidation_CFRelease_00D10026 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction007, 38, 226, 16))
#define ReceiptValidation_CFRelease_00D10105 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction009, 261, 82, 16))
#define ReceiptValidation_CFRelease_01CC0007 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00B, 7, 252, 16))
#define ReceiptValidation_CFRelease_01CC0026 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction007, 38, 226, 16))
#define ReceiptValidation_CFRelease_01CC0105 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction009, 261, 82, 16))
#define ReceiptValidation_CFRelease_02060026 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction007, 38, 226, 16))
#define ReceiptValidation_CFRelease_02060105 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction009, 261, 82, 16))
#define ReceiptValidation_d2i_PKCS7_bio_007F011A ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction008, 282, 115, 16))
#define ReceiptValidation_d2i_PKCS7_bio_01F2018D ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction005, 397, 35, 16))
#define ReceiptValidation_d2i_X509_bio_01F20238 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction007, 568, 184, 16))
#define ReceiptValidation_EVP_DigestFinal_01F20033 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction00A, 51, 89, 16))
#define ReceiptValidation_EVP_DigestInit_01F201EE ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction008, 494, 73, 16))
#define ReceiptValidation_EVP_DigestUpdate_007F001E ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction005, 30, 115, 17))
#define ReceiptValidation_EVP_get_digestbyname_01610180 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction00A, 384, 61, 21))
#define ReceiptValidation_EVP_MD_CTX_init_007F023C ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction008, 572, 81, 16))
#define ReceiptValidation_exit_00150082 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction00B, 130, 14, 16))
#define ReceiptValidation_exit_001501AD ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction009, 429, 139, 16))
#define ReceiptValidation_exit_00150213 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction006, 531, 101, 16))
#define ReceiptValidation_exit_00420082 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction00B, 130, 14, 16))
#define ReceiptValidation_exit_004201AD ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction009, 429, 139, 16))
#define ReceiptValidation_exit_00420213 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction006, 531, 101, 16))
#define ReceiptValidation_exit_02400082 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction00B, 130, 14, 16))
#define ReceiptValidation_exit_02400213 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction006, 531, 101, 16))
#define ReceiptValidation_TPAMUMCIMUJI_00D100DD ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_TPAMUMCIMUJI, 212, 52))
#define ReceiptValidation_TPAMUMCIMUJI_01130250 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_TPAMUMCIMUJI, 97, 16))
#define ReceiptValidation_TPAMUMCIMUJI_01CC0017 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_TPAMUMCIMUJI, 131, 16))
#define ReceiptValidation_TPAMUMCIMUJI_01CC00B8 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_TPAMUMCIMUJI, 199, 16))
#define ReceiptValidation_TPAMUMCIMUJI_01CC0258 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_TPAMUMCIMUJI, 156, 37))
#define ReceiptValidation_TPAMUMCIMUJI_02060117 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_TPAMUMCIMUJI, 66, 16))
#define ReceiptValidation_TPAMUMCIMUJI_02060207 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_TPAMUMCIMUJI, 129, 16))
#define ReceiptValidation_TPAMUMCIMUJI_0206021A ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_TPAMUMCIMUJI, 155, 22))
#define ReceiptValidation_TPAMUMCIMUJI_02530187 ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 595, 130, 49, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_TPAMUMCIMUJI, 89, 16))
#define ReceiptValidation_QFTLSXPQXRZQ_00D10247 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_QFTLSXPQXRZQ, 106, 16))
#define ReceiptValidation_QFTLSXPQXRZQ_015C0122 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 348, 36, 49, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_QFTLSXPQXRZQ, 86, 38))
#define ReceiptValidation_QFTLSXPQXRZQ_01CC020A ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_QFTLSXPQXRZQ, 96, 20))
#define ReceiptValidation_QFTLSXPQXRZQ_01CC020B ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_QFTLSXPQXRZQ, 119, 21))
#define ReceiptValidation_QFTLSXPQXRZQ_02060065 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_QFTLSXPQXRZQ, 227, 36))
#define ReceiptValidation_QFTLSXPQXRZQ_020601E5 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_QFTLSXPQXRZQ, 21, 18))
#define ReceiptValidation_XQTZCGXTOMRV_00D10008 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_XQTZCGXTOMRV, 28, 21))
#define ReceiptValidation_XQTZCGXTOMRV_00D100CD ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_XQTZCGXTOMRV, 69, 48))
#define ReceiptValidation_XQTZCGXTOMRV_00D100FB ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_XQTZCGXTOMRV, 254, 34))
#define ReceiptValidation_XQTZCGXTOMRV_01CC00D8 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_XQTZCGXTOMRV, 18, 22))
#define ReceiptValidation_XQTZCGXTOMRV_01CC0115 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XQTZCGXTOMRV, 103, 16))
#define ReceiptValidation_XQTZCGXTOMRV_025301F9 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 595, 130, 49, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_XQTZCGXTOMRV, 83, 18))
#define ReceiptValidation_UBKHBSHWTCVT_00D100FB ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_UBKHBSHWTCVT, 254, 34))
#define ReceiptValidation_UBKHBSHWTCVT_01CC00E5 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_UBKHBSHWTCVT, 20, 21))
#define ReceiptValidation_UBKHBSHWTCVT_01CC0117 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_UBKHBSHWTCVT, 66, 16))
#define ReceiptValidation_UBKHBSHWTCVT_01CC014E ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_UBKHBSHWTCVT, 162, 38))
#define ReceiptValidation_UBKHBSHWTCVT_0206006C ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_UBKHBSHWTCVT, 39, 16))
#define ReceiptValidation_UBKHBSHWTCVT_02060083 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_UBKHBSHWTCVT, 22, 17))
#define ReceiptValidation_THYDFRJHWWUN_0109021C ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_THYDFRJHWWUN, 174, 34))
#define ReceiptValidation_THYDFRJHWWUN_015C0167 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 348, 36, 49, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_THYDFRJHWWUN, 51, 16))
#define ReceiptValidation_THYDFRJHWWUN_01CC0076 ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_THYDFRJHWWUN, 91, 33))
#define ReceiptValidation_THYDFRJHWWUN_020601A0 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_THYDFRJHWWUN, 169, 17))
#define ReceiptValidation_THYDFRJHWWUN_0206020B ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_THYDFRJHWWUN, 119, 21))
#define ReceiptValidation_THYDFRJHWWUN_0206025B ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_THYDFRJHWWUN, 137, 18))
#define ReceiptValidation_THYDFRJHWWUN_02400202 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_THYDFRJHWWUN, 113, 16))
#define ReceiptValidation_PEYLDRWHJIRJ_00D101D5 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_PEYLDRWHJIRJ, 38, 16))
#define ReceiptValidation_PEYLDRWHJIRJ_00D10212 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_PEYLDRWHJIRJ, 173, 20))
#define ReceiptValidation_PEYLDRWHJIRJ_01AF017E ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 431, 224, 51, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_PEYLDRWHJIRJ, 235, 18))
#define ReceiptValidation_PEYLDRWHJIRJ_02060012 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_PEYLDRWHJIRJ, 24, 19))
#define ReceiptValidation_PEYLDRWHJIRJ_02060069 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_PEYLDRWHJIRJ, 218, 16))
#define ReceiptValidation_PEYLDRWHJIRJ_020600B8 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_PEYLDRWHJIRJ, 199, 16))
#define ReceiptValidation_PEYLDRWHJIRJ_020601B8 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_PEYLDRWHJIRJ, 129, 16))
#define ReceiptValidation_PEYLDRWHJIRJ_025300AD ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 595, 130, 49, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_PEYLDRWHJIRJ, 144, 32))
#define ReceiptValidation_FLUAORRUQXJR_00420100 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_FLUAORRUQXJR, 13, 16))
#define ReceiptValidation_FLUAORRUQXJR_00D100BE ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_FLUAORRUQXJR, 86, 17))
#define ReceiptValidation_FLUAORRUQXJR_00D100F6 ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_FLUAORRUQXJR, 13, 48))
#define ReceiptValidation_FLUAORRUQXJR_00D10117 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_FLUAORRUQXJR, 66, 16))
#define ReceiptValidation_FLUAORRUQXJR_0113004F ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_FLUAORRUQXJR, 254, 23))
#define ReceiptValidation_FLUAORRUQXJR_0158003D ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 344, 185, 49, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_FLUAORRUQXJR, 165, 37))
#define ReceiptValidation_FLUAORRUQXJR_02060038 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_FLUAORRUQXJR, 212, 16))
#define ReceiptValidation_FLUAORRUQXJR_020601A1 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_FLUAORRUQXJR, 217, 17))
#define ReceiptValidation_FLUAORRUQXJR_02060258 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_FLUAORRUQXJR, 156, 37))
#define ReceiptValidation_IOIKCHZOKKFQ_01CC024D ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_IOIKCHZOKKFQ, 171, 21))
#define ReceiptValidation_IOIKCHZOKKFQ_02060069 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_IOIKCHZOKKFQ, 218, 16))
#define ReceiptValidation_IOIKCHZOKKFQ_020600D0 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_IOIKCHZOKKFQ, 251, 33))
#define ReceiptValidation_IOIKCHZOKKFQ_0206013D ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_IOIKCHZOKKFQ, 125, 22))
#define ReceiptValidation_IOIKCHZOKKFQ_020601E8 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_IOIKCHZOKKFQ, 61, 16))
#define ReceiptValidation_IOIKCHZOKKFQ_0206020B ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_IOIKCHZOKKFQ, 119, 21))
#define ReceiptValidation_IOObjectRelease_025301C1 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 595, 130, 49, ReceiptValidation_ObfuscationFunction003, 449, 55, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_02060195 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction008, 405, 22, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_00D1019E ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, 414, 145, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_00D101EA ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction003, 490, 206, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01CC01EA ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction003, 490, 206, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_020601EA ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction003, 490, 206, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00D10092 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction005, 146, 37, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00D100AB ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction00C, 171, 75, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_02060092 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 518, 67, 67, ReceiptValidation_ObfuscationFunction005, 146, 37, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D10021 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 209, 209, 67, ReceiptValidation_ObfuscationFunction008, 33, 236, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC0197 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction003, 407, 23, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC01B1 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 460, 87, 67, ReceiptValidation_ObfuscationFunction00A, 433, 45, 32))
#define ReceiptValidation_kSecClass_01130063 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction00B, 99, 21, 16))
#define ReceiptValidation_kSecClass_011301CA ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction003, 458, 249, 16))
#define ReceiptValidation_kSecClassCertificate_01090032 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction004, 50, 165, 21))
#define ReceiptValidation_kSecClassCertificate_0140010A ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 320, 76, 55, ReceiptValidation_ObfuscationFunction00A, 266, 150, 21))
#define ReceiptValidation_kSecMatchLimit_010901E3 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction007, 483, 27, 16))
#define ReceiptValidation_kSecMatchLimit_010901FC ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction008, 508, 242, 16))
#define ReceiptValidation_kSecMatchLimitAll_010901A9 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction009, 425, 6, 18))
#define ReceiptValidation_kSecMatchLimitAll_01400131 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 320, 76, 55, ReceiptValidation_ObfuscationFunction00C, 305, 218, 18))
#define ReceiptValidation_kSecMatchSearchList_01130067 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction004, 103, 30, 20))
#define ReceiptValidation_kSecMatchSearchList_01130106 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction003, 262, 126, 20))
#define ReceiptValidation_kSecMatchSubjectContains_0109012D ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction004, 301, 129, 33))
#define ReceiptValidation_kSecMatchSubjectContains_010901BF ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction00A, 447, 109, 33))
#define ReceiptValidation_kSecReturnRef_0109005D ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 265, 238, 55, ReceiptValidation_ObfuscationFunction00B, 93, 19, 16))
#define ReceiptValidation_kSecReturnRef_014000D3 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 320, 76, 55, ReceiptValidation_ObfuscationFunction007, 211, 144, 16))
#define ReceiptValidation_longjmp_001500BD ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction004, 189, 165, 16))
#define ReceiptValidation_longjmp_00150169 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction00A, 361, 33, 16))
#define ReceiptValidation_longjmp_001501C7 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction004, 455, 235, 16))
#define ReceiptValidation_longjmp_004200BD ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction004, 189, 165, 16))
#define ReceiptValidation_longjmp_00420169 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 66, 35, 33, ReceiptValidation_ObfuscationFunction00A, 361, 33, 16))
#define ReceiptValidation_longjmp_02400169 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction00A, 361, 33, 16))
#define ReceiptValidation_longjmp_024001C7 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 576, 253, 33, ReceiptValidation_ObfuscationFunction004, 455, 235, 16))
#define ReceiptValidation_OBJ_txt2obj_01610177 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction008, 375, 115, 16))
#define ReceiptValidation_objc_getClass_0072007C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction008, 124, 142, 16))
#define ReceiptValidation_objc_getClass_00720215 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction004, 533, 194, 16))
#define ReceiptValidation_objc_getClass_009A007C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction008, 124, 142, 16))
#define ReceiptValidation_objc_getClass_009A0215 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction004, 533, 194, 16))
#define ReceiptValidation_objc_getClass_00DA0053 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction00A, 83, 97, 16))
#define ReceiptValidation_objc_getClass_00DA007C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction008, 124, 142, 16))
#define ReceiptValidation_objc_getClass_00DA0215 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction004, 533, 194, 16))
#define ReceiptValidation_objc_msgSend_0072001B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction00A, 27, 221, 16))
#define ReceiptValidation_objc_msgSend_00720075 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction005, 117, 16, 16))
#define ReceiptValidation_objc_msgSend_00720118 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction005, 280, 116, 16))
#define ReceiptValidation_objc_msgSend_009A001B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction00A, 27, 221, 16))
#define ReceiptValidation_objc_msgSend_009A0075 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction005, 117, 16, 16))
#define ReceiptValidation_objc_msgSend_009A0118 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction005, 280, 116, 16))
#define ReceiptValidation_objc_msgSend_00DA001B ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction00A, 27, 221, 16))
#define ReceiptValidation_objc_msgSend_00DA0075 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction005, 117, 16, 16))
#define ReceiptValidation_objc_msgSend_00DA0118 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction005, 280, 116, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_007F003A ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction006, 58, 99, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_01F201DF ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction007, 479, 7, 32))
#define ReceiptValidation_PKCS7_free_016101FE ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction005, 510, 105, 16))
#define ReceiptValidation_PKCS7_free_01F2019A ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction003, 410, 129, 16))
#define ReceiptValidation_PKCS7_get0_signers_007F0088 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction00B, 136, 1, 19))
#define ReceiptValidation_PKCS7_verify_007F0049 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction004, 73, 140, 16))
#define ReceiptValidation_SecItemCopyMatching_01400028 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 320, 76, 55, ReceiptValidation_ObfuscationFunction005, 40, 110, 20))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_011300F5 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 275, 68, 55, ReceiptValidation_ObfuscationFunction004, 245, 223, 38))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_014000F5 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 320, 76, 55, ReceiptValidation_ObfuscationFunction004, 245, 223, 38))
#define ReceiptValidation_sel_registerName_007200FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction006, 253, 110, 17))
#define ReceiptValidation_sel_registerName_0072016D ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction00A, 365, 38, 17))
#define ReceiptValidation_sel_registerName_00720189 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 114, 144, 23, ReceiptValidation_ObfuscationFunction004, 393, 82, 17))
#define ReceiptValidation_sel_registerName_009A00FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction006, 253, 110, 17))
#define ReceiptValidation_sel_registerName_009A016D ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction00A, 365, 38, 17))
#define ReceiptValidation_sel_registerName_009A0189 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 154, 110, 23, ReceiptValidation_ObfuscationFunction004, 393, 82, 17))
#define ReceiptValidation_sel_registerName_00DA00FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 218, 127, 23, ReceiptValidation_ObfuscationFunction006, 253, 110, 17))
#define ReceiptValidation_setjmp_0015006D ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 21, 103, 33, ReceiptValidation_ObfuscationFunction006, 109, 51, 16))
#define ReceiptValidation_SHA1_016100CE ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction003, 206, 101, 16))
#define ReceiptValidation_SHA1_Final_016101FF ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction00B, 511, 108, 16))
#define ReceiptValidation_SHA1_Init_01F20097 ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction009, 151, 139, 16))
#define ReceiptValidation_SHA1_Update_007F0036 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction00B, 54, 194, 16))
#define ReceiptValidation_sk_free_01610236 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction003, 566, 65, 16))
#define ReceiptValidation_sk_num_01F2008B ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction003, 139, 173, 16))
#define ReceiptValidation_sk_value_016100A5 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction008, 165, 226, 16))
#define ReceiptValidation_X509_digest_01F20154 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction00C, 340, 17, 16))
#define ReceiptValidation_X509_free_016100AA ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction009, 170, 4, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_007F00FC ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 127, 132, 16, ReceiptValidation_ObfuscationFunction00A, 252, 86, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_01F20208 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction00B, 520, 160, 34))
#define ReceiptValidation_X509_STORE_add_cert_016101B9 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 353, 142, 16, ReceiptValidation_ObfuscationFunction004, 441, 91, 20))
#define ReceiptValidation_X509_STORE_free_01F2022A ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction00C, 554, 71, 16))
#define ReceiptValidation_X509_STORE_new_01F200AC ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 498, 9, 16, ReceiptValidation_ObfuscationFunction005, 172, 127, 16))


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Rot)
inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[133])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[25])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor1)
inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[476])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[53])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor2)
inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[133])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[25])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor3)
inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[133])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
    ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[25])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
    return ReceiptValidation_str1;
}


// CodeBlock ObfuscationFunction / M(Xor4)
inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    int ReceiptValidation_i1 = 0;
    while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
}

__RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
    char ReceiptValidation_tmp1[608];
    ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
    CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[142])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
    return ReceiptValidation_str1;
}


// CodeBlock LookupFunction
inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
    char ReceiptValidation_tmp1[608], ReceiptValidation_tmp2[608];
    // Load the library if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
        ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
        ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[248])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
    }
    // Load the function if needed
    if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
        ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
        ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[291])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
    }
    return ReceiptValidation_Pointers[ReceiptValidation_index2];
}




// CodeBlock GetMainBundle
#ifdef DEBUG
inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
    // Retrieve the main bundle
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_020600C7();
    if (!ReceiptValidation_bundle) {
        // Dead code
        ReceiptValidation_CFRelease_02060026(ReceiptValidation_bundle);
        ReceiptValidation_CFBundleUnloadExecutable_01CC00BA((CFBundleRef) ReceiptValidation_bundle);
    }
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
    // Global variables computation
    // Set to 221
    ReceiptValidation_TPAMUMCIMUJI = 221;
    // Set to 101
    ReceiptValidation_QFTLSXPQXRZQ = 101;
    // Set to 205
    ReceiptValidation_XQTZCGXTOMRV = 205;
    // Set to 334
    ReceiptValidation_UBKHBSHWTCVT = 334;
    // Set to 603
    ReceiptValidation_THYDFRJHWWUN = 603;
    // Set to 530
    ReceiptValidation_PEYLDRWHJIRJ = 530;
    // Set to 190
    ReceiptValidation_FLUAORRUQXJR = 190;
    // Set to 317
    ReceiptValidation_IOIKCHZOKKFQ = 317;
}
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
    CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_020600C7(); \
    if (!ReceiptValidation_bundle) { \
        ReceiptValidation_CFRelease_02060026(ReceiptValidation_bundle); \
        ReceiptValidation_CFBundleUnloadExecutable_01CC00BA((CFBundleRef) ReceiptValidation_bundle); \
    } \
    ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
    ReceiptValidation_TPAMUMCIMUJI = 221; \
    ReceiptValidation_QFTLSXPQXRZQ = 101; \
    ReceiptValidation_XQTZCGXTOMRV = 205; \
    ReceiptValidation_UBKHBSHWTCVT = 334; \
    ReceiptValidation_THYDFRJHWWUN = 603; \
    ReceiptValidation_PEYLDRWHJIRJ = 530; \
    ReceiptValidation_FLUAORRUQXJR = 190; \
    ReceiptValidation_IOIKCHZOKKFQ = 317; \
}
#endif


// CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt03A(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
    CFReadStreamRef ReceiptValidation_stream;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    volatile int ReceiptValidation_code = 8; ReceiptValidation_code -= 1; ReceiptValidation_code *= 23; ReceiptValidation_code += 12; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
    // Compute the path to the receipt
    ReceiptValidation_url1 = ReceiptValidation_IOIKCHZOKKFQ_0206013D((CFBundleRef) ReceiptValidation_ctx->main_bundle);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[62]), 241, 16);
    ReceiptValidation_url2 = ReceiptValidation_UBKHBSHWTCVT_01CC014E(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url1);
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[37]), 190, 20);
    ReceiptValidation_url1 = ReceiptValidation_UBKHBSHWTCVT_01CC014E(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url2);
    ReceiptValidation_url2 = ReceiptValidation_url1;
    ReceiptValidation_url1 = NULL;
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D1008F(kCFAllocatorDefault, ReceiptValidation_url2);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_00D1012B(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_02400082(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_PEYLDRWHJIRJ_00D10212(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_FLUAORRUQXJR_00D100BE(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_CFDataAppendBytes_020600D4(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_THYDFRJHWWUN_0206025B(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00D10026(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 221 to 391
    ReceiptValidation_TPAMUMCIMUJI -= 91; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1; 
    // From 101 to 290
    ReceiptValidation_QFTLSXPQXRZQ -= 29; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 2; 
    // From 205 to 505
    ReceiptValidation_XQTZCGXTOMRV -= 79; ReceiptValidation_XQTZCGXTOMRV *= 4; ReceiptValidation_XQTZCGXTOMRV += 1; 
    // From 603 to 359
    ReceiptValidation_THYDFRJHWWUN += 474; ReceiptValidation_THYDFRJHWWUN /= 3; 
    // From 530 to 173
    ReceiptValidation_PEYLDRWHJIRJ += 335; ReceiptValidation_PEYLDRWHJIRJ /= 5; 
    // From 190 to 61
    ReceiptValidation_FLUAORRUQXJR += 115; ReceiptValidation_FLUAORRUQXJR /= 5; 
ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00D10026(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url2);
}
#else
#define ReceiptValidation_LoadReceipt03A(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
    CFReadStreamRef ReceiptValidation_stream; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    volatile int ReceiptValidation_code = 8; ReceiptValidation_code -= 1; ReceiptValidation_code *= 23; ReceiptValidation_code += 12;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
    ReceiptValidation_url1 = ReceiptValidation_IOIKCHZOKKFQ_0206013D((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[62]), 241, 16); \
    ReceiptValidation_url2 = ReceiptValidation_UBKHBSHWTCVT_01CC014E(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url1); \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[37]), 190, 20); \
    ReceiptValidation_url1 = ReceiptValidation_UBKHBSHWTCVT_01CC014E(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url2); \
    ReceiptValidation_url2 = ReceiptValidation_url1; \
    ReceiptValidation_url1 = NULL; \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D1008F(kCFAllocatorDefault, ReceiptValidation_url2); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_00D1012B(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_02400082(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_PEYLDRWHJIRJ_00D10212(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_FLUAORRUQXJR_00D100BE(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_CFDataAppendBytes_020600D4(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_THYDFRJHWWUN_0206025B(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00D10026(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_TPAMUMCIMUJI -= 91; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1;  \
    ReceiptValidation_QFTLSXPQXRZQ -= 29; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 2;  \
    ReceiptValidation_XQTZCGXTOMRV -= 79; ReceiptValidation_XQTZCGXTOMRV *= 4; ReceiptValidation_XQTZCGXTOMRV += 1;  \
    ReceiptValidation_THYDFRJHWWUN += 474; ReceiptValidation_THYDFRJHWWUN /= 3;  \
    ReceiptValidation_PEYLDRWHJIRJ += 335; ReceiptValidation_PEYLDRWHJIRJ /= 5;  \
    ReceiptValidation_FLUAORRUQXJR += 115; ReceiptValidation_FLUAORRUQXJR /= 5;  \
ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00D10026(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_url2); \
}
#endif
#endif

#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
inline static void ReceiptValidation_LoadReceipt03A(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1;
    CFURLRef ReceiptValidation_url1 = NULL;
    CFReadStreamRef ReceiptValidation_stream = NULL;
    CFMutableDataRef ReceiptValidation_data;
    CFIndex ReceiptValidation_count;
    uint8_t ReceiptValidation_buffer[608];
    char ReceiptValidation_path[PATH_MAX];
    int ReceiptValidation_status;
    glob_t ReceiptValidation_glob_buffer;
    char *ReceiptValidation_expanded_path;
    volatile int ReceiptValidation_code = 138; ReceiptValidation_code -= 81; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[55]), 236, 16);
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
    // Compute the path to the receipt
    if (!ReceiptValidation_QFTLSXPQXRZQ_02060065(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00420213(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail;
    }
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[394])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[501])(&ReceiptValidation_glob_buffer);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00420213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1);
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail;
    }
    // Get the globbed path
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
    ReceiptValidation_url1 = ReceiptValidation_XQTZCGXTOMRV_00D100CD(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[35])(ReceiptValidation_expanded_path), false);
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[501])(&ReceiptValidation_glob_buffer);
    // Create a stream from the receipt file
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_0206023F(kCFAllocatorDefault, ReceiptValidation_url1);
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_01CC021B(ReceiptValidation_stream)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00420213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1);
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1);
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail;
    }
    // Create the data object that will contains receipt data
    ReceiptValidation_data = ReceiptValidation_PEYLDRWHJIRJ_00D10212(kCFAllocatorDefault, 0);
    // Read the receipt by chunks
    do {
        ReceiptValidation_count = ReceiptValidation_FLUAORRUQXJR_00D100BE(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
        if (ReceiptValidation_count > 0) {
            ReceiptValidation_CFDataAppendBytes_00D101E4(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
        }
    } while (ReceiptValidation_count > 0);
    // Close the stream
    ReceiptValidation_THYDFRJHWWUN_0206025B(ReceiptValidation_stream);
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_ctx->receipt_data);
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
    // Global variables computation
    // From 221 to 391
    ReceiptValidation_TPAMUMCIMUJI -= 91; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1; 
    // From 101 to 290
    ReceiptValidation_QFTLSXPQXRZQ -= 29; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 2; 
    // From 205 to 505
    ReceiptValidation_XQTZCGXTOMRV -= 79; ReceiptValidation_XQTZCGXTOMRV *= 4; ReceiptValidation_XQTZCGXTOMRV += 1; 
    // From 603 to 359
    ReceiptValidation_THYDFRJHWWUN += 474; ReceiptValidation_THYDFRJHWWUN /= 3; 
    // From 530 to 173
    ReceiptValidation_PEYLDRWHJIRJ += 335; ReceiptValidation_PEYLDRWHJIRJ /= 5; 
    // From 190 to 61
    ReceiptValidation_FLUAORRUQXJR += 115; ReceiptValidation_FLUAORRUQXJR /= 5; 
ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail:
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_stream);    
    ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1);
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1);
}
#else
#define ReceiptValidation_LoadReceipt03A(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1; \
    CFURLRef ReceiptValidation_url1 = NULL; \
    CFReadStreamRef ReceiptValidation_stream = NULL; \
    CFMutableDataRef ReceiptValidation_data; \
    CFIndex ReceiptValidation_count; \
    uint8_t ReceiptValidation_buffer[608]; \
    char ReceiptValidation_path[PATH_MAX]; \
    int ReceiptValidation_status; \
    glob_t ReceiptValidation_glob_buffer; \
    char *ReceiptValidation_expanded_path; \
    volatile int ReceiptValidation_code = 138; ReceiptValidation_code -= 81; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[55]), 236, 16); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
    if (!ReceiptValidation_QFTLSXPQXRZQ_02060065(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00420213(ReceiptValidation_code); \
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[394])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
    if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[501])(&ReceiptValidation_glob_buffer); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00420213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1); \
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
    ReceiptValidation_url1 = ReceiptValidation_XQTZCGXTOMRV_00D100CD(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[35])(ReceiptValidation_expanded_path), false); \
    ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[501])(&ReceiptValidation_glob_buffer); \
    ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_0206023F(kCFAllocatorDefault, ReceiptValidation_url1); \
    if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_01CC021B(ReceiptValidation_stream)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00420213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1); \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1); \
        goto ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail; \
    } \
    ReceiptValidation_data = ReceiptValidation_PEYLDRWHJIRJ_00D10212(kCFAllocatorDefault, 0); \
    do { \
        ReceiptValidation_count = ReceiptValidation_FLUAORRUQXJR_00D100BE(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
        if (ReceiptValidation_count > 0) { \
            ReceiptValidation_CFDataAppendBytes_00D101E4(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
        } \
    } while (ReceiptValidation_count > 0); \
    ReceiptValidation_THYDFRJHWWUN_0206025B(ReceiptValidation_stream); \
    if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_ctx->receipt_data); \
    ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
    ReceiptValidation_TPAMUMCIMUJI -= 91; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1;  \
    ReceiptValidation_QFTLSXPQXRZQ -= 29; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 2;  \
    ReceiptValidation_XQTZCGXTOMRV -= 79; ReceiptValidation_XQTZCGXTOMRV *= 4; ReceiptValidation_XQTZCGXTOMRV += 1;  \
    ReceiptValidation_THYDFRJHWWUN += 474; ReceiptValidation_THYDFRJHWWUN /= 3;  \
    ReceiptValidation_PEYLDRWHJIRJ += 335; ReceiptValidation_PEYLDRWHJIRJ /= 5;  \
    ReceiptValidation_FLUAORRUQXJR += 115; ReceiptValidation_FLUAORRUQXJR /= 5;  \
ReceiptValidation_LoadReceipt03A_ReceiptValidation_bail: \
    if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_stream);     \
    ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_str1); \
    if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_url1); \
}
#endif
#endif


// CodeBlock GetGUID
#ifdef DEBUG
inline static void ReceiptValidation_GetGUID045(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    kern_return_t ReceiptValidation_kernResult;
    mach_port_t ReceiptValidation_master_port;
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
    io_iterator_t ReceiptValidation_iterator;
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
    char *ReceiptValidation_str1;
    CFStringRef ReceiptValidation_str2;
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[104]), 2, 16); 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
    // Open a MACH port
    ReceiptValidation_kernResult = ReceiptValidation_TPAMUMCIMUJI_02530187(MACH_PORT_NULL, &ReceiptValidation_master_port);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail;
    }
    // Create a search for primary interface
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[584]), ReceiptValidation_str1_, 217, 16);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_matching_dict = ReceiptValidation_XQTZCGXTOMRV_025301F9(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
    if (!ReceiptValidation_matching_dict) {
        // Dead code
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail;
    }
    // Perform the search
    ReceiptValidation_kernResult = ReceiptValidation_FLUAORRUQXJR_0158003D(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
    if (ReceiptValidation_kernResult != KERN_SUCCESS) {
        // Dead code
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict);
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail;
    }
    // Iterate over the result
    while((ReceiptValidation_service = ReceiptValidation_THYDFRJHWWUN_015C0167(ReceiptValidation_iterator)) != 0) {
        ReceiptValidation_kernResult = ReceiptValidation_QFTLSXPQXRZQ_015C0122(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
        if (ReceiptValidation_kernResult == KERN_SUCCESS) {
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00D10105(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_PEYLDRWHJIRJ_025300AD(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
            ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_parent_service);
        }
        ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_iterator);
        ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_service);
    }
    // Global variables computation
    // From 391 to 592
    ReceiptValidation_TPAMUMCIMUJI -= 194; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1; 
    // From 290 to 583
    ReceiptValidation_QFTLSXPQXRZQ -= 145; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 3; 
    // From 505 to 251
    ReceiptValidation_XQTZCGXTOMRV += 499; ReceiptValidation_XQTZCGXTOMRV /= 4; 
    // From 334 to 229
    ReceiptValidation_UBKHBSHWTCVT += 124; ReceiptValidation_UBKHBSHWTCVT /= 2; 
    // From 359 to 540
    ReceiptValidation_THYDFRJHWWUN -= 179; ReceiptValidation_THYDFRJHWWUN *= 3; 
    // From 173 to 18
    ReceiptValidation_PEYLDRWHJIRJ += 25; ReceiptValidation_PEYLDRWHJIRJ /= 11; 
    // From 61 to 79
    ReceiptValidation_FLUAORRUQXJR -= 35; ReceiptValidation_FLUAORRUQXJR *= 3; ReceiptValidation_FLUAORRUQXJR += 1; 
    // From 317 to 589
    ReceiptValidation_IOIKCHZOKKFQ -= 121; ReceiptValidation_IOIKCHZOKKFQ *= 3; ReceiptValidation_IOIKCHZOKKFQ += 1; 
ReceiptValidation_GetGUID045_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2);
}
#else
#define ReceiptValidation_GetGUID045(ReceiptValidation_ctx) { \
    kern_return_t ReceiptValidation_kernResult; \
    mach_port_t ReceiptValidation_master_port; \
    CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
    io_iterator_t ReceiptValidation_iterator; \
    io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
    char *ReceiptValidation_str1; \
    CFStringRef ReceiptValidation_str2; \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[104]), 2, 16);  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
    ReceiptValidation_kernResult = ReceiptValidation_TPAMUMCIMUJI_02530187(MACH_PORT_NULL, &ReceiptValidation_master_port); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[584]), ReceiptValidation_str1_, 217, 16); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_matching_dict = ReceiptValidation_XQTZCGXTOMRV_025301F9(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
    if (!ReceiptValidation_matching_dict) { \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail; \
    } \
    ReceiptValidation_kernResult = ReceiptValidation_FLUAORRUQXJR_0158003D(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
    if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_matching_dict); \
        goto ReceiptValidation_GetGUID045_ReceiptValidation_bail; \
    } \
    while((ReceiptValidation_service = ReceiptValidation_THYDFRJHWWUN_015C0167(ReceiptValidation_iterator)) != 0) { \
        ReceiptValidation_kernResult = ReceiptValidation_QFTLSXPQXRZQ_015C0122(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
        if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
            if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00D10105(ReceiptValidation_ctx->guid_data); \
            ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_PEYLDRWHJIRJ_025300AD(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
            ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_parent_service); \
        } \
        ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_iterator); \
        ReceiptValidation_IOObjectRelease_025301C1(ReceiptValidation_service); \
    } \
    ReceiptValidation_TPAMUMCIMUJI -= 194; ReceiptValidation_TPAMUMCIMUJI *= 3; ReceiptValidation_TPAMUMCIMUJI += 1;  \
    ReceiptValidation_QFTLSXPQXRZQ -= 145; ReceiptValidation_QFTLSXPQXRZQ *= 4; ReceiptValidation_QFTLSXPQXRZQ += 3;  \
    ReceiptValidation_XQTZCGXTOMRV += 499; ReceiptValidation_XQTZCGXTOMRV /= 4;  \
    ReceiptValidation_UBKHBSHWTCVT += 124; ReceiptValidation_UBKHBSHWTCVT /= 2;  \
    ReceiptValidation_THYDFRJHWWUN -= 179; ReceiptValidation_THYDFRJHWWUN *= 3;  \
    ReceiptValidation_PEYLDRWHJIRJ += 25; ReceiptValidation_PEYLDRWHJIRJ /= 11;  \
    ReceiptValidation_FLUAORRUQXJR -= 35; ReceiptValidation_FLUAORRUQXJR *= 3; ReceiptValidation_FLUAORRUQXJR += 1;  \
    ReceiptValidation_IOIKCHZOKKFQ -= 121; ReceiptValidation_IOIKCHZOKKFQ *= 3; ReceiptValidation_IOIKCHZOKKFQ += 1;  \
ReceiptValidation_GetGUID045_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2); \
}
#endif


// CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA052(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    CFDictionaryRef ReceiptValidation_searchDict = NULL;
    char *ReceiptValidation_str1;
    CFTypeRef ReceiptValidation_str2 = NULL;
    CFIndex ReceiptValidation_idx;
    CFTypeRef ReceiptValidation_results = NULL;
    SecCertificateRef ReceiptValidation_certificate = NULL;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5; 
    const void *ReceiptValidation_searchKeys[5];
    const void *ReceiptValidation_searchValues[5];
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[604]), ReceiptValidation_str1_, 210, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_TPAMUMCIMUJI_01130250(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = ReceiptValidation_UBKHBSHWTCVT_01CC00E5(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00D101EA);
    ReceiptValidation_PEYLDRWHJIRJ_02060012((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[343]), 177, 16);
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_011301CA;
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_0140010A;
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_01130106;
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_010901BF;
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_010901FC;
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01400131;
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_014000D3;
    ReceiptValidation_searchValues[4] = kCFBooleanTrue;
    ReceiptValidation_searchDict = ReceiptValidation_XQTZCGXTOMRV_00D100FB(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_02060092, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC0197);
    while(ReceiptValidation_count2-- > 0) {
        ReceiptValidation_IOIKCHZOKKFQ_01CC024D((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]);
    }
    // Perform the actual search
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_01400028(ReceiptValidation_searchDict, &ReceiptValidation_results);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        // Dead code
        // TODO
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_QFTLSXPQXRZQ_00D10247((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_CFArrayGetValueAtIndex_00D10199((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_02060026(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_FLUAORRUQXJR_0113004F(ReceiptValidation_certificate);
    }
    // Global variables computation
    // From 592 to 279
    ReceiptValidation_TPAMUMCIMUJI += 524; ReceiptValidation_TPAMUMCIMUJI /= 4; 
    // From 251 to 216
    ReceiptValidation_XQTZCGXTOMRV += 181; ReceiptValidation_XQTZCGXTOMRV /= 2; 
    // From 79 to 600
    ReceiptValidation_FLUAORRUQXJR -= 13; ReceiptValidation_FLUAORRUQXJR *= 9; ReceiptValidation_FLUAORRUQXJR += 6; 
ReceiptValidation_GetRootCA052_ReceiptValidation_bail:
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_02060026(ReceiptValidation_str2);
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_02060026(ReceiptValidation_results);
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_02060026(ReceiptValidation_searchDict);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_02060026(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_02060026(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA052(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    CFDictionaryRef ReceiptValidation_searchDict = NULL; \
    char *ReceiptValidation_str1; \
    CFTypeRef ReceiptValidation_str2 = NULL; \
    CFIndex ReceiptValidation_idx; \
    CFTypeRef ReceiptValidation_results = NULL; \
    SecCertificateRef ReceiptValidation_certificate = NULL; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5;  \
    const void *ReceiptValidation_searchKeys[5]; \
    const void *ReceiptValidation_searchValues[5]; \
    volatile int ReceiptValidation_code = 56; ReceiptValidation_code -= 22; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[604]), ReceiptValidation_str1_, 210, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_TPAMUMCIMUJI_01130250(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = ReceiptValidation_UBKHBSHWTCVT_01CC00E5(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_00D101EA); \
    ReceiptValidation_PEYLDRWHJIRJ_02060012((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
    ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[343]), 177, 16); \
    ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_011301CA; \
    ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_0140010A; \
    ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_01130106; \
    ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
    ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_010901BF; \
    ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
    ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_010901FC; \
    ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01400131; \
    ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_014000D3; \
    ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
    ReceiptValidation_searchDict = ReceiptValidation_XQTZCGXTOMRV_00D100FB(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_02060092, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC0197); \
    while(ReceiptValidation_count2-- > 0) { \
        ReceiptValidation_IOIKCHZOKKFQ_01CC024D((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]); \
    } \
    ReceiptValidation_status = ReceiptValidation_SecItemCopyMatching_01400028(ReceiptValidation_searchDict, &ReceiptValidation_results); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
    } \
    for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_QFTLSXPQXRZQ_00D10247((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
        ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_CFArrayGetValueAtIndex_00D10199((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_02060026(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_FLUAORRUQXJR_0113004F(ReceiptValidation_certificate); \
    } \
    ReceiptValidation_TPAMUMCIMUJI += 524; ReceiptValidation_TPAMUMCIMUJI /= 4;  \
    ReceiptValidation_XQTZCGXTOMRV += 181; ReceiptValidation_XQTZCGXTOMRV /= 2;  \
    ReceiptValidation_FLUAORRUQXJR -= 13; ReceiptValidation_FLUAORRUQXJR *= 9; ReceiptValidation_FLUAORRUQXJR += 6;  \
ReceiptValidation_GetRootCA052_ReceiptValidation_bail: \
    if (ReceiptValidation_str2) ReceiptValidation_CFRelease_02060026(ReceiptValidation_str2); \
    if (ReceiptValidation_results) ReceiptValidation_CFRelease_02060026(ReceiptValidation_results); \
    if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_02060026(ReceiptValidation_searchDict); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_02060026(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_02060026(ReceiptValidation_keychain); \
}
#endif
#endif

#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
inline static void ReceiptValidation_GetRootCA052(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    OSStatus ReceiptValidation_status;
    SecKeychainRef ReceiptValidation_keychain = NULL;
    CFTypeRef ReceiptValidation_searchList = NULL;
    char *ReceiptValidation_str1, *ReceiptValidation_str2;
    SecKeychainAttributeList ReceiptValidation_attributeList;
    SecKeychainAttribute ReceiptValidation_attribute;
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
    SecKeychainItemRef ReceiptValidation_itemRef = nil;
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1; 
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2; 
    volatile CFIndex ReceiptValidation_count3 = 3; ReceiptValidation_count3 -= 1; ReceiptValidation_count3 *= 6; ReceiptValidation_count3 += 1; 
    volatile int ReceiptValidation_code = 151; ReceiptValidation_code -= 94; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
    char ReceiptValidation_str1_[608];
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[604]), ReceiptValidation_str1_, 210, 66);
    ReceiptValidation_str1 = ReceiptValidation_str1_;
    ReceiptValidation_status = ReceiptValidation_TPAMUMCIMUJI_01130250(ReceiptValidation_str1, &ReceiptValidation_keychain);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150213(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
    }
    // Create a search list within the system Keychain
    ReceiptValidation_searchList = ReceiptValidation_UBKHBSHWTCVT_01CC00E5(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01CC01EA);
    ReceiptValidation_PEYLDRWHJIRJ_02060012((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
    // Create the criteria dictionary to find the Apple Root CA certificate
    char ReceiptValidation_str2_[608];
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[550]), ReceiptValidation_str2_, 158, 16);
    ReceiptValidation_str2 = ReceiptValidation_str2_;
    ReceiptValidation_attributeList.count = 1;
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
    ReceiptValidation_attribute.tag = kSecLabelItemAttr;
    ReceiptValidation_attribute.data = ReceiptValidation_str2;
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_011300F5(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
    if (ReceiptValidation_status != errSecSuccess) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150213(ReceiptValidation_code);
        // Dead code
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
    }
    // Iterate over the results and copy the certificate data
    while(ReceiptValidation_THYDFRJHWWUN_0109021C(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_ctx->ca_data);
        ReceiptValidation_ctx->ca_data = ReceiptValidation_FLUAORRUQXJR_0113004F((SecCertificateRef) ReceiptValidation_itemRef);
    }
    // Global variables computation
    // From 592 to 279
    ReceiptValidation_TPAMUMCIMUJI += 524; ReceiptValidation_TPAMUMCIMUJI /= 4; 
    // From 251 to 216
    ReceiptValidation_XQTZCGXTOMRV += 181; ReceiptValidation_XQTZCGXTOMRV /= 2; 
    // From 79 to 600
    ReceiptValidation_FLUAORRUQXJR -= 13; ReceiptValidation_FLUAORRUQXJR *= 9; ReceiptValidation_FLUAORRUQXJR += 6; 
ReceiptValidation_GetRootCA052_ReceiptValidation_bail:
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_itemRef);
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_searchRef);
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_searchList);
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_keychain);
}
#else
#define ReceiptValidation_GetRootCA052(ReceiptValidation_ctx) { \
    OSStatus ReceiptValidation_status; \
    SecKeychainRef ReceiptValidation_keychain = NULL; \
    CFTypeRef ReceiptValidation_searchList = NULL; \
    char *ReceiptValidation_str1, *ReceiptValidation_str2; \
    SecKeychainAttributeList ReceiptValidation_attributeList; \
    SecKeychainAttribute ReceiptValidation_attribute; \
    SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
    SecKeychainItemRef ReceiptValidation_itemRef = nil; \
    volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
    volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
    volatile CFIndex ReceiptValidation_count3 = 3; ReceiptValidation_count3 -= 1; ReceiptValidation_count3 *= 6; ReceiptValidation_count3 += 1;  \
    volatile int ReceiptValidation_code = 151; ReceiptValidation_code -= 94; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
    char ReceiptValidation_str1_[608]; \
    ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[604]), ReceiptValidation_str1_, 210, 66); \
    ReceiptValidation_str1 = ReceiptValidation_str1_; \
    ReceiptValidation_status = ReceiptValidation_TPAMUMCIMUJI_01130250(ReceiptValidation_str1, &ReceiptValidation_keychain); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150213(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
    } \
    ReceiptValidation_searchList = ReceiptValidation_UBKHBSHWTCVT_01CC00E5(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01CC01EA); \
    ReceiptValidation_PEYLDRWHJIRJ_02060012((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
    char ReceiptValidation_str2_[608]; \
    ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[550]), ReceiptValidation_str2_, 158, 16); \
    ReceiptValidation_str2 = ReceiptValidation_str2_; \
    ReceiptValidation_attributeList.count = 1; \
    ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
    ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
    ReceiptValidation_attribute.data = ReceiptValidation_str2; \
    ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
    ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_011300F5(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
    if (ReceiptValidation_status != errSecSuccess) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150213(ReceiptValidation_code); \
        goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
    } \
    while(ReceiptValidation_THYDFRJHWWUN_0109021C(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
        if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_ctx->ca_data); \
        ReceiptValidation_ctx->ca_data = ReceiptValidation_FLUAORRUQXJR_0113004F((SecCertificateRef) ReceiptValidation_itemRef); \
    } \
    ReceiptValidation_TPAMUMCIMUJI += 524; ReceiptValidation_TPAMUMCIMUJI /= 4;  \
    ReceiptValidation_XQTZCGXTOMRV += 181; ReceiptValidation_XQTZCGXTOMRV /= 2;  \
    ReceiptValidation_FLUAORRUQXJR -= 13; ReceiptValidation_FLUAORRUQXJR *= 9; ReceiptValidation_FLUAORRUQXJR += 6;  \
ReceiptValidation_GetRootCA052_ReceiptValidation_bail: \
    if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_itemRef); \
    if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_searchRef); \
    if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_searchList); \
    if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_keychain); \
}
#endif
#endif


// CodeBlock CheckBundleIdentifier
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FLUAORRUQXJR_02060258((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_02060195);
    if (ReceiptValidation_TPAMUMCIMUJI_02060117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        volatile int ReceiptValidation_code = 9; ReceiptValidation_code -= 1; ReceiptValidation_code *= 21; ReceiptValidation_code += 5; 
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_02400213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 279 to 600
    ReceiptValidation_TPAMUMCIMUJI -= 129; ReceiptValidation_TPAMUMCIMUJI *= 4; 
    // Set to 279
    ReceiptValidation_UBKHBSHWTCVT = 279;
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_ctx) { \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FLUAORRUQXJR_02060258((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_02060195); \
    if (ReceiptValidation_TPAMUMCIMUJI_02060117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        volatile int ReceiptValidation_code = 9; ReceiptValidation_code -= 1; ReceiptValidation_code *= 21; ReceiptValidation_code += 5;  \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_02400213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1); \
    } \
    ReceiptValidation_TPAMUMCIMUJI -= 129; ReceiptValidation_TPAMUMCIMUJI *= 4;  \
    ReceiptValidation_UBKHBSHWTCVT = 279; \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_str1); \
}
#endif


// CodeBlock CheckBundleVersion
#ifdef DEBUG
inline static void ReceiptValidation_CheckBundleVersion061(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
    volatile int ReceiptValidation_code = 170; ReceiptValidation_code -= 113; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[233]), 136, 16);
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[543]), 250, 35);
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_TPAMUMCIMUJI_01CC0258((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
    if (ReceiptValidation_UBKHBSHWTCVT_01CC0117(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2);
    }
    // Global variables computation
    // From 600 to 538
    ReceiptValidation_TPAMUMCIMUJI += 476; ReceiptValidation_TPAMUMCIMUJI /= 2; 
    // From 583 to 522
    ReceiptValidation_QFTLSXPQXRZQ += 461; ReceiptValidation_QFTLSXPQXRZQ /= 2; 
    // From 216 to 8
    ReceiptValidation_XQTZCGXTOMRV += 16; ReceiptValidation_XQTZCGXTOMRV /= 29; 
    // From 279 to 251
    ReceiptValidation_UBKHBSHWTCVT += 223; ReceiptValidation_UBKHBSHWTCVT /= 2; 
    // From 540 to 416
    ReceiptValidation_THYDFRJHWWUN += 292; ReceiptValidation_THYDFRJHWWUN /= 2; 
    // From 18 to 184
    ReceiptValidation_PEYLDRWHJIRJ -= 3; ReceiptValidation_PEYLDRWHJIRJ *= 12; ReceiptValidation_PEYLDRWHJIRJ += 4; 
    // Set to 246
    ReceiptValidation_FLUAORRUQXJR = 246;
    // From 589 to 208
    ReceiptValidation_IOIKCHZOKKFQ += 243; ReceiptValidation_IOIKCHZOKKFQ /= 4; 
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2);
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckBundleVersion061(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
    volatile int ReceiptValidation_code = 170; ReceiptValidation_code -= 113; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[233]), 136, 16); \
    CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[543]), 250, 35); \
    CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_TPAMUMCIMUJI_01CC0258((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
    if (ReceiptValidation_UBKHBSHWTCVT_01CC0117(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2); \
    } \
    ReceiptValidation_TPAMUMCIMUJI += 476; ReceiptValidation_TPAMUMCIMUJI /= 2;  \
    ReceiptValidation_QFTLSXPQXRZQ += 461; ReceiptValidation_QFTLSXPQXRZQ /= 2;  \
    ReceiptValidation_XQTZCGXTOMRV += 16; ReceiptValidation_XQTZCGXTOMRV /= 29;  \
    ReceiptValidation_UBKHBSHWTCVT += 223; ReceiptValidation_UBKHBSHWTCVT /= 2;  \
    ReceiptValidation_THYDFRJHWWUN += 292; ReceiptValidation_THYDFRJHWWUN /= 2;  \
    ReceiptValidation_PEYLDRWHJIRJ -= 3; ReceiptValidation_PEYLDRWHJIRJ *= 12; ReceiptValidation_PEYLDRWHJIRJ += 4;  \
    ReceiptValidation_FLUAORRUQXJR = 246; \
    ReceiptValidation_IOIKCHZOKKFQ += 243; ReceiptValidation_IOIKCHZOKKFQ /= 4;  \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str2); \
    ReceiptValidation_CFRelease_00D10026(ReceiptValidation_str1); \
}
#endif


// CodeBlock GetReceiptInformation
#ifdef DEBUG
inline static void ReceiptValidation_GetReceiptInformation064(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
    CFNumberRef ReceiptValidation_key;
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
    int ReceiptValidation_type;
    int ReceiptValidation_xclass;
    long ReceiptValidation_length;
    CFDateFormatterRef ReceiptValidation_formatter = NULL;
    CFTimeZoneRef ReceiptValidation_tz = NULL;
    BIO *ReceiptValidation_bio_p7;
    PKCS7 *ReceiptValidation_pkcs7;
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
    ASN1_INTEGER *ReceiptValidation_value;
    const unsigned char *ReceiptValidation_seq_end;
    long ReceiptValidation_attr_type;
    long ReceiptValidation_attr_version;
    int ReceiptValidation_str_type;
    long ReceiptValidation_str_length;
    const unsigned char *ReceiptValidation_str_ptr;
    volatile int ReceiptValidation_code = 79; ReceiptValidation_code -= 36; ReceiptValidation_code *= 4; ReceiptValidation_code += 1; 
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
    long ReceiptValidation_number;
    int ReceiptValidation_num_type;
    long ReceiptValidation_num_length;
    const unsigned char *ReceiptValidation_num_ptr;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01F200DC(ReceiptValidation_BIO_s_mem_016101AB());
    ReceiptValidation_BIO_write_01610234(ReceiptValidation_bio_p7, (void *) ReceiptValidation_THYDFRJHWWUN_020601A0((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_PEYLDRWHJIRJ_020600B8((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_007F011A(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_ctx->receipt_data = NULL;
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
    }
    // Create a formatter to parse ISO-3339 dates
    ReceiptValidation_formatter = ReceiptValidation_TPAMUMCIMUJI_0206021A(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[247]), 33, 33);
    ReceiptValidation_IOIKCHZOKKFQ_020600D0(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1);
    ReceiptValidation_tz = ReceiptValidation_FLUAORRUQXJR_00D100F6(NULL, 0.0);
    ReceiptValidation_CFDateFormatterSetProperty_00D1004E(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00D1019E, ReceiptValidation_tz);
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_tz);
    // Initial context
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
    ReceiptValidation_receipt_context.parent = NULL;
    ReceiptValidation_receipt_context.dictionary = NULL;
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
        if (!ReceiptValidation_current_context->dictionary) {
            // Create the target dictionary
            ReceiptValidation_current_context->dictionary = ReceiptValidation_UBKHBSHWTCVT_00D100FB(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00D100AB, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC01B1);
            // Decode payload from ASN.1
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SET) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
            }
        }
        // Iterate over attributes
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            // Parse attribute sequence
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
            }
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
            ReceiptValidation_attr_type = 0;
            ReceiptValidation_attr_version = 0;
            // Parse the attribute type
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value);
            // Parse the attribute version
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_INTEGER) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
            }
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value);
            ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value);
            // Check the attribute value
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
            }
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2));
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1);
            ReceiptValidation_value1 = NULL;
            ReceiptValidation_value2 = NULL;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
            switch (ReceiptValidation_attr_type) {
                    // Attributes encoded as ASN.1 UTF8STRING
                case ReceiptValidation_ReceiptAttributeTypeBundleId:
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_02060002(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 IA5STRING
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                case ReceiptValidation_InAppAttributeTypeCancellationDate:
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                case ReceiptValidation_InAppAttributeTypePurchaseDate:
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                {
                    ReceiptValidation_str_type = 0;
                    ReceiptValidation_str_length = 0;
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_02060144(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                    break;
                }
                    // Attributes encoded as ASN.1 INTEGER
                case ReceiptValidation_InAppAttributeTypeQuantity:
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                {
                    ReceiptValidation_num_type = 0;
                    ReceiptValidation_num_length = 0;
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code);
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                    }
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value);
                    ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value);
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberLongType, &ReceiptValidation_number);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                    break;
                }
                    // Attributes encoded as ASN.1 OCTETSTRING
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                case ReceiptValidation_ReceiptAttributeTypeHash:
                {
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_02060002(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_PEYLDRWHJIRJ_020600B8((CFDataRef) ReceiptValidation_value1));
                    break;
                }
                    // Attributes encoded as ASN.1 SET
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                {
                    // Push a child context to parse InApp purchase
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                    ReceiptValidation_inapp_context.dictionary = NULL;
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key;
                }
                default:
                    break;
            }
            if (ReceiptValidation_value1) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_CFDictionaryAddValue_02060103((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1);
            }
            if (ReceiptValidation_value2) {
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                ReceiptValidation_CFDictionaryAddValue_02060103((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value2);
            }
            // Move past the attribute
            ReceiptValidation_current_context->ptr += ReceiptValidation_length;
        }
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key:
        // If the current context is a new one, continue parsing
        if (!ReceiptValidation_current_context->dictionary) {
            continue;
        }
        // If the current context has a parent, pop it.
        if (ReceiptValidation_current_context->parent) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key1);
            ReceiptValidation_value1 = ReceiptValidation_XQTZCGXTOMRV_00D10008((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
            if (!ReceiptValidation_value1) {
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_0206009E(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_020601EA);
                ReceiptValidation_CFDictionarySetValue_01CC00CC((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1);
            }
            ReceiptValidation_CFArrayAppendValue_02060012((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_current_context->dictionary);
            ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
            // Switch to parent context
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
            // Move past the child context
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
        }
    }
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_ctx->receipt_dict);
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
    // Global variables computation
    // From 538 to 184
    ReceiptValidation_TPAMUMCIMUJI += 198; ReceiptValidation_TPAMUMCIMUJI /= 4; 
    // From 246 to 417
    ReceiptValidation_FLUAORRUQXJR -= 107; ReceiptValidation_FLUAORRUQXJR *= 3; 
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail:
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01F2019A(ReceiptValidation_pkcs7);
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01F20148(ReceiptValidation_bio_p7);
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_formatter);
}
#else
#define ReceiptValidation_GetReceiptInformation064(ReceiptValidation_ctx) { \
    ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
    ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
    CFNumberRef ReceiptValidation_key; \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
    CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
    int ReceiptValidation_type; \
    int ReceiptValidation_xclass; \
    long ReceiptValidation_length; \
    CFDateFormatterRef ReceiptValidation_formatter = NULL; \
    CFTimeZoneRef ReceiptValidation_tz = NULL; \
    BIO *ReceiptValidation_bio_p7; \
    PKCS7 *ReceiptValidation_pkcs7; \
    ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
    ASN1_INTEGER *ReceiptValidation_value; \
    const unsigned char *ReceiptValidation_seq_end; \
    long ReceiptValidation_attr_type; \
    long ReceiptValidation_attr_version; \
    int ReceiptValidation_str_type; \
    long ReceiptValidation_str_length; \
    const unsigned char *ReceiptValidation_str_ptr; \
    volatile int ReceiptValidation_code = 79; ReceiptValidation_code -= 36; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
    ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
    long ReceiptValidation_number; \
    int ReceiptValidation_num_type; \
    long ReceiptValidation_num_length; \
    const unsigned char *ReceiptValidation_num_ptr; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01F200DC(ReceiptValidation_BIO_s_mem_016101AB()); \
    ReceiptValidation_BIO_write_01610234(ReceiptValidation_bio_p7, (void *) ReceiptValidation_THYDFRJHWWUN_020601A0((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_PEYLDRWHJIRJ_020600B8((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_007F011A(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_data = NULL; \
        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
    } \
    ReceiptValidation_formatter = ReceiptValidation_TPAMUMCIMUJI_0206021A(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
    ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[247]), 33, 33); \
    ReceiptValidation_IOIKCHZOKKFQ_020600D0(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1); \
    ReceiptValidation_tz = ReceiptValidation_FLUAORRUQXJR_00D100F6(NULL, 0.0); \
    ReceiptValidation_CFDateFormatterSetProperty_00D1004E(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00D1019E, ReceiptValidation_tz); \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_tz); \
    ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
    ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
    ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
    ReceiptValidation_receipt_context.parent = NULL; \
    ReceiptValidation_receipt_context.dictionary = NULL; \
    ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
    while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
        if (!ReceiptValidation_current_context->dictionary) { \
            ReceiptValidation_current_context->dictionary = ReceiptValidation_UBKHBSHWTCVT_00D100FB(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_00D100AB, ReceiptValidation_kCFTypeDictionaryValueCallBacks_01CC01B1); \
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SET) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
            } \
        } \
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
            } \
            ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
            ReceiptValidation_attr_type = 0; \
            ReceiptValidation_attr_version = 0; \
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_INTEGER) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
            } \
            ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
            ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value); \
            ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value); \
            ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
            if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
            } \
            ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2)); \
            ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1); \
            ReceiptValidation_value1 = NULL; \
            ReceiptValidation_value2 = NULL; \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
            switch (ReceiptValidation_attr_type) { \
                case ReceiptValidation_ReceiptAttributeTypeBundleId: \
                case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
                case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
                case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
                case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
                case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
                    ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_02060002(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
                case ReceiptValidation_InAppAttributeTypeCancellationDate: \
                case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
                case ReceiptValidation_InAppAttributeTypePurchaseDate: \
                case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
                { \
                    ReceiptValidation_str_type = 0; \
                    ReceiptValidation_str_length = 0; \
                    ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
                    if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[325])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
                    ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_02060144(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
                    break; \
                } \
                case ReceiptValidation_InAppAttributeTypeQuantity: \
                case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
                { \
                    ReceiptValidation_num_type = 0; \
                    ReceiptValidation_num_length = 0; \
                    ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_ASN1_get_object_01F20185(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
                    if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
                        ReceiptValidation_exit_004201AD(ReceiptValidation_code); \
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
                    } \
                    ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_007F0242(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
                    ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_0161013A(ReceiptValidation_value); \
                    ReceiptValidation_ASN1_INTEGER_free_01610124(ReceiptValidation_value); \
                    ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberLongType, &ReceiptValidation_number); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
                case ReceiptValidation_ReceiptAttributeTypeHash: \
                { \
                    ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_02060002(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_PEYLDRWHJIRJ_020600B8((CFDataRef) ReceiptValidation_value1)); \
                    break; \
                } \
                case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
                { \
                    ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
                    ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
                    ReceiptValidation_inapp_context.dictionary = NULL; \
                    ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
                    ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key; \
                } \
                default: \
                    break; \
            } \
            if (ReceiptValidation_value1) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
                ReceiptValidation_CFDictionaryAddValue_02060103((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1); \
            } \
            if (ReceiptValidation_value2) { \
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
                ReceiptValidation_CFDictionaryAddValue_02060103((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value2); \
            } \
            ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
        } \
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key: \
        if (!ReceiptValidation_current_context->dictionary) { \
            continue; \
        } \
        if (ReceiptValidation_current_context->parent) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
            ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
            ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00D10069(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
            ReceiptValidation_value1 = ReceiptValidation_XQTZCGXTOMRV_00D10008((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
            if (!ReceiptValidation_value1) { \
                ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_0206009E(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_020601EA); \
                ReceiptValidation_CFDictionarySetValue_01CC00CC((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
                ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_value1); \
            } \
            ReceiptValidation_CFArrayAppendValue_02060012((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_current_context->dictionary); \
            ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
            ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
            ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
        } \
    } \
    if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_ctx->receipt_dict); \
    ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
    ReceiptValidation_TPAMUMCIMUJI += 198; ReceiptValidation_TPAMUMCIMUJI /= 4;  \
    ReceiptValidation_FLUAORRUQXJR -= 107; ReceiptValidation_FLUAORRUQXJR *= 3;  \
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail: \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01F2019A(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01F20148(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_formatter); \
}
#endif


// CodeBlock CheckReceiptSignature
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptSignature078(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    BIO *ReceiptValidation_bio_p7 = NULL;
    PKCS7 *ReceiptValidation_pkcs7 = NULL;
    STACK_OF(X509) *ReceiptValidation_certificates = NULL;
    X509 *ReceiptValidation_certificate = NULL;
    int ReceiptValidation_count, ReceiptValidation_index1;
    unsigned int ReceiptValidation_index2;
    ASN1_OBJECT *ReceiptValidation_oid = NULL;
    char *ReceiptValidation_str1;
    char *ReceiptValidation_str3;
    char *ReceiptValidation_str4;
    char *ReceiptValidation_str5;
    int ReceiptValidation_verify, ReceiptValidation_status;
    BIO *ReceiptValidation_bio_apple = NULL;
    X509 *ReceiptValidation_apple = NULL;
    X509_STORE *ReceiptValidation_store = NULL;
    volatile int ReceiptValidation_code = 101; ReceiptValidation_code -= 44; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
    // Put the receipt data into a memory buffer
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_007F00E6(ReceiptValidation_BIO_s_mem_007F0255());
    ReceiptValidation_BIO_write_01610080(ReceiptValidation_bio_p7, (void *) ReceiptValidation_FLUAORRUQXJR_020601A1((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_TPAMUMCIMUJI_01CC00B8((CFDataRef) ReceiptValidation_ctx->receipt_data));
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01F2018D(ReceiptValidation_bio_p7, NULL);
    if (!ReceiptValidation_pkcs7) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        ReceiptValidation_ctx->receipt_dict = NULL;
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    ReceiptValidation_OpenSSL_add_all_digests_007F003A();
    // If the Apple Root CA certificate has been loaded, then check the receipt against it.
    if (ReceiptValidation_ctx->ca_data) {
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_007F00E6(ReceiptValidation_BIO_s_mem_007F0255());
        ReceiptValidation_BIO_write_01610080(ReceiptValidation_bio_apple, (void *) ReceiptValidation_FLUAORRUQXJR_020601A1((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_TPAMUMCIMUJI_01CC00B8((CFDataRef) ReceiptValidation_ctx->ca_data));
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01F20238(ReceiptValidation_bio_apple, NULL);
        if (!ReceiptValidation_apple) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00150082(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
        }
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01F200AC();
        ReceiptValidation_X509_STORE_add_cert_016101B9(ReceiptValidation_store, ReceiptValidation_apple);
        // Check that the PKCS7_verify function is not tampered with
        // Check that the PKCS7 content is signed by the Apple Root CA certificate
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_007F0049(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 35;
        if (ReceiptValidation_verify != 35) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00150082(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
        }
    }
    // Extract the certificates from the receipt.
    // One of them must be the Apple Root CA certificate with the correct fingerprint.
    ReceiptValidation_verify = 0;
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
    ReceiptValidation_count = ReceiptValidation_sk_num_01F2008B((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_016100A5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        char ReceiptValidation_common_name[608];
        // Check that the X509_NAME_get_text_by_NID function is not tampered with
        // Retrieve the common name
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01F20208(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608);
        if (ReceiptValidation_status <= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00150082(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
        }
        volatile unsigned int ReceiptValidation_digest_length = 19; ReceiptValidation_digest_length -= 13; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2; 
        const EVP_MD *ReceiptValidation_digester = EVP_sha1();
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
        unsigned int ReceiptValidation_len = 0;
        // Check that the X509_digest function is not tampered with
        ReceiptValidation_status = ReceiptValidation_X509_digest_01F20154(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 35;
        if (ReceiptValidation_status == 35 || ReceiptValidation_len > 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00150082(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ReceiptValidation_X509_digest_01F20154(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 35;
        if (ReceiptValidation_status != 35 || ReceiptValidation_len != ReceiptValidation_digest_length) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00150082(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
        }
        char ReceiptValidation_fingerprint[608];
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2; 
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]);
        }
        char ReceiptValidation_str3_[608];
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[226]), ReceiptValidation_str3_, 8, 49);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        // Check the common name and the fingerprint
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[45]), ReceiptValidation_str1_, 122, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        volatile size_t ReceiptValidation_num = 9; ReceiptValidation_num -= 5; ReceiptValidation_num *= 3; ReceiptValidation_num += 1; 
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[24])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[24])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
            ReceiptValidation_verify = 35;
            break;
        }
    }
    // Check that the last selected certificate is right one.
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 35) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    // Check that the X509_get_ext_by_OBJ function is not tampered with
    char ReceiptValidation_str4_[608];
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[477]), ReceiptValidation_str4_, 85, 34);
    ReceiptValidation_str4 = ReceiptValidation_str4_;
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01610177(ReceiptValidation_str4, 0);
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_007F00FC(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
    ReceiptValidation_ASN1_OBJECT_free_007F0084(ReceiptValidation_oid);
    if (ReceiptValidation_verify >= 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    // Extract the signer certificate from the receipt
    // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
    char ReceiptValidation_str5_[608];
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[477]), ReceiptValidation_str5_, 85, 34);
    ReceiptValidation_str5 = ReceiptValidation_str5_;
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_007F0088(ReceiptValidation_pkcs7, NULL, 0);
    ReceiptValidation_count = ReceiptValidation_sk_num_01F2008B((const _STACK *) ReceiptValidation_certificates);
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_016100A5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01610177(ReceiptValidation_str5, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_007F00FC(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_007F0084(ReceiptValidation_oid);
        if (ReceiptValidation_verify == -1) {
            sk_X509_free (ReceiptValidation_certificates);
            ReceiptValidation_certificates = NULL;
            continue;
        } else {
            break;
        }
    }
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150082(ReceiptValidation_code);
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail;
    }
    // Global variables computation
    // From 416 to 523
    ReceiptValidation_THYDFRJHWWUN -= 242; ReceiptValidation_THYDFRJHWWUN *= 3; ReceiptValidation_THYDFRJHWWUN += 1; 
    // From 184 to 105
    ReceiptValidation_PEYLDRWHJIRJ += 131; ReceiptValidation_PEYLDRWHJIRJ /= 3; 
    // From 417 to 279
    ReceiptValidation_FLUAORRUQXJR += 141; ReceiptValidation_FLUAORRUQXJR /= 2; 
ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail:
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01F200C5(ReceiptValidation_bio_p7);
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_016101FE(ReceiptValidation_pkcs7);
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_016100AA(ReceiptValidation_apple);
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01F200C5(ReceiptValidation_bio_apple);
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01F2022A(ReceiptValidation_store);
}
#else
#define ReceiptValidation_CheckReceiptSignature078(ReceiptValidation_ctx) { \
    BIO *ReceiptValidation_bio_p7 = NULL; \
    PKCS7 *ReceiptValidation_pkcs7 = NULL; \
    STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
    X509 *ReceiptValidation_certificate = NULL; \
    int ReceiptValidation_count, ReceiptValidation_index1; \
    unsigned int ReceiptValidation_index2; \
    ASN1_OBJECT *ReceiptValidation_oid = NULL; \
    char *ReceiptValidation_str1; \
    char *ReceiptValidation_str3; \
    char *ReceiptValidation_str4; \
    char *ReceiptValidation_str5; \
    int ReceiptValidation_verify, ReceiptValidation_status; \
    BIO *ReceiptValidation_bio_apple = NULL; \
    X509 *ReceiptValidation_apple = NULL; \
    X509_STORE *ReceiptValidation_store = NULL; \
    volatile int ReceiptValidation_code = 101; ReceiptValidation_code -= 44; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
    ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_007F00E6(ReceiptValidation_BIO_s_mem_007F0255()); \
    ReceiptValidation_BIO_write_01610080(ReceiptValidation_bio_p7, (void *) ReceiptValidation_FLUAORRUQXJR_020601A1((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_TPAMUMCIMUJI_01CC00B8((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
    ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_01F2018D(ReceiptValidation_bio_p7, NULL); \
    if (!ReceiptValidation_pkcs7) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        ReceiptValidation_ctx->receipt_dict = NULL; \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    ReceiptValidation_OpenSSL_add_all_digests_007F003A(); \
    if (ReceiptValidation_ctx->ca_data) { \
        ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_007F00E6(ReceiptValidation_BIO_s_mem_007F0255()); \
        ReceiptValidation_BIO_write_01610080(ReceiptValidation_bio_apple, (void *) ReceiptValidation_FLUAORRUQXJR_020601A1((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_TPAMUMCIMUJI_01CC00B8((CFDataRef) ReceiptValidation_ctx->ca_data)); \
        ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_01F20238(ReceiptValidation_bio_apple, NULL); \
        if (!ReceiptValidation_apple) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_00150082(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
        } \
        ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01F200AC(); \
        ReceiptValidation_X509_STORE_add_cert_016101B9(ReceiptValidation_store, ReceiptValidation_apple); \
        ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_007F0049(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 35; \
        if (ReceiptValidation_verify != 35) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_00150082(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
        } \
    } \
    ReceiptValidation_verify = 0; \
    ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
    ReceiptValidation_count = ReceiptValidation_sk_num_01F2008B((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_016100A5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        char ReceiptValidation_common_name[608]; \
        ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_01F20208(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608); \
        if (ReceiptValidation_status <= 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_00150082(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
        } \
        volatile unsigned int ReceiptValidation_digest_length = 19; ReceiptValidation_digest_length -= 13; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
        const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
        unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
        unsigned int ReceiptValidation_len = 0; \
        ReceiptValidation_status = ReceiptValidation_X509_digest_01F20154(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 35; \
        if (ReceiptValidation_status == 35 || ReceiptValidation_len > 0) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_00150082(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
        } \
        ReceiptValidation_status = ReceiptValidation_X509_digest_01F20154(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 35; \
        if (ReceiptValidation_status != 35 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
            ReceiptValidation_exit_00150082(ReceiptValidation_code); \
            goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
        } \
        char ReceiptValidation_fingerprint[608]; \
        volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;  \
        for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
            snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]); \
        } \
        char ReceiptValidation_str3_[608]; \
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[226]), ReceiptValidation_str3_, 8, 49); \
        ReceiptValidation_str3 = ReceiptValidation_str3_; \
        char ReceiptValidation_str1_[608]; \
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[45]), ReceiptValidation_str1_, 122, 16); \
        ReceiptValidation_str1 = ReceiptValidation_str1_; \
        volatile size_t ReceiptValidation_num = 9; ReceiptValidation_num -= 5; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
        if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[24])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[24])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
            ReceiptValidation_verify = 35; \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 35) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str4_[608]; \
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[477]), ReceiptValidation_str4_, 85, 34); \
    ReceiptValidation_str4 = ReceiptValidation_str4_; \
    ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01610177(ReceiptValidation_str4, 0); \
    ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_007F00FC(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
    ReceiptValidation_ASN1_OBJECT_free_007F0084(ReceiptValidation_oid); \
    if (ReceiptValidation_verify >= 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    char ReceiptValidation_str5_[608]; \
    ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[477]), ReceiptValidation_str5_, 85, 34); \
    ReceiptValidation_str5 = ReceiptValidation_str5_; \
    ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_007F0088(ReceiptValidation_pkcs7, NULL, 0); \
    ReceiptValidation_count = ReceiptValidation_sk_num_01F2008B((const _STACK *) ReceiptValidation_certificates); \
    for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
        ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_016100A5((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_01610177(ReceiptValidation_str5, 0); \
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_007F00FC(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
        ReceiptValidation_ASN1_OBJECT_free_007F0084(ReceiptValidation_oid); \
        if (ReceiptValidation_verify == -1) { \
            sk_X509_free (ReceiptValidation_certificates); \
            ReceiptValidation_certificates = NULL; \
            continue; \
        } else { \
            break; \
        } \
    } \
    if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150082(ReceiptValidation_code); \
        goto ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail; \
    } \
    ReceiptValidation_THYDFRJHWWUN -= 242; ReceiptValidation_THYDFRJHWWUN *= 3; ReceiptValidation_THYDFRJHWWUN += 1;  \
    ReceiptValidation_PEYLDRWHJIRJ += 131; ReceiptValidation_PEYLDRWHJIRJ /= 3;  \
    ReceiptValidation_FLUAORRUQXJR += 141; ReceiptValidation_FLUAORRUQXJR /= 2;  \
ReceiptValidation_CheckReceiptSignature078_ReceiptValidation_bail: \
    if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01F200C5(ReceiptValidation_bio_p7); \
    if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_016101FE(ReceiptValidation_pkcs7); \
    if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
    if (ReceiptValidation_apple) ReceiptValidation_X509_free_016100AA(ReceiptValidation_apple); \
    if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_01F200C5(ReceiptValidation_bio_apple); \
    if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_01F2022A(ReceiptValidation_store); \
}
#endif


// CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PEYLDRWHJIRJ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_THYDFRJHWWUN_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
    if (ReceiptValidation_FLUAORRUQXJR_00D10117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_001501AD(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1);
    }
    // Global variables computation
    // Set to 519
    ReceiptValidation_TPAMUMCIMUJI = 519;
    // From 522 to 523
    ReceiptValidation_QFTLSXPQXRZQ -= 348; ReceiptValidation_QFTLSXPQXRZQ *= 3; ReceiptValidation_QFTLSXPQXRZQ += 1; 
    // Set to 105
    ReceiptValidation_IOIKCHZOKKFQ = 105;
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PEYLDRWHJIRJ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_THYDFRJHWWUN_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
    if (ReceiptValidation_FLUAORRUQXJR_00D10117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_001501AD(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1); \
    } \
    ReceiptValidation_TPAMUMCIMUJI = 519; \
    ReceiptValidation_QFTLSXPQXRZQ -= 348; ReceiptValidation_QFTLSXPQXRZQ *= 3; ReceiptValidation_QFTLSXPQXRZQ += 1;  \
    ReceiptValidation_IOIKCHZOKKFQ = 105; \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@("");
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PEYLDRWHJIRJ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_THYDFRJHWWUN_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key);
    if (ReceiptValidation_FLUAORRUQXJR_00D10117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // Set to 519
    ReceiptValidation_TPAMUMCIMUJI = 519;
    // From 522 to 523
    ReceiptValidation_QFTLSXPQXRZQ -= 348; ReceiptValidation_QFTLSXPQXRZQ *= 3; ReceiptValidation_QFTLSXPQXRZQ += 1; 
    // Set to 105
    ReceiptValidation_IOIKCHZOKKFQ = 105;
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
    CFStringRef ReceiptValidation_str1 = @obfuscateCF@(""); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_PEYLDRWHJIRJ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_THYDFRJHWWUN_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key); \
    if (ReceiptValidation_FLUAORRUQXJR_00D10117(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_TPAMUMCIMUJI = 519; \
    ReceiptValidation_QFTLSXPQXRZQ -= 348; ReceiptValidation_QFTLSXPQXRZQ *= 3; ReceiptValidation_QFTLSXPQXRZQ += 1;  \
    ReceiptValidation_IOIKCHZOKKFQ = 105; \
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[360]), 1, 16);
    volatile int ReceiptValidation_code = 149; ReceiptValidation_code -= 92; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_QFTLSXPQXRZQ_01CC020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key);
    if (ReceiptValidation_TPAMUMCIMUJI_02060207(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00420213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1);
    }
    // Global variables computation
    // From 519 to 23
    ReceiptValidation_TPAMUMCIMUJI += 33; ReceiptValidation_TPAMUMCIMUJI /= 24; 
    // From 523 to 485
    ReceiptValidation_QFTLSXPQXRZQ += 447; ReceiptValidation_QFTLSXPQXRZQ /= 2; 
    // From 8 to 277
    ReceiptValidation_XQTZCGXTOMRV -= 1; ReceiptValidation_XQTZCGXTOMRV *= 36; ReceiptValidation_XQTZCGXTOMRV += 25; 
    // From 251 to 131
    ReceiptValidation_UBKHBSHWTCVT += 142; ReceiptValidation_UBKHBSHWTCVT /= 3; 
    // From 523 to 514
    ReceiptValidation_THYDFRJHWWUN += 505; ReceiptValidation_THYDFRJHWWUN /= 2; 
    // From 105 to 469
    ReceiptValidation_PEYLDRWHJIRJ -= 27; ReceiptValidation_PEYLDRWHJIRJ *= 6; ReceiptValidation_PEYLDRWHJIRJ += 1; 
    // From 279 to 256
    ReceiptValidation_FLUAORRUQXJR += 233; ReceiptValidation_FLUAORRUQXJR /= 2; 
    // From 105 to 488
    ReceiptValidation_IOIKCHZOKKFQ -= 24; ReceiptValidation_IOIKCHZOKKFQ *= 6; ReceiptValidation_IOIKCHZOKKFQ += 2; 
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[360]), 1, 16); \
    volatile int ReceiptValidation_code = 149; ReceiptValidation_code -= 92; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_QFTLSXPQXRZQ_01CC020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key); \
    if (ReceiptValidation_TPAMUMCIMUJI_02060207(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00420213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1); \
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1); \
    } \
    ReceiptValidation_TPAMUMCIMUJI += 33; ReceiptValidation_TPAMUMCIMUJI /= 24;  \
    ReceiptValidation_QFTLSXPQXRZQ += 447; ReceiptValidation_QFTLSXPQXRZQ /= 2;  \
    ReceiptValidation_XQTZCGXTOMRV -= 1; ReceiptValidation_XQTZCGXTOMRV *= 36; ReceiptValidation_XQTZCGXTOMRV += 25;  \
    ReceiptValidation_UBKHBSHWTCVT += 142; ReceiptValidation_UBKHBSHWTCVT /= 3;  \
    ReceiptValidation_THYDFRJHWWUN += 505; ReceiptValidation_THYDFRJHWWUN /= 2;  \
    ReceiptValidation_PEYLDRWHJIRJ -= 27; ReceiptValidation_PEYLDRWHJIRJ *= 6; ReceiptValidation_PEYLDRWHJIRJ += 1;  \
    ReceiptValidation_FLUAORRUQXJR += 233; ReceiptValidation_FLUAORRUQXJR /= 2;  \
    ReceiptValidation_IOIKCHZOKKFQ -= 24; ReceiptValidation_IOIKCHZOKKFQ *= 6; ReceiptValidation_IOIKCHZOKKFQ += 2;  \
    ReceiptValidation_CFRelease_00D10007(ReceiptValidation_str1); \
}
#endif
#endif

#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[233]), 136, 16);
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_QFTLSXPQXRZQ_01CC020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_02060105(ReceiptValidation_key);
    if (ReceiptValidation_TPAMUMCIMUJI_02060207(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
    }
    // Global variables computation
    // From 519 to 23
    ReceiptValidation_TPAMUMCIMUJI += 33; ReceiptValidation_TPAMUMCIMUJI /= 24; 
    // From 523 to 485
    ReceiptValidation_QFTLSXPQXRZQ += 447; ReceiptValidation_QFTLSXPQXRZQ /= 2; 
    // From 8 to 277
    ReceiptValidation_XQTZCGXTOMRV -= 1; ReceiptValidation_XQTZCGXTOMRV *= 36; ReceiptValidation_XQTZCGXTOMRV += 25; 
    // From 251 to 131
    ReceiptValidation_UBKHBSHWTCVT += 142; ReceiptValidation_UBKHBSHWTCVT /= 3; 
    // From 523 to 514
    ReceiptValidation_THYDFRJHWWUN += 505; ReceiptValidation_THYDFRJHWWUN /= 2; 
    // From 105 to 469
    ReceiptValidation_PEYLDRWHJIRJ -= 27; ReceiptValidation_PEYLDRWHJIRJ *= 6; ReceiptValidation_PEYLDRWHJIRJ += 1; 
    // From 279 to 256
    ReceiptValidation_FLUAORRUQXJR += 233; ReceiptValidation_FLUAORRUQXJR /= 2; 
    // From 105 to 488
    ReceiptValidation_IOIKCHZOKKFQ -= 24; ReceiptValidation_IOIKCHZOKKFQ *= 6; ReceiptValidation_IOIKCHZOKKFQ += 2; 
    ReceiptValidation_CFRelease_02060105(ReceiptValidation_str1);
}
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
    CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[233]), 136, 16); \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_02060069(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_QFTLSXPQXRZQ_01CC020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_02060105(ReceiptValidation_key); \
    if (ReceiptValidation_TPAMUMCIMUJI_02060207(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
    } \
    ReceiptValidation_TPAMUMCIMUJI += 33; ReceiptValidation_TPAMUMCIMUJI /= 24;  \
    ReceiptValidation_QFTLSXPQXRZQ += 447; ReceiptValidation_QFTLSXPQXRZQ /= 2;  \
    ReceiptValidation_XQTZCGXTOMRV -= 1; ReceiptValidation_XQTZCGXTOMRV *= 36; ReceiptValidation_XQTZCGXTOMRV += 25;  \
    ReceiptValidation_UBKHBSHWTCVT += 142; ReceiptValidation_UBKHBSHWTCVT /= 3;  \
    ReceiptValidation_THYDFRJHWWUN += 505; ReceiptValidation_THYDFRJHWWUN /= 2;  \
    ReceiptValidation_PEYLDRWHJIRJ -= 27; ReceiptValidation_PEYLDRWHJIRJ *= 6; ReceiptValidation_PEYLDRWHJIRJ += 1;  \
    ReceiptValidation_FLUAORRUQXJR += 233; ReceiptValidation_FLUAORRUQXJR /= 2;  \
    ReceiptValidation_IOIKCHZOKKFQ -= 24; ReceiptValidation_IOIKCHZOKKFQ *= 6; ReceiptValidation_IOIKCHZOKKFQ += 2;  \
    ReceiptValidation_CFRelease_02060105(ReceiptValidation_str1); \
}
#endif
#endif


// CodeBlock CheckReceiptHash
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptHash08B(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
    CFMutableDataRef ReceiptValidation_data4;
    unsigned char ReceiptValidation_digest[608];
    volatile int ReceiptValidation_counter = 7; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 4; 
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
    CFNumberRef ReceiptValidation_key;
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key);
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value);
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key);
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00D100B1(NULL, 0);
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1));
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2));
    CC_SHA1_CTX ReceiptValidation_hashctx1;
    ReceiptValidation_FLUAORRUQXJR_00420100(&ReceiptValidation_hashctx1);
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1));
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2));
    ReceiptValidation_THYDFRJHWWUN_02400202(ReceiptValidation_digest, &ReceiptValidation_hashctx1);
    ReceiptValidation_OpenSSL_add_all_digests_01F201DF();
    EVP_MD_CTX ReceiptValidation_hashctx2;
    ReceiptValidation_EVP_MD_CTX_init_007F023C(&ReceiptValidation_hashctx2);
    const EVP_MD *ReceiptValidation_digester = EVP_sha1();
    ReceiptValidation_EVP_DigestInit_01F201EE(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data));
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1));
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2));
    ReceiptValidation_EVP_DigestFinal_01F20033(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_XQTZCGXTOMRV_01CC0115(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
    if (!ReceiptValidation_PEYLDRWHJIRJ_00D101D5(ReceiptValidation_data3, ReceiptValidation_data5)) {
        volatile int ReceiptValidation_code = 53; ReceiptValidation_code -= 19; ReceiptValidation_code *= 5; ReceiptValidation_code += 3; 
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00420213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data1);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data2);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data4);
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5);
        goto ReceiptValidation_CheckReceiptHash08B_ReceiptValidation_bail;
    }
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5);
    // Global variables computation
    // From 131 to 108
    ReceiptValidation_UBKHBSHWTCVT += 85; ReceiptValidation_UBKHBSHWTCVT /= 2; 
    // From 514 to 118
    ReceiptValidation_THYDFRJHWWUN += 194; ReceiptValidation_THYDFRJHWWUN /= 6; 
    // From 469 to 440
    ReceiptValidation_PEYLDRWHJIRJ += 411; ReceiptValidation_PEYLDRWHJIRJ /= 2; 
    // Set to 56
    ReceiptValidation_FLUAORRUQXJR = 56;
    // From 488 to 523
    ReceiptValidation_IOIKCHZOKKFQ -= 314; ReceiptValidation_IOIKCHZOKKFQ *= 3; ReceiptValidation_IOIKCHZOKKFQ += 1; 
ReceiptValidation_CheckReceiptHash08B_ReceiptValidation_bail:
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data4);
}
#else
#define ReceiptValidation_CheckReceiptHash08B(ReceiptValidation_ctx) { \
    CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
    CFMutableDataRef ReceiptValidation_data4; \
    unsigned char ReceiptValidation_digest[608]; \
    volatile int ReceiptValidation_counter = 7; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 4;  \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
    CFNumberRef ReceiptValidation_key; \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key); \
    ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
    ReceiptValidation_key = ReceiptValidation_IOIKCHZOKKFQ_020601E8(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00D10008((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_key); \
    ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_00D100B1(NULL, 0); \
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1)); \
    ReceiptValidation_QFTLSXPQXRZQ_020601E5(ReceiptValidation_data4, ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2)); \
    CC_SHA1_CTX ReceiptValidation_hashctx1; \
    ReceiptValidation_FLUAORRUQXJR_00420100(&ReceiptValidation_hashctx1); \
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1)); \
    ReceiptValidation_CC_SHA1_Update_024000A1(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), (CC_LONG) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2)); \
    ReceiptValidation_THYDFRJHWWUN_02400202(ReceiptValidation_digest, &ReceiptValidation_hashctx1); \
    ReceiptValidation_OpenSSL_add_all_digests_01F201DF(); \
    EVP_MD_CTX ReceiptValidation_hashctx2; \
    ReceiptValidation_EVP_MD_CTX_init_007F023C(&ReceiptValidation_hashctx2); \
    const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
    ReceiptValidation_EVP_DigestInit_01F201EE(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017((CFDataRef) ReceiptValidation_ctx->guid_data)); \
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data1), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data1)); \
    ReceiptValidation_EVP_DigestUpdate_007F001E(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_UBKHBSHWTCVT_02060083(ReceiptValidation_data2), (size_t) ReceiptValidation_TPAMUMCIMUJI_01CC0017(ReceiptValidation_data2)); \
    ReceiptValidation_EVP_DigestFinal_01F20033(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
    CFDataRef ReceiptValidation_data5 = ReceiptValidation_XQTZCGXTOMRV_01CC0115(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
    if (!ReceiptValidation_PEYLDRWHJIRJ_00D101D5(ReceiptValidation_data3, ReceiptValidation_data5)) { \
        volatile int ReceiptValidation_code = 53; ReceiptValidation_code -= 19; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00420213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data1); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data2); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data4); \
        ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5); \
        goto ReceiptValidation_CheckReceiptHash08B_ReceiptValidation_bail; \
    } \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data5); \
    ReceiptValidation_UBKHBSHWTCVT += 85; ReceiptValidation_UBKHBSHWTCVT /= 2;  \
    ReceiptValidation_THYDFRJHWWUN += 194; ReceiptValidation_THYDFRJHWWUN /= 6;  \
    ReceiptValidation_PEYLDRWHJIRJ += 411; ReceiptValidation_PEYLDRWHJIRJ /= 2;  \
    ReceiptValidation_FLUAORRUQXJR = 56; \
    ReceiptValidation_IOIKCHZOKKFQ -= 314; ReceiptValidation_IOIKCHZOKKFQ *= 3; ReceiptValidation_IOIKCHZOKKFQ += 1;  \
ReceiptValidation_CheckReceiptHash08B_ReceiptValidation_bail: \
    ReceiptValidation_CFRelease_00D10105(ReceiptValidation_data4); \
}
#endif


// CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
inline static void ReceiptValidation_CheckReceiptExpirationDate0A6(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_UBKHBSHWTCVT_0206006C(NULL, ReceiptValidation_THYDFRJHWWUN_01CC0076());
    volatile int ReceiptValidation_code = 90; ReceiptValidation_code -= 33; ReceiptValidation_code *= 3; ReceiptValidation_code += 2; 
    CFNumberRef ReceiptValidation_key = ReceiptValidation_FLUAORRUQXJR_02060038(NULL, kCFNumberIntType, &ReceiptValidation_value);
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_IOIKCHZOKKFQ_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
    if (ReceiptValidation_date2 && ReceiptValidation_PEYLDRWHJIRJ_020601B8(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
        ReceiptValidation_exit_00150213(ReceiptValidation_code);
        // Dead code
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key);
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1);
    }
    // Global variables computation
    // From 440 to 382
    ReceiptValidation_PEYLDRWHJIRJ += 324; ReceiptValidation_PEYLDRWHJIRJ /= 2; 
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1);
}
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A6(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
    ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
    CFDateRef ReceiptValidation_date1 = ReceiptValidation_UBKHBSHWTCVT_0206006C(NULL, ReceiptValidation_THYDFRJHWWUN_01CC0076()); \
    volatile int ReceiptValidation_code = 90; ReceiptValidation_code -= 33; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
    CFNumberRef ReceiptValidation_key = ReceiptValidation_FLUAORRUQXJR_02060038(NULL, kCFNumberIntType, &ReceiptValidation_value); \
    CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_IOIKCHZOKKFQ_0206020B((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
    if (ReceiptValidation_date2 && ReceiptValidation_PEYLDRWHJIRJ_020601B8(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
        ReceiptValidation_exit_00150213(ReceiptValidation_code); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_key); \
        ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1); \
    } \
    ReceiptValidation_PEYLDRWHJIRJ += 324; ReceiptValidation_PEYLDRWHJIRJ /= 2;  \
    ReceiptValidation_CFRelease_01CC0105(ReceiptValidation_date1); \
}
#endif


// CodeBlock AppRunner
#ifdef RUNNER
    #define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 382);
#endif

inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
    ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_PEYLDRWHJIRJ))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
    ReceiptValidation_PEYLDRWHJIRJ_01AF017E((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
}


// CodeBlock CleanUp
#ifdef DEBUG
inline static void ReceiptValidation_CleanUp0AC(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
    if (ReceiptValidation_references[0]) {
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[0]);
        ReceiptValidation_references[0] = NULL;
    }
    if (ReceiptValidation_references[1]) {
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[1]);
        ReceiptValidation_references[1] = NULL;
    }
    if (ReceiptValidation_references[2]) {
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[2]);
        ReceiptValidation_references[2] = NULL;
    }
    if (ReceiptValidation_references[3]) {
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[3]);
        ReceiptValidation_references[3] = NULL;
    }
}
#else
#define ReceiptValidation_CleanUp0AC(ReceiptValidation_ctx) { \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
    CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
    if (ReceiptValidation_references[0]) { \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[0]); \
        ReceiptValidation_references[0] = NULL; \
    } \
    if (ReceiptValidation_references[1]) { \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[1]); \
        ReceiptValidation_references[1] = NULL; \
    } \
    if (ReceiptValidation_references[2]) { \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[2]); \
        ReceiptValidation_references[2] = NULL; \
    } \
    if (ReceiptValidation_references[3]) { \
        ReceiptValidation_CFRelease_01CC0026(ReceiptValidation_references[3]); \
        ReceiptValidation_references[3] = NULL; \
    } \
}
#endif




// CodeBlock EntryPoint
#ifdef DEBUG
inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
_Pragma("clang diagnostic push")
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
    // Create contexts
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
    // Arguments for running the application
    ReceiptValidation_ctx1.argc = _argc;
    ReceiptValidation_ctx1.argv = (const char **) _argv;
    // Jump to first step
    goto ReceiptValidation_ReceiptValidation_label00;
ReceiptValidation_ReceiptValidation_label01:
    ReceiptValidation_LoadReceipt03A((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label02;
ReceiptValidation_ReceiptValidation_label09:
    ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0A;
ReceiptValidation_ReceiptValidation_label07:
    ReceiptValidation_CheckReceiptSignature078((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label08;
ReceiptValidation_ReceiptValidation_label08:
    ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label09;
ReceiptValidation_ReceiptValidation_label0A:
    ReceiptValidation_CheckReceiptHash08B((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0B;
ReceiptValidation_ReceiptValidation_label0D:
    ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0E;
ReceiptValidation_ReceiptValidation_label04:
    ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label05;
ReceiptValidation_ReceiptValidation_label03:
    ReceiptValidation_GetRootCA052((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label04;
ReceiptValidation_ReceiptValidation_label00:
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label01;
ReceiptValidation_ReceiptValidation_label02:
    ReceiptValidation_GetGUID045((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label03;
ReceiptValidation_ReceiptValidation_label06:
    ReceiptValidation_GetReceiptInformation064((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label07;
ReceiptValidation_ReceiptValidation_label0C:
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0D;
ReceiptValidation_ReceiptValidation_label0B:
    ReceiptValidation_CheckReceiptExpirationDate0A6((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label0C;
ReceiptValidation_ReceiptValidation_label05:
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1));
    goto ReceiptValidation_ReceiptValidation_label06;
ReceiptValidation_ReceiptValidation_label0E:
    while(false);
    return 0;
_Pragma("clang diagnostic pop")
}
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
    ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
    ReceiptValidation_ctx1.argc = _argc; \
    ReceiptValidation_ctx1.argv = (const char **) _argv; \
    goto ReceiptValidation_ReceiptValidation_label00; \
ReceiptValidation_ReceiptValidation_label01: \
    ReceiptValidation_LoadReceipt03A((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label02; \
ReceiptValidation_ReceiptValidation_label09: \
    ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0A; \
ReceiptValidation_ReceiptValidation_label07: \
    ReceiptValidation_CheckReceiptSignature078((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label08; \
ReceiptValidation_ReceiptValidation_label08: \
    ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label09; \
ReceiptValidation_ReceiptValidation_label0A: \
    ReceiptValidation_CheckReceiptHash08B((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0B; \
ReceiptValidation_ReceiptValidation_label0D: \
    ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0E; \
ReceiptValidation_ReceiptValidation_label04: \
    ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label05; \
ReceiptValidation_ReceiptValidation_label03: \
    ReceiptValidation_GetRootCA052((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label04; \
ReceiptValidation_ReceiptValidation_label00: \
    ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label01; \
ReceiptValidation_ReceiptValidation_label02: \
    ReceiptValidation_GetGUID045((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label03; \
ReceiptValidation_ReceiptValidation_label06: \
    ReceiptValidation_GetReceiptInformation064((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label07; \
ReceiptValidation_ReceiptValidation_label0C: \
    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0D; \
ReceiptValidation_ReceiptValidation_label0B: \
    ReceiptValidation_CheckReceiptExpirationDate0A6((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label0C; \
ReceiptValidation_ReceiptValidation_label05: \
    ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1)); \
    goto ReceiptValidation_ReceiptValidation_label06; \
ReceiptValidation_ReceiptValidation_label0E: \
    while(false); \
    0; \
_Pragma("clang diagnostic pop") \
})
#endif




// Pop the new diagnostic context
#pragma clang diagnostic pop

// C++ epilogue
#ifdef __cplusplus
}
#endif

